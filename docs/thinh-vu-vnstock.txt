Directory structure:
└── thinh-vu-vnstock/
    ├── README.md
    ├── LICENSE.md
    ├── requirements.txt
    ├── run_tests.py
    ├── setup.py
    ├── assets/
    │   ├── .DS_Store
    │   ├── data/
    │   │   ├── all_symbols.csv
    │   │   ├── industries_icb.csv
    │   │   ├── symbols_by_exchange.csv
    │   │   ├── symbols_by_industries.csv
    │   │   └── vn30_symbols.csv
    │   └── images/
    │       └── .DS_Store
    ├── dev/
    │   ├── cleanup.py
    │   ├── finance_report_ratio_mapping_dict_vci.xlsx
    │   └── tests_directory_init.py
    ├── docs/
    │   ├── 0_vnstock3_demo_toc.ipynb
    │   ├── 1_vietnam_stock_vnstock3.ipynb
    │   ├── 2_international_market.ipynb
    │   ├── 3_commodities_vnstock3.ipynb
    │   ├── 4_funds_vnstock3.ipynb
    │   ├── 5_visualization_data_exploration_vnstock3.ipynb
    │   ├── .DS_Store
    │   ├── tcbs/
    │   │   └── 1_vietnam_stock_vnstock3_tcbs.ipynb
    │   ├── vci/
    │   │   └── vci_functions_demo.ipynb
    │   └── wrapper/
    │       └── 1_vietnam_stock_vnstock3.ipynb
    ├── packages/
    │   ├── oneclick_setup_linux
    │   └── oneclick_setup_macos
    ├── tests/
    │   ├── plan.md
    │   ├── archived/
    │   │   ├── README.md
    │   │   ├── __init__.py
    │   │   ├── config.py
    │   │   ├── common/
    │   │   │   ├── __init__.py
    │   │   │   └── test_data_explorer.py
    │   │   ├── core/
    │   │   │   ├── __init__.py
    │   │   │   ├── test_config.py
    │   │   │   ├── test_converter.py
    │   │   │   ├── test_utils.py
    │   │   │   └── utils/
    │   │   │       ├── test_quote_headers.py
    │   │   │       └── test_user_agent.py
    │   │   ├── explorer/
    │   │   │   ├── __init__.py
    │   │   │   ├── fmarket/
    │   │   │   │   ├── __init__.py
    │   │   │   │   └── test_fund.py
    │   │   │   ├── misc/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── test_exchange_rate.py
    │   │   │   │   └── test_gold_price.py
    │   │   │   ├── msn/
    │   │   │   │   ├── __init__.py
    │   │   │   │   └── test_quote.py
    │   │   │   ├── tcbs/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── test_analysis.py
    │   │   │   │   ├── test_company.py
    │   │   │   │   └── test_quote.py
    │   │   │   └── vci/
    │   │   │       ├── __init__.py
    │   │   │       ├── test_analysis.py
    │   │   │       ├── test_company.py
    │   │   │       └── test_quote.py
    │   │   └── results/
    │   └── test_explorer/
    │       ├── 1_smoke/
    │       │   ├── test_smoke_fmarket.py
    │       │   ├── test_smoke_misc.py
    │       │   ├── test_smoke_msn.py
    │       │   ├── test_smoke_tcbs.py
    │       │   └── test_smoke_vci.py
    │       └── 2_functional/
    │           └── test_vci_listing.py
    ├── vnstock/
    │   ├── __init__.py
    │   ├── base.py
    │   ├── config.py
    │   ├── api/
    │   │   ├── __init__.py
    │   │   ├── company.py
    │   │   ├── financial.py
    │   │   ├── listing.py
    │   │   ├── quote.py
    │   │   ├── screener.py
    │   │   └── trading.py
    │   ├── botbuilder/
    │   │   ├── __init__.py
    │   │   └── noti.py
    │   ├── common/
    │   │   ├── __init__.py
    │   │   ├── cli.py
    │   │   ├── vnstock.py
    │   │   ├── data/
    │   │   │   ├── __init__.py
    │   │   │   └── data_explorer.py
    │   │   └── plot/
    │   │       ├── __init__.py
    │   │       └── chart_wrapper.py
    │   ├── connector/
    │   │   └── dnse/
    │   │       ├── __init__.py
    │   │       └── trade.py
    │   ├── core/
    │   │   ├── __init__.py
    │   │   ├── config/
    │   │   │   ├── __init__.py
    │   │   │   └── const.py
    │   │   ├── converter/
    │   │   │   ├── __init__.py
    │   │   │   └── export.py
    │   │   └── utils/
    │   │       ├── __init__.py
    │   │       ├── browser_profiles.py
    │   │       ├── client.py
    │   │       ├── env.py
    │   │       ├── ext.py
    │   │       ├── help.py
    │   │       ├── launcher.py
    │   │       ├── logger.py
    │   │       ├── market.py
    │   │       ├── parser.py
    │   │       ├── transform.py
    │   │       ├── upgrade.py
    │   │       ├── user_agent.py
    │   │       └── validation.py
    │   └── explorer/
    │       ├── __init__.py
    │       ├── fmarket/
    │       │   ├── __init__.py
    │       │   ├── const.py
    │       │   └── fund.py
    │       ├── misc/
    │       │   ├── __init__.py
    │       │   ├── exchange_rate.py
    │       │   └── gold_price.py
    │       ├── msn/
    │       │   ├── __init__.py
    │       │   ├── const.py
    │       │   ├── helper.py
    │       │   ├── listing.py
    │       │   ├── models.py
    │       │   └── quote.py
    │       ├── tcbs/
    │       │   ├── __init__.py
    │       │   ├── analysis.py
    │       │   ├── company.py
    │       │   ├── const.py
    │       │   ├── financial.py
    │       │   ├── listing.py
    │       │   ├── models.py
    │       │   ├── quote.py
    │       │   ├── screener.py
    │       │   └── trading.py
    │       └── vci/
    │           ├── __init__.py
    │           ├── analysis.py
    │           ├── company.py
    │           ├── const.py
    │           ├── financial.py
    │           ├── listing.py
    │           ├── models.py
    │           ├── quote.py
    │           └── trading.py
    └── .github/
        ├── FUNDING.yml
        └── ISSUE_TEMPLATE/
            ├── bug.yaml
            └── feature_request.yaml

================================================
FILE: README.md
================================================
# Vnstock - Giải pháp phân tích chứng khoán mở cho người Việt

[![Vnstock Homepage](https://raw.githubusercontent.com/thinh-vu/vnstock/refs/heads/main/assets/images/vnstock-hero-banner.png)](https://vnstocks.com/)

<div id="badges" align="center">
    <img src="https://img.shields.io/pypi/pyversions/vnstock?logoColor=brown&style=flat" alt="Version"/>
    <img src="https://img.shields.io/github/last-commit/thinh-vu/vnstock?style=flat" alt="Commit Badge"/>
    <img src="https://img.shields.io/badge/license-Custom%20License-red?style=flat" alt="Custom License Badge"/>
</div>

<div id="badges" align="center">
    <a href="https://pypi.org/project/vnstock/">
        <img src="https://img.shields.io/pypi/dm/vnstock?label=vnstock%20download&style=flat" alt="vnstock download badge"/>
    </a>
    <a href="https://pypi.org/project/vnstock3/">
        <img src="https://img.shields.io/pypi/dm/vnstock3?label=vnstock3%20download&style=flat" alt="vnstock3 download badge"/>
    </a>
</div>

<div id="badges" align="center">
    <a href="https://github.com/sponsors/thinh-vu">
        <img src="https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86" alt="vnstock3 download badge"/>
    </a>
</div>
---

> ⚠️ **Note**: This document begins in 🇻🇳 Vietnamese for our local community.  
> 🌐 **English version available below** — scroll or use the TOC (top-right 🟰) to navigate.

---

# 🎤 Giới thiệu về Vnstock

> Chào mừng bạn đến với **Vnstock**, bộ giải pháp mã nguồn mở toàn diện cho phân tích và tự động hóa đầu tư chứng khoán.

Với sứ mệnh **"Mang dữ liệu chứng khoán và công cụ đầu tư đến gần hơn với tất cả mọi người"**, Vnstock liên tục cải tiến, tích hợp những công nghệ hiện đại để không chỉ đáp ứng nhu cầu cơ bản về dữ liệu, mà còn giúp bạn xây dựng các giải pháp phân tích tài chính thông minh và linh hoạt hơn bao giờ hết.

### 🚀 Tại sao chọn Vnstock?

- **Hoàn toàn miễn phí & mã nguồn mở**: Dễ dàng truy cập và sử dụng, phù hợp với nhà đầu tư cá nhân, nhà phân tích, và cộng đồng nghiên cứu.
- **Giải pháp Python toàn diện**: Các hàm chức năng thân thiện, dễ dàng tích hợp để xây dựng các công cụ phân tích, bot giao dịch tự động.
- **Dữ liệu đa dạng, cập nhật liên tục**: Bao gồm cổ phiếu, chứng quyền, chỉ số thị trường, hợp đồng tương lai, trái phiếu, ngoại hối, crypto và nhiều hơn thế nữa.

Bạn chính là một phần quan trọng trong hành trình **chuyển đổi số thị trường tài chính Việt Nam**. Hãy cùng Vnstock tạo nên những thay đổi tích cực và hiệu quả!

### 🤝 Tham gia cộng đồng cùng chúng tôi!

Tham gia ngay cộng đồng Vnstock để giao lưu, chia sẻ kinh nghiệm và cập nhật những tính năng mới nhất từ dự án:

<div id="badges" align="center">
  <a href="https://www.facebook.com/groups/vnstock.official" target="_blank">
    <img src="https://img.shields.io/badge/Tham%20gia%20cộng%20đồng-Vnstock-blue?style=for-the-badge&logo=facebook" alt="Tham gia cộng đồng Vnstock"/>
  </a>
</div>

---

# II. Các nhóm tính năng chính

> `Vnstock` giúp rút ngắn thời gian xử lý dữ liệu, hỗ trợ học tập, nghiên cứu và xây dựng hệ thống phân tích giao dịch tài chính một cách hiệu quả – không chỉ là một công cụ trích xuất dữ liệu, mà là nền tảng để phát triển giải pháp đầu tư cá nhân thông minh. Thư viện được thiết kế dễ dàng sử dụng và tích hợp vào các hệ thống phân tích, nghiên cứu, trang tổng quan, hoặc bot chứng khoán.

1. **Truy xuất dữ liệu qua API đơn giản**  
  Dễ dàng truy cập dữ liệu thông qua các hàm Python thân thiện, giúp tích hợp nhanh vào hệ thống phân tích tự động hoặc bot giao dịch.

2. **Dữ liệu cổ phiếu**  
  Giá cổ phiếu thời gian thực, dữ liệu lịch sử, chỉ số tài chính và thông tin doanh nghiệp của các mã niêm yết.

3. **Bộ lọc cổ phiếu**  
  Hỗ trợ lọc cổ phiếu theo tiêu chí tài chính, kỹ thuật hoặc thị trường để phục vụ phân tích.

4. **Chỉ số thị trường (Index)**  
  Theo dõi hiệu suất các chỉ số trong nước (VNIndex, HNXIndex, UPCOM) và một số chỉ số quốc tế.

5. **Chứng quyền (CW)**  
  Thông tin chứng quyền bao gồm giá, ngày đáo hạn, tổ chức phát hành và trạng thái thị trường.

6. **Kim loại quý**  
  Cập nhật giá vàng trong nước và thế giới.

7. **Hợp đồng tương lai (Phái sinh)**  
  Dữ liệu hợp đồng tương lai như VN30F và các kỳ hạn giao dịch.

8. **Quỹ đầu tư (ETF & Quỹ mở)**  
  Thông tin về danh mục, hiệu suất và các chỉ số liên quan của quỹ đầu tư.

9. **Trái phiếu**  
  Dữ liệu trái phiếu Chính phủ và doanh nghiệp bao gồm kỳ hạn, lãi suất và khối lượng giao dịch.

10. **Ngoại hối (Forex)**  
  Tỷ giá cập nhật theo thời gian thực của các cặp tiền tệ phổ biến.

11. **Tiền điện tử (Crypto)**  
  Giá cả và biến động thị trường của các loại tiền điện tử lớn.

12. **Tin tức & sự kiện tài chính**  
  Tự động cập nhật tin tức, công bố thông tin doanh nghiệp và lịch sự kiện thị trường.

---

# III. Tuyên bố miễn trừ trách nhiệm

> Dự án **Vnstock** được phát triển nhằm phục vụ **mục đích nghiên cứu và sử dụng cá nhân**. Dữ liệu cung cấp có thể không đầy đủ, không liên tục hoặc sai lệch so với thực tế, do đó không khuyến nghị **sử dụng cho mục đích giao dịch thực tế, thuật toán đầu tư, hoặc ra quyết định tài chính** khi bạn không hiểu rõ.

Các tác giả **không chịu trách nhiệm đối với bất kỳ tổn thất hay thiệt hại nào** phát sinh từ việc sử dụng dữ liệu hoặc mã nguồn này, bao gồm nhưng không giới hạn: sai lệch dữ liệu, mất mát tài chính, hoặc sử dụng sai mục đích.

**Vnstock không cung cấp tư vấn đầu tư hay tín hiệu giao dịch**. Người dùng hoàn toàn tự chịu trách nhiệm khi sử dụng dự án.

---

# IV. 🔑 Giấy phép sử dụng (License)

`Vnstock` được phát hành theo giấy phép tuỳ chỉnh hướng đến cá nhân, không dành cho mục đích thương mại. Quyền sử dụng được quy định cụ thể trong [giấy phép](LICENSE.md) kèm theo. Nếu bạn hoặc tổ chức bạn đang làm việc muốn sử dụng Vnstock có thể liên hệ tác giả để hiểu rõ phạm vi sử dụng và được cấp phép chính thức.

Khi sử dụng Vnstock trong dự án của mình, bạn cần trích dẫn thông tin về tác giả và dự án theo hướng dẫn của Vnstock.

---

# V. 🙏 Bạn đồng hành & tài trợ

## Bạn đồng hành

Vnstock phát triển nhờ sự chung tay của cộng đồng những người yêu thích công nghệ và tài chính. Mỗi dòng code, mỗi bản sửa lỗi đều là minh chứng cho sự đóng góp quý giá của các bạn. Cảm ơn vì đã biến vnstock thành công cụ mạnh mẽ cho cộng đồng đầu tư Việt Nam!

<a href="https://github.com/thinh-vu/vnstock/graphs/contributors">
   <img src="https://contributors-img.web.app/image?repo=thinh-vu/vnstock" width="800"/>
</a>

## ❤️ Nhà tài trợ nổi bật

Từ tận đáy lòng, Vnstock gửi lời tri ân sâu sắc đến những người đã tin tưởng và ủng hộ vnstock. Sự đóng góp của các bạn không chỉ là nguồn lực tài chính – mà còn là niềm tin, sự khích lệ và là động lực mạnh mẽ để chúng tôi tiếp tục phát triển, tối ưu hóa và lan tỏa công cụ này đến cộng đồng đầu tư Việt Nam. 

Dù lớn hay nhỏ, mỗi sự hỗ trợ đều là một lời nhắc nhở rằng chúng tôi không đi một mình. Các bạn là những đối tác đồng hành, những người tiên phong chung tay kiến tạo một hệ sinh thái dữ liệu tài chính dễ tiếp cận và minh bạch hơn cho mọi nhà đầu tư. 

<div style="display: flex; flex-wrap: wrap; gap: 10px;">
  <!-- Present & Past sponsors -->
<a href="https://github.com/Huytq82"><img src="https://avatars.githubusercontent.com/u/68698802?s=100&v=4" width="60px" alt="Huytq82" style="border-radius: 50%;" /></a>
<a href="https://github.com/yellow1912"><img src="https://avatars.githubusercontent.com/u/374134?s=100&v=4" width="60px" alt="yellow1912" style="border-radius: 50%;" /></a>
<a href="https://github.com/thaituankha"><img src="https://avatars.githubusercontent.com/u/136249921?s=100&v=4" width="60px" alt="thaituankha" style="border-radius: 50%;" /></a>
<a href="https://github.com/huannguyen2606"><img src="https://avatars.githubusercontent.com/u/207012732?s=100&v=4" width="60px" alt="huannguyen2606" style="border-radius: 50%;" /></a>
<a href="https://github.com/hungson175"><img src="https://avatars.githubusercontent.com/u/565789?s=100&v=4" width="60px" alt="hungson175" style="border-radius: 50%;" /></a>
<a href="https://github.com/kynnbreak"><img src="https://avatars.githubusercontent.com/u/60998063?s=100&v=4" width="60px" alt="kynnbreak" style="border-radius: 50%;" /></a>
<a href="https://github.com/quanglaife"><img src="https://avatars.githubusercontent.com/u/153795419?s=100&v=4" width="60px" alt="quanglaife" style="border-radius: 50%;" /></a>
<a href="https://github.com/itkennylee"><img src="https://avatars.githubusercontent.com/u/206494183?s=100&v=4" width="60px" alt="itkennylee" style="border-radius: 50%;" /></a>
<a href="https://github.com/congnt91"><img src="https://avatars.githubusercontent.com/u/191594462?s=100&v=4" width="60px" alt="congnt91" style="border-radius: 50%;" /></a>
<a href="https://github.com/NATien1999"><img src="https://avatars.githubusercontent.com/u/155497138?s=100&v=4" width="60px" alt="NATien1999" style="border-radius: 50%;" /></a>
<a href="https://github.com/khanhnl2806"><img src="https://avatars.githubusercontent.com/u/202572860?s=100&v=4" width="60px" alt="khanhnl2806" style="border-radius: 50%;" /></a>
<a href="https://github.com/Namdo1402"><img src="https://avatars.githubusercontent.com/u/205231143?s=100&v=4" width="60px" alt="Namdo1402" style="border-radius: 50%;" /></a>
<a href="https://github.com/VNNTNAM"><img src="https://avatars.githubusercontent.com/u/199906888?s=100&v=4" width="60px" alt="VNNTNAM" style="border-radius: 50%;" /></a>
<a href="https://github.com/NguyenNgocHuyhub"><img src="https://avatars.githubusercontent.com/u/174630720?s=100&v=4" width="60px" alt="NguyenNgocHuyhub" style="border-radius: 50%;" /></a>
<a href="https://github.com/quy0193"><img src="https://avatars.githubusercontent.com/u/90856171?s=100&v=4" width="60px" alt="quy0193" style="border-radius: 50%;" /></a>
<a href="https://github.com/hieuvoquang87"><img src="https://avatars.githubusercontent.com/u/8354819?s=100&v=4" width="60px" alt="hieuvoquang87" style="border-radius: 50%;" /></a>
<a href="https://github.com/DrDinhLuong"><img src="https://avatars.githubusercontent.com/u/86107710?s=100&v=4" width="60px" alt="DrDinhLuong" style="border-radius: 50%;" /></a>
<a href="https://github.com/hphuongdhsp"><img src="https://avatars.githubusercontent.com/u/37414457?s=100&v=4" width="60px" alt="hphuongdhsp" style="border-radius: 50%;" /></a>
<a href="https://github.com/dnambinh"><img src="https://avatars.githubusercontent.com/u/91754083?s=100&v=4" width="60px" alt="dnambinh" style="border-radius: 50%;" /></a>
<a href="https://github.com/tuanhung0804"><img src="https://avatars.githubusercontent.com/u/59684986?s=100&v=4" width="60px" alt="tuanhung0804" style="border-radius: 50%;" /></a>
<a href="https://github.com/ducdv2018"><img src="https://avatars.githubusercontent.com/u/113516668?s=100&v=4" width="60px" alt="ducdv2018" style="border-radius: 50%;" /></a>
<a href="https://github.com/ngohonglinh"><img src="https://avatars.githubusercontent.com/u/41242183?s=100&v=4" width="60px" alt="ngohonglinh" style="border-radius: 50%;" /></a>
<a href="https://github.com/cutuananh"><img src="https://avatars.githubusercontent.com/u/6285586?s=100&v=4" width="60px" alt="cutuananh" style="border-radius: 50%;" /></a>
<a href="https://github.com/ThomasNguyen-git"><img src="https://avatars.githubusercontent.com/u/182118805?s=100&v=4" width="60px" alt="ThomasNguyen-git" style="border-radius: 50%;" /></a>
<a href="https://github.com/lamquangphuc"><img src="https://avatars.githubusercontent.com/u/454179?s=100&v=4" width="60px" alt="lamquangphuc" style="border-radius: 50%;" /></a>
<a href="https://github.com/nguyenquangtrung8"><img src="https://avatars.githubusercontent.com/u/170158913?s=100&v=4" width="60px" alt="nguyenquangtrung8" style="border-radius: 50%;" /></a>
<a href="https://github.com/toramidu"><img src="https://avatars.githubusercontent.com/u/98959140?s=100&v=4" width="60px" alt="toramidu" style="border-radius: 50%;" /></a>
</div>

## Hỗ trợ dự án

Nếu vnstock đã mang lại giá trị cho bạn và bạn muốn trở thành một phần của cộng đồng những người ủng hộ, sự đóng góp của bạn sẽ là nguồn động lực vô cùng to lớn đối với chúng tôi. Mỗi nhà tài trợ giúp chúng tôi có thêm thời gian cải thiện tài liệu, phát triển tính năng mới và duy trì sự bền vững lâu dài cho dự án này.

<div id="badges" align="center">
    <a href="https://github.com/sponsors/thinh-vu">
        <img src="https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86" alt="vnstock3 download badge"/>
    </a>
</div>

---

# VI. Lịch sử lượt yêu thích

Bạn có thể hỗ trợ dự án bằng cách cực kỳ đơn giản là đánh dấu yêu thích để giúp dự án có thể tiếp cận tới nhiều người hơn. Dưới đây là lịch sử lượt yêu thích của dự án.

[![Star History Chart](https://api.star-history.com/svg?repos=thinh-vu/vnstock&type=Date)](https://www.star-history.com/#thinh-vu/vnstock&Date)


# VII. ⏱️ Cập nhật đáng chú ý
- 20-03-2025: Ra mắt phiên bản Vnstock `3.2.0` bổ sung thêm tính năng truy xuất dữ liệu Bộ lọc cổ phiếu.
- 02-01-2025: Vnstock3 chính thức sử dụng tên nhận diện gói thư viện là vnstock tại trang phân phối chính thức pypi.org. Chi tiết [tại đây](https://vnstocks.com/blog/chuyen-doi-sang-vnstock3-truoc-2025)
- 02-11-2024: Ra mắt Vnstock3 phiên bản 3.0.9. Chi tiết: [tại đây](https://vnstocks.com/docs/tai-lieu/lich-su-phien-ban#02-11-2024)
- 10-05-2024: Ra mắt phiên bản Vnstock `3.0.1` với tên gói cài đặt `vnstock3`

> Chi tiết cập nhật phần mềm và phiên bản [tại đây](https://vnstocks.com/docs/tai-lieu/lich-su-phien-ban)

---

# VIII. 📔 Tài liệu hướng dẫn

Trước khi bắt đầu, hãy đánh dấu yêu thích để giúp dự án có thể tiếp cận tới nhiều người hơn. Cám ơn bạn!

![star_project](https://raw.githubusercontent.com/thinh-vu/vnstock/beta/docs/docs/assets/images/github_star_guide.png)

Để hiểu rõ hơn về vnstock và hướng dẫn sử dụng toàn diện, bạn có thể truy cập [vnstocks.com](https://vnstocks.com/docs/category/s%E1%BB%95-tay-h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn). 

Xem minh hoạ các tính năng thông qua Colab Notebook sau:

<div id="badges" align="center">
  <a href="https://vnstocks.com/docs/tai-lieu/huong-dan-nhanh" target="_blank">
    <img src="https://img.shields.io/badge/Tài%20liệu%20hướng%20dẫn-Vnstock-blue?style=for-the-badge&logo=book" alt="Tài liệu hướng dẫn Vnstock Badge"/>
  </a>
</div>

## 8.1. Cài đặt 

Bạn có thể cài đặt thư viện bản phát hành ổn định qua PyPI với câu lệnh sau:

```bash
pip install -U vnstock
```

Bạn cũng có thể cài đặt bản phát hành thử nghiệm trên Github với câu lệnh:

```bash
pip install git+https://github.com/thinh-vu/vnstock.git
```

## 8.2. Nạp thư viện

Bạn cần nạp thư viện vào môi trường Python thông qua giao diện Jupyter Notebook hoặc Terminal để có thể gọi và sử dụng các hàm được cung cấp.

Có 4 cách nạp thư viện vào môi trường làm việc như sau:

### 8.2.1. Nạp thông qua giao diện làm việc chính

Giao diện làm việc chính cho phép chuyển đổi nguồn và chỉ cần khai báo tên mã khi khởi động. Cấu trúc này phù hợp khi phân tích xuyên suốt 1 mã chứng khoán và nguồn dữ liệu đồng thời giúp tăng độ ổn định của mã nguồn trong tương lai khi các nguồn dữ mới được bổ sung hoặc nguồn cũ hết hiệu lực, bạn chỉ cần đổi tên nguồn để tiếp tục sử dụng.

```
from vnstock import Vnstock
stock = Vnstock().stock(symbol='VCI', source='VCI')
stock.quote.history(start='2020-01-01', end='2024-05-25')
```

### 8.2.2. Nạp thông qua các class tổng hợp

Bạn chọn nạp một trong các lớp chức năng chính. Các lớp chức năng này cho phép chuyển đổi dễ dàng nguồn dữ liệu được hỗ trợ trong khi giữ nguyên cấu trúc hàm. Cấu trúc này giúp tăng độ ổn định của mã nguồn trong tương lai khi các nguồn dữ mới được bổ sung hoặc nguồn cũ hết hiệu lực, bạn chỉ cần đổi tên nguồn để tiếp tục sử dụng.

```python
from vnstock import Listing, Quote, Company, Finance, Trading, Screener 
```

### 8.2.3. Nạp các lớp tính năng riêng lẻ theo nguồn dữ liệu cố định

> Bạn cần tham khảo [mã nguồn](https://github.com/thinh-vu/vnstock/tree/main/vnstock/explorer) để sử dụng đúng các chức năng có sẵn trong thư viện.

```python
from vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading
```

hoặc 

```python
from vnstock.explorer.tcbs import Quote, Company, Finance, Trading, Screener
```

## 8.3. Danh sách niêm yết

> Danh sách các mã chứng khoán sử dụng trong việc thiết lập vòng lặp truy xuất dữ liệu từ các chức năng khác như Giá lịch sử, Thông tin công ty, Báo cáo tài chính, vv

```python
from vnstock import Listing
listing = Listing()
listing.all_symbols()
```

## 8.7. Giá lịch sử & thống kê giao dịch

### Giá lịch sử

```python
from vnstock import Vnstock
stock = Vnstock().stock(symbol='ACB', source='VCI')
stock.quote.history(start='2024-01-01', end='2025-03-19', interval='1D')
```

hoặc

```python
from vnstock import Quote
quote = Quote(symbol='ACB', source='VCI')
quote.history(start='2024-01-01', end='2025-03-19', interval='1D')
```

### 8.5. Intraday

> Dữ liệu giao dịch khớp lệnh theo từng tick

```python
stock.quote.intraday(symbol='ACB', page_size=10_000, show_log=False)
```

Chi tiết vui lòng tham khảo tài liệu và Demo Notebook.

## 5.6. Bảng giá giao dịch

```python
from vnstock import Trading
Trading(source='VCI').price_board(['VCB','ACB','TCB','BID'])
```

## 8.7. Truy xuất thông tin công ty

```python
from vnstock import Vnstock
company = Vnstock().stock(symbol='ACB', source='VCI').company
company.overview()
```

hoặc

```python
from vnstock import Company
company = Company(symbol='ACB', source='VCI')
company.overview()
```

## 8.8. Truy xuất báo cáo tài chính

```python
from vnstock import Vnstock
stock = Vnstock().stock(symbol='VCI', source='VCI')
# Bảng cân đối kế toán - năm
stock.finance.balance_sheet(period='year', lang='vi', dropna=True)
# Bảng cân đối kế toán - quý
stock.finance.balance_sheet(period='quarter', lang='en', dropna=True)
# Kết quả hoạt động kinh doanh
stock.finance.income_statement(period='year', lang='vi', dropna=True)
# Lưu chuyển tiền tệ
stock.finance.cash_flow(period='year', dropna=True)
# Chỉ số tài chính
stock.finance.ratio(period='year', lang='vi', dropna=True)
```

## 8.9. Bộ lọc cổ phiếu

```python
from vnstock import Screener
stock.screener.stock(params={"exchangeName": "HOSE,HNX,UPCOM"}, limit=1700)
```

## 8.10. Dữ liệu quỹ mở

```python
from vnstock.explorer.fmarket.fund import Fund
fund = Fund()
fund.listing()
```

## 8.11. Dữ liệu thị trường quốc tế: Cổ phiếu, FX, Index

```python
from vnstock import Vnstock
fx = Vnstock().fx(symbol='JPYVND', source='MSN')
df = fx.quote.history(start='2025-01-02', end='2025-03-20', interval='1D')
df
```

## 8.12. Tỷ giá & giá vàng

```python
from vnstock.explorer.misc import *

# Tỷ giá ngoại tệ VCB
vcb_exchange_rate(date='2024-03-21')

# Giá vàng SJC
sjc_gold_price()
```

## 8.13. Xuất dữ liệu

> Tất cả dữ liệu trả về từ Vnstock đều là Pandas DataFrame hoặc Series, do đó, bạn có thể mô hình hoá các thao tác phân tích của mình với lệnh Python dễ dàng nhờ hỗ trợ của AI. Nếu cần xuất dữ liệu sang các định dạng truyền thống, bạn chỉ cần gán các hàm mô tả ở trên với 1 tên biến và thực hiện xuất dữ liệu như dưới đây:

```python
# Biến ratio_df lưu giá trị của phép tính vào bộ nhớ
ratio_df = stock.finance.ratio(period='year', lang='vi', dropna=True)

# Xuất dữ liệu ra Excel
ratio_df.to_excel('/nơi_lưu_file_của_bạn/tên_file-ratio_df.xlsx`, index=False')
# Xuất dữ liệu ra CSV
ratio_df.to_csv('/nơi_lưu_file_của_bạn/tên_file-ratio_df.csv`, index=False')
```

---

# Vnstock - The Open-Source Stock Analysis Toolkit for Investors in Vietnam

[![Vnstock Homepage](https://raw.githubusercontent.com/thinh-vu/vnstock/refs/heads/main/assets/images/vnstock-hero-banner.png)](https://vnstocks.com/)

<div id="badges" align="center">
    <img src="https://img.shields.io/pypi/pyversions/vnstock?logoColor=brown&style=flat" alt="Version"/>
    <img src="https://img.shields.io/github/last-commit/thinh-vu/vnstock?style=flat" alt="Commit Badge"/>
    <img src="https://img.shields.io/badge/license-Custom%20License-red?style=flat" alt="Custom License Badge"/>
</div>

<div id="badges" align="center">
    <a href="https://pypi.org/project/vnstock/">
        <img src="https://img.shields.io/pypi/dm/vnstock?label=vnstock%20download&style=flat" alt="vnstock download badge"/>
    </a>
    <a href="https://pypi.org/project/vnstock3/">
        <img src="https://img.shields.io/pypi/dm/vnstock3?label=vnstock3%20download&style=flat" alt="vnstock3 download badge"/>
    </a>
</div>

---

# 🎤 Introduction to Vnstock

> Welcome to **Vnstock**, a comprehensive open-source solution for stock analysis and investment automation in Vietnam.

Driven by the mission **"To bring financial data and investment tools closer to everyone"**, Vnstock continuously evolves by integrating modern technologies—not only meeting basic data needs but also empowering you to build flexible, intelligent financial analysis solutions.

### 🚀 Why Vnstock?

- **Free & Open-Source**: Accessible for all—investors, analysts, researchers, and educators.
- **Full-Stack Python Support**: Easy-to-use functions for building analysis tools or automated trading bots.
- **Diverse, Continuously Updated Data**: Covers stocks, warrants, indices, futures, bonds, forex, crypto, and more.

You are an important part of the **digital transformation of Vietnam’s financial market**. Let’s create impact together with Vnstock!

### 🤝 Join the Community

Join the Vnstock community to share knowledge, collaborate, and stay updated with the latest features:

<div id="badges" align="center">
  <a href="https://www.facebook.com/groups/vnstock.official" target="_blank">
    <img src="https://img.shields.io/badge/Join%20the%20Community-Vnstock-blue?style=for-the-badge&logo=facebook" alt="Join Vnstock Community"/>
  </a>
</div>

---

# II. Key Feature Groups

> `Vnstock` reduces time-to-insight by streamlining data processing, enabling learners, researchers, and financial analysts to build their own smart investment solutions. It is more than a data extraction tool—it’s a flexible foundation for personal investing systems.

1. **Easy API Access**  
   Retrieve financial data through simple and intuitive Python functions.

2. **Stock Data**  
   Real-time prices, historical prices, financial indicators, and company profiles for listed stocks.

3. **Stock Screener**  
   Filter stocks based on financial, technical, or market criteria.

4. **Market Indices**  
   Track performance of Vietnamese indices (VNIndex, HNX, UPCOM) and select global indices.

5. **Covered Warrants (CW)**  
   Includes price, expiration, issuers, and market status of warrants.

6. **Precious Metals**  
   Domestic and international gold price updates.

7. **Futures Contracts**  
   Derivatives like VN30F and other trading terms.

8. **Investment Funds (ETF & Mutual Funds)**  
   Portfolio composition, performance, and key metrics.

9. **Bonds**  
   Government and corporate bond data, including yield, maturity, and volume.

10. **Forex**  
    Real-time exchange rates for major currency pairs.

11. **Cryptocurrencies**  
    Prices and market volatility for top cryptocurrencies.

12. **Financial News & Events**  
    Auto-updated financial news, disclosures, and market events calendar.

---

# III. Disclaimer

> **Vnstock** is developed for **personal and research use only**. The provided data may be incomplete, inconsistent, or inaccurate, and should not be used for **live trading, algorithmic strategies, or financial decisions** without proper due diligence.

The authors **disclaim all responsibility** for any loss, damage, or financial risk arising from the use of this library, including but not limited to: data errors, misinterpretation, or misuse.

**Vnstock does not offer investment advice or trading signals**. Users bear full responsibility for how they use this project.

---

# IV. 🔑 License

`Vnstock` is distributed under a custom license focused on **personal, non-commercial use**. Usage terms are detailed in the [LICENSE](LICENSE.md). For commercial or institutional use, please contact the author for official licensing.

When using Vnstock in your project, you are required to cite the author and project as per the citation guide provided.

---

# V. 🙏 Contributors & Sponsors

## Contributors 

Vnstock thrives thanks to the collective efforts of tech and finance enthusiasts. Every line of code and every bug fix reflects your valuable contributions. Thank you for making vnstock a powerful tool for the investment community!

<a href="https://github.com/thinh-vu/vnstock/graphs/contributors">
   <img src="https://contributors-img.web.app/image?repo=thinh-vu/vnstock" width="800"/>
</a>

## ❤️ Featured Sponsors

From the bottom of our hearts, we want to express our deepest gratitude to all our incredible sponsors. Your generous support has been the backbone of this project, allowing us to dedicate more time and resources to improving vnstock. Each contribution, regardless of size, fuels our passion and helps us maintain and enhance this open-source tool for the entire investment community. You are not just sponsors – you are essential partners in our journey to democratize financial data access for all investors.

<div style="display: flex; flex-wrap: wrap; gap: 10px;">
  <!-- Present & Past sponsors -->
<a href="https://github.com/Huytq82"><img src="https://avatars.githubusercontent.com/u/68698802?s=100&v=4" width="60px" alt="Huytq82" style="border-radius: 50%;" /></a>
<a href="https://github.com/yellow1912"><img src="https://avatars.githubusercontent.com/u/374134?s=100&v=4" width="60px" alt="yellow1912" style="border-radius: 50%;" /></a>
<a href="https://github.com/thaituankha"><img src="https://avatars.githubusercontent.com/u/136249921?s=100&v=4" width="60px" alt="thaituankha" style="border-radius: 50%;" /></a>
<a href="https://github.com/huannguyen2606"><img src="https://avatars.githubusercontent.com/u/207012732?s=100&v=4" width="60px" alt="huannguyen2606" style="border-radius: 50%;" /></a>
<a href="https://github.com/hungson175"><img src="https://avatars.githubusercontent.com/u/565789?s=100&v=4" width="60px" alt="hungson175" style="border-radius: 50%;" /></a>
<a href="https://github.com/kynnbreak"><img src="https://avatars.githubusercontent.com/u/60998063?s=100&v=4" width="60px" alt="kynnbreak" style="border-radius: 50%;" /></a>
<a href="https://github.com/quanglaife"><img src="https://avatars.githubusercontent.com/u/153795419?s=100&v=4" width="60px" alt="quanglaife" style="border-radius: 50%;" /></a>
<a href="https://github.com/itkennylee"><img src="https://avatars.githubusercontent.com/u/206494183?s=100&v=4" width="60px" alt="itkennylee" style="border-radius: 50%;" /></a>
<a href="https://github.com/congnt91"><img src="https://avatars.githubusercontent.com/u/191594462?s=100&v=4" width="60px" alt="congnt91" style="border-radius: 50%;" /></a>
<a href="https://github.com/NATien1999"><img src="https://avatars.githubusercontent.com/u/155497138?s=100&v=4" width="60px" alt="NATien1999" style="border-radius: 50%;" /></a>
<a href="https://github.com/khanhnl2806"><img src="https://avatars.githubusercontent.com/u/202572860?s=100&v=4" width="60px" alt="khanhnl2806" style="border-radius: 50%;" /></a>
<a href="https://github.com/Namdo1402"><img src="https://avatars.githubusercontent.com/u/205231143?s=100&v=4" width="60px" alt="Namdo1402" style="border-radius: 50%;" /></a>
<a href="https://github.com/VNNTNAM"><img src="https://avatars.githubusercontent.com/u/199906888?s=100&v=4" width="60px" alt="VNNTNAM" style="border-radius: 50%;" /></a>
<a href="https://github.com/NguyenNgocHuyhub"><img src="https://avatars.githubusercontent.com/u/174630720?s=100&v=4" width="60px" alt="NguyenNgocHuyhub" style="border-radius: 50%;" /></a>
<a href="https://github.com/quy0193"><img src="https://avatars.githubusercontent.com/u/90856171?s=100&v=4" width="60px" alt="quy0193" style="border-radius: 50%;" /></a>
<a href="https://github.com/hieuvoquang87"><img src="https://avatars.githubusercontent.com/u/8354819?s=100&v=4" width="60px" alt="hieuvoquang87" style="border-radius: 50%;" /></a>
<a href="https://github.com/DrDinhLuong"><img src="https://avatars.githubusercontent.com/u/86107710?s=100&v=4" width="60px" alt="DrDinhLuong" style="border-radius: 50%;" /></a>
<a href="https://github.com/hphuongdhsp"><img src="https://avatars.githubusercontent.com/u/37414457?s=100&v=4" width="60px" alt="hphuongdhsp" style="border-radius: 50%;" /></a>
<a href="https://github.com/dnambinh"><img src="https://avatars.githubusercontent.com/u/91754083?s=100&v=4" width="60px" alt="dnambinh" style="border-radius: 50%;" /></a>
<a href="https://github.com/tuanhung0804"><img src="https://avatars.githubusercontent.com/u/59684986?s=100&v=4" width="60px" alt="tuanhung0804" style="border-radius: 50%;" /></a>
<a href="https://github.com/ducdv2018"><img src="https://avatars.githubusercontent.com/u/113516668?s=100&v=4" width="60px" alt="ducdv2018" style="border-radius: 50%;" /></a>
<a href="https://github.com/ngohonglinh"><img src="https://avatars.githubusercontent.com/u/41242183?s=100&v=4" width="60px" alt="ngohonglinh" style="border-radius: 50%;" /></a>
<a href="https://github.com/cutuananh"><img src="https://avatars.githubusercontent.com/u/6285586?s=100&v=4" width="60px" alt="cutuananh" style="border-radius: 50%;" /></a>
<a href="https://github.com/ThomasNguyen-git"><img src="https://avatars.githubusercontent.com/u/182118805?s=100&v=4" width="60px" alt="ThomasNguyen-git" style="border-radius: 50%;" /></a>
<a href="https://github.com/lamquangphuc"><img src="https://avatars.githubusercontent.com/u/454179?s=100&v=4" width="60px" alt="lamquangphuc" style="border-radius: 50%;" /></a>
<a href="https://github.com/nguyenquangtrung8"><img src="https://avatars.githubusercontent.com/u/170158913?s=100&v=4" width="60px" alt="nguyenquangtrung8" style="border-radius: 50%;" /></a>
<a href="https://github.com/toramidu"><img src="https://avatars.githubusercontent.com/u/98959140?s=100&v=4" width="60px" alt="toramidu" style="border-radius: 50%;" /></a>
</div>

### Support the Project

If you've found value in vnstock and would like to join our community of supporters, your contribution would mean the world to us. Every sponsor enables us to dedicate more time to improving documentation, adding new features, and ensuring the long-term sustainability of this project.

<div id="badges" align="center">
    <a href="https://github.com/sponsors/thinh-vu">
        <img src="https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86" alt="vnstock3 download badge"/>
    </a>
</div>


---

# VI. Star History

You can support the project by simply starring it on GitHub—this helps the project reach more people. Here's the star history:

[![Star History Chart](https://api.star-history.com/svg?repos=thinh-vu/vnstock&type=Date)](https://www.star-history.com/#thinh-vu/vnstock&Date)

---

# VII. ⏱️ Notable Updates

- **20-Mar-2025**: Version `3.2.0` released with Stock Screener data access.
- **02-Jan-2025**: Official package name for Vnstock3 updated to `vnstock` on PyPI. [Read more](https://vnstocks.com/blog/chuyen-doi-sang-vnstock3-truoc-2025)
- **02-Nov-2024**: Vnstock3 version `3.0.9` released. [Details](https://vnstocks.com/docs/tai-lieu/lich-su-phien-ban#02-11-2024)
- **10-May-2024**: Initial release of Vnstock `3.0.1` under package name `vnstock3`

> Full changelog available [here](https://vnstocks.com/docs/tai-lieu/lich-su-phien-ban)

---

# VII. 📔 Documentation

Before getting started, consider starring the project to support us—thank you!

![star_project](https://raw.githubusercontent.com/thinh-vu/vnstock/beta/docs/docs/assets/images/github_star_guide.png)

Full documentation and usage guide: [vnstocks.com/docs](https://vnstocks.com/docs/category/s%E1%BB%95-tay-h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn)

Example use cases in Colab Notebook:

<div id="badges" align="center">
  <a href="https://vnstocks.com/docs/tai-lieu/huong-dan-nhanh" target="_blank">
    <img src="https://img.shields.io/badge/Quick%20Guide-Vnstock-blue?style=for-the-badge&logo=book" alt="Vnstock Docs Badge"/>
  </a>
</div>

## 8.1 Installation

Install or upgrade to the latest version of Vnstock via pip:

```bash
pip install -U vnstock
```

You can also install the experimental release from GitHub using the command:

```bash
pip install git+https://github.com/thinh-vu/vnstock.git
```

---

## 8.2 Importing the Library

You can import Vnstock into your Python environment using Jupyter Notebook or any Python console. There are four supported methods:

### 8.2.1. Import via Unified Interface

This is the primary method for loading the library, allowing you to define the data source once and reuse across functions. Ideal for analyzing a single stock with consistent settings:

```python
from vnstock import Vnstock
stock = Vnstock().stock(symbol='VCI', source='VCI')
stock.quote.history(start='2020-01-01', end='2024-05-25')
```

### 8.2.2. Import Main Functional Classes

Load from core modules that support dynamic switching between data providers:

```python
from vnstock import Listing, Quote, Company, Finance, Trading, Screener 
```

### 8.2.3. Import from Specific Data Providers

For advanced users needing fixed data sources. Refer to the [source code](https://github.com/thinh-vu/vnstock/tree/main/vnstock/explorer) for details:

```python
from vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading
```

or

```python
from vnstock.explorer.tcbs import Quote, Company, Finance, Trading, Screener
```

---

## 8.3 Listing Symbols

Used for generating lists of available tickers—essential for batch operations:

```python
from vnstock import Listing
listing = Listing()
listing.all_symbols()
```

---

## 8.4 Historical Prices & Trading Stats

### Historical Prices

```python
from vnstock import Vnstock
stock = Vnstock().stock(symbol='ACB', source='VCI')
stock.quote.history(start='2024-01-01', end='2025-03-19', interval='1D')
```

Or use:

```python
from vnstock import Quote
quote = Quote(symbol='ACB', source='VCI')
quote.history(start='2024-01-01', end='2025-03-19', interval='1D')
```

---

## 8.5 Intraday Tick Data

> Retrieves granular trade data per tick:

```python
stock.quote.intraday(symbol='ACB', page_size=10_000, show_log=False)
```

---

## 8.6 Market Price Board

Get real-time quotes for multiple tickers:

```python
from vnstock import Trading
Trading(source='VCI').price_board(['VCB','ACB','TCB','BID'])
```

---

## 8.7 Company Information

```python
from vnstock import Vnstock
company = Vnstock().stock(symbol='ACB', source='VCI').company
company.overview()
```

Or:

```python
from vnstock import Company
company = Company(symbol='ACB', source='VCI')
company.overview()
```

---

## 8.8 Financial Reports

```python
from vnstock import Vnstock
stock = Vnstock().stock(symbol='VCI', source='VCI')

# Balance Sheet - yearly
stock.finance.balance_sheet(period='year', lang='vi', dropna=True)

# Balance Sheet - quarterly
stock.finance.balance_sheet(period='quarter', lang='en', dropna=True)

# Income Statement
stock.finance.income_statement(period='year', lang='vi', dropna=True)

# Cash Flow
stock.finance.cash_flow(period='year', dropna=True)

# Financial Ratios
stock.finance.ratio(period='year', lang='vi', dropna=True)
```

---

## 8.9 Stock Screener

```python
from vnstock import Screener
stock.screener.stock(params={"exchangeName": "HOSE,HNX,UPCOM"}, limit=1700)
```

---

## 8.10 Mutual Fund Data

```python
from vnstock.explorer.fmarket.fund import Fund
fund = Fund()
fund.listing()
```

---

## 8.11 International Markets: Stocks, FX, Indices

```python
from vnstock import Vnstock
fx = Vnstock().fx(symbol='JPYVND', source='MSN')
df = fx.quote.history(start='2025-01-02', end='2025-03-20', interval='1D')
df
```

---

## 8.12 Exchange Rates & Gold Prices

```python
from vnstock.explorer.misc import *

# VCB exchange rate
vcb_exchange_rate(date='2024-03-21')

# SJC gold price
sjc_gold_price()
```

---

## 8.13 Exporting Data

> All data from Vnstock is returned as Pandas `DataFrame` or `Series`, making it AI-friendly and easy to process or export.

```python
# Save ratio data to memory
ratio_df = stock.finance.ratio(period='year', lang='vi', dropna=True)

# Export to Excel
ratio_df.to_excel('/your_save_path/ratio_df.xlsx', index=False)

# Export to CSV
ratio_df.to_csv('/your_save_path/ratio_df.csv', index=False)
```



================================================
FILE: LICENSE.md
================================================
**GIẤY PHÉP SỬ DỤNG PHẦN MỀM Vnstock**
-----------------------------------

> _(*) Gói thư viện Python Vnstock thế hệ thứ 3 được phát hành vào tháng 5 năm 2024, được đề cập đến trong giấy phép này với tên gọi tắt là Vnstock._

Khi bạn truy cập, sử dụng nội dung mã nguồn Vnstock, hoặc cài đặt Vnstock trên thiết bị của mình, bạn xác nhận rằng mình đã đọc, hiểu rõ, và chấp nhận điều khoản sử dụng phần mềm như mô tả dưới đây. Bạn cần xác nhận điều khoản & điều kiện trong lần đầu tiên chạy thư viện Vnstock để có thể sử dụng.



**I. ĐIỀU KHOẢN CHUNG**

- **Cấp Phép**: Thư viện này chỉ dành cho mục đích cá nhân và không được phân phối lại hoặc sử dụng cho mục đích thương mại mà không có sự đồng ý bằng văn bản chính thức từ tác giả. Tất cả bản quyền và sở hữu trí tuệ thuộc về tác giả. Bất kỳ hành vi vi phạm bản quyền hoặc sở hữu trí tuệ sẽ chịu trách nhiệm trước pháp luật.

- **Hạn Chế Sử Dụng Thương Mại**: Sử dụng Vnstock cho mục đích thương mại bởi bất kỳ tổ chức nào là nghiêm cấm. Điều này bao gồm, nhưng không giới hạn, các hoạt động mà Vnstock trực tiếp hoặc gián tiếp góp phần tạo ra doanh thu hoặc dòng tiền cho một tổ chức mà không có sự chấp thuận bằng văn bản từ tác giả. Tuy nhiên, việc sử dụng Vnstock cho mục đích cá nhân, bao gồm nghiên cứu và chỉnh sửa, vẫn được phép miễn phí.

- **Các Mục Đích Sử Dụng Bị Cấm**: Bạn không được sử dụng Vnstock cho các mục đích bất hợp pháp, phi đạo đức, hoặc trái với quy định pháp luật hiện hành.

- **Từ Chối Trách Nhiệm**: Tác giả không chịu trách nhiệm cho bất kỳ thiệt hại, mất mát, hoặc hậu quả nào phát sinh từ việc sử dụng thư viện này, đặc biệt trong hoạt động đầu tư hoặc bất kỳ hoạt động nào có rủi ro. Bạn tự chịu trách nhiệm cho các quyết định đầu tư của mình.

- **Tuân Thủ Luật Pháp**: Bạn đồng ý tuân thủ mọi luật pháp, quy định, và hướng dẫn liên quan khi sử dụng thư viện này.

- **Bảo Mật Dữ Liệu**: Vnstock có thể lưu trữ dữ liệu ẩn danh của thiết bị để tối ưu tính năng và cải thiện hiệu năng phần mềm. Thông tin này sẽ được bảo mật và không được chia sẻ với bên thứ ba mà không có sự đồng ý của bạn.



**II. BẢN QUYỀN VÀ SỞ HỮU**

Bản quyền (c) 2024 Thinh Vu @ Vnstock. Tất cả các quyền được bảo lưu.

**Sử Dụng và Phân Phối Không Được Phép**: Việc sao chép, phân phối, hoặc khai thác thương mại Vnstock, hoặc bất kỳ phần nào của nó là không được phép. Giới hạn này bao gồm bất kỳ hình thức tạo ra doanh thu hoặc sử dụng cho tổ chức mà không được sự cho phép rõ ràng của tác giả. Tuy nhiên, việc sử dụng cá nhân, chỉnh sửa, và nghiên cứu học thuật không liên quan đến lợi ích thương mại vẫn được duy trì. Người dùng tham gia vào các hoạt động được cho phép nên tôn trọng mục đích của phần mềm này như một công cụ cho việc thúc đẩy phát triển cá nhân và mục đích giáo dục, chứ không phải để lợi dụng tính chất mở của phần mềm cho mục đích sinh lợi trong khi tổ chức vốn có nguồn tiềm lực về tài chính và con người nhưng không chia sẻ với tác giả và đội ngũ phát triển. Vi phạm các điều khoản này tương đương với việc đánh cắp quyền sở hữu trí tuệ và phi đạo đức, có thể dẫn đến các rắc rối pháp lý kèm theo.



**III. CHẤM DỨT**

Thỏa thuận này có hiệu lực cho đến khi được chấm dứt. Nó sẽ tự động chấm dứt ngay lập tức mà không cần thông báo từ tác giả nếu bạn không tuân thủ bất kỳ điều khoản nào của thỏa thuận này. Sau khi chấm dứt, bạn phải hủy bỏ tất cả các bản sao của Vnstock và tất cả các bộ phận thành phần của nó.



**IV. ĐIỀU KHOẢN THI HÀNH**

Thỏa thuận này sẽ được điều chỉnh và giải thích theo luật pháp của quốc gia mà tác giả cư trú, không kể đến các quy định xung đột của pháp luật.

Bằng cách sử dụng Vnstock, bạn đồng ý rằng mình sẽ bị ràng buộc bởi các điều khoản của Thỏa thuận này. Nếu bạn không đồng ý với các điều khoản của Thỏa thuận này, vui lòng không cài đặt hoặc sử dụng Vnstock.



---

**SOFTWARE LICENSE AGREEMENT FOR Vnstock**

> *This License Agreement ("Agreement") is made for the Python library package known as "Vnstock," released in May 2024.*



**I. GENERAL TERMS**

**1. Grant of License:** This library is intended for personal use only and may not be redistributed or used for commercial purposes without the express written consent of the author. All copyrights and intellectual property rights belong to the author. Any infringement of copyright or intellectual property will be prosecuted according to the law.

**2. Restriction on Commercial Use:** The use of Vnstock for commercial purposes by any organization is prohibited. This includes, but is not limited to, activities where Vnstock directly or indirectly contributes to generating revenue or cash flow for an organization without written approval from the author. However, the use of Vnstock for personal purposes, including research and editing, is still permitted free of charge.

**3. Prohibited Uses:** You may not use Vnstock for any illegal, unethical, or unlawful purposes.

**4. Disclaimer of Liability:** The author is not responsible for any damage, loss, or consequences arising from the use of this library, especially in investment activities or any risky activities. You are responsible for your own investment decisions.

**5. Compliance with Laws:** You agree to comply with all applicable laws, regulations, and guidelines when using this library.

**6. Data Privacy:** Vnstock may store anonymous device data to optimize features and improve software performance. This information will be kept confidential and will not be shared with third parties without your consent.

**II. COPYRIGHT AND OWNERSHIP**

Copyright (c) 2024 Thinh Vu @ Vnstock. All rights reserved.

**Unauthorized Use and Distribution:** Copying, distributing, or commercially exploiting Vnstock, or any part thereof, is not permitted. This limitation includes any form of generating revenue or using for an organization without the express permission of the author. However, personal use, editing, and academic research not related to commercial gain is still maintained. Users involved in permitted activities should respect the purpose of this software as a tool for promoting personal development and educational purposes, and not to exploit the open nature of the software for profit while the organization has the potential for financial and human resources but does not share with the author and the development team. Violating these terms is equivalent to intellectual property theft and is unethical, which can lead to legal trouble.

**III. TERMINATION**

This agreement is effective until terminated. It will automatically terminate immediately without notice from the author if you fail to comply with any of the terms of this agreement. Upon termination, you must destroy all copies of Vnstock and all of its components.

**IV. ENFORCEMENT**

This agreement shall be governed by and construed in accordance with the laws of the country in which the author resides, without regard to its conflict of laws provisions.



> **By using Vnstock, you agree that you will be bound by the terms of this Agreement. If you do not agree to the terms of this Agreement, please do not install or use Vnstock.**



================================================
FILE: requirements.txt
================================================
pandas==2.2.1
requests==2.31.0
bs4==0.0.2
vnai>=2.0
openpyxl==3.1.2
vnstock_ezchart>=0.0.2
fake_useragent==1.5.1
cryptography==42.0.5
psutil==6.0.0
click==8.1.7
click-repl==0.3.0
seaborn==0.13.2
# coverage # for testing



================================================
FILE: run_tests.py
================================================
import unittest
import logging
import os
import sys
from datetime import datetime

# Create results directory inside tests if it does not exist
results_dir = os.path.join('tests', 'results')
if not os.path.exists(results_dir):
    os.makedirs(results_dir)

# Define a custom test runner to log results
class LoggingTestRunner(unittest.TextTestRunner):
    def __init__(self, *args, **kwargs):
        self.log_filename = kwargs.pop('log_filename', None)
        super().__init__(*args, **kwargs)

    def run(self, test):
        result = super().run(test)
        if self.log_filename:
            with open(self.log_filename, 'a') as log_file:
                for test, err in result.errors:
                    log_file.write(f"ERROR: {test}\n{err}\n")
                for test, err in result.failures:
                    log_file.write(f"FAIL: {test}\n{err}\n")
        return result

def main():
    if len(sys.argv) > 1:
        test_name = sys.argv[1]
    else:
        print("Please provide the test file or test case to run. For example:")
        print("python run_tests.py tests.test_ema")
        print("python run_tests.py tests.test_ema.TestEMA.test_ema_normal_index")
        return

    # Configure logging
    test_file_name = test_name.split('.')[1] if '.' in test_name else test_name
    log_filename = os.path.join(
        results_dir, 
        f'{test_file_name}_results_{datetime.now().strftime("%Y%m%d_%H%M%S")}.log'
    )
    logging.basicConfig(
        filename=log_filename,
        level=logging.DEBUG,
        format='%(asctime)s %(levelname)s %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S',
    )

    logging.info(f"Starting test suite {test_name}")
    
    # Run the specified test
    suite = unittest.defaultTestLoader.loadTestsFromName(test_name)
    runner = LoggingTestRunner(verbosity=2, log_filename=log_filename)
    runner.run(suite)
    
    logging.info(f"Test suite {test_name} finished")

if __name__ == '__main__':
    main()



================================================
FILE: setup.py
================================================
import os
import shutil
import subprocess
from setuptools import setup, find_packages, Command
from setuptools.command.install import install

here = os.path.abspath(os.path.dirname(__file__))
with open(os.path.join(here, "README.md"), "r", encoding="utf-8") as f:
    long_description = f.read()

setup(
    name="vnstock",
    version="3.2.5",
    description="A beginner-friendly yet powerful Python toolkit for financial analysis and automation — built to make modern investing accessible to everyone",
    long_description=long_description,
    long_description_content_type="text/markdown",
    author="Thinh Vu",
    author_email="support@vnstocks.com",
    url="https://github.com/thinh-vu/vnstock",
    project_urls={
        "Documentation": "https://github.com/thinh-vu/vnstock",
        "Source": "https://github.com/thinh-vu/vnstock",
        "Issue Tracker": "https://github.com/thinh-vu/vnstock/issues",
    },
    keywords="vnstock, finance, vietnam, stock market, analysis, API",
    license="Custom: Personal, research, non-commercial; contact support@vnstocks.com for other use",
    classifiers=[
        # Trạng thái phát triển
        "Development Status :: 5 - Production/Stable",
        # Đối tượng sử dụng
        "Intended Audience :: Developers",
        "Intended Audience :: Education",
        "Intended Audience :: Financial and Insurance Industry",
        # Lĩnh vực
        "Topic :: Software Development :: Libraries",
        "Topic :: Software Development :: API",
        "Topic :: Office/Business :: Financial :: Investment",
        # Python versions
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        # Hệ điều hành
        "Operating System :: OS Independent",
        # License (custom)
        "License :: Other/Proprietary License",
        # Ngôn ngữ tự nhiên của package
        "Natural Language :: English",
        "Natural Language :: Vietnamese",
    ],
    python_requires=">=3.10",
    packages=find_packages(exclude=["tests*", "docs*"]),
    include_package_data=True,
    package_data={
        "vnstock": ["docs/*.txt", "docs/*.csv"],
    },
    install_requires=[
        "requests",
        "beautifulsoup4",
        "pandas",
        "seaborn",
        "openpyxl",
        "pydantic",
        "psutil",
        "fake_useragent",
        "vnstock_ezchart",
        "click",
        "packaging>=20.0",
        "importlib-metadata>=1.0",
        "tenacity",
        "vnai>=2.0.3",
        # "vnai @ https://github.com/vnstock-hq/initialization/releases/download/vnai-2.0.3/vnai-2.0.3.tar.gz"
     ],
    extras_require={
        "dev": ["flake8"],
        "docs": ["sphinx", "sphinx_rtd_theme"],
        "test": ["unittest"],
    },
    setup_requires=[
        "setuptools>=42",
        "wheel",
    ],
    entry_points={
        'console_scripts': [
            'vnstock=vnstock.common.cli:cli',
        ],
    },
)



================================================
FILE: assets/.DS_Store
================================================
[Non-text file]


================================================
FILE: assets/data/all_symbols.csv
================================================
symbol,organ_name
YTC,Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố Hồ Chí Minh
YEG,Công ty Cổ phần Tập đoàn Yeah1
YBM,Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái
YBC,Công ty Cổ phần Xi măng và Khoáng sản Yên Bái
XPH,Công ty Cổ phần Xà phòng Hà Nội
XMP,Công ty Cổ phần Thủy điện Xuân Minh
XMD,Công ty Cổ phần Xuân Mai - Đạo Tú
XMC,Công ty cổ phần Đầu tư và Xây dựng Xuân Mai
XLV,Công ty Cổ phần Xây lắp và Dịch vụ Sông Đà
XHC,Công ty Cổ phần Xuân Hòa Việt Nam
XDH,Công ty Cổ phần Đầu tư Xây dựng Dân dụng Hà Nội
XDC,Công ty Cổ phần Xây dựng Công trình Tân Cảng
X77,Công ty Cổ phần Thành An 77
X26,Công ty Cổ phần 26
X20,Công ty Cổ phần X20
WTC,Công ty Cổ phần Vận tải thủy - Vinacomin
WSS,Công ty Cổ phần Chứng khoán Phố Wall
WSB,Công ty Cổ phần Bia Sài Gòn - Miền Tây
WCS,Công ty Cổ phần Bến xe Miền Tây
VXT,Công ty Cổ phần Kho vận và dịch vụ thương mại
VXP,Công ty Cổ phần Thuốc Thú y Trung ương VETVACO
VXB,Công ty Cổ phần Vật liệu xây dựng Bến Tre
VWS,Công ty Cổ phần Nước và Môi trường Việt Nam
VW3,Công ty Cổ phần VIWASEEN3
VVS,Công ty Cổ phần Đầu tư Phát triển Máy Việt Nam
VVN,Tổng Công ty Cổ phần Xây dựng Công nghiệp Việt Nam
VUA,Công ty Cổ phần Chứng khoán Stanley Brothers
VTZ,Công ty Cổ phần Sản xuất và Thương mại Nhựa Việt Thành
VTX,Công ty Cổ phần Vận tải Đa phương thức VIETRANSTIMEX
VTV,Công ty Cổ phần Năng lượng và Môi trường VICEM
VTS,Công ty Cổ phần Gạch Ngói Từ Sơn
VTR,Công ty Cổ phần Du lịch và tiếp thị giao thông vận tải Việt Nam - Vietravel
VTQ,Công ty Cổ phần Việt Trung Quảng Bình
VTP,Tổng Công ty Cổ phần Bưu chính Viettel
VTO,Công ty Cổ phần Vận tải Xăng dầu VITACO
VTM,Công ty Cổ phần Vận tải và Đưa đón thợ mỏ - Vinacomin
VTL,Công ty Cổ phần Vang Thăng Long
VTK,Công ty Cổ phần Tư vấn và Dịch vụ Viettel
VTJ,Công ty Cổ phần Thương mại và Đầu tư VI NA TA BA
VTI,Công ty Cổ phần Sản xuất - Xuất nhập khẩu Dệt may
VTH,Công ty Cổ phần Dây cáp điện Việt Thái
VTG,Công ty Cổ phần Du lịch tỉnh Bà Rịa - Vũng Tàu
VTE,Công ty Cổ phần VINACAP Kim Long
VTD,Công ty Cổ phần Vietourist Holdings
VTC,Công ty Cổ phần Viễn Thông VTC
VTB,Công ty Cổ phần Viettronics Tân Bình
VTA,Công ty Cổ phần VITALY
VST,Công ty Cổ phần Vận tải và Thuê Tàu biển Việt Nam
VSP,Công ty Cổ phần Vận tải biển và Bất động sản Việt Hải
VSN,Công ty Cổ phần Việt Nam Kỹ Nghệ Súc Sản
VSM,Công ty Cổ phần Container Miền Trung
VSI,Công ty Cổ phần Đầu tư và Xây dựng Cấp thoát nước
VSH,Công ty Cổ phần Thủy điện Vĩnh Sơn - Sông Hinh
VSG,Công ty Cổ phần Container Phía Nam
VSF,Tổng Công ty Lương thực Miền Nam - Công ty Cổ phần
VSE,Công ty Cổ phần Dịch vụ Đường cao tốc Việt Nam
VSC,Công ty Cổ phần Container Việt Nam
VSA,Công ty Cổ phần Đại lý Hàng hải Việt Nam
VRG,Công ty Cổ phần Phát triển Đô thị và Khu Công nghiệp Cao Su Việt Nam
VRE,Công ty Cổ phần Vincom Retail
VRC,Công ty Cổ phần Bất động sản và Đầu tư VRC
VQC,Công ty Cổ phần Giám định Vinaconmin
VPW,Công ty Cổ phần Cấp thoát nước số 1 Vĩnh Phúc
VPS,Công ty Cổ phần Thuốc sát trùng Việt Nam
VPR,Công ty Cổ phần VINAPRINT
VPI,Công ty Cổ phần Đầu tư Văn Phú - Invest
VPH,Công ty Cổ phần Vạn Phát Hưng
VPG,Công ty Cổ phần Đầu tư Thương mại Xuất nhập khẩu Việt Phát
VPD,Công ty Cổ phần Phát triển Điện lực Việt Nam
VPC,Công ty Cổ phần Đầu tư và Phát triển Năng lượng Việt Nam
VPB,Ngân hàng Thương mại Cổ phần Việt Nam Thịnh Vượng
VPA,Công ty Cổ phần Vận tải Hóa dầu VP
VOS,Công ty Cổ phần Vận tải Biển Việt Nam
VOC,Tổng Công ty Công nghiệp Dầu thực vật Việt Nam - Công ty Cổ phần
VNZ,Công ty Cổ phần VNG
VNY,Công ty Cổ phần Thuốc thú y Trung ương I
VNX,Công ty Cổ phần Quảng cáo và Hội chợ Thương mại Vinexad
VNT,Công ty Cổ phần Giao nhận Vận tải Ngoại Thương
VNS,Công ty Cổ phần Ánh Dương Việt Nam
VNR,Tổng Công ty Cổ phần Tái bảo hiểm Quốc gia Việt Nam
VNP,Công ty Cổ phần Nhựa Việt Nam
VNM,Công ty Cổ phần Sữa Việt Nam
VNL,Công ty Cổ phần Logistics Vinalink
VNI,Công ty Cổ phần Đầu tư Bất động sản Việt Nam
VNH,Công ty Cổ phần Đầu tư Việt Việt Nhật
VNG,Công ty Cổ phần Du Lịch Thành Thành Công
VNF,Công ty Cổ phần Vinafreight
VNE,Tổng Công ty Cổ phần Xây dựng điện Việt Nam
VND,Công ty Cổ phần Chứng khoán VNDIRECT
VNC,Công ty Cổ phần Tập đoàn Vinacontrol
VNB,Công ty Cổ phần Sách Việt Nam
VNA,Công ty Cổ phần Vận tải biển Vinaship
VMT,Công ty Cổ phần Giao nhận Vận tải Miền Trung
VMS,Công ty Cổ phần Phát triển Hàng Hải
VMK,Công ty Cổ phần Vimarko
VMI,Công ty Cổ phần Khoáng sản và Đầu tư VISACO
VMG,Công ty Cổ phần Thương mại và Dịch vụ Dầu khí Vũng Tàu
VMD,Công ty Cổ phần Y Dược phẩm Vimedimex
VMC,Công ty Cổ phần VIMECO
VMA,Công ty Cổ phần Công nghiệp Ô tô - Vinacomin
VLW,Công ty Cổ phần Cấp nước Vĩnh Long
VLP,Công ty Cổ phần Công trình Công cộng Vĩnh Long
VLG,Công ty Cổ phần VIMC Logistics
VLF,Công ty Cổ phần Lương thực Thực phẩm Vĩnh Long
VLC,Tổng Công ty Chăn nuôi Việt Nam - Công ty Cổ phần
VLB,Công ty Cổ phần Xây dựng và Sản xuất Vật liệu Xây dựng Biên Hòa
VLA,Công ty Cổ phần Đầu tư và Phát triển Công nghệ Văn Lang
VKP,Công ty Cổ phần Nhựa Tân Hóa
VKD,Công ty Cổ phần Nước khoáng Khánh Hòa
VKC,Công ty Cổ phần VKC Holdings
VJC,Công ty Cổ phần Hàng không Vietjet
VIX,Công ty Cổ phần Chứng khoán VIX
VIW,Tổng công ty Đầu tư Nước và Môi trường Việt Nam - Công ty Cổ phần
VIT,Công ty Cổ phần Viglacera Tiên Sơn
VIS,Công ty Cổ phần Thép Việt Ý
VIR,Công ty Cổ phần Du lịch Quốc tế Vũng Tàu
VIP,Công ty Cổ phần Vận tải Xăng dầu VIPCO
VIN,Công ty Cổ phần Giao nhận Kho vận Ngoại thương Việt Nam
VIM,Công ty Cổ phần Khoáng sản Viglacera
VIH,Công ty Cổ phần Viglacera Hà Nội
VIG,Công ty Cổ phần Chứng khoán Đầu tư Tài chính Việt Nam
VIF,Tổng Công ty Lâm nghiệp Việt Nam - Công ty Cổ phần
VIE,Công ty Cổ phần Công nghệ Viễn thông VI TE CO
VID,Công ty Cổ phần Đầu tư Phát triển Thương mại Viễn Đông
VIC,Tập đoàn Vingroup - Công ty CP
VIB,Ngân hàng Thương mại Cổ phần Quốc tế Việt Nam
VHM,Công ty Cổ phần Vinhomes
VHL,Công ty Cổ phần Viglacera Hạ Long
VHI,
VHH,Công ty Cổ phần Đầu tư Kinh doanh nhà Thành Đạt
VHG,Công ty Cổ phần Đầu tư và Phát triển Việt Trung Nam
VHF,Công ty Cổ phần Xây dựng và Chế biến lương thực Vĩnh Hà
VHE,Công ty Cổ phần Dược liệu và Thực phẩm Việt Nam
VHD,Công ty Cổ phần Đầu tư phát triển nhà và đô thị VINAHUD
VHC,Công ty Cổ phần Vĩnh Hoàn
VGV,Tổng Công ty Tư vấn Xây dựng Việt Nam - CTCP
VGT,Tập đoàn Dệt May Việt Nam
VGS,Công ty Cổ phần Ống thép Việt - Đức VG PIPE
VGR,Công ty Cổ phần Cảng xanh VIP
VGP,Công ty Cổ phần Cảng Rau Quả
VGL,Công ty Cổ phần Mạ kẽm công nghiệp Vingal-Vnsteel
VGI,Tổng Công ty Cổ phần Đầu tư Quốc tế Viettel
VGG,Tổng Công Ty Cổ phần May Việt Tiến
VGC,Tổng Công ty Viglacera - Công ty Cổ phần
VFS,Công ty Cổ phần Chứng khoán Nhất Việt
VFR,Công ty Cổ phần Vận tải và Thuê tàu
VFG,Công ty Cổ phần Khử trùng Việt Nam
VFC,Công ty Cổ phần VINAFCO
VET,Công ty Cổ phần Thuốc Thú y Trung ương NAVETCO
VES,Công ty Cổ phần Đầu tư và Xây dựng Điện MÊ CA VNECO
VEF,Công ty Cổ phần Trung tâm Hội chợ Triển lãm Việt Nam
VEC,Tổng Công ty Cổ phần Điện tử và Tin học Việt Nam
VEA,Tổng Công ty Máy động lực và Máy nông nghiệp Việt Nam - CTCP
VE9,Công ty Cổ phần Đầu tư và Xây dựng VNECO 9
VE8,Công ty Cổ phần Xây dựng Điện Vneco 8
VE4,Công ty Cổ phần Xây dựng điện VNECO4
VE3,Công ty Cổ phần Xây dựng điện VNECO 3
VE2,Công ty Cổ phần Xây dựng Điện VNECO 2
VE1,Công ty Cổ phần Xây dựng điện VNECO 1
VDT,Công ty Cổ phần Lưới thép Bình Tây
VDS,Công ty Cổ phần Chứng khoán Rồng Việt
VDP,Công ty Cổ phần Dược phẩm Trung ương VIDIPHA
VDN,Công ty Cổ phần Vinatex Đà Nẵng
VDM,Công ty Cổ phần - Viện Nghiên cứu Dệt may
VDL,Công ty Cổ phần Thực phẩm Lâm Đồng
VDG,Công ty Cổ phần Vạn Đạt Group
VDB,Công ty Cổ phần Vận tải và Chế biến Than Đông Bắc
VCX,Công ty Cổ phần Xi măng Yên Bình
VCW,Công ty Cổ phần Đầu tư Nước sạch Sông Đà
VCT,Công ty Cổ phần Tư vấn Xây dựng Vinaconex
VCS,Công ty Cổ phần VICOSTONE
VCR,Công ty Cổ phần Đầu tư và Phát triển Du lịch Vinaconex
VCP,Công ty Cổ phần Xây dựng và Năng lượng VCP
VCM,Công ty Cổ phần BV Life
VCI,Công ty Cổ phần Chứng khoán Vietcap
VCG,Tổng Công ty Cổ phần Xuất nhập khẩu và Xây dựng Việt Nam
VCF,Công ty Cổ phần VinaCafé Biên Hòa
VCE,Công ty Cổ phần Xây lắp Môi trường
VCC,Công ty Cổ phần Vinaconex 25
VCB,Ngân hàng Thương mại Cổ phần Ngoại thương Việt Nam
VCA,Công ty Cổ phần Thép VICASA - VNSTEEL
VC9,Công ty Cổ phần Xây dựng số 9 - VC9
VC7,Công ty Cổ phần Tập đoàn BGI
VC6,Công ty cổ phần Xây dựng và Đầu tư Visicons
VC5,Công ty Cổ phần Xây dựng Số 5
VC3,Công ty Cổ phần Tập đoàn Nam Mê Kông
VC2,Công ty Cổ phần Đầu tư và Xây dựng VINA2
VC1,Công ty Cổ phần Xây dựng số 1
VBH,Công ty Cổ phần Điện tử Bình Hòa
VBG,Công ty Cổ phần Địa chất Việt Bắc - TKV
VBC,"Công ty Cổ phần Nhựa, Bao bì Vinh"
VBB,Ngân hàng Thương mại Cổ phần Việt Nam Thương Tín
VAV,Công ty Cổ phần VIWACO
VAT,Công ty Cổ phần VT Vạn Xuân
VAF,Công ty Cổ phần Phân lân nung chảy Văn Điển
VAB,Ngân hàng Thương mại Cổ phần Việt Á
V21,Công ty Cổ phần Vinaconex 21
V15,Công ty Cổ phần Xây dựng số 15
V12,Công ty Cổ phần Xây dựng số 12
V11,Công ty Cổ phần Xây dựng số 11
UXC,Công ty Cổ phần Chế biến Thủy sản Út Xi
USD,Công ty Cổ phần Công trình Đô thị Sóc Trăng
USC,Công ty Cổ phần Khảo sát và Xây dựng - USCO
UPH,Công ty Cổ phần Dược phẩm TW25
UPC,Công ty Cổ phần Phát triển Công viên Cây xanh và Đô thị Vũng Tàu
UNI,Công ty Cổ phần Đầu tư và Phát triển Sao Mai Việt
UMC,Công ty Cổ phần Công trình đô thị Nam Định
UIC,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị IDICO
UEM,Công ty Cổ phần Cơ điện Uông Bí - Vinacomin
UDL,Công ty Cổ phần Đô thị và Môi trường Đắk Lắk
UDJ,Công ty Cổ phần Phát triển Đô thị
UDC,Công ty Cổ phần Xây dựng và Phát triển đô thị Tỉnh Bà Rịa - Vũng Tàu
UCT,Công ty Cổ phần Đô thị Cần Thơ
TYA,Công ty Cổ phần Dây và Cáp điện Taya Việt Nam
TXM,Công ty Cổ phần VICEM Thạch cao Xi Măng
TW3,Công ty Cổ phần Dược Trung Ương 3
TVW,Công ty Cổ phần Cấp thoát nước Trà Vinh
TVT,Tổng Công ty Việt Thắng - CTCP
TVS,Công ty Cổ phần Chứng khoán Thiên Việt
TVP,Công ty Cổ phần Dược phẩm TV.Pharm
TVN,Tổng Công ty Thép Việt Nam - Công ty Cổ phần
TVM,Công ty Cổ phần Tư vấn đầu tư Mỏ và công nghiệp - Vinacomin
TVH,Công ty Cổ phần Tư vấn Xây dựng công trình Hàng hải
TVG,Công ty Cổ phần Tư vấn Đầu tư và Xây dựng Giao thông Vận tải
TVD,Công ty Cổ phần Than Vàng Danh - Vinacomin
TVC,Công ty Cổ phần Tập đoàn Quản lý Tài sản Trí Việt
TVB,Công ty Cổ phần Chứng khoán Trí Việt
TVA,Công ty cổ phần Sứ Viglacera Thanh Trì
TV6,Công ty Cổ phần Tập đoàn EMA LAND
TV4,Công ty Cổ phần Tư vấn Xây dựng Điện 4
TV3,Công ty Cổ phần Tư vấn Xây dựng Điện 3
TV2,Công ty Cổ phần Tư vấn Xây dựng Điện 2
TV1,Công ty Cổ phần Tư vấn Xây dựng Điện 1
TUG,Công ty Cổ phần Lai dắt và Vận tải Cảng Hải Phòng
TTZ,Công ty Cổ phần Đầu tư Xây dựng và Công nghệ Tiến Trung
TTT,Công ty Cổ phần Du Lịch - Thương Mại Tây Ninh
TTS,Công ty Cổ phần Cán thép Thái Trung
TTP,Công ty Cổ phần Bao bì Tân Tiến
TTN,Công ty Cổ phần Công nghệ & Truyền thông Việt Nam
TTL,Tổng Công ty Thăng Long - Công ty Cổ phần
TTH,Công ty Cổ phần Thương mại và Dịch vụ Tiến Thành
TTG,Công ty Cổ phần May Thanh Trì
TTF,Công ty Cổ phần Tập đoàn Kỹ nghệ Gỗ Trường Thành
TTE,Công ty Cổ phần Đầu tư Năng lượng Trường Thịnh
TTD,Công ty Cổ phần Bệnh viện Tim Tâm Đức
TTC,Công ty Cổ phần Gạch men Thanh Thanh
TTB,Công ty Cổ phần TTBGROUP
TTA,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Trường Thành
TT6,Công ty Cổ Phần Tập Đoàn Tiến Thịnh
TST,Công ty Cổ phần Dịch vụ Kỹ thuật Viễn thông
TSJ,Công ty Cổ phần Du lịch Dịch vụ Hà Nội
TSG,Công ty Cổ phần Thông tin Tín hiệu Đường sắt Sài Gòn
TSD,Công ty Cổ phần Du lịch Trường Sơn Coecco
TSC,Công ty Cổ phần Vật tư Kỹ thuật Nông nghiệp Cần Thơ
TSB,Công ty Cổ phần Ắc quy Tia Sáng
TSA,Công ty Cổ Phần Đầu Tư Và Xây Lắp Trường Sơn
TS5,
TS4,Công ty Cổ phần Thủy sản số 4
TS3,Công ty Cổ phần Trường Sơn 532
TRT,Công ty Cổ phần RedstarCera
TRS,Công ty Cổ phần Vận tải và Dịch vụ Hàng Hải
TRC,Công ty Cổ phần Cao su Tây Ninh
TRA,Công ty Cổ phần Traphaco
TR1,Công ty Cổ phần Vận Tải 1 Traco
TQW,Công ty Cổ phần Cấp thoát nước Tuyên Quang
TQN,Công ty Cổ phần Thông Quảng Ninh
TPS,Công ty Cổ phần Bến bãi vận tải Sài Gòn
TPP,Công ty Cổ phần Tân Phú Việt Nam
TPH,Công ty Cổ phần In Sách giáo khoa tại Thành phố Hà Nội
TPC,Công ty Cổ phần Nhựa Tân Đại Hưng
TPB,Ngân hàng Thương mại Cổ phần Tiên Phong
TOW,Công ty Cổ phần Cấp nước Trà Nóc - Ô Môn
TOT,Công ty Cổ phần Transimex Logistics
TOS,Công ty Cổ phần Dịch vụ biển Tân Cảng
TOP,Công ty Cổ phần Phân phối Top One
TNW,Công ty Cổ phần Nước sạch Thái Nguyên
TNV,Công ty Cổ phần Thống Nhất Hà Nội
TNT,Công ty Cổ phần Tập đoàn TNT
TNS,Công ty Cổ phần Thép tấm lá Thống Nhất
TNP,Công ty Cổ phần Cảng Thị Nại
TNM,Công ty Cổ phần Xuất nhập khẩu và Xây dựng Công trình
TNI,Công ty Cổ phần Tập đoàn Thành Nam
TNH,Công ty Cổ phần Tập đoàn Bệnh viện TNH
TNG,Công ty Cổ phần Đầu tư và Thương mại TNG
TNC,Công ty Cổ phần Cao su Thống Nhất
TNB,Công ty Cổ phần Thép Nhà Bè - VNSTEEL
TNA,Công ty Cổ phần Thương mại Xuất nhập khẩu Thiên Nam
TN1,Công ty Cổ phần Rox Key Holdings
TMX,Công ty Cổ phần VICEM Thương mại Xi măng
TMW,Công ty Cổ phần Tổng hợp Gỗ Tân Mai
TMT,Công ty Cổ phần Ô tô TMT
TMS,Công ty Cổ phần Transimex
TMP,Công ty Cổ phần Thủy điện Thác Mơ
TMG,Công ty Cổ phần Kim loại màu Thái Nguyên - Vimico
TMC,Công ty Cổ phần Thương mại Xuất nhập khẩu Thủ Đức
TMB,Công ty Cổ phần Kinh doanh Than Miền Bắc - Vinacomin
TLT,Công ty Cổ phần Viglacera Thăng Long
TLP,Tổng Công ty Thương mại Xuất nhập khẩu Thanh Lễ - CTCP
TLI,Công ty Cổ phần May Quốc tế Thắng Lợi
TLH,Công ty Cổ phần Tập đoàn Thép Tiến Lên
TLG,Công ty Cổ phần Tập đoàn Thiên Long
TLD,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Đô thị Thăng Long
TL4,Tổng Công ty Xây dựng Thủy lợi 4 - Công ty Cổ phần
TKU,Công ty Cổ phần Công nghiệp Tung Kuang
TKG,Công ty Cổ phần Sản xuất và Thương mại Tùng Khánh
TKC,Công ty Cổ phần Xây dựng và Kinh doanh Địa ốc Tân Kỷ
TKA,Công ty Cổ phần Bao bì Tân Khánh An
TJC,Công ty Cổ phần Dịch vụ Vận tải và Thương mại
TIX,Công ty Cổ phần Sản xuất Kinh doanh Xuất nhập khẩu Dịch vụ và Đầu tư Tân Bình
TIS,Công ty Cổ phần Gang thép Thái Nguyên
TIP,Công ty Cổ phần Phát triển Khu công nghiệp Tín Nghĩa
TIN,Công ty Tài chính Cổ phần Tín Việt
TIG,Công ty Cổ phần Tập đoàn Đầu tư Thăng Long
TIE,Công ty Cổ phần TIE
TID,Công ty Cổ phần Tổng Công ty Tín Nghĩa
THW,Công ty Cổ phần Cấp nước Tân Hòa
THU,Công ty Cổ phần Môi trường và Công trình đô thị Thanh Hóa
THT,Công ty Cổ phần Than Hà Tu - Vinacomin
THS,Công ty Cổ phần Thanh Hoa Sông Đà
THP,Công ty Cổ phần Thủy sản và Thương mại Thuận Phước
THN,Công ty Cổ phần Cấp nước Thanh Hóa
THM,Công ty Cổ phần Tứ Hải Hà Nam
THI,Công ty Cổ phần Thiết bị điện
THG,Công ty Cổ phần Đầu tư và Xây dựng Tiền Giang
THD,Công ty Cổ phần Thaiholdings
THB,Công ty Cổ phần Bia Hà Nội - Thanh Hóa
TH1,Công ty Cổ phần Xuất nhập khẩu Tổng hợp I Việt Nam
TGP,Công ty Cổ phần Trường Phú
TGG,Công ty Cổ phần The Golden Group
TFC,Công ty Cổ phần Trang
TET,Công ty Cổ phần Vải sợi May mặc Miền Bắc
TEL,Công ty Cổ phần Phát triển Công trình Viễn thông
TEG,Công ty Cổ phần Năng Lượng và Bất động sản Trường Thành
TED,Tổng Công ty Tư vấn Thiết kế Giao thông Vận tải - CTCP
TEC,Công ty Cổ phần Traenco
TDW,Công ty Cổ phần Cấp nước Thủ Đức
TDT,Công ty Cổ phần Đầu tư và Phát triển TDT
TDS,Công ty Cổ phần Thép Thủ Đức - VNSTEEL
TDP,Công ty Cổ phần Thuận Đức
TDN,Công ty Cổ phần Than Đèo Nai - Vinacomin
TDM,Công ty Cổ phần Nước Thủ Dầu Một
TDI,Công ty Cổ phần Tập đoàn TDI 
TDH,Công ty Cổ phần Phát triển Nhà Thủ Đức
TDG,Công ty Cổ phần Đầu tư TDG Global
TDF,Công ty Cổ phần Trung Đô
TDC,Công ty Cổ phần Kinh doanh và Phát triển Bình Dương
TDB,Công ty Cổ phần Thủy điện Định Bình
TCW,Công ty Cổ phần Kho Vận Tân Cảng
TCT,Công ty Cổ phần Cáp treo Núi Bà Tây Ninh
TCR,Công ty Cổ phần Công nghiệp Gốm sứ TAICERA
TCO,Công ty Cổ phần TCO Holdings
TCM,Công ty Cổ phần Dệt may - Đầu tư - Thương mại Thành Công
TCL,Công ty Cổ phần Đại lý Giao nhận Vận tải Xếp dỡ Tân Cảng
TCK,Tổng Công ty Cơ khí Xây dựng - CTCP
TCJ,Công ty Cổ phần Tô Châu
TCI,Công ty Cổ phần Chứng khoán Thành Công
TCH,Công ty Cổ phần Đầu tư Dịch vụ Tài chính Hoàng Huy
TCD,Công ty cổ phần Tập đoàn Xây dựng Tracodi
TCB,Ngân hàng Thương mại Cổ phần Kỹ thương Việt Nam
TC6,Công ty Cổ phần Than Cọc Sáu - Vinacomin
TBX,Công ty Cổ phần Xi măng Thái Bình
TBW,Công ty cổ phần Nước sạch Thái Bình
TBT,Công ty Cổ phần Xây dựng Công trình Giao thông Bến Tre
TBR,Công ty Cổ phần Địa ốc Tân Bình
TBH,Công ty Cổ phần Tổng Bách Hóa
TBD,Tổng công ty Thiết bị điện Đông Anh - Công ty Cổ phần
TBC,Công ty Cổ phần Thủy điện Thác Bà
TB8,Công ty Cổ phần Sản xuất và Kinh doanh Vật tư Thiết bị - VVMI
TAW,Công ty Cổ phần Cấp nước Trung An
TAR,Công ty Cổ phần Nông nghiệp Công nghệ cao Trung An
TAP,Công ty Cổ phần Đô thị Tân An
TAN,Công ty Cổ phần Cà phê Thuận An
TAL,Công Ty Cổ Phần Đầu Tư Bất Động Sản Taseco
TAG,Công ty Cổ phần Thế giới số Trần Anh
TAC,Công ty Cổ phần Dầu Thực vật Tường An
TAB,Công ty Cổ phần Freco Việt Nam
TA9,Công ty Cổ phần Xây lắp Thành An 96
TA6,Công ty Cổ phần Đầu tư và Xây lắp Thành An 665
TA3,Công ty cổ phần Đầu tư và Xây lắp Thành An 386
T12,
SZL,Công ty Cổ phần Sonadezi Long Thành
SZG,Công ty Cổ phần Sonadezi Giang Điền
SZE,Công ty Cổ phần Môi trường Sonadezi
SZC,Công ty Cổ phần Sonadezi Châu Đức
SZB,Công ty Cổ phần Sonadezi Long Bình
SWC,Tổng Công ty Cổ phần Đường Sông Miền Nam
SVT,Công ty Cổ phần Công nghệ Sài Gòn Viễn Đông
SVN,Công ty Cổ phần Tập đoàn Vexilla Việt Nam
SVL,
SVI,Công ty Cổ phần Bao bì Biên Hòa
SVH,Công ty Cổ phần Thủy điện Sông Vàng
SVG,Công ty Cổ phần Hơi kỹ nghệ Que hàn
SVD,Công ty Cổ phần Đầu tư & Thương mại Vũ Đăng
SVC,Công ty Cổ phần Dịch vụ tổng hợp Sài Gòn
STW,Công ty Cổ phần Cấp nước Sóc Trăng
STT,Công ty Cổ phần Vận chuyển Sài Gòn Tourist
STS,Công ty Cổ phần Dịch vụ vận tải Sài Gòn
STP,Công ty Cổ phần Công nghiệp Thương mại Sông Đà
STL,Công ty Cổ phần Sông Đà - Thăng Long
STK,Công ty Cổ phần Sợi Thế Kỷ
STH,Công ty Cổ phần Phát hành sách Thái Nguyên
STG,Công ty Cổ phần Kho Vận Miền Nam
STC,Công ty Cổ phần Sách và Thiết bị trường học Thành phố Hồ Chí Minh
STB,Ngân hàng Thương mại Cổ phần Sài Gòn Thương Tín
ST8,Công ty Cổ phần Tập đoàn ST8
SSU,Công ty Cổ phần Môi trường Đô thị Sóc Sơn
SSN,Công ty Cổ phần Xuất nhập khẩu Thủy sản Sài Gòn
SSM,Công ty Cổ phần Chế tạo kết cấu thép VNECO.SSM
SSI,Công ty Cổ phần Chứng khoán SSI
SSH,Công ty Cổ phần Phát triển Sunshine Homes
SSG,Công ty Cổ phần Vận tải Biển Hải Âu
SSF,Công ty Cổ phần Giáo dục G Sài Gòn
SSC,Công ty Cổ phần Giống cây trồng Miền Nam
SSB,Ngân hàng Thương mại Cổ phần Đông Nam Á
SRT,Công ty Cổ phần Vận tải Đường sắt Sài Gòn
SRF,Công ty Cổ phần Searefico
SRC,Công ty Cổ phần Cao su Sao Vàng
SRB,Công ty Cổ phần Tập đoàn Sara
SRA,Công ty Cổ phần SARA Việt Nam
SQC,Công ty Cổ phần Khoáng sản Sài Gòn - Quy Nhơn
SPV,Công ty Cổ phần Thủy Đặc Sản
SPP,Công ty Cổ phần Bao bì Nhựa Sài Gòn
SPM,Công ty Cổ phần S.P.M
SPI,Công ty Cổ phần Spiral Galaxy
SPH,Công ty Cổ phần Xuất Nhập khẩu Thủy sản Hà Nội
SPD,Công ty Cổ phần Xuất nhập khẩu Thủy sản Miền Trung
SPC,Công ty Cổ phần Bảo vệ Thực vật Sài Gòn
SPB,Công ty Cổ phần Sợi Phú Bài
SPA,Công ty Cổ phần Bao bì Sài Gòn
SP2,Công ty Cổ phần Thủy điện Sử Pán 2
SON,
SNZ,Tổng Công ty Cổ phần Phát triển Khu Công nghiệp
SNC,Công ty Cổ phần Xuất nhập khẩu Thủy sản Năm Căn
SMT,Công ty Cổ phần SAMETEL
SMN,Công ty Cổ phần Sách và thiết bị giáo dục Miền Nam
SMC,Công ty Cổ phần Đầu tư Thương mại SMC
SMB,Công ty Cổ phần Bia Sài Gòn - Miền Trung
SMA,Công ty Cổ phần Thiết bị Phụ tùng Sài Gòn
SLS,Công ty Cổ phần Mía đường Sơn La
SKV,Công ty Cổ phần Nước Giải khát Yến sào Khánh Hòa
SKN,Công ty Cổ phần Nước giải khát Sanna Khánh Hòa
SKH,Công ty Cổ phần Nước giải khát Sanest Khánh Hòa
SKG,Công ty Cổ phần Tàu Cao tốc Superdong - Kiên Giang
SJS,Công ty Cổ phần SJ Group
SJM,Công ty Cổ phần Sông Đà 19
SJG,Tổng Công ty Sông Đà
SJF,Công ty Cổ phần Đầu tư Sao Thái Dương
SJE,Công ty Cổ phần Sông Đà 11
SJD,Công ty Cổ phần Thủy điện Cần Đơn
SJC,Công ty Cổ phần Sông Đà 1.01
SJ1,Công ty Cổ phần Nông nghiệp Hùng Hậu
SIV,Công ty Cổ phần SIVICO
SIP,Công ty Cổ phần Đầu tư Sài Gòn VRG
SII,Công ty Cổ phần Hạ tầng Nước Sài Gòn
SIG,Công ty Cổ phần Đầu tư và Thương mại Sông Đà
SID,Công ty Cổ phần Đầu tư Phát triển Sài Gòn Co.op
SIC,Công ty Cổ phần ANI
SHX,Công ty Cổ phần Sài Gòn Hỏa xa
SHS,Công ty Cổ phần Chứng khoán Sài Gòn - Hà Nội
SHP,Công ty Cổ phần Thủy điện Miền Nam
SHN,Công ty Cổ phần Đầu tư Tổng hợp Hà Nội
SHI,Công ty Cổ phần Quốc tế Sơn Hà
SHG,Tổng Công ty Cổ phần Sông Hồng
SHE,Công ty Cổ phần Phát triển Năng Lượng Sơn Hà
SHC,Công ty Cổ phần Hàng hải Sài Gòn
SHB,Ngân hàng Thương mại Cổ phần Sài Gòn – Hà Nội
SHA,Công ty Cổ phần Sơn Hà Sài Gòn
SGT,Công ty Cổ phần Công nghệ Viễn thông Sài Gòn
SGS,Công ty Cổ phần Vận tải biển Sài Gòn
SGR,Công ty Cổ phần Tổng Công ty Cổ phần Địa ốc Sài Gòn
SGP,Công ty Cổ phần Cảng Sài Gòn
SGO,Công ty Cổ phần Dầu thực vật Sài Gòn
SGN,Công ty Cổ phần Phục vụ mặt đất Sài Gòn
SGI,Công ty Cổ phần Đầu tư phát triển Sài Gòn 3 Group
SGH,Công ty Cổ phần Khách sạn Sài Gòn
SGD,Công ty Cổ phần Sách Giáo dục tại Thành phố Hồ Chí Minh
SGC,Công ty Cổ phần Xuất nhập khẩu Sa Giang
SGB,Ngân hàng Thương mại Cổ phần Sài Gòn Công thương
SFN,Công ty Cổ phần Dệt lưới Sài Gòn
SFI,Công ty Cổ phần Đại lý Vận tải SAFI
SFG,Công ty Cổ phần Phân bón Miền Nam
SFC,Công ty Cổ phần Nhiên liệu Sài Gòn
SEP,Công ty Cổ phần Tổng Công ty Thương mại Quảng Trị
SED,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Phương Nam
SEB,Công ty Cổ phần Đầu tư và Phát triển Điện Miền Trung
SEA,Tổng Công ty Thủy sản Việt Nam - Công ty Cổ phần
SDY,Công ty Cổ phần Xi măng Sông Đà Yaly
SDX,Công ty Cổ phần Phòng cháy chữa cháy và Đầu tư Xây dựng Sông Đà
SDV,Công ty Cổ phần Dịch vụ Sonadezi
SDU,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Đô thị Sông Đà
SDT,Công ty Cổ phần Sông Đà 10
SDP,Công ty Cổ phần SDP
SDN,Công ty Cổ phần Sơn Đồng Nai
SDK,Công ty Cổ phần Cơ khí Luyện Kim
SDJ,Công ty Cổ phần Sông Đà 25
SDH,Công ty Cổ phần Xây dựng hạ tầng Sông Đà
SDG,Công ty Cổ phần Sadico Cần Thơ
SDD,Công ty Cổ phần Đầu tư và Xây lắp Sông Đà
SDC,Công ty Cổ phần Tư vấn Sông Đà
SDB,Công ty Cổ phần Sông Đà 207
SDA,Công ty Cổ phần SIMCO Sông Đà
SD9,Công ty Cổ phần Sông Đà 9
SD8,Công ty Cổ phần Sông Đà 8
SD7,Công ty Cổ phần Sông Đà 7
SD6,Công ty Cổ phần Sông Đà 6
SD5,Công ty Cổ phần Sông Đà 5
SD4,Công ty Cổ phần Sông Đà 4
SD3,Công ty Cổ phần Sông Đà 3
SD2,Công ty Cổ phần Sông Đà 2
SD1,Công ty Cổ phần Sông Đà 1
SCY,Công ty Cổ phần Đóng tàu Sông Cấm
SCV,Công ty Cổ phần Muối Việt Nam
SCS,Công ty Cổ phần Dịch vụ Hàng hóa Sài Gòn
SCR,Công ty Cổ phần Địa Ốc Sài Gòn Thương Tín
SCO,Công ty Cổ phần Công nghiệp Thủy sản
SCL,Công ty Cổ phần Sông Đà Cao Cường
SCJ,Công ty Cổ phần Xi măng Sài Sơn
SCI,Công ty Cổ phần SCI E&C
SCG,Công ty Cổ phần Tập đoàn Xây dựng SCG
SCD,Công ty Cổ phần Nước giải khát Chương Dương
SCC,Công ty Cổ phần Thương mại Đầu tư SHB
SCA,Công ty Cổ phần Nông nghiệp Sông Con
SC5,Công ty Cổ phần Xây dựng số 5
SBV,Công ty Cổ phần Siam Brothers Việt Nam
SBT,Công ty Cổ phần Thành Thành Công - Biên Hòa
SBS,Công ty Cổ phần Chứng khoán SBS
SBR,Công ty Cổ phần Cao su Sông Bé
SBM,Công ty Cổ phần Đầu tư phát triển Bắc Minh
SBL,Công ty Cổ phần Bia Sài Gòn - Bạc Liêu
SBH,Công ty Cổ phần Thủy điện Sông Ba Hạ
SBG,Công ty Cổ Phần Tập Đoàn Cơ Khí Công Nghệ Cao Siba
SBD,Công ty Cổ phần Công nghệ Sao Bắc Đẩu
SBB,Công ty cổ phần Tập đoàn Bia Sài Gòn Bình Tây
SBA,Công ty Cổ phần Sông Ba
SB1,Công ty Cổ phần Bia Sài Gòn - Nghệ Tĩnh
SAV,Công ty Cổ phần Hợp tác Kinh tế và Xuất nhập khẩu Savimex
SAS,Công ty Cổ phần Dịch vụ Hàng không Sân bay Tân Sơn Nhất
SAP,Công ty Cổ phần In Sách Giáo khoa TP.Hồ Chí Minh
SAM,Công ty Cổ phần SAM Holdings
SAL,Công ty Cổ phần Trục vớt Cứu hộ Việt Nam
SAF,Công ty Cổ phần Lương thực Thực phẩm SAFOCO
SAC,Công ty Cổ phần Xếp dỡ và Dịch vụ cảng Sài Gòn
SAB,Tổng Công ty Cổ phần Bia - Rượu - Nước Giải khát Sài Gòn
S99,Công ty Cổ phần SCI
S96,Công ty Cổ phần Sông Đà 9.06
S74,Công ty Cổ phần Sông Đà 7.04
S72,Công ty Cổ phần Sông Đà 7.02
S55,Công ty Cổ phần Sông Đà 505
S4A,Công ty Cổ phần Thủy điện Sê San 4A
S27,Công ty Cổ phần Sông Đà 27
S12,Công ty Cổ phần Sông Đà 12
RYG,Công ty Cổ phần Sản xuất và Đầu tư Hoàng Gia
RTB,Công ty Cổ phần Cao su Tân Biên
ROS,Công ty Cổ phần Xây dựng FLC FAROS
RIC,Công ty Cổ phần Quốc Tế Hoàng Gia
RGC,Công ty Cổ phần Đầu tư PV-Inconess
REE,Công ty Cổ phần Cơ điện Lạnh
RDP,Công ty Cổ phần Rạng Đông Holding
RCL,Công ty Cổ phần Địa ốc Chợ Lớn
RCD,Công ty Cổ phần Xây dựng - Địa ốc Cao su
RCC,Công ty Cổ phần Tổng Công ty Công trình Đường sắt
RBC,Công ty Cổ phần Công Nghiệp và Xuất nhập khẩu Cao Su
RAT,Công ty Cổ phần Vận tải và Thương mại Đường sắt
RAL,Công ty Cổ phần Bóng đèn Phích nước Rạng Đông
QTP,Công ty Cổ phần Nhiệt điện Quảng Ninh
QTC,Công ty Cổ phần Công trình Giao thông Vận tải Quảng Nam
QST,Công ty Cổ phần Sách và Thiết bị trường học Quảng Ninh
QSP,Công ty Cổ phần Tân cảng Quy Nhơn
QPH,Công ty Cổ phần Thủy điện Quế Phong
QNW,Công ty Cổ phần Cấp thoát nước và xây dựng Quảng Ngãi
QNU,Công ty Cổ phần Môi trường Đô thị Quảng Nam
QNT,Công ty Cổ phần Tư vấn và Đầu tư Phát triển Quảng Nam
QNS,Công ty Cổ phần Đường Quảng Ngãi
QNP,Công ty Cổ phần Cảng Quy Nhơn
QNC,Công ty Cổ phần Xi măng và Xây dựng Quảng Ninh
QLT,Công ty Cổ phần Quản lý Bảo trì Đường thủy Nội địa số 10
QLD,Công ty Cổ phần Quản lý và Xây dựng Giao thông Lạng Sơn
QHW,Công ty Cổ phần Nước khoáng Quảng Ninh
QHD,Công ty Cổ phần Que hàn điện Việt Đức
QCG,Công ty Cổ phần Quốc Cường Gia Lai
QCC,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Hạ tầng Viễn Thông
QBS,Công ty Cổ phần Xuất nhập khẩu Quảng Bình
PYU,Công ty Cổ phần Môi trường và Công trình đô thị Phúc Yên
PXT,Công ty Cổ phần Xây lắp Đường ống Bể chứa Dầu khí
PXS,Công ty Cổ phần Kết cấu Kim loại và Lắp máy Dầu khí
PXM,Công ty Cổ phần Xây lắp Dầu khí Miền Trung
PXL,Công ty Cổ phần Đầu tư Khu Công Nghiệp Dầu khí Long Sơn
PXI,Công ty Cổ phần Xây dựng Công nghiệp và Dân dụng Dầu khí
PXC,Công ty Cổ phần Phát triển Đô thị Dầu khí
PXA,Công ty Cổ phần Đầu tư và Thương mại Dầu khí Nghệ An
PX1,Công ty Cổ phần Xi măng Sông Lam 2
PWS,Công ty Cổ phần Cấp thoát nước Phú Yên
PWA,Công ty Cổ phần Bất động sản dầu khí
PVY,Công ty Cổ phần Chế tạo Giàn khoan Dầu khí
PVX,Tổng Công ty Cổ phần Xây lắp Dầu khí Việt Nam
PVV,Công ty Cổ phần Vinaconex 39
PVT,Tổng Công ty Cổ phần Vận tải Dầu khí
PVS,Tổng Công ty Cổ phần Dịch vụ Kỹ thuật Dầu khí Việt Nam
PVR,Công ty Cổ phần Đầu tư PVR Hà Nội
PVP,Công ty Cổ phần Vận tải Dầu khí Thái Bình Dương
PVO,Công ty Cổ phần Dầu nhờn PV Oil
PVM,Công ty Cổ phần Máy - Thiết bị Dầu khí
PVL,Công ty Cổ phần Đầu tư Nhà Đất Việt
PVI,Công ty Cổ phần PVI
PVH,Công ty Cổ phần Xây lắp Dầu khí Thanh Hóa
PVG,Công ty Cổ phần Kinh doanh LPG Việt Nam
PVE,Tổng Công ty Tư vấn Thiết kế Dầu khí - Công ty Cổ phần
PVD,Tổng Công ty Cổ phần Khoan và Dịch vụ khoan Dầu khí
PVC,Tổng Công ty Hóa chất và Dịch vụ Dầu khí - Công ty Cổ phần
PVB,Công ty Cổ phần Bọc ống Dầu khí Việt Nam
PVA,Công ty Cổ phần Tổng Công ty Xây lắp Dầu khí Nghệ An
PV2,Công ty Cổ phần Đầu tư PV2
PTX,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Nghệ Tĩnh
PTV,Công ty Cổ phần Thương mại Dầu khí
PTT,Công ty Cổ phần Vận tải Dầu khí Đông Dương
PTS,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Hải Phòng
PTP,Công ty Cổ phần PTP
PTO,Công ty Cổ phần Dịch vụ - Xây dựng Công trình Bưu điện
PTN,Công ty Cổ phần Phát triển Nhà Khánh Hòa
PTL,Công ty Cổ phần Victory Group
PTI,Tổng Công ty Cổ phần Bảo hiểm Bưu điện
PTH,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Hà Tây
PTG,Công ty Cổ phần May Xuất Khẩu Phan Thiết
PTE,Công ty Cổ phần Xi măng Phú Thọ
PTD,Công ty Cổ phần Thiết kế - Xây dựng - Thương mại Phúc Thịnh
PTC,Công ty Cổ phần Đầu tư ICAPITAL
PTB,Công ty Cổ phần Phú Tài
PSW,Công ty Cổ phần Phân bón và hóa chất dầu khí Tây Nam Bộ
PSP,Công ty Cổ phần Cảng Dịch vụ Dầu khí Đình Vũ
PSN,Công ty Cổ phần Dịch vụ Kỹ thuật PTSC Thanh Hóa
PSL,Công ty Cổ phần Chăn nuôi Phú Sơn
PSI,Công ty Cổ phần Chứng khoán Dầu khí
PSH,Công ty Cổ phần Thương mại Đầu tư Dầu khí Nam Sông Hậu
PSG,Công ty Cổ phần Đầu tư và Xây lắp Dầu khí Sài Gòn
PSE,Công ty Cổ phần Phân bón và hóa chất dầu khí Đông Nam Bộ
PSD,Công ty Cổ phần Dịch vụ Phân phối Tổng hợp Dầu khí
PSC,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Sài Gòn
PSB,Công ty Cổ phần Đầu tư Dầu khí Sao Mai Bến Đình
PRT,Tổng Công ty Sản xuất - Xuất nhập khẩu Bình Dương - Công ty cổ phần
PRO,Công ty Cổ phần Procimex Việt Nam
PRE,Tổng Công ty Cổ phần Tái bảo hiểm Hà Nội
PRC,Công ty Cổ phần Logistics Portserco
PQN,Công ty Cổ phần Dịch vụ Dầu khí Quảng Ngãi PTSC
PPY,Công ty Cổ phần Xăng dầu dầu khí Phú Yên
PPT,Công ty cổ phần Petro Times
PPS,Công ty Cổ phần Dịch vụ Kỹ thuật Điện lực Dầu khí Việt Nam
PPP,Công ty Cổ phần Dược phẩm Phong Phú
PPI,Công ty Cổ phần Đầu tư và Phát triển dự án hạ tầng Thái Bình Dương
PPH,Tổng Công ty Cổ phần Phong Phú
PPE,Công ty Cổ phần Tư vấn Đầu tư PP Enterprise
PPC,Công ty Cổ phần Nhiệt điện Phả Lại
POW,Tổng Công ty Điện lực Dầu khí Việt Nam - CTCP
POV,Công ty Cổ phần Xăng dầu Dầu khí Vũng Áng
POT,Công ty Cổ phần Thiết bị Bưu điện
POS,"Công ty Cổ phần Dịch vụ lắp đặt, vận hành và bảo dưỡng công trình dầu khí biển PTSC"
POM,Công ty Cổ phần Thép Pomina
POB,Công ty Cổ phần Xăng dầu Dầu khí Thái Bình
PNT,Công ty Cổ phần Kỹ thuật Xây dựng Phú Nhuận
PNP,Công ty Cổ phần Tân Cảng – Phú Hữu
PNJ,Công ty Cổ phần Vàng bạc Đá quý Phú Nhuận
PNG,Công ty Cổ phần Thương Mại Phú Nhuận
PND,Công ty Cổ phần Xăng dầu Dầu khí Nam Định
PNC,Công ty Cổ phần Văn hóa Phương Nam
PMW,Công ty Cổ phần Cấp Nước Phú Mỹ
PMT,Công ty Cổ phần Viễn thông Telvina Việt Nam
PMS,Công ty Cổ phần Cơ khí Xăng dầu
PMP,Công ty Cổ phần Bao bì Đạm Phú Mỹ
PMJ,Công ty Cổ phần Vật tư Bưu điện
PMG,Công ty Cổ phần Đầu tư và Sản xuất Petro Miền Trung
PMC,Công ty Cổ phần Dược phẩm Dược liệu Pharmedic
PMB,Công ty Cổ phần Phân bón và Hóa chất Dầu khí Miền Bắc
PLX,Tập đoàn Xăng dầu Việt Nam
PLP,Công ty Cổ phần Sản xuất và Công nghệ Nhựa Pha Lê
PLO,Công ty Cổ phần Kho vận Petec
PLE,Công ty Cổ phần Tư vấn Xây dựng Petrolimex
PLC,Tổng Công ty Hóa dầu Petrolimex - Công ty Cổ phần
PLA,Công ty Cổ phần Đầu tư và Dịch vụ hạ tầng Xăng dầu
PJT,Công ty Cổ phần Vận tải Xăng dầu đường thủy Petrolimex
PJS,Công ty Cổ phần Cấp nước Phú Hòa Tân
PJC,Công ty Cổ phần Thương mại và Vận tải Petrolimex Hà Nội
PIV,Công ty Cổ phần PIV
PIT,Công ty Cổ phần Xuất nhập khẩu Petrolimex
PIS,Tổng Công ty Pisico Bình Định - Công ty Cổ phần
PID,Công ty Cổ phần Trang trí nội thất Dầu khí
PIC,Công ty Cổ phần Đầu tư Điện lực 3
PIA,Công ty Cổ phần Tin học Viễn thông Petrolimex
PHS,Công ty Cổ phần Chứng khoán Phú Hưng
PHR,Công ty Cổ phần Cao su Phước Hòa
PHP,Công ty Cổ phần Cảng Hải Phòng
PHN,Công ty Cổ phần Pin Hà Nội
PHH,Công ty Cổ phần Hồng Hà Việt Nam
PHC,Công ty Cổ phần Xây dựng Phục Hưng Holdings
PGV,Tổng Công ty Phát điện 3 - Công ty Cổ phần
PGT,Công ty Cổ phần PGT Holdings
PGS,Công ty Cổ phần Kinh doanh Khí Miền Nam
PGN,Công ty Cổ phần Phụ Gia Nhựa
PGI,Tổng Công ty Cổ phần Bảo hiểm Petrolimex
PGD,Công ty Cổ phần Phân phối khí thấp áp dầu khí Việt Nam
PGC,Tổng Công ty Gas Petrolimex - Công ty Cổ phần
PGB,Ngân hàng Thương mại Cổ phần Thịnh vượng và Phát triển
PFL,Công ty Cổ phần Dầu khí Đông Đô
PET,Tổng Công ty Cổ phần Dịch vụ Tổng hợp Dầu khí
PEQ,Công ty Cổ phần Thiết bị xăng dầu Petrolimex
PEN,Công ty Cổ phần Xây lắp III Petrolimex
PEG,Tổng Công ty Thương mại Kỹ thuật và Đầu tư - Công ty Cổ phần
PEC,Công ty Cổ phần Cơ khí Điện lực
PDV,Công ty Cổ phần Vận tải và Tiếp vận Phương Đông Việt
PDT,
PDR,Công ty Cổ phần Phát triển Bất động sản Phát Đạt
PDN,Công ty Cổ phần Cảng Đồng Nai
PDC,Công ty Cổ phần Du lịch Dầu khí Phương Đông
PDB,Công ty Cổ phần Tập đoàn Đầu tư DIN Capital
PCT,Công ty Cổ phần Vận tải Biển Global Pacific
PCN,Công ty Cổ phần Hóa phẩm dầu khí DMC - Miền Bắc
PCM,Công ty Cổ phần Vật liệu Xây dựng Bưu điện
PCH,Công ty Cổ phần Nhựa Picomat
PCG,Công ty Cổ phần Đầu tư Phát triển Gas Đô thị
PCF,Công ty Cổ phần Cà phê PETEC
PCE,Công ty Cổ phần Phân bón và hóa chất dầu khí Miền Trung
PCC,Công ty Cổ phần Tập đoàn Xây lắp 1 - Petrolimex
PC1,Công ty Cổ phần Tập đoàn PC1
PBT,Công ty Cổ Phần Bao bì và Thương mại Dầu khí Bình Sơn
PBP,Công ty Cổ phần Bao bì Dầu khí Việt Nam
PBC,Công ty Cổ phần Dược Phẩm Trung ương 1 - Pharbaco
PAT,Công ty Cổ phần Phốt pho Apatit Việt Nam
PAS,Công ty Cổ phần Quốc tế Phương Anh
PAP,Công ty Cổ phần Dầu khí đầu tư khai thác Cảng Phước An
PAN,Công ty Cổ phần Tập đoàn PAN
PAI,"Công ty Cổ phần Công nghê thông tin, Viễn thông và Tự động hóa Dầu khí"
PAC,Công ty Cổ phần Pin Ắc quy Miền Nam
ORS,Công ty Cổ phần Chứng khoán Tiên Phong
OPC,Công ty Cổ phần Dược Phẩm OPC
ONW,Công ty Cổ phần Dịch vụ Một Thế giới
ONE,Công ty Cổ phần Công nghệ ONE
OIL,Tổng Công ty Dầu Việt Nam - Công ty Cổ phần
OGC,Công ty Cổ phần Tập đoàn Đại Dương
ODE,Công ty cổ phần Tập đoàn Truyền thông và Giải trí ODE
OCH,Công ty Cổ phần One Capital Hospitality
OCB,Ngân hàng Thương mại Cổ phần Phương Đông
NXT,Công ty Cổ phần Sản xuất và Cung ứng vật liệu xây dựng Kon Tum
NWT,Công ty Cổ phần Vận tải Newway
NVT,Công ty Cổ phần Bất động sản Du lịch Ninh Vân Bay
NVP,Công ty Cổ phần Nước sạch Vĩnh Phúc
NVL,Công ty Cổ phần Tập đoàn Đầu tư Địa ốc No Va
NVB,Ngân hàng Thương mại Cổ phần Quốc Dân
NUE,Công ty Cổ phần Môi trường Đô thị Nha Trang
NTW,Công ty Cổ phần Cấp nước Nhơn Trạch
NTT,Công ty Cổ phần Dệt - May Nha Trang
NTP,Công ty Cổ phần Nhựa Thiếu niên Tiền Phong
NTL,Công ty Cổ phần Phát triển Đô thị Từ Liêm
NTH,Công ty Cổ phần Thủy điện Nước Trong
NTF,Công ty Cổ phần Dược - Vật tư y tế Nghệ An
NTC,Công ty Cổ phần Khu Công nghiệp Nam Tân Uyên
NTB,Công ty Cổ phần Đầu tư Xây dựng và Khai thác Công trình giao thông 584
NT2,Công ty Cổ phần Điện lực Dầu khí Nhơn Trạch 2
NST,Công ty Cổ phần Ngân Sơn
NSS,Công ty Cổ phần Nông súc sản Đồng Nai
NSL,Công ty Cổ phần Cấp nước Sơn La
NSH,Công ty Cổ phần Tập đoàn Nhôm Sông Hồng Shalumi
NSG,Công ty Cổ phần Nhựa Sài Gòn
NSC,Công ty Cổ phần Tập đoàn Giống cây trồng Việt Nam
NS3,Công ty Cổ phần Sản xuất Kinh doanh Nước sạch số 3 Hà Nội
NS2,Công ty Cổ phần Nước sạch số 2 Hà Nội
NRC,Công ty Cổ phần Tập đoàn Danh Khôi
NQT,Công ty Cổ phần Nước sạch Quảng Trị
NQN,Công ty Cổ phần Nước sạch Quảng Ninh
NQB,Công ty Cổ phần Cấp nước Quảng Bình
NOS,Công ty Cổ phần Vận tải Biển và Thương mại Phương Đông
NO1,Công ty Cổ phần Tâp đoàn 911
NNT,Công ty Cổ phần Cấp nước Ninh Thuận
NNQ,
NNG,Công ty Cổ phần Công nghiệp - Dịch vụ - Thương mại Ngọc Nghĩa
NNC,Công ty Cổ phần Đá Núi Nhỏ
NLS,Công ty Cổ phần Cấp thoát nước Lạng Sơn
NLG,Công ty Cổ phần Đầu tư Nam Long
NKG,Công ty Cổ phần Thép Nam Kim
NJC,Công ty Cổ phần May Nam Định
NHV,Công ty Cổ phần Sức khỏe Hồi sinh Việt Nam
NHT,Công ty Cổ phần Sản xuất và Thương mại Nam Hoa
NHP,Công ty Cổ phần Sản xuất Xuất nhập khẩu NHP
NHH,Công ty Cổ phần Nhựa Hà Nội
NHC,Công ty Cổ phần Gạch ngói Nhị Hiệp
NHA,Tổng Công ty Đầu tư Phát triển Nhà và Đô thị Nam Hà Nội
NGC,Công ty Cổ phần Chế biến Thủy sản Xuất khẩu Ngô Quyền
NFC,Công ty Cổ phần Phân lân Ninh Bình
NET,Công ty Cổ phần Bột giặt Net
NEM,Công ty Cổ phần Thiết bị Điện Miền Bắc
NED,Công ty Cổ phần Đầu tư và Phát triển Điện Tây Bắc
NDX,Công ty Cổ phần Xây lắp Phát triển Nhà Đà Nẵng
NDW,Công ty Cổ phần Cấp nước Nam Định
NDT,Tổng Công ty Cổ phần Dệt may Nam Định
NDP,Công ty Cổ phần Dược phẩm 2/9
NDN,Công ty Cổ phần Đầu tư Phát triển Nhà Đà Nẵng
NDF,Công ty Cổ phần Chế biến thực phẩm nông sản xuất khẩu Nam Định
NDC,Công ty Cổ phần Nam Dược
ND2,Công ty Cổ phần Đầu tư và Phát triển điện Miền Bắc 2
NCT,Công ty Cổ phần Dịch vụ Hàng hóa Nội Bài
NCS,Công ty Cổ phần Suất ăn Hàng không Nội Bài
NCG,Công ty Cổ phần Tập đoàn Nova Consumer
NBW,Công ty Cổ phần Cấp nước Nhà Bè
NBT,Công ty Cổ phần Cấp thoát nước Bến Tre
NBP,Công ty Cổ phần Nhiệt Điện Ninh Bình
NBE,Công ty Cổ phần Sách và Thiết bị Giáo dục Miền Bắc
NBC,Công ty Cổ phần Than Núi Béo - Vinacomin
NBB,Công ty Cổ phần Đầu tư Năm Bảy Bảy
NAW,Công ty Cổ phần Cấp nước Nghệ An
NAV,Công ty Cổ phần Nam Việt
NAU,Công ty Cổ phần Môi trường và Công trình Đô thị Nghệ An
NAS,Công ty Cổ phần Dịch vụ Hàng không Sân bay Nội Bài
NAP,Công ty Cổ phần Cảng Nghệ Tĩnh
NAG,Công ty Cổ phần Tập đoàn Nagakawa
NAF,Công ty Cổ phần Nafoods Group
NAC,Công ty Cổ phần Tư vấn Xây dựng Tổng hợp
NAB,Ngân hàng Thương mại Cổ phần Nam Á
MZG,Công ty Cổ Phần Miza
MXC,
MWG,Công ty Cổ phần Đầu tư Thế Giới Di Động
MVN,Tổng Công ty Hàng hải Việt Nam - CTCP
MVC,Công ty Cổ phần Vật liệu và Xây dựng Bình Dương
MVB,Tổng Công ty Công nghiệp mỏ Việt Bắc TKV - Công ty Cổ phần
MTX,Công ty Cổ phần Công trình Đô thị Gò Công
MTV,Công ty Cổ phần Dịch vụ Môi trường và Công trình Đô thị Vũng Tàu
MTS,Công ty Cổ phần Vật tư - TKV
MTP,Công ty Cổ phần Dược Medipharco
MTL,Công ty Cổ phần Dịch vụ Môi trường Đô thị Từ Liêm
MTH,Công ty Cổ phần Môi trường Đô thị Hà Đông
MTG,Công ty Cổ phần MT Gas
MTC,Công ty Cổ phần Dịch vụ Du lịch Mỹ Trà
MTB,Công ty Cổ phần Môi trường và Công trình đô thị tỉnh Thái Bình
MTA,Tổng Công ty Khoáng sản và Thương mại Hà Tĩnh - Công ty Cổ phần
MST,Công ty Cổ phần Đầu tư MST
MSR,Công ty Cổ phần Masan High-Tech Materials
MSN,Công ty Cổ phần Tập đoàn Masan
MSH,Công ty Cổ phần May Sông Hồng
MSB,Ngân hàng Thương mại Cổ phần Hàng Hải Việt Nam
MRF,Công ty Cổ phần MERUFA
MQN,Công ty Cổ phần Môi trường đô thị Quảng Ngãi
MQB,Công ty Cổ phần Môi trường và Phát triển đô thị Quảng Bình
MPY,Công ty Cổ phần Môi trường đô thị Phú Yên
MPT,Công ty Cổ phần Tập đoàn MPT
MPC,Công ty Cổ phần Tập đoàn Thủy sản Minh Phú
MND,Công ty Cổ phần Môi trường Nam Định
MNB,Tổng Công ty May Nhà Bè - Công ty Cổ phần
MML,Công ty Cổ phần Masan MEATLife
MLS,Công ty Cổ phần Chăn nuôi - Mitraco
MLC,Công ty Cổ phần Môi trường Đô thị Tỉnh Lào Cai
MKV,Công ty Cổ phần Dược Thú Y Cai Lậy
MKP,Công ty Cổ phần Hóa - Dược phẩm Mekophar
MIM,Công ty Cổ phần Khoáng sản và Cơ khí
MIG,Tổng Công ty Cổ phần Bảo hiểm Quân đội
MIE,Tổng Công ty Máy và Thiết bị Công nghiệp - CTCP
MIC,Công ty Cổ phần Kỹ nghệ Khoáng sản Quảng Nam
MHL,Công ty Cổ phần Minh Hữu Liên
MHC,Công ty Cổ phần MHC
MH3,Công ty Cổ phần Khu công nghiệp Cao su Bình Long
MGR,Công ty cổ phần Tập đoàn MGROUP
MGG,Tổng Công ty Đức Giang - Công ty Cổ phần
MGC,Công ty Cổ phần Địa chất mỏ - TKV
MFS,Công ty Cổ phần Dịch vụ kỹ thuật Mobifone
MES,Công ty Cổ phần Cơ điện Công trình
MEL,Công ty Cổ phần Thép Mê Lin
MEG,Công ty Cổ phần Megram
MEF,Công ty Cổ phần MEINFA
MED,Công ty Cổ phần Dược Trung ương Mediplantex
MEC,Công ty Cổ phần Cơ khí - Lắp máy Sông Đà
MDG,Công ty Cổ phần Miền Đông
MDF,Công ty Cổ phần Gỗ MDF VRG - Quảng Trị
MDC,Công ty Cổ phần Than Mông Dương - Vinacomin
MDA,Công ty Cổ phần Môi trường Đô thị Đông Anh
MCP,Công ty Cổ phần In và Bao bì Mỹ Châu
MCO,Công ty Cổ phần Đầu tư và Xây dựng BDC Việt Nam
MCM,Công ty Cổ phần Giống bò sữa Mộc Châu
MCI,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Vật liệu IDICO
MCH,Công ty Cổ phần Hàng Tiêu Dùng MaSan
MCG,Công ty Cổ phần Năng lượng và Bất động sản MCG
MCF,Công ty Cổ phần Xây lắp Cơ khí và Lương thực Thực phẩm
MCD,Công ty Cổ phần Môi trường và Công trình Đô thị Đông Hà
MCC,Công ty Cổ phần Gạch ngói cao cấp
MC3,Công ty Cổ phần Khoáng sản 3 - Vimico
MBT,Công ty Cổ phần Bất động sản cho thuê Minh Bảo Tín
MBS,Công ty Cổ phần Chứng khoán MB
MBN,Công ty Cổ phần Môi trường và Công trình đô thị Bắc Ninh
MBG,Công ty Cổ phần Tập đoàn MBG
MBB,Ngân hàng Thương mại Cổ phần Quân đội
MAS,Công ty cổ phần Dịch vụ Hàng Không Sân Bay Đà Nẵng
MAC,Công ty Cổ phần Cung ứng và Dịch vụ Kỹ thuật Hàng Hải
MA1,Công ty Cổ phần Thiết bị
M10,Tổng công ty May 10 - Công ty Cổ phần
LYF,Công ty Cổ phần Lương Thực Lương Yên
LWS,Công ty Cổ phần Cấp nước Tỉnh Lào Cai
LUT,Công ty Cổ phần Đầu tư Xây dựng Lương Tài
LTG,Công ty Cổ phần Tập đoàn Lộc Trời
LTC,Công ty Cổ phần Điện nhẹ Viễn Thông
LSS,Công ty Cổ phần Mía đường Lam Sơn
LSG,Công ty Cổ phần Bất động sản Sài Gòn Vi na
LQN,Công ty Cổ phần Licogi Quảng Ngãi
LPT,Công ty Cổ phần Thương mại và Sản xuất Lập Phương Thành
LPB,Ngân hàng Thương mại Cổ phần Lộc Phát Việt Nam
LO5,Công ty Cổ phần Lilama 5
LNC,Công ty Cổ phần Lệ Ninh
LMI,Công ty Cổ phần Đầu tư Xây dựng Lắp máy IDICO
LMH,Công ty Cổ phần Quốc Tế Holding
LMC,Công ty Cổ phần Long Beach LMC
LM8,Công ty Cổ phần Lilama 18
LM7,Công ty Cổ phần Lilama 7
LM3,Công ty Cổ phần Lilama 3
LLM,Tổng Công ty lắp máy Việt Nam - Công ty Cổ phần
LKW,Công ty Cổ phần Cấp nước Long Khánh
LIX,Công ty Cổ phần Bột Giặt LiX
LIG,Công ty Cổ phần Licogi 13
LIC,Tổng Công ty LICOGI - Công ty Cổ phần
LHG,Công ty Cổ phần Long Hậu
LHC,Công ty Cổ phần Đầu tư và Xây dựng Thủy lợi Lâm Đồng
LGM,Công ty Cổ phần Giày da và May mặc Xuất khẩu (Legamex)
LGL,Công ty Cổ phần Đầu tư và Phát triển Đô thị Long Giang
LGC,Công ty Cổ phần Đầu tư Cầu đường CII
LG9,Công ty Cổ phần Cơ giới và Xây lắp số 9
LEC,Công ty Cổ phần Bất động sản Điện lực Miền Trung
LDW,Công ty Cổ phần Cấp thoát nước Lâm Đồng
LDP,Công ty Cổ phần Dược Lâm Đồng - Ladophar
LDG,Công ty Cổ phần Đầu tư LDG
LCW,Công ty Cổ phần Nước sạch Lai Châu
LCS,Công ty Cổ phần Licogi 16.6
LCM,Công ty Cổ phần Khai thác và Chế biến Khoáng sản Lào Cai
LCG,Công ty Cổ phần Lizen
LCD,Công ty Cổ phần Lắp máy - Thí nghiệm cơ điện
LCC,Công ty Cổ phần Xi măng Hồng Phong
LBM,Công ty Cổ phần Khoáng sản và Vật liệu xây dựng Lâm Đồng
LBE,Công ty Cổ phần Thương mại và Dịch vụ LVA
LBC,Công ty Cổ phần Thương mại - Đầu tư Long Biên
LAW,Công ty Cổ phần Cấp thoát nước Long An
LAS,Công ty Cổ phần Supe Phốt phát và Hóa chất Lâm Thao
LAI,Công ty Cổ phần Đầu tư Xây dựng Long An IDICO
LAF,Công ty Cổ phần Chế biến Hàng Xuất khẩu Long An
L63,Công ty Cổ phần Lilama 69-3
L62,Công ty Cổ phần Lilama 69 - 2
L61,Công ty Cổ phần Lilama 69-1
L45,Công ty Cổ phần Lilama 45.1
L44,Công ty Cổ phần Lilama 45.4
L43,Công ty Cổ phần Lilama 45.3
L40,Công ty Cổ phần Đầu tư và Xây dựng 40
L35,Công ty Cổ phần Cơ khí Lắp máy Lilama
L18,Công ty Cổ phần Đầu tư và Xây dựng số 18
L14,Công ty Cổ phần Licogi 14
L12,Công ty Cổ phần Licogi 12
L10,Công ty Cổ phần Lilama 10
KWA,Công ty Cổ phần Cấp thoát nước và Môi trường Kiến Tường
KVC,Công ty Cổ phần Sản xuất Xuất nhập khẩu Inox Kim Vĩ
KTW,Công ty Cổ phần Cấp nước Kon Tum
KTT,Công ty Cổ phần Tập đoàn Đầu tư KTT
KTS,Công ty Cổ phần Đường Kon Tum
KTL,Công ty Cổ phần Kim khí Thăng Long
KTC,Công ty Cổ phần Thương mại Kiên Giang
KSV,Tổng Công ty Khoáng sản TKV - Công ty Cổ phần
KST,Công ty Cổ phần KASATI
KSQ,Công ty Cổ phần CNC Capital Việt Nam
KSH,Công ty Cổ phần Damac GLS
KSF,Công ty Cổ phần Tập đoàn Sunshine
KSD,Công ty Cổ phần Đầu tư DNA
KSB,Công ty Cổ phần Khoáng sản và Xây dựng Bình Dương
KPF,Công ty Cổ phần Đầu tư Tài sản KOJI
KOS,Công ty Cổ phần KOSY
KMT,Công ty Cổ phần Kim khí Miền Trung
KMR,Công ty Cổ phần Mirae
KLM,Công ty Cổ phần Kim loại màu Nghệ Tĩnh
KLF,Công ty Cổ phần Đầu tư Thương mại và Xuất nhập khẩu CFS
KLB,Ngân hàng Thương mại Cổ phần Kiên Long
KKC,Công ty Cổ phần Tập đoàn Thành Thái
KIP,Công ty Cổ phần K.I.P Việt Nam
KHW,Công ty Cổ phần Cấp thoát nước Khánh Hòa
KHS,Công ty Cổ phần Kiên Hùng
KHP,Công ty Cổ phần Điện lực Khánh Hòa
KHL,Công ty Cổ phần Khoáng sản và Vật liệu Xây dựng Hưng Long
KHG,Công ty Cổ phần Tập đoàn Khải Hoàn Land
KHD,"Công ty Cổ phần Khai thác, Chế biến Khoáng sản Hải Dương"
KHB,Công ty Cổ phần Khoáng sản Hòa Bình
KHA,Công ty Cổ phần Đầu tư và Dịch vụ Khánh Hội
KGM,Công ty Cổ phần Xuất nhập khẩu Kiên Giang
KDM,Công ty Cổ phần Tập đoàn GCL
KDH,Công ty Cổ phần Đầu tư và Kinh doanh nhà Khang Điền
KDC,Công ty Cổ phần Tập đoàn KIDO
KCE,Công ty Cổ phần Bê tông Ly tâm Điện lực Khánh Hòa
KCB,Công ty Cổ phần Khoáng Sản và Luyện Kim Cao Bằng
KBC,Tổng Công ty Phát triển Đô thị Kinh Bắc
KAC,Công ty Cổ phần Đầu tư Địa ốc Khang An
JVC,Công ty Cổ phần Đầu tư và Phát triển Y tế Việt Nhật
JOS,Công ty Cổ phần Chế biến Thủy sản Xuất khẩu Minh Hải
IVS,Công ty Cổ phần Chứng khoán Guotai Junan (Việt Nam)
ITS,"Công ty Cổ phần Đầu tư, Thương mại và Dịch vụ - Vinacomin"
ITQ,Công ty Cổ phần Tập đoàn Thiên Quang
ITD,Công ty Cổ phần Công nghệ Tiên Phong
ITC,Công ty Cổ phần Đầu tư - Kinh doanh nhà
ITA,Công ty Cổ phần Đầu tư và Công nghiệp Tân Tạo
IST,Công ty Cổ phần ICD Tân Cảng Sóng Thần
ISH,Công ty Cổ phần Thủy điện Srok Phu Miêng IDICO
ISG,Công ty Cổ phần Vận tải biển và Hợp tác lao động Quốc Tế
IRC,Công ty Cổ phần Cao su Công nghiệp
IPH,
IPA,Công ty Cổ phần Tập đoàn Đầu tư I.P.A
INN,Công ty Cổ phần Bao bì và In Nông nghiệp
ING,Công ty Cổ phần Đầu Tư Và Phát Triển Xây Dựng
INC,Công ty Cổ phần Tư vấn Đầu tư IDICO
IN4,Công ty Cổ phần In số 4
IMP,Công ty Cổ phần Dược phẩm IMEXPHARM
IME,Công ty Cổ phần Cơ khí và Xây lắp Công nghiệp
ILS,Công ty Cổ phần Đầu tư Thương mại và Dịch vụ Quốc tế
ILC,Công ty Cổ phần Hợp tác lao động với nước ngoài
ILB,Công ty Cổ phần ICD Tân Cảng - Long Bình
ILA,Công ty Cổ phần ILA
IJC,Công ty Cổ phần Phát triển Hạ tầng Kỹ thuật
IHK,Công ty Cổ phần In Hàng Không
IFS,Công ty Cổ phần Thực phẩm Quốc tế
IDV,Công ty Cổ phần Phát triển Hạ tầng Vĩnh Phúc
IDP,Công ty Cổ phần Sữa Quốc tế LOF
IDJ,Công ty Cổ phần Đầu tư IDJ Việt Nam
IDI,Công ty Cổ phần Đầu tư và Phát triển Đa Quốc Gia I.D.I
IDC,Tổng Công ty IDICO - CTCP
ICT,Công ty Cổ phần Viễn thông - Tin học Bưu điện
ICN,Công ty Cổ phần Đầu tư Xây dựng Dầu khí IDICO
ICI,Công ty Cổ phần Đầu tư và Xây dựng Công nghiệp
ICG,Công ty Cổ phần Xây dựng Sông Hồng
ICF,Công ty Cổ phần Đầu tư - Thương mại - Thuỷ sản
ICC,Công ty Cổ phần Xây dựng công nghiệp
IBN,Công ty Cổ phần In báo Nghệ An
IBD,Công ty Cổ phần In Tổng hợp Bình Dương
IBC,Công ty Cổ phần Đầu tư APAX Holdings
HWS,Công ty Cổ phần Cấp nước Huế
HVX,Công ty Cổ phần Xi măng Vicem Hải Vân
HVT,Công ty Cổ phần Hóa chất Việt Trì
HVN,Tổng Công ty Hàng không Việt Nam - CTCP
HVH,Công ty Cổ phần Đầu tư và Công nghệ HVC
HVG,Công ty Cổ phần Hùng Vương
HVA,Công ty Cổ phần Đầu tư HVA
HUX,
HUT,Công ty Cổ phần Tasco
HUG,Tổng công ty May Hưng Yên - Công ty Cổ phần
HUB,Công ty Cổ phần Xây lắp Thừa Thiên Huế
HU6,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị HUD6
HU4,Công ty Cổ phần Đầu tư và Xây dựng HUD4
HU3,Công ty Cổ phần Đầu tư và Xây dựng HUD3
HU1,Công ty Cổ phần Đầu tư và Xây dựng HUD1
HTW,Công ty Cổ phần Cấp nước Hà Tĩnh
HTV,Công ty Cổ phần Logistics Vicem
HTT,Công ty Cổ phần Thương mại Hà Tây
HTR,Công ty Cổ phần Đường sắt Hà Thái
HTP,Công ty Cổ phần In Sách Giáo Khoa Hòa Phát
HTN,Công ty Cổ phần Hưng Thịnh Incons
HTM,Tổng Công ty Thương mại Hà Nội – Công ty cổ phần
HTL,Công ty Cổ phần Kỹ thuật và Ô tô Trường Long
HTK,
HTI,Công ty Cổ phần Đầu tư Phát triển Hạ tầng IDICO
HTH,Công ty Cổ phần Hoa tiêu Hàng hải - TKV
HTG,Tổng Công ty Cổ phần Dệt may Hòa Thọ
HTE,Công ty Cổ phần Đầu tư Kinh doanh Điện lực Thành phố Hồ Chí Minh
HTC,Công ty Cổ phần Thương mại Hóc Môn
HT1,Công ty Cổ phần Xi măng VICEM Hà Tiên
HSV,Công ty Cổ phần Tập đoàn HSV Việt Nam
HSP,Công ty Cổ phần Sơn Tổng hợp Hà Nội
HSM,Tổng Công ty Cổ phần Dệt May Hà Nội
HSL,Công ty Cổ phần Đầu tư Phát triển Thực phẩm Hồng Hà
HSI,Công ty Cổ phần Vật tư Tổng hợp và Phân bón Hóa sinh
HSG,Công ty Cổ phần Tập đoàn Hoa Sen
HSA,Công ty Cổ phần HESTIA
HRT,Công ty Cổ phần Vận tải đường sắt Hà Nội
HRC,Công ty Cổ phần Cao su Hòa Bình
HRB,Công ty Cổ phần Harec Đầu tư và Thương Mại
HQC,Công ty Cổ phần Tư vấn - Thương mại - Dịch vụ Địa ốc Hoàng Quân
HPX,Công ty Cổ phần Đầu tư Hải Phát
HPW,Công ty Cổ phần Cấp nước Hải Phòng
HPT,Công ty Cổ phần Dịch vụ Công nghệ Tin học HPT
HPP,Công ty Cổ phần Sơn Hải Phòng
HPM,Công ty Cổ phần Xây dựng Thương mại và Khoáng sản Hoàng Phúc
HPI,Công ty Cổ phần Khu công nghiệp Hiệp Phước
HPH,Công ty Cổ phần Hóa Chất Hưng Phát Hà Bắc
HPG,Công ty Cổ phần Tập đoàn Hòa Phát
HPD,Công ty Cổ phần Thủy điện Đăk Đoa
HPB,Công ty Cổ phần Bao bì PP
HOT,Công ty Cổ phần Du lịch - Dịch vụ Hội An
HOM,Công ty Cổ phần Xi măng VICEM Hoàng Mai
HNT,Công ty Cổ phần Xe điện Hà Nội
HNR,Công ty Cổ phần Rượu và Nước Giải Khát Hà Nội
HNP,Công ty Cổ phần Hanel Xốp Nhựa
HNM,Công ty Cổ phần Sữa Hà Nội
HNI,Công ty Cổ phần May Hữu Nghị
HNG,Công ty Cổ phần Nông nghiệp Quốc tế Hoàng Anh Gia Lai
HNF,Công ty Cổ phần Thực phẩm Hữu Nghị
HNE,
HND,Công ty Cổ phần Nhiệt điện Hải Phòng
HNB,Công ty Cổ phần Bến xe Hà Nội
HNA,Công ty Cổ phần Thủy điện Hủa Na
HMS,Công ty Cổ phần Xây dựng Bảo tàng Hồ Chí Minh
HMR,Công ty cổ phần Đá Hoàng Mai
HMH,Công ty Cổ phần Hải Minh
HMG,Công ty Cổ phần Kim Khí Hà Nội - VNSTEEL
HMD,Công ty Cổ phần Hóa chất Minh Đức
HMC,Công ty Cổ phần Kim khí Thành phố Hồ Chí Minh - VNSTEEL
HLY,Công ty Cổ phần Gốm xây dựng Yên Hưng
HLT,Công ty Cổ phần Dệt may Hoàng Thị Loan
HLS,Công ty Cổ phần Sứ kỹ thuật Hoàng Liên Sơn
HLR,Công ty Cổ phần Đường sắt Hà Lạng
HLO,Công Ty Cổ Phần Công Nghệ Ha Lô
HLG,Công ty Cổ phần Tập đoàn Hoàng Long
HLE,Công ty Cổ phần Điện chiếu sáng Hải Phòng
HLD,Công ty Cổ phần Đầu tư và Phát triển Bất động sản HUDLAND
HLC,Công ty Cổ phần Than Hà Lầm - Vinacomin
HLB,Công ty Cổ phần Bia và Nước giải khát Hạ Long
HLA,Công ty Cổ phần Hữu Liên Á Châu
HKT,Công ty Cổ phần Đầu tư QP Xanh
HKP,Công ty Cổ phần Bao bì Hà Tiên
HKB,Công ty Cổ phần Nông nghiệp và Thực phẩm Hà Nội - Kinh Bắc
HJS,Công ty Cổ phần Thủy điện Nậm Mu
HJC,Công ty Cổ phần Hoà Việt
HIO,Công ty Cổ Phần Helio Energy
HII,Công ty Cổ phần An Tiến Industries
HIG,Công ty Cổ phần Tập đoàn HIPT
HID,Công ty Cổ phần Halcom Vietnam
HHV,Công ty Cổ phần Đầu tư Hạ tầng Giao thông Đèo Cả
HHS,Công ty Cổ phần Đầu tư Dịch vụ Hoàng Huy
HHR,Công ty Cổ phần Đường sắt Hà Hải
HHP,Công ty Cổ phần HHP Global
HHN,Công ty Cổ phần Vận tải và Dịch vụ Hàng hóa Hà Nội
HHG,Công ty Cổ phần Hoàng Hà
HHC,Công ty Cổ phần Bánh kẹo Hải Hà
HGW,Công ty Cổ phần Cấp thoát nước - Công trình Đô thị Hậu Giang
HGT,Công ty Cổ phần Du lịch Hương Giang
HGR,
HGM,Công ty Cổ phần Cơ khí và Khoáng sản Hà Giang
HGC,
HGA,
HFX,Công ty Cổ phần Sản xuất - Xuất nhập khẩu Thanh Hà
HFC,Công ty Cổ phần Xăng dầu HFC
HFB,Công ty Cổ phần Công trình Cầu phà Thành phố Hồ Chí Minh
HEV,Công ty Cổ phần Sách Đại học - Dạy nghề
HES,Công ty Cổ phần Dịch vụ Giải trí Hà Nội
HEP,Công ty Cổ phần Môi trường và Công trình đô thị Huế
HEM,Công ty Cổ phần Chế tạo Điện cơ Hà Nội
HEJ,Tổng Công ty Tư vấn Xây dựng Thủy Lợi Việt Nam - CTCP
HEC,Công ty Cổ phần Tư vấn xây dựng Thủy Lợi II
HDW,Công ty Cổ phần Kinh doanh Nước sạch Hải Dương
HDS,Công ty Cổ phần Giống cây trồng Hải Dương
HDP,Công ty Cổ phần Dược Hà Tĩnh
HDO,Công ty Cổ phần Hưng Đạo Container
HDM,Công ty Cổ phần Dệt May Huế
HDG,Công ty Cổ phần Tập đoàn Hà Đô
HDC,Công ty Cổ phần Phát triển Nhà Bà Rịa Vũng Tàu
HDB,Ngân hàng Thương mại Cổ phần Phát Triển Thành phố Hồ Chí Minh
HDA,Công ty Cổ phần Hãng sơn Đông Á
HD8,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị HUD8
HD6,Công ty Cổ phần Đầu tư và Phát triển nhà số 6 Hà Nội
HD2,Công ty Cổ phần Đầu tư phát triển nhà HUD2
HCT,Công ty Cổ phần Thương mại - Dịch vụ - Vận tải Xi măng Hải Phòng
HCM,Công ty Cổ phần Chứng khoán Thành phố Hồ Chí Minh
HCI,Công ty Cổ phần Đầu tư - Xây dựng Hà Nội
HCD,Công ty Cổ phần Đầu tư Sản xuất và Thương mại HCD
HCC,Công ty Cổ phần Bê tông Hòa Cầm - Intimex
HCB,Công ty Cổ phần Dệt may 29/3
HC3,Công ty Cổ phần Xây dựng số 3 Hải Phòng
HC1,Công ty Cổ phần Xây dựng số 1 Hà Nội
HBS,Công ty Cổ phần Chứng khoán Hòa Bình
HBH,Công ty Cổ phần HABECO - Hải Phòng
HBD,Công ty Cổ phần Bao bì PP Bình Dương
HBC,Công ty Cổ phần Tập đoàn Xây dựng Hòa Bình
HAX,Công ty Cổ phần Dịch vụ Ô tô Hàng Xanh
HAW,
HAV,Công ty Cổ phần Rượu Hapro
HAT,Công ty Cổ phần Thương mại Bia Hà Nội
HAS,Công ty Cổ phần Hacisco
HAR,Công ty Cổ phần Đầu tư Thương mại Bất động sản An Dương Thảo Điền
HAP,Công ty Cổ phần Tập Đoàn Hapaco
HAN,Tổng Công ty Xây dựng Hà Nội - CTCP
HAM,Công ty Cổ phần Vật tư Hậu Giang
HAI,Công ty Cổ phần Nông dược HAI
HAH,Công ty Cổ phần Vận tải và Xếp dỡ Hải An
HAG,Công ty Cổ phần Hoàng Anh Gia Lai
HAF,Công ty Cổ phần Thực phẩm Hà Nội
HAD,Công ty Cổ phần Bia Hà Nội - Hải Dương
HAC,Công ty Cổ phần Chứng khoán Hải Phòng
HAB,
H11,Công ty Cổ phần Xây dựng HUD101
GVT,Công ty Cổ phần Giấy Việt Trì
GVR,Tập đoàn Công nghiệp Cao su Việt Nam - Công ty Cổ phần
GTT,Công ty Cổ phần Thuận Thảo
GTS,Công ty Cổ phần Công trình Giao thông Sài Gòn
GTK,
GTH,Công ty Cổ phần Xây dựng Giao thông Thừa Thiên Huế
GTD,Công ty Cổ phần Giầy Thượng Đình
GTA,Công ty Cổ phần Chế biến Gỗ Thuận An
GSP,Công ty Cổ phần Vận tải Sản phẩm Khí Quốc tế
GSM,Công ty Cổ phần Thủy điện Hương Sơn
GQN,
GPC,Công ty Cổ phần Tập đoàn Green+
GND,Công ty Cổ phần Gạch ngói Đồng Nai
GMX,Công ty Cổ phần Gạch ngói Gốm xây dựng Mỹ Xuân
GMH,Công ty Cổ phần Minh Hưng Quảng Trị
GMD,Công ty Cổ phần Gemadept
GMC,Công ty Cổ phần Garmex Sài Gòn
GMA,Công ty Cổ phần G-Automobile
GLW,Công ty Cổ phần Cấp thoát nước Gia Lai
GLT,Công ty Cổ phần Kỹ thuật điện Toàn Cầu
GLC,Công ty Cổ phần Vàng Lào Cai
GKM,Công ty Cổ phần GKM Holdings
GIL,Công ty Cổ phần Sản xuất Kinh doanh Xuất nhập khẩu Bình Thạnh
GIC,Công ty Cổ phần VSC Green Logistics
GHC,Công ty Cổ phần Thủy điện Gia Lai
GH3,Công ty Cổ phần Công trình giao thông Hà Nội
GGG,Công ty Cổ phần Ô tô Giải Phóng
GEX,Công ty Cổ phần Tập đoàn Gelex
GER,Công ty Cổ phần Thể thao Ngôi sao Geru
GEG,Công ty Cổ phần Điện Gia Lai
GEE,Công ty Cổ phần Điện lực Gelex
GE2,Tổng Công ty Phát điện 2
GDW,Công ty Cổ phần Cấp nước Gia Định
GDT,Công ty Cổ phần Chế biến Gỗ Đức Thành
GDA,Công ty Cổ phần Tôn Đông Á
GCF,Công ty Cổ phần Thực phẩm G.C
GCB,Công ty Cổ phần PETEC Bình Định
GAS,Tổng Công ty Khí Việt Nam - Công ty Cổ phần
GAB,Công ty Cổ phần Đầu tư Khai khoáng & Quản lý Tài sản FLC
G36,Tổng Công ty 36 - Công ty Cổ phần
G20,Công ty Cổ phần Đầu tư Dệt may Vĩnh Phúc
FTS,Công ty Cổ phần Chứng khoán FPT
FTM,Công ty Cổ phần Đầu tư và Phát triển Đức Quân
FTI,Công ty Cổ phần Công nghiệp - Thương mại Hữu Nghị
FT1,Công ty Cổ phần Phụ tùng máy số 1
FSO,Công ty Cổ phần Cơ khí đóng tàu thủy sản Việt Nam
FRT,Công ty Cổ phần Bán lẻ Kỹ thuật số FPT
FRM,Công ty Cổ phần Lâm nghiệp Sài Gòn
FRC,Công ty Cổ phần Lâm đặc sản xuất khẩu Quảng Nam
FPT,Công ty Cổ phần FPT
FOX,Công ty Cổ phần Viễn thông FPT
FOC,Công ty Cổ phần Dịch vụ Trực tuyến FPT
FMC,Công ty Cổ phần Thực phẩm Sao Ta
FLC,Công ty Cổ phần Tập đoàn FLC
FIT,Công ty Cổ phần Tập đoàn F.I.T
FIR,Công ty Cổ phần Địa ốc First Real
FID,Công ty Cổ phần Đầu tư và Phát triển Doanh nghiệp Việt Nam
FIC,Tổng Công ty Vật liệu Xây dựng số 1 - Công ty Cổ phần
FHS,Công ty Cổ phần Phát hành sách Thành phố Hồ Chí Minh - FAHASA
FHN,Công ty Cổ phần Xuất nhập khẩu Lương thực - Thực phẩm Hà Nội
FGL,Công ty Cổ phần Cà phê Gia Lai
FDG,Công ty Cổ phần Docimexco
FDC,Công ty Cổ phần Ngoại thương và Phát triển Đầu tư Thành phố Hồ Chí Minh
FCS,Công ty Cổ phần Lương thực Thành phố Hồ Chí Minh
FCN,Công ty Cổ phần FECON
FCM,Công ty Cổ phần Khoáng sản FECON
FCC,Công ty Cổ phần Liên hợp Thực phẩm
FBC,Công ty Cổ phần Cơ khí Phổ Yên
FBA,Công ty Cổ phần Tập đoàn Quốc tế FBA
EVS,Công ty Cổ phần Chứng khoán Everest
EVG,Công ty Cổ phần Tập đoàn Everland
EVF,Công ty Tài chính Cổ phần Điện Lực
EVE,Công ty Cổ phần Everpia
EPH,Công ty Cổ phần Dịch vụ Xuất bản Giáo dục Hà Nội
EPC,Công ty Cổ phần Cà Phê Ea Pốk
EMS,Tổng Công ty Chuyển phát nhanh Bưu điện - Công ty Cổ phần
EMG,Công ty Cổ phần Thiết bị Phụ tùng Cơ điện
EME,Công ty Cổ phần Điện Cơ
EMC,Công ty Cổ phần Cơ điện Thủ Đức
ELC,Công ty Cổ phần Công nghệ - Viễn thông ELCOM
EIN,Công ty Cổ phần Đầu tư - Thương Mại - Dịch vụ Điện lực
EID,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Hà Nội
EIC,Công ty Cổ phần EVN Quốc Tế
EIB,Ngân hàng Thương mại Cổ phần Xuất nhập khẩu Việt Nam
EFI,Công ty Cổ phần Đầu tư Tài chính Giáo dục
ECO,Công ty Cổ Phần Nhựa Sinh Thái Việt Nam
ECI,Công ty Cổ phần Tập đoàn ECI
EBS,Công ty Cổ phần Sách Giáo dục tại Thành phố Hà Nội
EAD,Công ty Cổ phần Thủy điện Điện lực Đắk Lắk
E29,Công ty cổ phần Đầu tư Xây dựng và Kỹ thuật 29
E12,Công ty Cổ phần Xây Dựng Điện VNECO 12
DZM,Công ty Cổ phần Cơ điện Dzĩ An
DXV,Công ty Cổ phần VICEM Vật liệu Xây dựng Đà Nẵng
DXS,Công ty Cổ phần Dịch vụ Bất động sản Đất Xanh
DXP,Công ty Cổ phần Cảng Đoạn Xá
DXL,Công ty Cổ phần Du lịch và Xuất nhập khẩu Lạng Sơn
DXG,Công ty Cổ phần Tập đoàn Đất Xanh
DX2,
DWS,Công ty Cổ phần Cấp nước và Môi trường Đô thị Đồng Tháp
DWC,Công ty Cổ phần Cấp nước Đắk Lắk
DVW,Công ty Cổ phần Dịch vụ và Xây dựng cấp nước Đồng Nai
DVP,Công ty Cổ phần Đầu tư và Phát triển Cảng Đình Vũ
DVN,Tổng Công ty Dược Việt Nam - CTCP
DVM,Công ty Cổ phần Dược liệu Việt Nam
DVG,Công ty Cổ phần Đại Việt Group DVG
DVC,Công ty Cổ phần Thương mại dịch vụ Tổng Hợp Cảng Hải Phòng
DUS,Công ty Cổ phần Dịch vụ Đô thị Đà Lạt
DTV,Công ty Cổ phần Phát triển điện Trà Vinh
DTT,Công ty Cổ phần Kỹ nghệ Đô Thành
DTP,Công ty Cổ phần Dược phẩm CPC1 Hà Nội
DTL,Công ty Cổ phần Đại Thiên Lộc
DTK,Tổng Công ty Điện lực TKV - Công ty Cổ phần
DTI,Công ty Cổ phần Đầu tư Đức Trung
DTH,Công ty Cổ phần Dược - Vật tư Y tế Thanh Hóa
DTG,Công ty Cổ phần Dược phẩm Tipharco
DTE,Công ty Cổ phần Đầu tư Năng lượng Đại Trường Thành Holdings
DTD,Công ty Cổ phần Đầu tư Phát triển Thành Đạt
DTC,Công ty Cổ phần Viglacera Đông Triều
DTB,Công ty Cổ phần Công trình Đô thị Bảo Lộc
DTA,Công ty Cổ phần Đệ Tam
DT4,Công ty Cổ phần Quản lý Đường sông số 4
DSV,Công ty Cổ phần Đường sắt Vĩnh Phú
DST,Công ty Cổ phần Đầu tư Sao Thăng Long
DSP,Công ty Cổ phần Dịch vụ Du lịch Phú Thọ
DSN,Công ty Cổ phần Công viên nước Đầm Sen
DSG,Công ty Cổ phần Kính Đáp Cầu
DSE,Công ty Cổ phần Chứng khoán DNSE
DSD,Công ty cổ phần DHC Suối Đôi
DSC,Công ty Cổ phần Chứng khoán DSC
DS3,Công ty Cổ phần DS3
DRL,Công ty Cổ phần Thủy điện - Điện lực 3
DRI,Công ty Cổ phần Đầu tư Cao su Đắk Lắk
DRH,Công ty Cổ phần DRH Holdings
DRG,Công ty Cổ phần Cao su Đắk Lắk
DRC,Công ty Cổ phần Cao su Đà Nẵng
DQC,Công ty Cổ phần Tập đoàn Điện Quang
DPS,Công ty Cổ phần Đầu tư Phát triển Sóc Sơn
DPR,Công ty Cổ phần Cao su Đồng Phú
DPP,Công ty Cổ phần Dược Đồng Nai
DPM,Tổng Công ty Phân bón và Hóa chất Dầu khí - Công ty Cổ phần
DPH,Công ty Cổ phần Dược phẩm Hải Phòng
DPG,Công ty Cổ phần Tập đoàn Đạt Phương
DPD,Công ty cổ phần Cao su Đồng Phú - Đắk Nông
DPC,Công ty Cổ phần Nhựa Đà Nẵng
DP3,Công ty Cổ Phần Dược Phẩm Trung Ương 3
DP2,Công ty Cổ phần Dược phẩm Trung ương 2
DP1,Công ty Cổ phần Dược phẩm Trung ương CPC1
DOP,Công ty Cổ phần Vận tải Xăng dầu Đồng Tháp
DOC,Công ty Cổ phần Vật tư nông nghiệp Đồng Nai
DNW,Công ty Cổ phần Cấp nước Đồng Nai
DNT,Công ty Cổ phần Du lịch Đồng Nai
DNP,Công ty Cổ phần DNP Holding
DNN,Công ty Cổ phần Cấp nước Đà Nẵng
DNM,Tổng Công ty Cổ phần Y tế Danameco
DNL,Công ty Cổ phần Logistics Cảng Đà Nẵng
DNH,Công ty Cổ phần Thủy điện Đa Nhim - Hàm Thuận - Đa Mi
DNE,Công ty Cổ phần Môi trường Đô thị Đà Nẵng
DND,Công ty Cổ phần Đầu tư Xây dựng và Vật liệu Đồng Nai
DNC,Công ty Cổ phần Điện nước Lắp máy Hải Phòng
DNB,
DNA,Công ty Cổ phần Điện nước An Giang
DMS,Công ty Cổ phần Hóa phẩm dầu khí DMC - Miền Nam
DMN,Công ty Cổ phần Domenal
DMC,Công ty Cổ phần Xuất nhập khẩu Y tế DOMESCO
DM7,Công ty Cổ phần Dệt may 7
DLT,Công ty Cổ phần Du lịch và Thương mại - Vinacomin
DLR,Công ty Cổ phần Địa ốc Đà Lạt
DLM,Công ty Cổ phần Chiếu sáng công cộng Đà Nẵng
DLG,Công ty Cổ phần Tập đoàn Đức Long Gia Lai
DLD,Công ty Cổ phần Du lịch Đắk Lắk
DL1,Công ty Cổ phần Tập đoàn Alpha Seven
DKW,Công ty Cổ phần Cấp nước sinh hoạt Châu Thành
DKH,
DKC,Công ty Cổ phần Chợ Lạng Sơn
DIH,Công ty Cổ phần Đầu tư Phát triển Xây dựng - Hội An
DIG,Tổng Công ty Cổ phần Đầu tư Phát triển Xây dựng
DID,Công ty Cổ phần DIC - Đồng Tiến
DIC,Công ty Cổ phần Đầu tư và Thương mại DIC
DHT,Công ty Cổ phần Dược phẩm Hà Tây
DHP,Công ty Cổ phần Điện cơ Hải Phòng
DHN,Công ty Cổ phần Dược phẩm Hà Nội
DHM,Công ty Cổ phần Thương mại & Khai thác Khoáng sản Dương Hiếu
DHG,Công ty Cổ phần Dược Hậu Giang
DHD,Công ty Cổ phần Dược Vật Tư Y Tế Hải Dương
DHC,Công ty Cổ phần Đông Hải Bến Tre
DHB,Công ty Cổ phần Phân đạm và Hóa chất Hà Bắc
DHA,Công ty Cổ phần Hóa An
DGW,Công ty Cổ phần Thế Giới Số
DGT,Công ty Cổ phần Công trình Giao thông Đồng Nai
DGC,Công ty Cổ phần Tập đoàn Hóa chất Đức Giang
DFF,Công ty Cổ phần Tập đoàn Đua Fat
DFC,Công ty Cổ phần Xích líp Đông Anh
DDV,Công ty Cổ phần DAP - Vinachem
DDN,Công ty Cổ phần Dược - Thiết bị y tế Đà Nẵng
DDM,Công ty Cổ phần Hàng hải Đông Đô
DDH,Công ty Cổ phần Đảm bảo giao thông đường thủy Hải Phòng
DDG,Công ty Cổ phần Đầu tư Công nghiệp Xuất nhập khẩu Đông Dương
DDB,Công ty Cổ Phần Thương Mại Và Xây Dựng Đông Dương
DCT,Công ty Cổ phần Tấm lợp Vật liệu Xây dựng Đồng Nai
DCS,Công ty Cổ phần Tập đoàn Đại Châu
DCR,Công ty Cổ phần Gạch men COSEVCO
DCM,Công ty Cổ phần Phân bón Dầu Khí Cà Mau
DCL,Công ty Cổ phần Dược phẩm Cửu Long
DCH,Công ty Cổ phần Địa chính Hà Nội
DCG,Công ty Cổ phần Tổng Công ty May Đáp Cầu
DCF,Công ty Cổ phần Xây dựng và Thiết kế số 1
DC4,Công ty Cổ phần Xây dựng DIC Holdings
DC2,Công ty Cổ phần Đầu tư Phát triển - Xây dựng (DIC) số 2
DC1,Công ty Cổ phần Đầu tư Phát triển Xây dựng số 1
DBW,Công ty Cổ phần Cấp nước Điện Biên
DBT,Công ty Cổ phần Dược phẩm Bến Tre
DBM,Công ty Cổ phần Dược - Vật tư Y tế Đắk Lắk
DBH,Công ty Cổ phần Đường bộ Hải Phòng
DBD,Công ty Cổ phần Dược - Trang thiết bị y tế Bình Định (BIDIPHAR)
DBC,Công ty Cổ phần Tập đoàn Dabaco Việt Nam
DAT,Công ty Cổ phần Đầu tư Du lịch và Phát triển Thủy sản
DAS,Công ty Cổ phần Máy - Thiết bị Dầu khí Đà Nẵng
DAR,Công ty Cổ phần Xe lửa Dĩ An
DAN,Công ty Cổ phần Dược Danapha
DAH,Công ty Cổ phần Tập đoàn Khách sạn Đông Á
DAG,Công ty Cổ phần Tập đoàn Nhựa Đông Á
DAE,Công ty Cổ phần Sách Giáo dục tại Thành phố Đà Nẵng
DAD,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Đà Nẵng
DAC,Công ty Cổ phần 382 Đông Anh
D2D,Công ty Cổ phần Phát triển Đô thị Công nghiệp số 2
D17,Công ty Cổ Phần Đồng Tân
D11,Công ty Cổ phần Địa ốc 11
CYC,Công ty Cổ phần Gạch men Chang Yih
CX8,Công ty Cổ phần Đầu tư và Xây lắp Constrexim số 8
CVT,Công ty Cổ phần CMC
CVP,Công ty cổ phần Cảng Cửa Việt
CVN,Công ty Cổ phần Vinam
CTX,Tổng Công ty Cổ phần Đầu tư Xây dựng và Thương mại Việt Nam
CTW,Công ty Cổ phần Cấp thoát nước Cần Thơ
CTT,Công ty Cổ phần Chế tạo máy Vinacomin
CTS,Công ty Cổ phần Chứng khoán Ngân hàng Công thương Việt Nam
CTR,Tổng Công ty Cổ phần Công trình Viettel
CTP,Công ty Cổ phần Hoà Bình Takara
CTN,Công ty Cổ phần Xây dựng Công trình ngầm
CTI,Công ty Cổ phần Đầu tư Phát triển Cường Thuận IDICO
CTG,Ngân hàng Thương mại Cổ phần Công thương Việt Nam
CTF,Công ty Cổ phần City Auto
CTD,Công ty Cổ phần Xây dựng Coteccons
CTC,Công ty Cổ phần Tập đoàn Hoàng Kim Tây Nguyên
CTB,Công ty Cổ phần Chế tạo Bơm Hải Dương
CTA,Công ty Cổ phần Vinavico
CT6,Công ty Cổ phần Công trình 6
CT5,
CT3,Công ty Cổ phần Đầu tư và Xây dựng công trình 3
CSV,Công ty Cổ phần Hóa chất Cơ bản miền Nam
CST,Công ty Cổ phần Than Cao Sơn - TKV
CSM,Công ty Cổ phần Công nghiệp Cao su Miền Nam
CSI,Công ty Cổ phần Chứng khoán Kiến thiết Việt Nam
CSC,Công ty Cổ phần Tập đoàn COTANA
CRE,Công ty Cổ phần Bất động sản Thế Kỷ
CRC,Công ty Cổ phần Create Capital Việt Nam
CQT,Công ty Cổ phần Xi măng Quán Triều VVMI
CQN,Công ty Cổ phần Cảng Quảng Ninh
CPI,Công ty Cổ phần Đầu tư Cảng Cái Lân
CPH,Công ty Cổ phần Phục vụ Mai táng Hải Phòng
CPC,Công ty Cổ phần Thuốc sát trùng Cần Thơ
CPA,Công ty Cổ phần Cà phê Phước An
COM,Công ty Cổ phần Vật tư Xăng dầu
CNT,Công ty Cổ phần Tập đoàn CNT
CNN,"Công ty Cổ phần Tư vấn Công nghệ, Thiết bị và Kiểm định Xây dựng - CONINCO"
CNG,Công ty Cổ phần CNG Việt Nam
CNC,Công ty Cổ phần Công nghệ cao Traphaco
CNA,Công ty Cổ phần Tổng công ty Chè Nghệ An
CMX,Công ty Cổ phần CAMIMEX Group
CMW,Công ty Cổ phần Cấp nước Cà Mau
CMV,Công ty Cổ phần Thương nghiệp Cà Mau
CMT,Công ty Cổ phần Công nghệ mạng và Truyền thông
CMS,Công ty Cổ phần Tập đoàn CMH Việt Nam
CMP,Công ty Cổ phần Cảng Chân Mây
CMN,Công ty Cổ phần Lương thực Thực phẩm Colusa - Miliket
CMM,Công ty Cổ phần Camimex
CMK,Công ty Cổ phần Cơ khí Mạo Khê - Vinacomin
CMI,Công ty Cổ phần CMISTONE Việt Nam
CMG,Công ty Cổ phần Tập đoàn Công nghệ CMC
CMF,Công ty Cổ phần Thực phẩm Cholimex
CMD,Công ty Cổ phần Vật liệu xây dựng và Trang trí nội thất TP Hồ Chí Minh
CMC,Công ty Cổ phần Đầu tư CMC
CLX,Công ty Cổ phần Xuất nhập khẩu và Đầu tư Chợ Lớn (CHOLIMEX)
CLW,Công ty Cổ phần Cấp nước Chợ Lớn
CLM,Công ty Cổ phần Xuất nhập khẩu Than - Vinacomin
CLL,Công ty Cổ phần Cảng Cát Lái
CLH,Công ty Cổ phần Xi măng La Hiên VVMI
CLG,Công ty Cổ phần Đầu tư và Phát triển Nhà đất Cotec
CLC,Công ty Cổ phần Cát Lợi
CKV,Công ty Cổ phần CokyVina
CKG,Công ty Cổ phần Tập đoàn Tư vấn Đầu tư Xây dựng Kiên Giang
CKD,Công ty Cổ phần Cơ khí Đông Anh Licogi
CKA,Công ty Cổ phần Cơ khí An Giang
CK8,Công ty Cổ phần Cơ khí 120
CJC,Công ty Cổ phần Cơ điện Miền Trung
CIP,Công ty Cổ phần Xây lắp và Sản xuất Công nghiệp
CII,Công ty Cổ phần Đầu tư Hạ tầng Kỹ thuật Thành phố Hồ Chí Minh
CIG,Công ty Cổ phần COMA 18
CID,Công ty Cổ phần Xây dựng và Phát triển Cơ sở Hạ tầng
CIA,Công ty Cổ Phần Dịch Vụ Sân Bay Quốc Tế Cam Ranh
CI5,Công ty Cổ phần Đầu tư Xây dựng số 5
CHS,Công ty Cổ phần Chiếu sáng Công cộng Thành phố Hồ Chí Minh
CHP,Công ty Cổ phần Thủy điện Miền Trung
CHC,Công ty Cổ phần Cẩm Hà
CH5,Công ty Cổ phần Xây dựng số 5 Hà Nội
CGV,Công ty Cổ phần Vinaceglass
CGL,Công ty Cổ phần Thương mại Gia Lai
CFV,Công ty Cổ phần Cà phê Thắng Lợi
CFM,Công ty Cổ phần Đầu tư CFM
CET,Công ty Cổ phần HTC Holding
CEO,Công ty Cổ phần Tập đoàn C.E.O
CEN,Công ty Cổ phần CENCON Việt Nam
CEG,Công ty Cổ phần Tập đoàn Xây dựng và Thiết bị Công nghiệp
CEE,Công ty Cổ phần Xây dựng Hạ tầng CII
CE1,Công ty Cổ phần Xây dựng và Thiết bị Công nghiệp CIE1
CDR,Công ty Cổ phần Xây dựng Cao su Đồng Nai
CDP,Công ty Cổ phần Dược phẩm Trung ương Codupha
CDO,Công ty Cổ phần Tư vấn Thiết kế và Phát triển Đô thị
CDN,Công ty Cổ phần Cảng Đà Nẵng
CDH,Công ty Cổ phần Công trình Công cộng và Dịch vụ Du lịch Hải Phòng
CDG,Công ty Cổ phần Cầu Đuống
CDC,Công ty Cổ phần Chương Dương
CCV,Công ty Cổ phần Tư vấn Xây dựng Công nghiệp và Đô thị Việt Nam
CCT,Công ty Cổ phần Cảng Cần Thơ
CCR,Công ty Cổ phần Cảng Cam Ranh
CCP,Công ty Cổ phần Cảng Cửa Cấm Hải Phòng
CCM,Công ty Cổ phần Khoáng sản và Xi măng Cần Thơ
CCL,Công ty Cổ phần Đầu tư và Phát triển Đô thị Dầu khí Cửu Long
CCI,Công ty Cổ phần Đầu tư Phát triển Công nghiệp Thương mại Củ Chi
CCC,Công ty Cổ Phần Xây Dựng CDC
CCA,Công ty Cổ phần Xuất nhập khẩu Thủy sản Cần Thơ
CC4,Công ty Cổ phần Đầu tư và Xây dựng số 4
CC1,Tổng Công ty Xây dựng số 1 - CTCP
CBS,Công ty Cổ phần Mía đường Cao Bằng
CBI,Công ty Cổ phần Gang thép Cao Bằng
CAV,Công ty Cổ Phần Dây cáp điện Việt Nam
CAT,Công ty Cổ phần Thủy sản Cà Mau
CAR,Công ty cổ phần Tập đoàn Giáo dục Trí Việt
CAP,Công ty Cổ phần Lâm Nông sản Thực phẩm Yên Bái
CAN,Công ty Cổ phần Đồ hộp Hạ Long
CAG,Công ty Cổ phần Cảng An Giang
CAD,Công ty Cổ phần Chế biến và Xuất khẩu Thủy sản Cadovimex
CAB,Công ty Cổ phần Tổng Công ty Truyền hình Cáp Việt Nam
C92,Công ty Cổ phần Xây dựng và Đầu tư 492
C69,Công ty Cổ phần Xây dựng 1369
C4G,Công ty Cổ phần Tập Đoàn Cienco4
C47,Công ty Cổ phần Xây dựng 47
C32,Công ty Cổ phần CIC39
C22,Công ty Cổ phần 22
C21,Công ty Cổ phần Thế kỷ 21
C12,Công ty Cổ phần Cầu 12
BXT,
BXH,Công ty Cổ phần VICEM Bao bì Hải Phòng
BWS,Công ty Cổ phần Cấp Nước Bà Rịa - Vũng Tàu
BWE,Công ty Cổ phần - Tổng công ty Nước - Môi trường Bình Dương
BWA,Công ty Cổ phần Cấp thoát nước và Xây dựng Bảo Lộc
BVS,Công ty Cổ phần Chứng khoán Bảo Việt
BVN,Công ty Cổ phần Bông Việt Nam
BVL,Công ty Cổ phần BV Land
BVH,Tập đoàn Bảo Việt
BVG,Công ty Cổ phần Group Bắc Việt
BVB,Ngân hàng Thương mại Cổ phần Bản Việt
BUD,
BTW,Công ty Cổ phần Cấp nước Bến Thành
BTV,Công ty Cổ phần Dịch vụ Du lịch Bến Thành
BTU,Công ty Cổ phần Công trình Đô thị Bến Tre
BTT,Công ty Cổ phần Thương mại - Dịch vụ Bến Thành
BTS,Công ty Cổ phần Xi măng VICEM Bút Sơn
BTP,Công ty Cổ phần Nhiệt điện Bà Rịa
BTN,Công ty Cổ phần Đầu tư Bitco Bình Định
BTH,Công ty Cổ phần Chế tạo Biến thế và Vật liệu Điện Hà Nội
BTG,Công ty Cổ phần Bao bì Tiền Giang
BTD,Công ty Cổ phần Bê tông ly tâm Thủ Đức
BTB,Công ty Cổ phần Bia Hà Nội - Thái Bình
BT6,Công ty Cổ phần BETON 6
BT1,Công ty Cổ phần Bảo vệ thực vật 1 Trung ương
BST,Công ty Cổ phần Sách và Thiết bị Bình Thuận
BSR,Công ty Cổ phần Lọc Hóa dầu Bình Sơn
BSQ,Công ty Cổ phần Bia Sài Gòn - Quảng Ngãi
BSP,Công ty Cổ phần Bia Sài Gòn - Phú Thọ
BSL,Công ty Cổ phần Bia Sài Gòn - Sông Lam
BSI,Công ty Cổ phần Chứng khoán BIDV
BSH,Công ty Cổ phần Bia Sài Gòn - Hà Nội
BSG,Công ty Cổ phần Xe khách Sài Gòn
BSD,"Công ty Cổ phần Bia, Rượu Sài Gòn - Đồng Xuân"
BSC,Công ty Cổ phần Dịch vụ Bến Thành
BSA,Công ty Cổ phần Thủy điện Buôn Đôn
BRS,Công ty Cổ phần Dịch vụ Đô thị Bà Rịa
BRR,Công ty Cổ phần Cao su Bà Rịa
BRC,Công ty Cổ phần Cao su Bến Thành
BQB,Công ty Cổ phần Bia Hà Nội - Quảng Bình
BPW,
BPC,Công ty Cổ phần Vicem Bao bì Bỉm Sơn
BOT,Công ty Cổ phần BOT Cầu Thái Hà
BNW,Công ty Cổ phần Nước sạch Bắc Ninh
BNA,Công ty Cổ phần Tập đoàn Đầu tư Bảo Ngọc
BMV,Công ty Cổ phần Bột mỳ Vinafood 1
BMS,Công ty Cổ phần Chứng khoán Bảo Minh
BMP,Công ty Cổ phần Nhựa Bình Minh
BMN,Công ty Cổ phần 715
BMK,Công ty Cổ Phần Kỹ thuật Nhiệt Mèo Đen
BMJ,Công ty Cổ phần Khoáng sản Miền Đông AHP
BMI,Tổng Công ty Cổ phần Bảo Minh
BMG,Công ty Cổ phần May Bình Minh
BMF,Công ty Cổ phần Vật liệu Xây dựng và Chất đốt Đồng Nai
BMD,Công ty Cổ phần Môi trường và Dịch vụ Đô thị Bình Thuận
BMC,Công ty Cổ phần Khoáng sản Bình Định
BLW,Công ty Cổ phần Cấp nước Bạc Liêu
BLU,
BLT,Công ty Cổ phần Lương thực Bình Định
BLN,Công ty Cổ phần Vận tải và Dịch vụ Liên Ninh
BLI,Tổng Công ty Cổ phần Bảo hiểm Bảo Long
BLF,Công ty Cổ phần Thủy sản Bạc Liêu
BKH,Công ty Cổ phần Bánh mứt kẹo Hà Nội
BKG,Công ty Cổ phần Đầu tư BKG Việt Nam
BKC,Công ty Cổ phần Khoáng sản Bắc Kạn
BIO,Công ty Cổ phần Vắc xin và Sinh phẩm Nha Trang
BII,Công ty Cổ phần Đầu tư và Phát triển Công nghiệp Bảo Thư
BIG,Công ty cổ phần BIG Invest Group
BID,Ngân hàng Thương mại Cổ phần Đầu tư và Phát triển Việt Nam
BIC,Tổng Công ty Cổ phần Bảo hiểm Ngân hàng Đầu tư và Phát triển Việt Nam
BHT,Công ty Cổ phần Đầu tư Xây dựng Bạch Đằng TMC
BHP,Công ty Cổ phần Bia Hà Nội - Hải Phòng
BHN,Tổng Công ty Cổ phần Bia - Rượu - Nước giải khát Hà Nội
BHK,Công ty Cổ phần Bia Hà Nội - Kim Bài
BHI,Tổng Công ty Cổ phần Bảo hiểm Sài Gòn - Hà Nội
BHG,Công ty Cổ phần Chè Biển Hồ
BHC,Công ty Cổ phần Bê tông Biên Hòa
BHA,Công ty Cổ phần Thủy điện Bắc Hà
BGW,Công ty Cổ phần Nước sạch Bắc Giang
BGE,Công ty Cổ phần BCG Energy
BFC,Công ty Cổ phần Phân bón Bình Điền
BEL,Công ty Cổ phần Điện tử Biên Hòa
BED,Công ty Cổ phần Sách và Thiết bị trường học Đà Nẵng
BDW,Công ty Cổ phần Cấp thoát nước Bình Định
BDT,Công ty Cổ phần Xây lắp và Vật liệu xây dựng Đồng Tháp
BDG,Công ty Cổ phần May mặc Bình Dương
BDB,Công ty Cổ phần Sách và Thiết bị Bình Định
BCV,Công ty Cổ phần Du lịch và Thương mại Bằng Giang Cao Bằng - Vimico
BCR,Công ty Cổ phần BCG Land
BCP,Công ty Cổ phần Dược Enlie
BCO,Công ty Cổ phần Xây dựng Bình Phước
BCM,Tổng Công ty Đầu tư và Phát triển Công nghiệp - CTCP
BCG,Công ty Cổ phần Tập đoàn Bamboo Capital
BCF,Công ty Cổ phần Thực phẩm Bích Chi
BCE,Công ty Cổ phần Xây dựng và Giao thông Bình Dương
BCC,Công ty Cổ phần Xi măng Bỉm Sơn
BCB,Công ty Cổ phần 397
BCA,Công ty cổ phần B.C.H
BBT,Công ty Cổ phần Bông Bạch Tuyết
BBS,Công ty Cổ phần VICEM Bao bì Bút Sơn
BBM,Công ty Cổ phần Bia Hà Nội - Nam Định
BBH,Công ty Cổ phần Bao bì Hoàng Thạch
BBC,Công ty Cổ phần Bibica
BAX,Công ty Cổ phần Thống Nhất
BAL,Công ty Cổ phần Bao bì Bia - Rượu - Nước giải khát
BAF,Công ty Cổ phần Nông nghiệp BAF Việt Nam
BAB,Ngân hàng Thương mại Cổ phần Bắc Á
B82,Công ty Cổ phần 482
AVG,Công ty Cổ phần Phân Bón Quốc Tế Âu Việt
AVF,Công ty Cổ phần Việt An
AVC,Công ty Cổ phần Thủy điện A Vương
AUM,Công ty Cổ phần Vinacafe Sơn Thành
ATS,Công ty Cổ phần Tập đoàn Đầu tư ATS
ATG,Công ty Cổ phần An Trường An
ATB,Công ty Cổ phần An Thịnh
ATA,Công ty Cổ phần NTACO
AST,Công ty Cổ phần Dịch vụ Hàng không Taseco
ASP,Công ty Cổ phần Tập đoàn Dầu khí An Pha
ASM,Công ty Cổ phần Tập đoàn Sao Mai
ASG,Công ty Cổ phần Tập đoàn ASG
ASA,Công ty Cổ phần ASA
ART,Công ty Cổ phần Chứng khoán BOS
ARM,Công ty Cổ phần Xuất nhập khẩu Hàng không
APT,Công ty Cổ phần Kinh doanh thủy hải sản Sài Gòn
APS,Công ty Cổ phần Chứng khoán Châu Á - Thái Bình Dương
APP,Công ty Cổ phần Phát triển Phụ gia và Sản phẩm dầu mỏ
APL,Công ty Cổ phần Cơ khí và Thiết bị áp lực - VVMI
API,Công ty Cổ phần Đầu tư Châu Á - Thái Bình Dương
APH,Công ty Cổ phần Tập đoàn An Phát Holdings
APG,Công ty Cổ phần Chứng khoán APG
APF,Công ty Cổ phần Nông sản Thực phẩm Quảng Ngãi
APC,Công ty Cổ phần Chiếu xạ An Phú
ANV,Công ty Cổ phần Nam Việt
ANT,Công ty Cổ phần Rau quả Thực phẩm An Giang
AMV,Công ty Cổ phần Sản xuất Kinh doanh Dược và Trang thiết bị Y tế Việt Mỹ
AMS,Công ty Cổ phần Cơ khí Xây dựng AMECC
AMP,Công ty Cổ phần Armephaco
AME,Công ty cổ phần Alphanam E&C
AMD,Công ty Cổ phần Đầu tư và Khoáng sản FLC Stone
AMC,Công ty Cổ phần Khoáng sản Á Châu
ALV,Công ty Cổ phần Xây dựng ALVICO
ALT,Công ty Cổ phần Văn hóa Tân Bình
AIG,Công ty Cổ phần Nguyên liệu Á Châu AIG
AIC,Tổng Công ty Cổ phần Bảo hiểm Hàng không
AGX,Công ty Cổ phần Thực phẩm Nông sản Xuất khẩu Sài Gòn
AGR,Công ty Cổ phần Chứng khoán AGRIBANK
AGP,Công ty Cổ phần Dược phẩm AGIMEXPHARM
AGM,Công ty Cổ phần Xuất nhập khẩu An Giang
AGG,Công ty Cổ phần Đầu tư và Phát triển Bất động sản An Gia
AGF,Công ty Cổ phần Xuất nhập khẩu Thủy sản An Giang
AGE,Công ty Cổ phần Môi trường Đô thị An Giang
AG1,Công ty Cổ phần 28.1
AFX,Công ty Cổ phần Xuất Nhập khẩu Nông sản Thực phẩm An Giang
ADS,Công ty Cổ phần DAMSAN
ADP,Công ty Cổ phần Sơn Á Đông
ADG,Công ty Cổ phần Clever Group
ADC,Công ty Cổ phần Mĩ thuật và Truyền thông
ACV,Tổng Công ty Cảng Hàng không Việt Nam - CTCP
ACS,Công ty Cổ phần Xây lắp Thương mại 2
ACM,Công ty Cổ phần Tập đoàn Khoáng sản Á Cường
ACL,Công ty Cổ phần Xuất nhập khẩu Thủy sản Cửu Long An Giang
ACG,Công ty Cổ phần Gỗ An Cường
ACE,Công ty Cổ phần Bê tông ly tâm An Giang
ACC,Công ty Cổ phần Đầu tư và Xây dựng Bình Dương ACC
ACB,Ngân hàng Thương mại Cổ phần Á Châu
ABW,Công ty Cổ phần Chứng khoán An Bình
ABT,Công ty Cổ phần Xuất nhập khẩu Thủy sản Bến Tre
ABS,Công ty Cổ phần Dịch vụ Nông nghiệp Bình Thuận
ABR,Công ty Cổ phần Đầu tư Nhãn Hiệu Việt
ABI,Công ty Cổ phần Bảo hiểm Ngân hàng Nông Nghiệp
ABC,Công ty Cổ phần Truyền thông VMG
ABB,Ngân hàng Thương mại Cổ phần An Bình
AAV,Công ty Cổ phần AAV Group
AAT,Công ty Cổ phần Tập đoàn Tiên Sơn Thanh Hóa
AAS,Công ty Cổ phần Chứng khoán SmartInvest
AAM,Công ty Cổ Phần Thủy Sản MeKong
AAH,Công ty Cổ phần Hợp Nhất
AAA,Công ty Cổ phần Nhựa An Phát Xanh
A32,Công ty Cổ phần 32



================================================
FILE: assets/data/industries_icb.csv
================================================
icb_name,en_icb_name,icb_code,level
Sản xuất Dầu khí,Oil & Gas Producers,0530,3
"Thiết bị, Dịch vụ và Phân phối Dầu khí","Oil Equipment, Services & Distribution",0570,3
Hóa chất,Chemicals,1350,3
Lâm nghiệp và Giấy,Forestry & Paper,1730,3
Kim loại,Industrial Metals & Mining,1750,3
Khai khoáng,Mining,1770,3
Xây dựng và Vật liệu,Construction & Materials,2350,3
Hàng công nghiệp,General Industrials,2720,3
Điện tử & Thiết bị điện,Electronic & Electrical Equipment,2730,3
Công nghiệp nặng,Industrial Engineering,2750,3
Vận tải,Industrial Transportation,2770,3
Tư vấn & Hỗ trợ Kinh doanh,Support Services,2790,3
Ô tô và phụ tùng,Automobiles & Parts,3350,3
Bia và đồ uống,Beverages,3530,3
Sản xuất thực phẩm,Food Producers,3570,3
Hàng gia dụng,Household Goods & Home Construction,3720,3
Hàng hóa giải trí,Leisure Goods,3740,3
Hàng cá nhân,Personal Goods,3760,3
Thuốc lá,Tobacco,3780,3
Thiết bị và Dịch vụ Y tế,Health Care Equipment & Services,4530,3
Dược phẩm,Pharmaceuticals & Biotechnology,4570,3
Phân phối thực phẩm & dược phẩm,Food & Drug Retailers,5330,3
Bán lẻ,General Retailers,5370,3
Truyền thông,Media,5550,3
Du lịch & Giải trí,Travel & Leisure,5750,3
Viễn thông cố định,Fixed Line Telecommunications,6530,3
Viễn thông di động,Mobile Telecommunications,6570,3
Sản xuất & Phân phối Điện,Electricity,7530,3
Nước & Khí đốt,"Gas, Water & Multi-utilities",7570,3
Ngân hàng,Banks,8350,3
Bảo hiểm phi nhân thọ,Nonlife Insurance,8530,3
Bảo hiểm nhân thọ,Life Insurance,8570,3
Bất động sản,Real Estate Investment & Services,8630,3
Dịch vụ tài chính,Financial Services,8770,3
Quỹ đầu tư,Equity Investment Instruments,8980,3
Phần mềm & Dịch vụ Máy tính,Software & Computer Services,9530,3
Thiết bị và Phần cứng,Technology Hardware & Equipment,9570,3
Dầu khí,Oil & Gas,0001,1
Dầu khí,Oil & Gas,0500,2
Hóa chất,Chemicals,1300,2
Tài nguyên Cơ bản,Basic Resources,1700,2
Xây dựng và Vật liệu,Construction & Materials,2300,2
Hàng & Dịch vụ Công nghiệp,Industrial Goods & Services,2700,2
Ô tô và phụ tùng,Automobiles & Parts,3300,2
Thực phẩm và đồ uống,Food & Beverage,3500,2
Hàng cá nhân & Gia dụng,Personal & Household Goods,3700,2
Y tế,Health Care,4500,2
Bán lẻ,Retail,5300,2
Truyền thông,Media,5500,2
Du lịch và Giải trí,Travel & Leisure,5700,2
Viễn thông,Telecommunications,6500,2
"Điện, nước & xăng dầu khí đốt",Utilities,7500,2
Ngân hàng,Banks,8300,2
Bảo hiểm,Insurance,8500,2
Bất động sản,Real Estate,8600,2
Dịch vụ tài chính,Financial Services,8700,2
Công nghệ Thông tin,Technology,9500,2
Sản xuất và Khai thác dầu khí,Exploration & Production,0533,4
Thiết bị và Dịch vụ Dầu khí,Oil Equipment & Services,0573,4
"Nhựa, cao su & sợi",Commodity Chemicals,1353,4
"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",Specialty Chemicals,1357,4
Lâm sản và Chế biến gỗ,Forestry,1733,4
Sản xuất giấy,Paper,1737,4
Nhôm,Aluminum,1753,4
Kim Loại màu,Nonferrous Metals,1755,4
Thép và sản phẩm thép,Steel,1757,4
Khai thác Than,Coal,1771,4
Khai khoáng,General Mining,1775,4
Khai thác vàng,Gold Mining,1777,4
Vật liệu xây dựng & Nội thất,Building Materials & Fixtures,2353,4
Xây dựng,Heavy Construction,2357,4
Containers & Đóng gói,Containers & Packaging,2723,4
Công nghiệp phức hợp,Diversified Industrials,2727,4
Hàng điện & điện tử,Electrical Components & Equipment,2733,4
Thiết bị điện,Electronic Equipment,2737,4
Xe tải & Đóng tàu,Commercial Vehicles & Trucks,2753,4
Máy công nghiệp,Industrial Machinery,2757,4
Chuyển phát nhanh,Delivery Services,2771,4
Vận tải Thủy,Marine Transportation,2773,4
Đường sắt,Railroads,2775,4
"Kho bãi, hậu cần và bảo dưỡng",Transportation Services,2777,4
Dịch vụ vận tải,Trucking,2779,4
Tư vấn & Hỗ trợ KD,Business Support Services,2791,4
Đào tạo & Việc làm,Business Training & Employment Agencies,2793,4
Quản lý Tài chính,Financial Administration,2795,4
Nhà cung cấp thiết bị,Industrial Suppliers,2797,4
Chất thải & Môi trường,Waste & Disposal Services,2799,4
Sản xuất ô tô,Automobiles,3353,4
Phụ tùng ô tô,Auto Parts,3355,4
Lốp xe,Tires,3357,4
Sản xuất bia,Brewers,3533,4
Vang & Rượu mạnh,Distillers & Vintners,3535,4
Đồ uống & giải khát,Soft Drinks,3537,4
Nuôi trồng nông & hải sản,Farming & Fishing,3573,4
Thực phẩm,Food Products,3577,4
Đồ gia dụng lâu bền,Durable Household Products,3722,4
Đồ gia dụng một lần,Nondurable Household Products,3724,4
Thiết bị gia dụng,Furnishings,3726,4
Điện tử tiêu dùng,Consumer Electronics,3743,4
Đồ chơi,Toys,3747,4
Hàng May mặc,Clothing & Accessories,3763,4
Giầy dép,Footwear,3765,4
Hàng cá nhân,Personal Products,3767,4
Thuốc lá,Tobacco,3785,4
Chăm sóc y tế,Health Care Providers,4533,4
Thiết bị y tế,Medical Equipment,4535,4
Dụng cụ y tế,Medical Supplies,4537,4
Công nghệ sinh học,Biotechnology,4573,4
Dược phẩm,Pharmaceuticals,4577,4
Phân phối dược phẩm,Drug Retailers,5333,4
Phân phối thực phẩm,Food Retailers & Wholesalers,5337,4
Bán lẻ phức hợp,Broadline Retailers,5373,4
Dịch vụ tiêu dùng chuyên ngành,Specialized Consumer Services,5377,4
Phân phối hàng chuyên dụng,Specialty Retailers,5379,4
Giải trí & Truyền thông,Broadcasting & Entertainment,5553,4
Dịch vụ truyền thông,Media Agencies,5555,4
"Sách, ấn bản & sản phẩm văn hóa",Publishing,5557,4
Hàng không,Airlines,5751,4
Khách sạn,Hotels,5753,4
Dịch vụ giải trí,Recreational Services,5755,4
Nhà hàng và quán bar,Restaurants & Bars,5757,4
Vận tải hành khách & Du lịch,Travel & Tourism,5759,4
Viễn thông cố định,Fixed Line Telecommunications,6535,4
Viễn thông di động,Mobile Telecommunications,6575,4
Sản xuất & Phân phối Điện,Conventional Electricity,7535,4
Phân phối xăng dầu & khí đốt,Gas Distribution,7573,4
Tiện ích khác,Multiutilities,7575,4
Nước,Water,7577,4
Ngân hàng,Banks,8355,4
Bảo hiểm phi nhân thọ,Property & Casualty Insurance,8536,4
Tái bảo hiểm,Reinsurance,8538,4
Bảo hiểm nhân thọ,Life Insurance,8575,4
Bất động sản,Real Estate Holding & Development,8633,4
"Tư Vấn, Định giá, Môi giới Bất động sản",Real Estate Services,8637,4
Quản lý tài sản,Asset Managers,8771,4
Tài chính cá nhân,Consumer Finance,8773,4
Tài chính đặc biệt,Specialty Finance,8775,4
Môi giới chứng khoán,Investment Services,8777,4
Quỹ đầu tư,Equity Investment Instruments,8985,4
Dịch vụ Máy tính,Computer Services,9533,4
Internet,Internet,9535,4
Phần mềm,Software,9537,4
Phần cứng,Computer Hardware,9572,4
Thiết bị văn phòng,Electronic Office Equipment,9574,4
Thiết bị viễn thông,Telecommunications Equipment,9578,4
Nguyên vật liệu,Basic Materials,1000,1
Công nghiệp,Industrials,2000,1
Hàng Tiêu dùng,Consumer Goods,3000,1
Dược phẩm và Y tế,Health Care,4000,1
Dịch vụ Tiêu dùng,Consumer Services,5000,1
Viễn thông,Telecommunications,6000,1
Tiện ích Cộng đồng,Utilities,7000,1
Tài chính,Financials,8000,1
Ngân hàng,Banks,8301,1
Công nghệ Thông tin,Technology,9000,1



================================================
FILE: assets/data/symbols_by_exchange.csv
================================================
symbol,exchange,type,organ_short_name,organ_name
YTC,UPCOM,STOCK,XNK Y tế TP.HCM,Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố Hồ Chí Minh
YEG,HSX,STOCK,Tập đoàn Yeah1,Công ty Cổ phần Tập đoàn Yeah1
YBM,HSX,STOCK,Khoáng sản CN Yên Bái,Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái
YBC,UPCOM,STOCK,Xi măng và Khoáng sản Yên Bái,Công ty Cổ phần Xi măng và Khoáng sản Yên Bái
XPH,UPCOM,STOCK,Xà phòng Hà Nội,Công ty Cổ phần Xà phòng Hà Nội
XMP,UPCOM,STOCK,Thủy điện Xuân Minh,Công ty Cổ phần Thủy điện Xuân Minh
XMD,UPCOM,STOCK,Xuân Mai - Đạo Tú,Công ty Cổ phần Xuân Mai - Đạo Tú
XMC,UPCOM,STOCK,Bê tông Xuân Mai,Công ty cổ phần Đầu tư và Xây dựng Xuân Mai
XLV,UPCOM,STOCK,XL và DV Sông Đà,Công ty Cổ phần Xây lắp và Dịch vụ Sông Đà
XHC,UPCOM,STOCK,Nội thất Xuân Hòa,Công ty Cổ phần Xuân Hòa Việt Nam
XDH,UPCOM,STOCK,Đầu tư XD Dân dụng Hà Nội,Công ty Cổ phần Đầu tư Xây dựng Dân dụng Hà Nội
XDC,DELISTED,STOCK,Xây dựng Công trình Tân Cảng,Công ty Cổ phần Xây dựng Công trình Tân Cảng
X77,UPCOM,STOCK,Thành An 77,Công ty Cổ phần Thành An 77
X26,UPCOM,STOCK,Công ty 26,Công ty Cổ phần 26
X20,HNX,STOCK,May mặc X20,Công ty Cổ phần X20
WTC,UPCOM,STOCK,Vận tải thủy Vinacomin,Công ty Cổ phần Vận tải thủy - Vinacomin
WSS,HNX,STOCK,Chứng khoán Phố Wall,Công ty Cổ phần Chứng khoán Phố Wall
WSB,UPCOM,STOCK,Bia Sài Gòn - Miền Tây,Công ty Cổ phần Bia Sài Gòn - Miền Tây
WCS,HNX,STOCK,Bến xe Miền Tây,Công ty Cổ phần Bến xe Miền Tây
VXT,UPCOM,STOCK,Kho vận và DV Thương mại,Công ty Cổ phần Kho vận và dịch vụ thương mại
VXP,UPCOM,STOCK,Thuốc Thú y Trung ương VETVACO,Công ty Cổ phần Thuốc Thú y Trung ương VETVACO
VXB,UPCOM,STOCK,VLXD Bến Tre,Công ty Cổ phần Vật liệu xây dựng Bến Tre
VWS,UPCOM,STOCK,Nước và Môi trường VN,Công ty Cổ phần Nước và Môi trường Việt Nam
VW3,UPCOM,STOCK,VIWASEEN.3,Công ty Cổ phần VIWASEEN3
VVS,UPCOM,STOCK,Đầu tư Phát triển Máy Việt Nam,Công ty Cổ phần Đầu tư Phát triển Máy Việt Nam
VVN,UPCOM,STOCK,XD Công nghiệp Việt Nam,Tổng Công ty Cổ phần Xây dựng Công nghiệp Việt Nam
VUA,UPCOM,STOCK,Chứng khoán Stanley Brothers,Công ty Cổ phần Chứng khoán Stanley Brothers
VTZ,HNX,STOCK,Nhựa Việt Thành,Công ty Cổ phần Sản xuất và Thương mại Nhựa Việt Thành
VTX,UPCOM,STOCK,Vận tải Đa phương thức,Công ty Cổ phần Vận tải Đa phương thức VIETRANSTIMEX
VTV,HNX,STOCK,Năng lượng và Môi trường VICEM,Công ty Cổ phần Năng lượng và Môi trường VICEM
VTS,UPCOM,STOCK,Gạch Ngói Từ Sơn,Công ty Cổ phần Gạch Ngói Từ Sơn
VTR,UPCOM,STOCK,Du lịch Vietravel,Công ty Cổ phần Du lịch và tiếp thị giao thông vận tải Việt Nam - Vietravel
VTQ,UPCOM,STOCK,Việt Trung Quảng Bình,Công ty Cổ phần Việt Trung Quảng Bình
VTP,HSX,STOCK,Bưu chính Viettel,Tổng Công ty Cổ phần Bưu chính Viettel
VTO,HSX,STOCK,VITACO,Công ty Cổ phần Vận tải Xăng dầu VITACO
VTM,UPCOM,STOCK,Đưa đón thợ mỏ - Vinacomin,Công ty Cổ phần Vận tải và Đưa đón thợ mỏ - Vinacomin
VTL,UPCOM,STOCK,Vang Thăng Long,Công ty Cổ phần Vang Thăng Long
VTK,UPCOM,STOCK,Tư vấn thiết kế Viettel,Công ty Cổ phần Tư vấn và Dịch vụ Viettel
VTJ,HNX,STOCK,TM và Đầu tư VINATABA,Công ty Cổ phần Thương mại và Đầu tư VI NA TA BA
VTI,UPCOM,STOCK,Sản xuất - XNK Dệt may,Công ty Cổ phần Sản xuất - Xuất nhập khẩu Dệt may
VTH,HNX,STOCK,Dây cáp điện Việt Thái,Công ty Cổ phần Dây cáp điện Việt Thái
VTG,UPCOM,STOCK,Du lịch tỉnh BR-VT,Công ty Cổ phần Du lịch tỉnh Bà Rịa - Vũng Tàu
VTE,UPCOM,STOCK,VINACAP Kim Long,Công ty Cổ phần VINACAP Kim Long
VTD,UPCOM,STOCK,Du lịch Vietourist,Công ty Cổ phần Vietourist Holdings
VTC,HNX,STOCK,Viễn thông VTC,Công ty Cổ phần Viễn Thông VTC
VTB,HSX,STOCK,Viettronics Tân Bình,Công ty Cổ phần Viettronics Tân Bình
VTA,UPCOM,STOCK,Gạch men VITALY,Công ty Cổ phần VITALY
VST,UPCOM,STOCK,Vận tải và Thuê Tàu biển Việt Nam,Công ty Cổ phần Vận tải và Thuê Tàu biển Việt Nam
VSP,DELISTED,STOCK,ShinPetrol,Công ty Cổ phần Vận tải biển và Bất động sản Việt Hải
VSN,UPCOM,STOCK,VN Kỹ Nghệ Súc Sản (VISSAN),Công ty Cổ phần Việt Nam Kỹ Nghệ Súc Sản
VSM,HNX,STOCK,Container Miền Trung,Công ty Cổ phần Container Miền Trung
VSI,HSX,STOCK,Đầu tư và Xây dựng Cấp thoát nước,Công ty Cổ phần Đầu tư và Xây dựng Cấp thoát nước
VSH,HSX,STOCK,Thủy điện Vĩnh Sơn - Sông Hinh,Công ty Cổ phần Thủy điện Vĩnh Sơn - Sông Hinh
VSG,UPCOM,STOCK,Container Phía Nam,Công ty Cổ phần Container Phía Nam
VSF,UPCOM,STOCK,Vinafood 2,Tổng Công ty Lương thực Miền Nam - Công ty Cổ phần
VSE,UPCOM,STOCK,DV Đường cao tốc Việt Nam,Công ty Cổ phần Dịch vụ Đường cao tốc Việt Nam
VSC,HSX,STOCK,VICONSHIP,Công ty Cổ phần Container Việt Nam
VSA,HNX,STOCK,Đại lý Hàng hải VN,Công ty Cổ phần Đại lý Hàng hải Việt Nam
VRG,UPCOM,STOCK,PT Đô thị và KCN Cao su VN,Công ty Cổ phần Phát triển Đô thị và Khu Công nghiệp Cao Su Việt Nam
VRE12007,BOND,BOND,VRE12007 - Trái phiếu,VRE12007 - Trái phiếu
VRE,HSX,STOCK,Vincom Retail,Công ty Cổ phần Vincom Retail
VRC,HSX,STOCK,Bất động sản và Đầu tư VRC,Công ty Cổ phần Bất động sản và Đầu tư VRC
VQC,UPCOM,STOCK,Giám định Vinaconmin,Công ty Cổ phần Giám định Vinaconmin
VPW,UPCOM,STOCK,Cấp thoát nước số 1 Vĩnh Phúc,Công ty Cổ phần Cấp thoát nước số 1 Vĩnh Phúc
VPS,HSX,STOCK,Thuốc sát trùng Việt Nam,Công ty Cổ phần Thuốc sát trùng Việt Nam
VPR,UPCOM,STOCK,VINAPRINT,Công ty Cổ phần VINAPRINT
VPI124001,BOND,BOND,VPI124001 - Trái phiếu,VPI124001 - Trái phiếu
VPI,HSX,STOCK,Đầu tư Văn Phú - Invest,Công ty Cổ phần Đầu tư Văn Phú - Invest
VPH,HSX,STOCK,Vạn Phát Hưng,Công ty Cổ phần Vạn Phát Hưng
VPG,HSX,STOCK,Đầu tư TMại XNK Việt Phát,Công ty Cổ phần Đầu tư Thương mại Xuất nhập khẩu Việt Phát
VPD,HSX,STOCK,Phát triển Điện lực Việt Nam,Công ty Cổ phần Phát triển Điện lực Việt Nam
VPC,UPCOM,STOCK,V- Power,Công ty Cổ phần Đầu tư và Phát triển Năng lượng Việt Nam
VPB,HSX,STOCK,VPBank,Ngân hàng Thương mại Cổ phần Việt Nam Thịnh Vượng
VPA,UPCOM,STOCK,Vận tải Hóa dầu VP,Công ty Cổ phần Vận tải Hóa dầu VP
VOS,HSX,STOCK,Vận tải Biển Việt Nam,Công ty Cổ phần Vận tải Biển Việt Nam
VOC,UPCOM,STOCK,Dầu thực vật Việt Nam,Tổng Công ty Công nghiệp Dầu thực vật Việt Nam - Công ty Cổ phần
VNZ,UPCOM,STOCK,CTCP VNG,Công ty Cổ phần VNG
VNY,UPCOM,STOCK,Thuốc thú y Trung ương I,Công ty Cổ phần Thuốc thú y Trung ương I
VNX,UPCOM,STOCK,QC và Hội chợ Thương mại,Công ty Cổ phần Quảng cáo và Hội chợ Thương mại Vinexad
VNT421032,DELISTED,BOND,VNT421032 - Trái phiếu,VNT421032 - Trái phiếu
VNT,HNX,STOCK,Vận tải ngoại thương,Công ty Cổ phần Giao nhận Vận tải Ngoại Thương
VNS,HSX,STOCK,Ánh Dương Việt Nam,Công ty Cổ phần Ánh Dương Việt Nam
VNR,HNX,STOCK,Tái bảo hiểm Quốc gia,Tổng Công ty Cổ phần Tái bảo hiểm Quốc gia Việt Nam
VNP,UPCOM,STOCK,Nhựa Việt Nam,Công ty Cổ phần Nhựa Việt Nam
VNM,HSX,STOCK,VINAMILK,Công ty Cổ phần Sữa Việt Nam
VNL,HSX,STOCK,Vinalink Logistics,Công ty Cổ phần Logistics Vinalink
VNI,UPCOM,STOCK,ĐT BĐS Việt Nam,Công ty Cổ phần Đầu tư Bất động sản Việt Nam
VNH,UPCOM,STOCK,Đầu tư Việt Việt Nhật,Công ty Cổ phần Đầu tư Việt Việt Nhật
VNG122002,DELISTED,BOND,VNG122002 - Trái phiếu,VNG122002 - Trái phiếu
VNG,HSX,STOCK,DL Thành Thành Công,Công ty Cổ phần Du Lịch Thành Thành Công
VNF,HNX,STOCK,VINAFREIGHT,Công ty Cổ phần Vinafreight
VNE,HSX,STOCK,Xây dựng điện Việt Nam,Tổng Công ty Cổ phần Xây dựng điện Việt Nam
VND122014,DELISTED,BOND,VND122014 - Trái phiếu,VND122014 - Trái phiếu
VND122013,DELISTED,BOND,VND122013 - Trái phiếu,VND122013 - Trái phiếu
VND122012,DELISTED,BOND,VND122012 - Trái phiếu,VND122012 - Trái phiếu
VND,HSX,STOCK,Chứng khoán VNDIRECT,Công ty Cổ phần Chứng khoán VNDIRECT
VNC,HNX,STOCK,VINACONTROL,Công ty Cổ phần Tập đoàn Vinacontrol
VNB,UPCOM,STOCK,Sách Việt Nam,Công ty Cổ phần Sách Việt Nam
VNA,UPCOM,STOCK,Vận tải biển Vinaship,Công ty Cổ phần Vận tải biển Vinaship
VN30F2509,HNX,FU,VN30F2509 - HĐTL,VN30F2509 - HĐTL
VN30F2506,HNX,FU,VN30F2506 - HĐTL,VN30F2506 - HĐTL
VN30F2505,HNX,FU,VN30F2505 - HĐTL,VN30F2505 - HĐTL
VN30F2504,HNX,FU,VN30F2504 - HĐTL,VN30F2504 - HĐTL
VN30F2503,DELISTED,FU,VN30F2503 - HĐTL,VN30F2503 - HĐTL
VN30F2502,DELISTED,FU,VN30F2502 - HĐTL,VN30F2502 - HĐTL
VN30F2501,DELISTED,FU,VN30F2501 - HĐTL,VN30F2501 - HĐTL
VN30F2412,DELISTED,FU,VN30F2412 - HĐTL,VN30F2412 - HĐTL
VN30F2411,DELISTED,FU,VN30F2411 - HĐTL,VN30F2411 - HĐTL
VN30F2410,DELISTED,FU,VN30F2410 - HĐTL,VN30F2410 - HĐTL
VN30F2409,DELISTED,FU,VN30F2409 - HĐTL,VN30F2409 - HĐTL
VN30F2408,DELISTED,FU,VN30F2408 - HĐTL,VN30F2408 - HĐTL
VN30F2407,DELISTED,FU,VN30F2407 - HĐTL,VN30F2407 - HĐTL
VN30F2406,DELISTED,FU,VN30F2406 - HĐTL,VN30F2406 - HĐTL
VN30F2405,DELISTED,FU,VN30F2405 - HĐTL,VN30F2405 - HĐTL
VN30F2404,DELISTED,FU,VN30F2404 - HĐTL,VN30F2404 - HĐTL
VN30F2403,DELISTED,FU,VN30F2403 - HĐTL,VN30F2403 - HĐTL
VN30F2402,DELISTED,FU,VN30F2402 - HĐTL,VN30F2402 - HĐTL
VN30F2401,DELISTED,FU,VN30F2401 - HĐTL,VN30F2401 - HĐTL
VMT,UPCOM,STOCK,Giao nhận Vận tải Miền Trung,Công ty Cổ phần Giao nhận Vận tải Miền Trung
VMS,HNX,STOCK,Phát triển Hàng Hải,Công ty Cổ phần Phát triển Hàng Hải
VMK,UPCOM,STOCK,Vimarko,Công ty Cổ phần Vimarko
VMI,DELISTED,STOCK,KS và Đầu tư VISACO,Công ty Cổ phần Khoáng sản và Đầu tư VISACO
VMG,UPCOM,STOCK,Vimexco Gas,Công ty Cổ phần Thương mại và Dịch vụ Dầu khí Vũng Tàu
VMD,HSX,STOCK,Y Dược phẩm Vimedimex,Công ty Cổ phần Y Dược phẩm Vimedimex
VMC,HNX,STOCK,VIMECO,Công ty Cổ phần VIMECO
VMA,UPCOM,STOCK,CN Ô tô - Vinacomin,Công ty Cổ phần Công nghiệp Ô tô - Vinacomin
VLW,UPCOM,STOCK,Cấp nước Vĩnh Long,Công ty Cổ phần Cấp nước Vĩnh Long
VLP,UPCOM,STOCK,Công trình Công cộng Vĩnh Long,Công ty Cổ phần Công trình Công cộng Vĩnh Long
VLG,UPCOM,STOCK,VIMC Logistics,Công ty Cổ phần VIMC Logistics
VLF,UPCOM,STOCK,Lương thực Vĩnh Long,Công ty Cổ phần Lương thực Thực phẩm Vĩnh Long
VLC,UPCOM,STOCK,Chăn nuôi Việt Nam,Tổng Công ty Chăn nuôi Việt Nam - Công ty Cổ phần
VLB,UPCOM,STOCK,VLXD Biên Hòa,Công ty Cổ phần Xây dựng và Sản xuất Vật liệu Xây dựng Biên Hòa
VLA,HNX,STOCK,PT Công nghệ Văn Lang,Công ty Cổ phần Đầu tư và Phát triển Công nghệ Văn Lang
VKP,UPCOM,STOCK,Nhựa Tân Hóa,Công ty Cổ phần Nhựa Tân Hóa
VKD,DELISTED,STOCK,Nước khoáng Khánh Hòa,Công ty Cổ phần Nước khoáng Khánh Hòa
VKC,UPCOM,STOCK,VKC Holdings,Công ty Cổ phần VKC Holdings
VJC,HSX,STOCK,Vietjet Air,Công ty Cổ phần Hàng không Vietjet
VIX,HSX,STOCK,Chứng khoán VIX,Công ty Cổ phần Chứng khoán VIX
VIW,UPCOM,STOCK,Đầu tư nước và môi trường VN - Viwaseen,Tổng công ty Đầu tư Nước và Môi trường Việt Nam - Công ty Cổ phần
VIT,HNX,STOCK,Viglacera Tiên Sơn,Công ty Cổ phần Viglacera Tiên Sơn
VIS,DELISTED,STOCK,Thép Việt Ý,Công ty Cổ phần Thép Việt Ý
VIR,UPCOM,STOCK,Du lịch Vũng Tàu,Công ty Cổ phần Du lịch Quốc tế Vũng Tàu
VIP,HSX,STOCK,Vận tải Xăng dầu VIPCO,Công ty Cổ phần Vận tải Xăng dầu VIPCO
VIN,UPCOM,STOCK,Kho vận ngoại thương VN,Công ty Cổ phần Giao nhận Kho vận Ngoại thương Việt Nam
VIM,UPCOM,STOCK,Khoáng sản Viglacera,Công ty Cổ phần Khoáng sản Viglacera
VIH,UPCOM,STOCK,Viglacera Hà Nội,Công ty Cổ phần Viglacera Hà Nội
VIG,HNX,STOCK,Chứng khoán Đầu tư Tài chính Việt Nam,Công ty Cổ phần Chứng khoán Đầu tư Tài chính Việt Nam
VIF,HNX,STOCK,Lâm nghiệp Việt Nam,Tổng Công ty Lâm nghiệp Việt Nam - Công ty Cổ phần
VIE,UPCOM,STOCK,CN Viễn thông VI TE CO,Công ty Cổ phần Công nghệ Viễn thông VI TE CO
VID,HSX,STOCK,Viễn Đông,Công ty Cổ phần Đầu tư Phát triển Thương mại Viễn Đông
VIC124005,BOND,BOND,VIC124005 - Trái phiếu,VIC124005 - Trái phiếu
VIC124004,BOND,BOND,VIC124004 - Trái phiếu,VIC124004 - Trái phiếu
VIC124003,BOND,BOND,VIC124003 - Trái phiếu,VIC124003 - Trái phiếu
VIC123029,BOND,BOND,VIC123029 - Trái phiếu,VIC123029 - Trái phiếu
VIC123028,BOND,BOND,VIC123028 - Trái phiếu,VIC123028 - Trái phiếu
VIC121005,DELISTED,BOND,VIC121005 - Trái phiếu,VIC121005 - Trái phiếu
VIC121004,DELISTED,BOND,VIC121004 - Trái phiếu,VIC121004 - Trái phiếu
VIC121003,DELISTED,BOND,VIC121003 - Trái phiếu,VIC121003 - Trái phiếu
VIC,HSX,STOCK,VinGroup,Tập đoàn Vingroup - Công ty CP
VIB,HSX,STOCK,VIBBank,Ngân hàng Thương mại Cổ phần Quốc tế Việt Nam
VHM121025,BOND,BOND,VHM121025 - Trái phiếu,VHM121025 - Trái phiếu
VHM121024,DELISTED,BOND,VHM121024 - Trái phiếu,VHM121024 - Trái phiếu
VHM,HSX,STOCK,Vinhomes,Công ty Cổ phần Vinhomes
VHL,HNX,STOCK,Viglacera Hạ Long,Công ty Cổ phần Viglacera Hạ Long
VHI,DELISTED,STOCK,,
VHH,UPCOM,STOCK,Kinh doanh nhà Thành Đạt,Công ty Cổ phần Đầu tư Kinh doanh nhà Thành Đạt
VHG,UPCOM,STOCK,Công ty Cổ phần Đầu tư và Phát triển Việt Trung Nam,Công ty Cổ phần Đầu tư và Phát triển Việt Trung Nam
VHF,UPCOM,STOCK,Chế biến lương thực Vĩnh Hà,Công ty Cổ phần Xây dựng và Chế biến lương thực Vĩnh Hà
VHE,HNX,STOCK,Dược liệu và Thực phẩm VN,Công ty Cổ phần Dược liệu và Thực phẩm Việt Nam
VHD,UPCOM,STOCK,PT Nhà và Đô thị Vinaconex,Công ty Cổ phần Đầu tư phát triển nhà và đô thị VINAHUD
VHC,HSX,STOCK,Thủy sản Vĩnh Hoàn,Công ty Cổ phần Vĩnh Hoàn
VGV,UPCOM,STOCK,Tư vấn Xây dựng Việt Nam,Tổng Công ty Tư vấn Xây dựng Việt Nam - CTCP
VGT,UPCOM,STOCK,VINATEX,Tập đoàn Dệt May Việt Nam
VGS,HNX,STOCK,Ống thép Việt Đức,Công ty Cổ phần Ống thép Việt - Đức VG PIPE
VGR,UPCOM,STOCK,Cảng xanh VIP,Công ty Cổ phần Cảng xanh VIP
VGP,HNX,STOCK,Cảng Rau Quả,Công ty Cổ phần Cảng Rau Quả
VGL,UPCOM,STOCK,Mạ kẽm công nghiệp Vingal-Vnsteel,Công ty Cổ phần Mạ kẽm công nghiệp Vingal-Vnsteel
VGI,UPCOM,STOCK,Đầu tư Quốc tế Viettel,Tổng Công ty Cổ phần Đầu tư Quốc tế Viettel
VGG,UPCOM,STOCK,May Việt Tiến,Tổng Công Ty Cổ phần May Việt Tiến
VGC,HSX,STOCK,Tổng Công ty Viglacera,Tổng Công ty Viglacera - Công ty Cổ phần
VFS,HNX,STOCK,Chứng khoán Nhất Việt,Công ty Cổ phần Chứng khoán Nhất Việt
VFR,UPCOM,STOCK,Vận tải Vietfracht,Công ty Cổ phần Vận tải và Thuê tàu
VFG,HSX,STOCK,Khử trùng Việt Nam,Công ty Cổ phần Khử trùng Việt Nam
VFC,UPCOM,STOCK,Vận tải biển VINAFCO,Công ty Cổ phần VINAFCO
VET,UPCOM,STOCK,Thuốc thú y trung ương Navetco,Công ty Cổ phần Thuốc Thú y Trung ương NAVETCO
VES,UPCOM,STOCK,MÊ CA VNECO,Công ty Cổ phần Đầu tư và Xây dựng Điện MÊ CA VNECO
VEF,UPCOM,STOCK,Hội chợ Triển lãm Việt Nam,Công ty Cổ phần Trung tâm Hội chợ Triển lãm Việt Nam
VEC,UPCOM,STOCK,Điện tử và Tin học VN,Tổng Công ty Cổ phần Điện tử và Tin học Việt Nam
VEA,UPCOM,STOCK,Máy động lực và Máy NN,Tổng Công ty Máy động lực và Máy nông nghiệp Việt Nam - CTCP
VE9,UPCOM,STOCK,VNECO 9,Công ty Cổ phần Đầu tư và Xây dựng VNECO 9
VE8,HNX,STOCK,Xây dựng Điện Vneco 8,Công ty Cổ phần Xây dựng Điện Vneco 8
VE4,HNX,STOCK,Xây dựng điện VNECO4,Công ty Cổ phần Xây dựng điện VNECO4
VE3,HNX,STOCK,Xây dựng điện VNECO 3,Công ty Cổ phần Xây dựng điện VNECO 3
VE2,UPCOM,STOCK,Xây dựng Điện VNECO 2,Công ty Cổ phần Xây dựng Điện VNECO 2
VE1,HNX,STOCK,VNECO 1,Công ty Cổ phần Xây dựng điện VNECO 1
VDT,UPCOM,STOCK,Lưới thép Bình Tây,Công ty Cổ phần Lưới thép Bình Tây
VDS,HSX,STOCK,Chứng khoán Rồng Việt,Công ty Cổ phần Chứng khoán Rồng Việt
VDP,HSX,STOCK,Dược phẩm VIDIPHA,Công ty Cổ phần Dược phẩm Trung ương VIDIPHA
VDN,UPCOM,STOCK,Vinatex Đà Nẵng,Công ty Cổ phần Vinatex Đà Nẵng
VDM,DELISTED,STOCK,Viện Nghiên cứu Dệt may,Công ty Cổ phần - Viện Nghiên cứu Dệt may
VDL,HNX,STOCK,Thực phẩm Lâm Đồng,Công ty Cổ phần Thực phẩm Lâm Đồng
VDG,UPCOM,STOCK,Vạn Đạt Group,Công ty Cổ phần Vạn Đạt Group
VDB,UPCOM,STOCK,Vận tải và CB Than Đông Bắc,Công ty Cổ phần Vận tải và Chế biến Than Đông Bắc
VCX,UPCOM,STOCK,Xi măng Yên Bình,Công ty Cổ phần Xi măng Yên Bình
VCW,UPCOM,STOCK,Đầu tư Nước sạch Sông Đà,Công ty Cổ phần Đầu tư Nước sạch Sông Đà
VCT,UPCOM,STOCK,Tư vấn XD Vinaconex,Công ty Cổ phần Tư vấn Xây dựng Vinaconex
VCS,HNX,STOCK,VICOSTONE,Công ty Cổ phần VICOSTONE
VCR,UPCOM,STOCK,Vinaconex - ITC,Công ty Cổ phần Đầu tư và Phát triển Du lịch Vinaconex
VCP,UPCOM,STOCK,Xây dựng và Năng lượng VCP,Công ty Cổ phần Xây dựng và Năng lượng VCP
VCM,HNX,STOCK,BV Life,Công ty Cổ phần BV Life
VCI,HSX,STOCK,Chứng khoán Vietcap,Công ty Cổ phần Chứng khoán Vietcap
VCG,HSX,STOCK,VINACONEX,Tổng Công ty Cổ phần Xuất nhập khẩu và Xây dựng Việt Nam
VCF,HSX,STOCK,VinaCafé Biên Hòa,Công ty Cổ phần VinaCafé Biên Hòa
VCE,UPCOM,STOCK,Xây lắp Môi trường,Công ty Cổ phần Xây lắp Môi trường
VCC,HNX,STOCK,Vinaconex 25,Công ty Cổ phần Vinaconex 25
VCB,HSX,STOCK,Vietcombank,Ngân hàng Thương mại Cổ phần Ngoại thương Việt Nam
VCA,HSX,STOCK,Thép VICASA - VNSTEEL,Công ty Cổ phần Thép VICASA - VNSTEEL
VC9,HNX,STOCK,Xây dựng số 9,Công ty Cổ phần Xây dựng số 9 - VC9
VC7,HNX,STOCK,BGI Group,Công ty Cổ phần Tập đoàn BGI
VC6,HNX,STOCK,Visicons,Công ty cổ phần Xây dựng và Đầu tư Visicons
VC5,UPCOM,STOCK,Xây dựng Số 5,Công ty Cổ phần Xây dựng Số 5
VC3,HNX,STOCK,Tập đoàn Nam Mê Kông,Công ty Cổ phần Tập đoàn Nam Mê Kông
VC2,HNX,STOCK,Đầu tư và Xây dựng VINA2,Công ty Cổ phần Đầu tư và Xây dựng VINA2
VC1,HNX,STOCK,Xây dựng số 1,Công ty Cổ phần Xây dựng số 1
VBH,UPCOM,STOCK,Điện tử Bình Hòa,Công ty Cổ phần Điện tử Bình Hòa
VBG,UPCOM,STOCK,Địa chất Việt Bắc - TKV,Công ty Cổ phần Địa chất Việt Bắc - TKV
VBC,HNX,STOCK,Nhựa - Bao bì Vinh,"Công ty Cổ phần Nhựa, Bao bì Vinh"
VBB124007,BOND,BOND,VBB124007 - Trái phiếu,VBB124007 - Trái phiếu
VBB123017,BOND,BOND,VBB123017 - Trái phiếu,VBB123017 - Trái phiếu
VBB122033,DELISTED,BOND,VBB122033 - Trái phiếu,VBB122033 - Trái phiếu
VBB,UPCOM,STOCK,VietBank,Ngân hàng Thương mại Cổ phần Việt Nam Thương Tín
VBA124019,BOND,BOND,VBA124019 - Trái phiếu,VBA124019 - Trái phiếu
VBA123036,BOND,BOND,VBA123036 - Trái phiếu,VBA123036 - Trái phiếu
VBA122001,BOND,BOND,VBA122001 - Trái phiếu,VBA122001 - Trái phiếu
VBA121033,BOND,BOND,VBA121033 - Trái phiếu,VBA121033 - Trái phiếu
VAV,UPCOM,STOCK,VIWACO,Công ty Cổ phần VIWACO
VAT,DELISTED,STOCK,Viễn thông Vạn Xuân,Công ty Cổ phần VT Vạn Xuân
VAF,HSX,STOCK,Phân lân Văn Điển,Công ty Cổ phần Phân lân nung chảy Văn Điển
VAB,UPCOM,STOCK,Ngân hàng Việt Á,Ngân hàng Thương mại Cổ phần Việt Á
V21,HNX,STOCK,Vinaconex 21,Công ty Cổ phần Vinaconex 21
V15,UPCOM,STOCK,Vinaconex 15,Công ty Cổ phần Xây dựng số 15
V12,HNX,STOCK,VINACONEX 12,Công ty Cổ phần Xây dựng số 12
V11,UPCOM,STOCK,VINACONEX No11,Công ty Cổ phần Xây dựng số 11
UXC,UPCOM,STOCK,Chế biến Thủy sản Út Xi,Công ty Cổ phần Chế biến Thủy sản Út Xi
USD,UPCOM,STOCK,Công trình Đô thị Sóc Trăng,Công ty Cổ phần Công trình Đô thị Sóc Trăng
USC,UPCOM,STOCK,Khảo sát và Xây dựng - USCO,Công ty Cổ phần Khảo sát và Xây dựng - USCO
UPH,UPCOM,STOCK,Dược phẩm TW25,Công ty Cổ phần Dược phẩm TW25
UPC,UPCOM,STOCK,Cây xanh Vũng Tàu,Công ty Cổ phần Phát triển Công viên Cây xanh và Đô thị Vũng Tàu
UNI,HNX,STOCK,Đầu tư và Phát triển Sao Mai Việt,Công ty Cổ phần Đầu tư và Phát triển Sao Mai Việt
UMC,UPCOM,STOCK,Công trình đô thị Nam Định,Công ty Cổ phần Công trình đô thị Nam Định
UIC,HSX,STOCK,Phát triển Nhà và Đô thị IDICO,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị IDICO
UEM,UPCOM,STOCK,Cơ điện Uông Bí - Vinacomin,Công ty Cổ phần Cơ điện Uông Bí - Vinacomin
UDL,UPCOM,STOCK,Đô thị và Môi trường Đắk Lắk,Công ty Cổ phần Đô thị và Môi trường Đắk Lắk
UDJ,UPCOM,STOCK,Becamex UDJ,Công ty Cổ phần Phát triển Đô thị
UDC,UPCOM,STOCK,XD&PT Đô thị Bà Rịa - Vũng Tàu,Công ty Cổ phần Xây dựng và Phát triển đô thị Tỉnh Bà Rịa - Vũng Tàu
UCT,UPCOM,STOCK,Đô thị Cần Thơ,Công ty Cổ phần Đô thị Cần Thơ
TYA,HSX,STOCK,Dây và Cáp điện Taya,Công ty Cổ phần Dây và Cáp điện Taya Việt Nam
TXM,HNX,STOCK,Thạch cao Xi măng,Công ty Cổ phần VICEM Thạch cao Xi Măng
TW3,UPCOM,STOCK,Dược TW3,Công ty Cổ phần Dược Trung Ương 3
TVW,DELISTED,STOCK,Cấp thoát nước Trà Vinh,Công ty Cổ phần Cấp thoát nước Trà Vinh
TVT,HSX,STOCK,May Việt Thắng,Tổng Công ty Việt Thắng - CTCP
TVS,HSX,STOCK,Chứng khoán Thiên Việt,Công ty Cổ phần Chứng khoán Thiên Việt
TVP,DELISTED,STOCK,Dược phẩm TV.Pharm,Công ty Cổ phần Dược phẩm TV.Pharm
TVN,UPCOM,STOCK,Thép Việt Nam,Tổng Công ty Thép Việt Nam - Công ty Cổ phần
TVM,UPCOM,STOCK,Tư vấn đầu tư Mỏ,Công ty Cổ phần Tư vấn đầu tư Mỏ và công nghiệp - Vinacomin
TVH,UPCOM,STOCK,Tư vấn XD công trình Hàng hải,Công ty Cổ phần Tư vấn Xây dựng công trình Hàng hải
TVG,UPCOM,STOCK,XD Giao thông Vận tải,Công ty Cổ phần Tư vấn Đầu tư và Xây dựng Giao thông Vận tải
TVD,HNX,STOCK,Than Vàng Danh,Công ty Cổ phần Than Vàng Danh - Vinacomin
TVC,HNX,STOCK,Tập đoàn Trí Việt,Công ty Cổ phần Tập đoàn Quản lý Tài sản Trí Việt
TVB,HSX,STOCK,Chứng khoán Trí Việt,Công ty Cổ phần Chứng khoán Trí Việt
TVA,UPCOM,STOCK,Sứ Viglacera Thanh Trì,Công ty cổ phần Sứ Viglacera Thanh Trì
TV6,UPCOM,STOCK,TM ĐT xây lắp điện Thịnh Vượng,Công ty Cổ phần Tập đoàn EMA LAND
TV4,HNX,STOCK,Tư vấn XD Điện 4,Công ty Cổ phần Tư vấn Xây dựng Điện 4
TV3,HNX,STOCK,Tư vấn XD điện 3,Công ty Cổ phần Tư vấn Xây dựng Điện 3
TV2,HSX,STOCK,Tư vấn XD Điện 2,Công ty Cổ phần Tư vấn Xây dựng Điện 2
TV1,UPCOM,STOCK,Tư vấn XD Điện 1,Công ty Cổ phần Tư vấn Xây dựng Điện 1
TUG,UPCOM,STOCK,Lai dắt và VT cảng Hải Phòng,Công ty Cổ phần Lai dắt và Vận tải Cảng Hải Phòng
TTZ,UPCOM,STOCK,Xây dựng Tiến Trung,Công ty Cổ phần Đầu tư Xây dựng và Công nghệ Tiến Trung
TTT,HNX,STOCK,Du lịch - Thương Mại Tây Ninh,Công ty Cổ phần Du Lịch - Thương Mại Tây Ninh
TTS,UPCOM,STOCK,Cán thép Thái Trung,Công ty Cổ phần Cán thép Thái Trung
TTP,DELISTED,STOCK,Bao bì nhựa Tân Tiến,Công ty Cổ phần Bao bì Tân Tiến
TTN,UPCOM,STOCK,Công nghệ và Truyền thông VN,Công ty Cổ phần Công nghệ & Truyền thông Việt Nam
TTL,HNX,STOCK,TCT Thăng Long,Tổng Công ty Thăng Long - Công ty Cổ phần
TTH,HNX,STOCK,TM và DV Tiến Thành,Công ty Cổ phần Thương mại và Dịch vụ Tiến Thành
TTG,UPCOM,STOCK,May Thanh Trì,Công ty Cổ phần May Thanh Trì
TTF,HSX,STOCK,Gỗ Trường Thành,Công ty Cổ phần Tập đoàn Kỹ nghệ Gỗ Trường Thành
TTE,HSX,STOCK,ĐT Năng lượng Trường Thịnh,Công ty Cổ phần Đầu tư Năng lượng Trường Thịnh
TTD,UPCOM,STOCK,Bệnh viện Tim Tâm Đức,Công ty Cổ phần Bệnh viện Tim Tâm Đức
TTC,HNX,STOCK,Gạch men Thanh Thanh,Công ty Cổ phần Gạch men Thanh Thanh
TTB,UPCOM,STOCK,Tập đoàn Tiến Bộ,Công ty Cổ phần TTBGROUP
TTA,HSX,STOCK,XD và PT Trường Thành,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Trường Thành
TT6,UPCOM,STOCK,Tien Thinh Group,Công ty Cổ Phần Tập Đoàn Tiến Thịnh
TST,UPCOM,STOCK,Dịch vụ KT Viễn Thông,Công ty Cổ phần Dịch vụ Kỹ thuật Viễn thông
TSJ,UPCOM,STOCK,Hanoi Toserco,Công ty Cổ phần Du lịch Dịch vụ Hà Nội
TSG,UPCOM,STOCK,TTTH Đường sắt Sài Gòn,Công ty Cổ phần Thông tin Tín hiệu Đường sắt Sài Gòn
TSD,UPCOM,STOCK,Du lịch Trường Sơn Coecco,Công ty Cổ phần Du lịch Trường Sơn Coecco
TSC,HSX,STOCK,Kỹ thuật NN Cần Thơ,Công ty Cổ phần Vật tư Kỹ thuật Nông nghiệp Cần Thơ
TSB,HNX,STOCK,Ắc quy Tia Sáng,Công ty Cổ phần Ắc quy Tia Sáng
TSA,UPCOM,STOCK,Đầu Tư Và Xây Lắp Trường Sơn,Công ty Cổ Phần Đầu Tư Và Xây Lắp Trường Sơn
TS5,DELISTED,STOCK,,
TS4,UPCOM,STOCK,Thủy sản số 4,Công ty Cổ phần Thủy sản số 4
TS3,UPCOM,STOCK,Trường Sơn 532,Công ty Cổ phần Trường Sơn 532
TRT,UPCOM,STOCK,CTCP RedstarCera,Công ty Cổ phần RedstarCera
TRS,UPCOM,STOCK,Vận tải và Dịch vụ Hàng Hải,Công ty Cổ phần Vận tải và Dịch vụ Hàng Hải
TRC,HSX,STOCK,Cao su Tây Ninh,Công ty Cổ phần Cao su Tây Ninh
TRA,HSX,STOCK,Traphaco,Công ty Cổ phần Traphaco
TR1,UPCOM,STOCK,Vận Tải 1 Traco,Công ty Cổ phần Vận Tải 1 Traco
TQW,UPCOM,STOCK,Cấp thoát nước Tuyên Quang,Công ty Cổ phần Cấp thoát nước Tuyên Quang
TQN,UPCOM,STOCK,Thông Quảng Ninh,Công ty Cổ phần Thông Quảng Ninh
TPS,UPCOM,STOCK,Bến bãi vận tải Sài Gòn,Công ty Cổ phần Bến bãi vận tải Sài Gòn
TPP,HNX,STOCK,Nhựa Tân Phú VN,Công ty Cổ phần Tân Phú Việt Nam
TPH,HNX,STOCK,In Sách giáo khoa TP.Hà Nội,Công ty Cổ phần In Sách giáo khoa tại Thành phố Hà Nội
TPC,HSX,STOCK,Nhựa Tân Đại Hưng,Công ty Cổ phần Nhựa Tân Đại Hưng
TPB,HSX,STOCK,TPBank,Ngân hàng Thương mại Cổ phần Tiên Phong
TOW,UPCOM,STOCK,Cấp nước Trà Nóc - Ô Môn,Công ty Cổ phần Cấp nước Trà Nóc - Ô Môn
TOT,HNX,STOCK,Vận tải Transimex,Công ty Cổ phần Transimex Logistics
TOS,UPCOM,STOCK,Dịch vụ biển Tân Cảng,Công ty Cổ phần Dịch vụ biển Tân Cảng
TOP,UPCOM,STOCK,Phân phối Top One,Công ty Cổ phần Phân phối Top One
TNW,UPCOM,STOCK,Nước sạch Thái Nguyên,Công ty Cổ phần Nước sạch Thái Nguyên
TNV,UPCOM,STOCK,Xe đạp Thống Nhất,Công ty Cổ phần Thống Nhất Hà Nội
TNT,HSX,STOCK,Tập đoàn TNT,Công ty Cổ phần Tập đoàn TNT
TNS,UPCOM,STOCK,Thép tấm lá Thống Nhất,Công ty Cổ phần Thép tấm lá Thống Nhất
TNP,UPCOM,STOCK,Cảng Thị Nại,Công ty Cổ phần Cảng Thị Nại
TNM,UPCOM,STOCK,XNK và XD Công trình,Công ty Cổ phần Xuất nhập khẩu và Xây dựng Công trình
TNI,HSX,STOCK,Tập đoàn Thành Nam,Công ty Cổ phần Tập đoàn Thành Nam
TNH,HSX,STOCK,Tập đoàn Bệnh viện TNH,Công ty Cổ phần Tập đoàn Bệnh viện TNH
TNG122017,BOND,BOND,TNG122017 - Trái phiếu,TNG122017 - Trái phiếu
TNG119007,DELISTED,BOND,TNG119007 - Trái phiếu,TNG119007 - Trái phiếu
TNG,HNX,STOCK,Đầu tư và Thương mại TNG,Công ty Cổ phần Đầu tư và Thương mại TNG
TNC,HSX,STOCK,Cao su Thống Nhất,Công ty Cổ phần Cao su Thống Nhất
TNB,UPCOM,STOCK,Thép Nhà Bè,Công ty Cổ phần Thép Nhà Bè - VNSTEEL
TNA,UPCOM,STOCK,XNK Thiên Nam,Công ty Cổ phần Thương mại Xuất nhập khẩu Thiên Nam
TN1122016,DELISTED,BOND,TN1122016 - Trái phiếu,TN1122016 - Trái phiếu
TN1,HSX,STOCK,Rox Key Holdings,Công ty Cổ phần Rox Key Holdings
TMX,HNX,STOCK,Thương mại Xi măng,Công ty Cổ phần VICEM Thương mại Xi măng
TMW,UPCOM,STOCK,Gỗ Tân Mai,Công ty Cổ phần Tổng hợp Gỗ Tân Mai
TMT,HSX,STOCK,Ô tô TMT,Công ty Cổ phần Ô tô TMT
TMS,HSX,STOCK,Transimex,Công ty Cổ phần Transimex
TMP,HSX,STOCK,Thủy điện Thác Mơ,Công ty Cổ phần Thủy điện Thác Mơ
TMG,UPCOM,STOCK,Kim loại màu Thái Nguyên - Vimico,Công ty Cổ phần Kim loại màu Thái Nguyên - Vimico
TMC,HNX,STOCK,XNK Thủ Đức,Công ty Cổ phần Thương mại Xuất nhập khẩu Thủ Đức
TMB,HNX,STOCK,Than Miền Bắc - Vinacomin,Công ty Cổ phần Kinh doanh Than Miền Bắc - Vinacomin
TLT,UPCOM,STOCK,Viglacera Thăng long,Công ty Cổ phần Viglacera Thăng Long
TLP,UPCOM,STOCK,Thương mại XNK Thanh Lễ,Tổng Công ty Thương mại Xuất nhập khẩu Thanh Lễ - CTCP
TLI,UPCOM,STOCK,May Quốc tế Thắng Lợi,Công ty Cổ phần May Quốc tế Thắng Lợi
TLH,HSX,STOCK,Thép Tiến Lên,Công ty Cổ phần Tập đoàn Thép Tiến Lên
TLG,HSX,STOCK,Tập đoàn Thiên Long,Công ty Cổ phần Tập đoàn Thiên Long
TLD,HSX,STOCK,ĐT XD và PT Đô thị Thăng Long,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Đô thị Thăng Long
TL4,UPCOM,STOCK,XD Thủy lợi 4,Tổng Công ty Xây dựng Thủy lợi 4 - Công ty Cổ phần
TKU,HNX,STOCK,Công nghiệp Tung Kuang,Công ty Cổ phần Công nghiệp Tung Kuang
TKG,UPCOM,STOCK,SX và T.Mại Tùng Khánh,Công ty Cổ phần Sản xuất và Thương mại Tùng Khánh
TKC,UPCOM,STOCK,Địa ốc Tân Kỷ,Công ty Cổ phần Xây dựng và Kinh doanh Địa ốc Tân Kỷ
TKA,UPCOM,STOCK,Bao bì Tân Khánh An,Công ty Cổ phần Bao bì Tân Khánh An
TJC,HNX,STOCK,Dịch vụ Vận tải và Thương mại,Công ty Cổ phần Dịch vụ Vận tải và Thương mại
TIX,HSX,STOCK,TANIMEX,Công ty Cổ phần Sản xuất Kinh doanh Xuất nhập khẩu Dịch vụ và Đầu tư Tân Bình
TIS,UPCOM,STOCK,Gang thép Thái Nguyên,Công ty Cổ phần Gang thép Thái Nguyên
TIP,HSX,STOCK,PT KCN Tín Nghĩa,Công ty Cổ phần Phát triển Khu công nghiệp Tín Nghĩa
TIN,UPCOM,STOCK,Tài chính Cổ phần Tín Việt,Công ty Tài chính Cổ phần Tín Việt
TIG,HNX,STOCK,Tập đoàn Đầu tư Thăng Long,Công ty Cổ phần Tập đoàn Đầu tư Thăng Long
TIE,UPCOM,STOCK,Điện tử TIE,Công ty Cổ phần TIE
TID,UPCOM,STOCK,Tổng Công ty Tín Nghĩa,Công ty Cổ phần Tổng Công ty Tín Nghĩa
THW,UPCOM,STOCK,Cấp nước Tân Hòa,Công ty Cổ phần Cấp nước Tân Hòa
THU,UPCOM,STOCK,Môi trường và CTĐT Thanh Hóa,Công ty Cổ phần Môi trường và Công trình đô thị Thanh Hóa
THT,HNX,STOCK,Than Hà Tu,Công ty Cổ phần Than Hà Tu - Vinacomin
THS,HNX,STOCK,Thanh Hoa Sông Đà,Công ty Cổ phần Thanh Hoa Sông Đà
THP,UPCOM,STOCK,Thủy sản và TMại Thuận Phước,Công ty Cổ phần Thủy sản và Thương mại Thuận Phước
THN,UPCOM,STOCK,Cấp nước Thanh Hóa,Công ty Cổ phần Cấp nước Thanh Hóa
THM,UPCOM,STOCK,Tứ Hải Hà Nam,Công ty Cổ phần Tứ Hải Hà Nam
THI,DELISTED,STOCK,Thiết bị điện,Công ty Cổ phần Thiết bị điện
THG,HSX,STOCK,XD Tiền Giang,Công ty Cổ phần Đầu tư và Xây dựng Tiền Giang
THD,HNX,STOCK,Công ty Thaiholdings,Công ty Cổ phần Thaiholdings
THB,HNX,STOCK,Bia Hà Nội - Thanh Hóa,Công ty Cổ phần Bia Hà Nội - Thanh Hóa
TH1,UPCOM,STOCK,XNK Tổng hợp 1,Công ty Cổ phần Xuất nhập khẩu Tổng hợp I Việt Nam
TGP,UPCOM,STOCK,Cáp Trường Phú,Công ty Cổ phần Trường Phú
TGG,UPCOM,STOCK,The Golden Group,Công ty Cổ phần The Golden Group
TFC,HNX,STOCK,CTCP Trang,Công ty Cổ phần Trang
TET,HNX,STOCK,May mặc Miền Bắc,Công ty Cổ phần Vải sợi May mặc Miền Bắc
TEL,UPCOM,STOCK,Phát triển Công trình Viễn thông,Công ty Cổ phần Phát triển Công trình Viễn thông
TEG,HSX,STOCK,TECGROUP,Công ty Cổ phần Năng Lượng và Bất động sản Trường Thành
TED,UPCOM,STOCK,Thiết kế GTVT,Tổng Công ty Tư vấn Thiết kế Giao thông Vận tải - CTCP
TEC,DELISTED,STOCK,Traenco,Công ty Cổ phần Traenco
TDW,HSX,STOCK,Cấp nước Thủ Đức,Công ty Cổ phần Cấp nước Thủ Đức
TDT,HNX,STOCK,Đầu tư và Phát triển TDT,Công ty Cổ phần Đầu tư và Phát triển TDT
TDS,UPCOM,STOCK,Thép Thủ Đức,Công ty Cổ phần Thép Thủ Đức - VNSTEEL
TDP124010,BOND,BOND,TDP124010 - Trái phiếu,TDP124010 - Trái phiếu
TDP,HSX,STOCK,Công ty Thuận Đức,Công ty Cổ phần Thuận Đức
TDN,DELISTED,STOCK,Than Đèo Nai,Công ty Cổ phần Than Đèo Nai - Vinacomin
TDM,HSX,STOCK,Nước Thủ Dầu Một,Công ty Cổ phần Nước Thủ Dầu Một
TDI,DELISTED,STOCK,Tập đoàn TDI,Công ty Cổ phần Tập đoàn TDI 
TDH,HSX,STOCK,Thủ Đức House,Công ty Cổ phần Phát triển Nhà Thủ Đức
TDG,HSX,STOCK,Đầu tư TDG Global,Công ty Cổ phần Đầu tư TDG Global
TDF,UPCOM,STOCK,Xây dựng Trung Đô,Công ty Cổ phần Trung Đô
TDC,HSX,STOCK,Becamex TDC,Công ty Cổ phần Kinh doanh và Phát triển Bình Dương
TDB,UPCOM,STOCK,Thủy điện Định Bình,Công ty Cổ phần Thủy điện Định Bình
TCX124013,BOND,BOND,TCX124013 - Trái phiếu,TCX124013 - Trái phiếu
TCX124012,BOND,BOND,TCX124012 - Trái phiếu,TCX124012 - Trái phiếu
TCX124011,BOND,BOND,TCX124011 - Trái phiếu,TCX124011 - Trái phiếu
TCW,UPCOM,STOCK,Kho Vận Tân Cảng,Công ty Cổ phần Kho Vận Tân Cảng
TCT,HSX,STOCK,Cáp treo Tây Ninh,Công ty Cổ phần Cáp treo Núi Bà Tây Ninh
TCR,HSX,STOCK,Gốm sứ TAICERA,Công ty Cổ phần Công nghiệp Gốm sứ TAICERA
TCO,HSX,STOCK,TCO Holdings,Công ty Cổ phần TCO Holdings
TCM,HSX,STOCK,Dệt may Thành Công,Công ty Cổ phần Dệt may - Đầu tư - Thương mại Thành Công
TCL,HSX,STOCK,Tan Cang Logistics,Công ty Cổ phần Đại lý Giao nhận Vận tải Xếp dỡ Tân Cảng
TCK,UPCOM,STOCK,COMA,Tổng Công ty Cơ khí Xây dựng - CTCP
TCJ,UPCOM,STOCK,Tô Châu,Công ty Cổ phần Tô Châu
TCI,HSX,STOCK,Chứng khoán Thành Công,Công ty Cổ phần Chứng khoán Thành Công
TCH,HSX,STOCK,ĐT DV Tài chính Hoàng Huy,Công ty Cổ phần Đầu tư Dịch vụ Tài chính Hoàng Huy
TCD,HSX,STOCK,Tập đoàn Xây dựng Tracodi,Công ty cổ phần Tập đoàn Xây dựng Tracodi
TCB,HSX,STOCK,Techcombank,Ngân hàng Thương mại Cổ phần Kỹ thương Việt Nam
TC6,DELISTED,STOCK,Than Cọc Sáu,Công ty Cổ phần Than Cọc Sáu - Vinacomin
TBX,HNX,STOCK,Xi măng Thái Bình,Công ty Cổ phần Xi măng Thái Bình
TBW,UPCOM,STOCK,Nước sạch Thái Bình,Công ty cổ phần Nước sạch Thái Bình
TBT,UPCOM,STOCK,XD Công trình GT Bến Tre,Công ty Cổ phần Xây dựng Công trình Giao thông Bến Tre
TBR,UPCOM,STOCK,Địa ốc Tân Bình,Công ty Cổ phần Địa ốc Tân Bình
TBH,UPCOM,STOCK,Tổng Bách Hóa,Công ty Cổ phần Tổng Bách Hóa
TBD,UPCOM,STOCK,Thiết bị điện Đông Anh,Tổng công ty Thiết bị điện Đông Anh - Công ty Cổ phần
TBC,HSX,STOCK,Thủy điện Thác Bà,Công ty Cổ phần Thủy điện Thác Bà
TB8,UPCOM,STOCK,SX và KD Vật tư Thiết bị - VVMI,Công ty Cổ phần Sản xuất và Kinh doanh Vật tư Thiết bị - VVMI
TAW,UPCOM,STOCK,Cấp nước Trung An,Công ty Cổ phần Cấp nước Trung An
TAR,UPCOM,STOCK,Nông nghiệp CN cao Trung An,Công ty Cổ phần Nông nghiệp Công nghệ cao Trung An
TAP,DELISTED,STOCK,Đô thị Tân An,Công ty Cổ phần Đô thị Tân An
TAN,UPCOM,STOCK,Cà phê Thuận An,Công ty Cổ phần Cà phê Thuận An
TAL,UPCOM,STOCK,Đầu Tư Bất Động Sản Taseco,Công Ty Cổ Phần Đầu Tư Bất Động Sản Taseco
TAG,DELISTED,STOCK,Trần Anh Company,Công ty Cổ phần Thế giới số Trần Anh
TAC,DELISTED,STOCK,Dầu Tường An,Công ty Cổ phần Dầu Thực vật Tường An
TAB,UPCOM,STOCK,Freco Việt Nam,Công ty Cổ phần Freco Việt Nam
TA9,HNX,STOCK,Xây lắp Thành An 96,Công ty Cổ phần Xây lắp Thành An 96
TA6,UPCOM,STOCK,Đầu tư và Xây lắp Thành An 665,Công ty Cổ phần Đầu tư và Xây lắp Thành An 665
TA3,DELISTED,STOCK,ĐT và Xây lắp Thành An 386,Công ty cổ phần Đầu tư và Xây lắp Thành An 386
T12,DELISTED,STOCK,,
SZL,HSX,STOCK,Sonadezi Long Thành,Công ty Cổ phần Sonadezi Long Thành
SZG,UPCOM,STOCK,Sonadezi Giang Điền,Công ty Cổ phần Sonadezi Giang Điền
SZE,UPCOM,STOCK,Môi trường Sonadezi,Công ty Cổ phần Môi trường Sonadezi
SZC,HSX,STOCK,Sonadezi Châu Đức,Công ty Cổ phần Sonadezi Châu Đức
SZB,HNX,STOCK,Sonadezi Long Bình,Công ty Cổ phần Sonadezi Long Bình
SWC,UPCOM,STOCK,Đường Sông Miền Nam,Tổng Công ty Cổ phần Đường Sông Miền Nam
SVT,HSX,STOCK,Công nghệ SG Viễn Đông,Công ty Cổ phần Công nghệ Sài Gòn Viễn Đông
SVN,HNX,STOCK,Tập đoàn Vexilla Việt Nam,Công ty Cổ phần Tập đoàn Vexilla Việt Nam
SVL,DELISTED,STOCK,,
SVI,HSX,STOCK,Bao bì Biên Hòa,Công ty Cổ phần Bao bì Biên Hòa
SVH,UPCOM,STOCK,Thủy điện Sông Vàng,Công ty Cổ phần Thủy điện Sông Vàng
SVG,UPCOM,STOCK,Hơi kỹ nghệ Que hàn,Công ty Cổ phần Hơi kỹ nghệ Que hàn
SVD,HSX,STOCK,Đầu tư & Thương mại Vũ Đăng,Công ty Cổ phần Đầu tư & Thương mại Vũ Đăng
SVC,HSX,STOCK,SAVICO,Công ty Cổ phần Dịch vụ tổng hợp Sài Gòn
STW,UPCOM,STOCK,Cấp nước Sóc Trăng,Công ty Cổ phần Cấp nước Sóc Trăng
STT,UPCOM,STOCK,Vận chuyển Sài Gòn Tourist,Công ty Cổ phần Vận chuyển Sài Gòn Tourist
STS,UPCOM,STOCK,Dịch vụ vận tải Sài Gòn,Công ty Cổ phần Dịch vụ vận tải Sài Gòn
STP,HNX,STOCK,CN Thương Mại Sông Đà,Công ty Cổ phần Công nghiệp Thương mại Sông Đà
STL,UPCOM,STOCK,Sông Đà - Thăng Long,Công ty Cổ phần Sông Đà - Thăng Long
STK,HSX,STOCK,Sợi Thế Kỷ,Công ty Cổ phần Sợi Thế Kỷ
STH,UPCOM,STOCK,Phát hành sách Thái Nguyên,Công ty Cổ phần Phát hành sách Thái Nguyên
STG,HSX,STOCK,Kho Vận Miền Nam,Công ty Cổ phần Kho Vận Miền Nam
STC,HNX,STOCK,Sách và TB Trường học TP HCM,Công ty Cổ phần Sách và Thiết bị trường học Thành phố Hồ Chí Minh
STB,HSX,STOCK,Sacombank,Ngân hàng Thương mại Cổ phần Sài Gòn Thương Tín
ST8,HSX,STOCK,Tập đoàn ST8,Công ty Cổ phần Tập đoàn ST8
SSU,DELISTED,STOCK,Môi trường Đô thị Sóc Sơn,Công ty Cổ phần Môi trường Đô thị Sóc Sơn
SSN,UPCOM,STOCK,Thủy sản Sài Gòn,Công ty Cổ phần Xuất nhập khẩu Thủy sản Sài Gòn
SSM,HNX,STOCK,Kết cấu Thép VNECO,Công ty Cổ phần Chế tạo kết cấu thép VNECO.SSM
SSI,HSX,STOCK,Chứng khoán SSI,Công ty Cổ phần Chứng khoán SSI
SSH,UPCOM,STOCK,Phát triển Sunshine Homes,Công ty Cổ phần Phát triển Sunshine Homes
SSG,UPCOM,STOCK,Vận tải Biển Hải Âu,Công ty Cổ phần Vận tải Biển Hải Âu
SSF,UPCOM,STOCK,Giáo dục G Sài Gòn,Công ty Cổ phần Giáo dục G Sài Gòn
SSC,HSX,STOCK,Giống cây trồng Miền Nam,Công ty Cổ phần Giống cây trồng Miền Nam
SSB,HSX,STOCK,SeABank,Ngân hàng Thương mại Cổ phần Đông Nam Á
SRT,DELISTED,STOCK,Vận tải Đường sắt Sài Gòn,Công ty Cổ phần Vận tải Đường sắt Sài Gòn
SRF,HSX,STOCK,SEAREFICO,Công ty Cổ phần Searefico
SRC,HSX,STOCK,Cao su Sao Vàng,Công ty Cổ phần Cao su Sao Vàng
SRB,UPCOM,STOCK,SARA,Công ty Cổ phần Tập đoàn Sara
SRA,HNX,STOCK,SARA Việt Nam,Công ty Cổ phần SARA Việt Nam
SQC,UPCOM,STOCK,Khoáng sản SG-Quy Nhơn,Công ty Cổ phần Khoáng sản Sài Gòn - Quy Nhơn
SPV,UPCOM,STOCK,Thủy đặc sản,Công ty Cổ phần Thủy Đặc Sản
SPP,DELISTED,STOCK,Bao bì Nhựa SG,Công ty Cổ phần Bao bì Nhựa Sài Gòn
SPM,HSX,STOCK,S.P.M CORP,Công ty Cổ phần S.P.M
SPI,HNX,STOCK,Spiral Galaxy,Công ty Cổ phần Spiral Galaxy
SPH,UPCOM,STOCK,XNK Thủy sản Hà Nội,Công ty Cổ phần Xuất Nhập khẩu Thủy sản Hà Nội
SPD,UPCOM,STOCK,Thủy sản Miền Trung,Công ty Cổ phần Xuất nhập khẩu Thủy sản Miền Trung
SPC,HNX,STOCK,BV Thực vật Sài Gòn,Công ty Cổ phần Bảo vệ Thực vật Sài Gòn
SPB,UPCOM,STOCK,Sợi Phú Bài,Công ty Cổ phần Sợi Phú Bài
SPA,DELISTED,STOCK,Bao bì Sài Gòn,Công ty Cổ phần Bao bì Sài Gòn
SP2,UPCOM,STOCK,Thủy điện Sử Pán 2,Công ty Cổ phần Thủy điện Sử Pán 2
SON,DELISTED,STOCK,,
SNZ,UPCOM,STOCK,SONADEZI,Tổng Công ty Cổ phần Phát triển Khu Công nghiệp
SNC,UPCOM,STOCK,Thủy sản Năm Căn,Công ty Cổ phần Xuất nhập khẩu Thủy sản Năm Căn
SMT,HNX,STOCK,SAMETEL,Công ty Cổ phần SAMETEL
SMN,HNX,STOCK,Sách và thiết bị GD miền Nam,Công ty Cổ phần Sách và thiết bị giáo dục Miền Nam
SMC,HSX,STOCK,Đầu tư Thương mại SMC,Công ty Cổ phần Đầu tư Thương mại SMC
SMB,HSX,STOCK,Bia Sài Gòn - Miền Trung,Công ty Cổ phần Bia Sài Gòn - Miền Trung
SMA,HSX,STOCK,Thiết bị Phụ tùng Sài Gòn,Công ty Cổ phần Thiết bị Phụ tùng Sài Gòn
SLS,HNX,STOCK,Mía đường Sơn La,Công ty Cổ phần Mía đường Sơn La
SKV,UPCOM,STOCK,NGK Yến sào Khánh Hòa,Công ty Cổ phần Nước Giải khát Yến sào Khánh Hòa
SKN,UPCOM,STOCK,NGK Sanna Khánh Hòa,Công ty Cổ phần Nước giải khát Sanna Khánh Hòa
SKH,UPCOM,STOCK,NGK Sanest Khánh Hòa,Công ty Cổ phần Nước giải khát Sanest Khánh Hòa
SKG,HSX,STOCK,Tàu Cao tốc Superdong,Công ty Cổ phần Tàu Cao tốc Superdong - Kiên Giang
SJS,HSX,STOCK,SJ Group,Công ty Cổ phần SJ Group
SJM,UPCOM,STOCK,Sông Đà 19,Công ty Cổ phần Sông Đà 19
SJG,UPCOM,STOCK,Tổng Công ty Sông Đà,Tổng Công ty Sông Đà
SJF,UPCOM,STOCK,Đầu tư Sao Thái Dương,Công ty Cổ phần Đầu tư Sao Thái Dương
SJE,HNX,STOCK,Sông Đà 11,Công ty Cổ phần Sông Đà 11
SJD,HSX,STOCK,Thủy điện Cần Đơn,Công ty Cổ phần Thủy điện Cần Đơn
SJC,UPCOM,STOCK,Sông Đà 1.01,Công ty Cổ phần Sông Đà 1.01
SJ1,HNX,STOCK,Nông nghiệp Hùng Hậu,Công ty Cổ phần Nông nghiệp Hùng Hậu
SIV,UPCOM,STOCK,SIVICO,Công ty Cổ phần SIVICO
SIP,HSX,STOCK,Đầu tư Sài Gòn VRG,Công ty Cổ phần Đầu tư Sài Gòn VRG
SII,UPCOM,STOCK,Hạ tầng Nước Sài Gòn,Công ty Cổ phần Hạ tầng Nước Sài Gòn
SIG,UPCOM,STOCK,Đầu tư và Thương mại Sông Đà,Công ty Cổ phần Đầu tư và Thương mại Sông Đà
SID,UPCOM,STOCK,Đầu tư PT Sài Gòn Co.op,Công ty Cổ phần Đầu tư Phát triển Sài Gòn Co.op
SIC,DELISTED,STOCK,Công ty Cổ phần ANI,Công ty Cổ phần ANI
SHX,DELISTED,STOCK,Sài Gòn Hỏa xa,Công ty Cổ phần Sài Gòn Hỏa xa
SHS,HNX,STOCK,Chứng khoán SG - HN,Công ty Cổ phần Chứng khoán Sài Gòn - Hà Nội
SHP,HSX,STOCK,Thủy điện Miền Nam,Công ty Cổ phần Thủy điện Miền Nam
SHN,HNX,STOCK,Đầu tư Tổng hợp Hà Nội,Công ty Cổ phần Đầu tư Tổng hợp Hà Nội
SHI,HSX,STOCK,Quốc tế Sơn Hà,Công ty Cổ phần Quốc tế Sơn Hà
SHG,UPCOM,STOCK,Tổng Công ty Sông Hồng,Tổng Công ty Cổ phần Sông Hồng
SHE,HNX,STOCK,PT Năng Lượng Sơn Hà,Công ty Cổ phần Phát triển Năng Lượng Sơn Hà
SHC,UPCOM,STOCK,Hàng hải Sài Gòn,Công ty Cổ phần Hàng hải Sài Gòn
SHB,HSX,STOCK,SHB,Ngân hàng Thương mại Cổ phần Sài Gòn – Hà Nội
SHA,HSX,STOCK,Sơn Hà Sài Gòn,Công ty Cổ phần Sơn Hà Sài Gòn
SGT,HSX,STOCK,Sài Gòn Telecom,Công ty Cổ phần Công nghệ Viễn thông Sài Gòn
SGS,UPCOM,STOCK,Vận tải biển Sài Gòn,Công ty Cổ phần Vận tải biển Sài Gòn
SGR,HSX,STOCK,Địa ốc Sài Gòn,Công ty Cổ phần Tổng Công ty Cổ phần Địa ốc Sài Gòn
SGP,UPCOM,STOCK,Cảng Sài Gòn,Công ty Cổ phần Cảng Sài Gòn
SGO,DELISTED,STOCK,Dầu thực vật Sài Gòn,Công ty Cổ phần Dầu thực vật Sài Gòn
SGN,HSX,STOCK,Phục vụ mặt đất Sài Gòn,Công ty Cổ phần Phục vụ mặt đất Sài Gòn
SGI,UPCOM,STOCK,ĐT PT Sài Gòn 3 Group,Công ty Cổ phần Đầu tư phát triển Sài Gòn 3 Group
SGH,HNX,STOCK,Khách sạn Sài Gòn,Công ty Cổ phần Khách sạn Sài Gòn
SGD,HNX,STOCK,Sách GD TP.HCM,Công ty Cổ phần Sách Giáo dục tại Thành phố Hồ Chí Minh
SGC,HNX,STOCK,Bánh phồng tôm Sa Giang,Công ty Cổ phần Xuất nhập khẩu Sa Giang
SGB,UPCOM,STOCK,Sài Gòn Công thương,Ngân hàng Thương mại Cổ phần Sài Gòn Công thương
SFN,HNX,STOCK,Dệt lưới Sài Gòn,Công ty Cổ phần Dệt lưới Sài Gòn
SFI,HSX,STOCK,Vận tải SAFI,Công ty Cổ phần Đại lý Vận tải SAFI
SFG,HSX,STOCK,Phân bón Miền Nam,Công ty Cổ phần Phân bón Miền Nam
SFC,HSX,STOCK,Nhiên liệu Sài Gòn,Công ty Cổ phần Nhiên liệu Sài Gòn
SEP,UPCOM,STOCK,Thương mại Quảng Trị,Công ty Cổ phần Tổng Công ty Thương mại Quảng Trị
SED,HNX,STOCK,Phát triển GD Phương Nam,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Phương Nam
SEB,HNX,STOCK,Điện miền Trung,Công ty Cổ phần Đầu tư và Phát triển Điện Miền Trung
SEA,UPCOM,STOCK,SEAPRODEX,Tổng Công ty Thủy sản Việt Nam - Công ty Cổ phần
SDY,UPCOM,STOCK,Xi măng Sông Đà Yaly,Công ty Cổ phần Xi măng Sông Đà Yaly
SDX,UPCOM,STOCK,PCCC và Đầu tư XD Sông Đà,Công ty Cổ phần Phòng cháy chữa cháy và Đầu tư Xây dựng Sông Đà
SDV,UPCOM,STOCK,Dịch vụ Sonadezi,Công ty Cổ phần Dịch vụ Sonadezi
SDU,HNX,STOCK,Đô thị Sông Đà,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Đô thị Sông Đà
SDT,UPCOM,STOCK,Sông Đà 10,Công ty Cổ phần Sông Đà 10
SDP,UPCOM,STOCK,Công ty Cổ phần SDP,Công ty Cổ phần SDP
SDN,HNX,STOCK,Sơn Đồng Nai,Công ty Cổ phần Sơn Đồng Nai
SDK,UPCOM,STOCK,Cơ khí Luyện Kim,Công ty Cổ phần Cơ khí Luyện Kim
SDJ,UPCOM,STOCK,Sông Đà 25,Công ty Cổ phần Sông Đà 25
SDH,DELISTED,STOCK,Hạ tầng Sông Đà,Công ty Cổ phần Xây dựng hạ tầng Sông Đà
SDG,HNX,STOCK,Sadico Cần Thơ,Công ty Cổ phần Sadico Cần Thơ
SDD,UPCOM,STOCK,Xây lắp Sông Đà,Công ty Cổ phần Đầu tư và Xây lắp Sông Đà
SDC,HNX,STOCK,Tư vấn Sông Đà,Công ty Cổ phần Tư vấn Sông Đà
SDB,UPCOM,STOCK,Sông Đà 207,Công ty Cổ phần Sông Đà 207
SDA,HNX,STOCK,XKLĐ Sông Đà,Công ty Cổ phần SIMCO Sông Đà
SD9,HNX,STOCK,Sông Đà 9,Công ty Cổ phần Sông Đà 9
SD8,UPCOM,STOCK,Sông Đà 8,Công ty Cổ phần Sông Đà 8
SD7,UPCOM,STOCK,Sông Đà 7,Công ty Cổ phần Sông Đà 7
SD6,UPCOM,STOCK,Sông Đà 6,Công ty Cổ phần Sông Đà 6
SD5,HNX,STOCK,Sông Đà 5,Công ty Cổ phần Sông Đà 5
SD4,UPCOM,STOCK,Sông Đà 4,Công ty Cổ phần Sông Đà 4
SD3,UPCOM,STOCK,Sông Đà 3,Công ty Cổ phần Sông Đà 3
SD2,UPCOM,STOCK,Sông Đà 2,Công ty Cổ phần Sông Đà 2
SD1,UPCOM,STOCK,Sông Đà 1,Công ty Cổ phần Sông Đà 1
SCY,UPCOM,STOCK,Đóng tàu Sông Cấm,Công ty Cổ phần Đóng tàu Sông Cấm
SCV,DELISTED,STOCK,"Visalco.,JSC",Công ty Cổ phần Muối Việt Nam
SCS,HSX,STOCK,DV Hàng hóa Sài Gòn,Công ty Cổ phần Dịch vụ Hàng hóa Sài Gòn
SCR,HSX,STOCK,TTC Land,Công ty Cổ phần Địa Ốc Sài Gòn Thương Tín
SCO,UPCOM,STOCK,Công nghiệp Thủy Sản,Công ty Cổ phần Công nghiệp Thủy sản
SCL,UPCOM,STOCK,Sông Đà Cao Cường,Công ty Cổ phần Sông Đà Cao Cường
SCJ,UPCOM,STOCK,Xi măng Sài Sơn,Công ty Cổ phần Xi măng Sài Sơn
SCI,HNX,STOCK,SCI E&C,Công ty Cổ phần SCI E&C
SCG,HNX,STOCK,Xây dựng SCG,Công ty Cổ phần Tập đoàn Xây dựng SCG
SCD,UPCOM,STOCK,Giải khát Chương Dương,Công ty Cổ phần Nước giải khát Chương Dương
SCC,UPCOM,STOCK,Thương mại Đầu tư SHB,Công ty Cổ phần Thương mại Đầu tư SHB
SCA,DELISTED,STOCK,Nông nghiệp Sông Con,Công ty Cổ phần Nông nghiệp Sông Con
SC5,HSX,STOCK,Xây dựng Số 5,Công ty Cổ phần Xây dựng số 5
SBV,HSX,STOCK,Siam Brothers Việt Nam,Công ty Cổ phần Siam Brothers Việt Nam
SBT121002,DELISTED,BOND,SBT121002 - Trái phiếu,SBT121002 - Trái phiếu
SBT,HSX,STOCK,Mía đường Thành Thành Công - Biên Hòa,Công ty Cổ phần Thành Thành Công - Biên Hòa
SBS,UPCOM,STOCK,Chứng khoán Sacombank,Công ty Cổ phần Chứng khoán SBS
SBR,UPCOM,STOCK,Cao su Sông Bé,Công ty Cổ phần Cao su Sông Bé
SBM,UPCOM,STOCK,Đầu tư PT Bắc Minh,Công ty Cổ phần Đầu tư phát triển Bắc Minh
SBL,UPCOM,STOCK,Bia Sài Gòn - Bạc Liêu,Công ty Cổ phần Bia Sài Gòn - Bạc Liêu
SBH,UPCOM,STOCK,Thủy điện Sông Ba Hạ,Công ty Cổ phần Thủy điện Sông Ba Hạ
SBG,HSX,STOCK,Tập Đoàn Cơ Khí Công Nghệ Cao Siba,Công ty Cổ Phần Tập Đoàn Cơ Khí Công Nghệ Cao Siba
SBD,UPCOM,STOCK,Công nghệ Sao Bắc Đẩu,Công ty Cổ phần Công nghệ Sao Bắc Đẩu
SBB,UPCOM,STOCK,Bia Sài Gòn Bình Tây,Công ty cổ phần Tập đoàn Bia Sài Gòn Bình Tây
SBA,HSX,STOCK,Sông Ba JSC,Công ty Cổ phần Sông Ba
SB1,UPCOM,STOCK,Bia Sài Gòn - Nghệ Tĩnh,Công ty Cổ phần Bia Sài Gòn - Nghệ Tĩnh
SAV,HSX,STOCK,Savimex,Công ty Cổ phần Hợp tác Kinh tế và Xuất nhập khẩu Savimex
SAS,UPCOM,STOCK,DV Hàng không sân bay TSN,Công ty Cổ phần Dịch vụ Hàng không Sân bay Tân Sơn Nhất
SAP,UPCOM,STOCK,In Sách TP.HCM,Công ty Cổ phần In Sách Giáo khoa TP.Hồ Chí Minh
SAM,HSX,STOCK,SAM Holdings,Công ty Cổ phần SAM Holdings
SAL,UPCOM,STOCK,Trục vớt Cứu hộ Việt Nam,Công ty Cổ phần Trục vớt Cứu hộ Việt Nam
SAF,HNX,STOCK,Thực Phẩm SAFOCO,Công ty Cổ phần Lương thực Thực phẩm SAFOCO
SAC,UPCOM,STOCK,Dịch vụ cảng Sài Gòn,Công ty Cổ phần Xếp dỡ và Dịch vụ cảng Sài Gòn
SAB,HSX,STOCK,SABECO,Tổng Công ty Cổ phần Bia - Rượu - Nước Giải khát Sài Gòn
S99,HNX,STOCK,Sông Đà 9.09 (SCI),Công ty Cổ phần SCI
S96,UPCOM,STOCK,Sông Đà 9.06,Công ty Cổ phần Sông Đà 9.06
S74,UPCOM,STOCK,Sông Đà 7.04,Công ty Cổ phần Sông Đà 7.04
S72,UPCOM,STOCK,Sông Đà 7.02,Công ty Cổ phần Sông Đà 7.02
S55,HNX,STOCK,Sông Đà 505,Công ty Cổ phần Sông Đà 505
S4A,HSX,STOCK,Thủy điện Sê San 4A,Công ty Cổ phần Thủy điện Sê San 4A
S27,UPCOM,STOCK,Sông Đà 27,Công ty Cổ phần Sông Đà 27
S12,UPCOM,STOCK,Sông Đà 12,Công ty Cổ phần Sông Đà 12
RYG,HSX,STOCK,Sản xuất và Đầu tư Hoàng Gia,Công ty Cổ phần Sản xuất và Đầu tư Hoàng Gia
RTB,UPCOM,STOCK,Cao su Tân Biên,Công ty Cổ phần Cao su Tân Biên
ROS,DELISTED,STOCK,Xây dựng FLC FAROS,Công ty Cổ phần Xây dựng FLC FAROS
RIC,UPCOM,STOCK,Quốc tế Hoàng Gia,Công ty Cổ phần Quốc Tế Hoàng Gia
RGC,DELISTED,STOCK,Đầu tư PV-Inconess,Công ty Cổ phần Đầu tư PV-Inconess
REE,HSX,STOCK,Cơ Điện Lạnh REE,Công ty Cổ phần Cơ điện Lạnh
RDP,HSX,STOCK,Nhựa Rạng Đông,Công ty Cổ phần Rạng Đông Holding
RCL,HNX,STOCK,Địa Ốc Chợ Lớn,Công ty Cổ phần Địa ốc Chợ Lớn
RCD,UPCOM,STOCK,XD - Địa ốc Cao su,Công ty Cổ phần Xây dựng - Địa ốc Cao su
RCC,UPCOM,STOCK,Công trình Đường sắt,Công ty Cổ phần Tổng Công ty Công trình Đường sắt
RBC,UPCOM,STOCK,Công Nghiệp và Xuất nhập khẩu Cao Su,Công ty Cổ phần Công Nghiệp và Xuất nhập khẩu Cao Su
RAT,UPCOM,STOCK,VT và TM Đường sắt,Công ty Cổ phần Vận tải và Thương mại Đường sắt
RAL,HSX,STOCK,Bóng đèn Phích nước Rạng Đông,Công ty Cổ phần Bóng đèn Phích nước Rạng Đông
QTP,UPCOM,STOCK,Nhiệt điện Quảng Ninh,Công ty Cổ phần Nhiệt điện Quảng Ninh
QTC,HNX,STOCK,GTVT Quảng Nam,Công ty Cổ phần Công trình Giao thông Vận tải Quảng Nam
QST,HNX,STOCK,Sách Quảng Ninh,Công ty Cổ phần Sách và Thiết bị trường học Quảng Ninh
QSP,UPCOM,STOCK,Tân cảng Quy Nhơn,Công ty Cổ phần Tân cảng Quy Nhơn
QPH,UPCOM,STOCK,Thủy điện Quế Phong,Công ty Cổ phần Thủy điện Quế Phong
QNW,UPCOM,STOCK,Cấp thoát nước và XD Quảng Ngãi,Công ty Cổ phần Cấp thoát nước và xây dựng Quảng Ngãi
QNU,UPCOM,STOCK,Môi trường Đô thị Quảng Nam,Công ty Cổ phần Môi trường Đô thị Quảng Nam
QNT,UPCOM,STOCK,Tư vấn và Đầu tư Phát triển Quảng Nam,Công ty Cổ phần Tư vấn và Đầu tư Phát triển Quảng Nam
QNS,UPCOM,STOCK,Đường Quảng Ngãi,Công ty Cổ phần Đường Quảng Ngãi
QNP,HSX,STOCK,Cảng Quy Nhơn,Công ty Cổ phần Cảng Quy Nhơn
QNC,UPCOM,STOCK,Xi măng Quảng Ninh,Công ty Cổ phần Xi măng và Xây dựng Quảng Ninh
QLT,DELISTED,STOCK,Bảo trì đường thủy nội địa số 10,Công ty Cổ phần Quản lý Bảo trì Đường thủy Nội địa số 10
QLD,DELISTED,STOCK,QL và XD Giao thông Lạng Sơn,Công ty Cổ phần Quản lý và Xây dựng Giao thông Lạng Sơn
QHW,UPCOM,STOCK,Nước khoáng Quảng Ninh,Công ty Cổ phần Nước khoáng Quảng Ninh
QHD,HNX,STOCK,Que hàn Việt Đức,Công ty Cổ phần Que hàn điện Việt Đức
QCG,HSX,STOCK,Quốc Cường Gia Lai,Công ty Cổ phần Quốc Cường Gia Lai
QCC,UPCOM,STOCK,Đầu tư Xây dựng và Phát triển Hạ tầng Viễn Thông,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Hạ tầng Viễn Thông
QBS,UPCOM,STOCK,Xuất nhập khẩu Quảng Bình,Công ty Cổ phần Xuất nhập khẩu Quảng Bình
PYU,DELISTED,STOCK,Công trình đô thị Phúc Yên,Công ty Cổ phần Môi trường và Công trình đô thị Phúc Yên
PXT,UPCOM,STOCK,Xây lắp Đường ống Dầu khí,Công ty Cổ phần Xây lắp Đường ống Bể chứa Dầu khí
PXS,UPCOM,STOCK,Lắp máy Dầu khí,Công ty Cổ phần Kết cấu Kim loại và Lắp máy Dầu khí
PXM,UPCOM,STOCK,Xây lắp Dầu khí Miền Trung,Công ty Cổ phần Xây lắp Dầu khí Miền Trung
PXL,UPCOM,STOCK,KCN Dầu khí Long Sơn,Công ty Cổ phần Đầu tư Khu Công Nghiệp Dầu khí Long Sơn
PXI,UPCOM,STOCK,XL CN và dân dụng Dầu khí,Công ty Cổ phần Xây dựng Công nghiệp và Dân dụng Dầu khí
PXC,UPCOM,STOCK,Phát triển Đô thị Dầu khí,Công ty Cổ phần Phát triển Đô thị Dầu khí
PXA,UPCOM,STOCK,Đầu tư và Thương mại Dầu khí Nghệ An,Công ty Cổ phần Đầu tư và Thương mại Dầu khí Nghệ An
PX1,UPCOM,STOCK,Xi măng Sông Lam 2,Công ty Cổ phần Xi măng Sông Lam 2
PWS,UPCOM,STOCK,Cấp thoát nước Phú Yên,Công ty Cổ phần Cấp thoát nước Phú Yên
PWA,UPCOM,STOCK,Bất động sản dầu khí,Công ty Cổ phần Bất động sản dầu khí
PVY,UPCOM,STOCK,Chế tạo Giàn khoan Dầu khí,Công ty Cổ phần Chế tạo Giàn khoan Dầu khí
PVX,UPCOM,STOCK,Xây lắp Dầu khí Việt Nam,Tổng Công ty Cổ phần Xây lắp Dầu khí Việt Nam
PVV,UPCOM,STOCK,Vinaconex 39,Công ty Cổ phần Vinaconex 39
PVT,HSX,STOCK,Vận tải Dầu khí PVTrans,Tổng Công ty Cổ phần Vận tải Dầu khí
PVS,HNX,STOCK,DVKT Dầu khí PTSC,Tổng Công ty Cổ phần Dịch vụ Kỹ thuật Dầu khí Việt Nam
PVR,UPCOM,STOCK,Đầu tư PVR Hà Nội,Công ty Cổ phần Đầu tư PVR Hà Nội
PVP,HSX,STOCK,Vận tải Dầu khí Thái Bình Dương,Công ty Cổ phần Vận tải Dầu khí Thái Bình Dương
PVO,UPCOM,STOCK,Dầu nhờn PV Oil,Công ty Cổ phần Dầu nhờn PV Oil
PVM,UPCOM,STOCK,Thiết bị dầu khí (PV MACHINO),Công ty Cổ phần Máy - Thiết bị Dầu khí
PVL,UPCOM,STOCK,Đầu tư Nhà Đất Việt,Công ty Cổ phần Đầu tư Nhà Đất Việt
PVI,HNX,STOCK,Bảo hiểm PVI,Công ty Cổ phần PVI
PVH,UPCOM,STOCK,Xây lắp Dầu khí Thanh Hóa,Công ty Cổ phần Xây lắp Dầu khí Thanh Hóa
PVG,HNX,STOCK,Kinh doanh LPG Việt Nam,Công ty Cổ phần Kinh doanh LPG Việt Nam
PVE,UPCOM,STOCK,Tư vấn Dầu khí,Tổng Công ty Tư vấn Thiết kế Dầu khí - Công ty Cổ phần
PVD,HSX,STOCK,Khoan Dầu khí PVDrilling,Tổng Công ty Cổ phần Khoan và Dịch vụ khoan Dầu khí
PVC,HNX,STOCK,Hóa chất và Dịch vụ Dầu khí,Tổng Công ty Hóa chất và Dịch vụ Dầu khí - Công ty Cổ phần
PVB,HNX,STOCK,Bọc ống Dầu khí Việt Nam,Công ty Cổ phần Bọc ống Dầu khí Việt Nam
PVA,UPCOM,STOCK,Xây dựng dầu khí Nghệ An,Công ty Cổ phần Tổng Công ty Xây lắp Dầu khí Nghệ An
PV2,HNX,STOCK,Đầu tư PV2,Công ty Cổ phần Đầu tư PV2
PTX,HNX,STOCK,VT Petrolimex Nghệ Tĩnh,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Nghệ Tĩnh
PTV,UPCOM,STOCK,Thương mại dầu khí,Công ty Cổ phần Thương mại Dầu khí
PTT,UPCOM,STOCK,Vận tải Dầu khí Đông Dương,Công ty Cổ phần Vận tải Dầu khí Đông Dương
PTS,HNX,STOCK,Vận tải Petrolimex HP,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Hải Phòng
PTP,UPCOM,STOCK,Viễn Thông và In Bưu điện,Công ty Cổ phần PTP
PTO,UPCOM,STOCK,Xây dựng Công trình Bưu điện,Công ty Cổ phần Dịch vụ - Xây dựng Công trình Bưu điện
PTN,DELISTED,STOCK,Phát triển Nhà Khánh Hòa,Công ty Cổ phần Phát triển Nhà Khánh Hòa
PTL,HSX,STOCK,Victory Group,Công ty Cổ phần Victory Group
PTI,HNX,STOCK,Bảo hiểm Bưu điện,Tổng Công ty Cổ phần Bảo hiểm Bưu điện
PTH,UPCOM,STOCK,Vận tải và DV Petrolimex Hà Tây,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Hà Tây
PTG,UPCOM,STOCK,May Phan Thiết,Công ty Cổ phần May Xuất Khẩu Phan Thiết
PTE,UPCOM,STOCK,Xi măng Phú Thọ,Công ty Cổ phần Xi măng Phú Thọ
PTD,HNX,STOCK,Thiết kế-XD-TM Phúc Thịnh,Công ty Cổ phần Thiết kế - Xây dựng - Thương mại Phúc Thịnh
PTC,HSX,STOCK,Đầu tư ICAPITAL,Công ty Cổ phần Đầu tư ICAPITAL
PTB,HSX,STOCK,Công ty Cổ phần Phú Tài,Công ty Cổ phần Phú Tài
PSW,HNX,STOCK,Phân bón hóa chất dầu khí Tây Nam Bộ,Công ty Cổ phần Phân bón và hóa chất dầu khí Tây Nam Bộ
PSP,UPCOM,STOCK,DV Dầu Khí Đình Vũ,Công ty Cổ phần Cảng Dịch vụ Dầu khí Đình Vũ
PSN,UPCOM,STOCK,PTSC Thanh Hóa,Công ty Cổ phần Dịch vụ Kỹ thuật PTSC Thanh Hóa
PSL,UPCOM,STOCK,Chăn nuôi Phú Sơn,Công ty Cổ phần Chăn nuôi Phú Sơn
PSI,HNX,STOCK,Chứng khoán Dầu khí,Công ty Cổ phần Chứng khoán Dầu khí
PSH,HSX,STOCK,TMại ĐT Dầu khí Nam Sông Hậu,Công ty Cổ phần Thương mại Đầu tư Dầu khí Nam Sông Hậu
PSG,UPCOM,STOCK,XL Dầu khí Sài Gòn,Công ty Cổ phần Đầu tư và Xây lắp Dầu khí Sài Gòn
PSE,HNX,STOCK,Phân bón và hóa chất dầu khí Đông Nam Bộ,Công ty Cổ phần Phân bón và hóa chất dầu khí Đông Nam Bộ
PSD,HNX,STOCK,Phân phối Tổng hợp Dầu khí,Công ty Cổ phần Dịch vụ Phân phối Tổng hợp Dầu khí
PSC,HNX,STOCK,Vận tải Petrolimex SG,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Sài Gòn
PSB,UPCOM,STOCK,Sao Mai Bến Đình,Công ty Cổ phần Đầu tư Dầu khí Sao Mai Bến Đình
PRT,UPCOM,STOCK,Sản xuất - XNK Bình Dương,Tổng Công ty Sản xuất - Xuất nhập khẩu Bình Dương - Công ty cổ phần
PRO,UPCOM,STOCK,Procimex Việt Nam,Công ty Cổ phần Procimex Việt Nam
PRE,HNX,STOCK,Tái bảo hiểm PVI,Tổng Công ty Cổ phần Tái bảo hiểm Hà Nội
PRC,HNX,STOCK,Vận tải Portserco,Công ty Cổ phần Logistics Portserco
PQN,UPCOM,STOCK,DV Dầu khí Quảng Ngãi PTSC,Công ty Cổ phần Dịch vụ Dầu khí Quảng Ngãi PTSC
PPY,HNX,STOCK,Xăng dầu dầu khí Phú Yên,Công ty Cổ phần Xăng dầu dầu khí Phú Yên
PPT,HNX,STOCK,Petro Times,Công ty cổ phần Petro Times
PPS,HNX,STOCK,DVKT Điện lực Dầu khí,Công ty Cổ phần Dịch vụ Kỹ thuật Điện lực Dầu khí Việt Nam
PPP,HNX,STOCK,PP.Pharco,Công ty Cổ phần Dược phẩm Phong Phú
PPI,UPCOM,STOCK,BĐS Thái Bình Dương,Công ty Cổ phần Đầu tư và Phát triển dự án hạ tầng Thái Bình Dương
PPH,UPCOM,STOCK,Phong Phú Corp.,Tổng Công ty Cổ phần Phong Phú
PPE,HNX,STOCK,PVPower Engineering,Công ty Cổ phần Tư vấn Đầu tư PP Enterprise
PPC,HSX,STOCK,Nhiệt điện Phả Lại,Công ty Cổ phần Nhiệt điện Phả Lại
POW,HSX,STOCK,Điện lực Dầu khí Việt Nam,Tổng Công ty Điện lực Dầu khí Việt Nam - CTCP
POV,UPCOM,STOCK,PV Oil Vũng Áng,Công ty Cổ phần Xăng dầu Dầu khí Vũng Áng
POT,HNX,STOCK,Thiết bị Bưu điện Postef,Công ty Cổ phần Thiết bị Bưu điện
POS,UPCOM,STOCK,Bảo dưỡng công trình DK biển,"Công ty Cổ phần Dịch vụ lắp đặt, vận hành và bảo dưỡng công trình dầu khí biển PTSC"
POM,UPCOM,STOCK,Thép Pomina,Công ty Cổ phần Thép Pomina
POB,UPCOM,STOCK,PVOIL Thái Bình,Công ty Cổ phần Xăng dầu Dầu khí Thái Bình
PNT,UPCOM,STOCK,Kỹ thuật XD Phú Nhuận,Công ty Cổ phần Kỹ thuật Xây dựng Phú Nhuận
PNP,UPCOM,STOCK,Tân Cảng - Phú Hữu,Công ty Cổ phần Tân Cảng – Phú Hữu
PNJ,HSX,STOCK,Vàng Phú Nhuận,Công ty Cổ phần Vàng bạc Đá quý Phú Nhuận
PNG,UPCOM,STOCK,Thương Mại Phú Nhuận,Công ty Cổ phần Thương Mại Phú Nhuận
PND,UPCOM,STOCK,Xăng dầu Dầu khí Nam Định,Công ty Cổ phần Xăng dầu Dầu khí Nam Định
PNC,HSX,STOCK,Văn hóa Phương Nam,Công ty Cổ phần Văn hóa Phương Nam
PMW,UPCOM,STOCK,Cấp Nước Phú Mỹ,Công ty Cổ phần Cấp Nước Phú Mỹ
PMT,UPCOM,STOCK,Telvina Việt Nam,Công ty Cổ phần Viễn thông Telvina Việt Nam
PMS,HNX,STOCK,Cơ khí xăng dầu,Công ty Cổ phần Cơ khí Xăng dầu
PMP,HNX,STOCK,Bao bì Đạm Phú Mỹ,Công ty Cổ phần Bao bì Đạm Phú Mỹ
PMJ,UPCOM,STOCK,Vật tư Bưu điện,Công ty Cổ phần Vật tư Bưu điện
PMG,HSX,STOCK,ĐT và SX Petro Miền Trung,Công ty Cổ phần Đầu tư và Sản xuất Petro Miền Trung
PMC,HNX,STOCK,Pharmedic,Công ty Cổ phần Dược phẩm Dược liệu Pharmedic
PMB,HNX,STOCK,Phân bón và Hóa chất Dầu khí Miền Bắc,Công ty Cổ phần Phân bón và Hóa chất Dầu khí Miền Bắc
PLX,HSX,STOCK,Petrolimex,Tập đoàn Xăng dầu Việt Nam
PLP,HSX,STOCK,SX và CN Nhựa Pha Lê,Công ty Cổ phần Sản xuất và Công nghệ Nhựa Pha Lê
PLO,UPCOM,STOCK,Kho vận Petec,Công ty Cổ phần Kho vận Petec
PLE,UPCOM,STOCK,Tư vấn Xây dựng Petrolimex,Công ty Cổ phần Tư vấn Xây dựng Petrolimex
PLC,HNX,STOCK,Hóa dầu Petrolimex,Tổng Công ty Hóa dầu Petrolimex - Công ty Cổ phần
PLA,UPCOM,STOCK,ĐT&DV Hạ tầng Xăng dầu (PLAND),Công ty Cổ phần Đầu tư và Dịch vụ hạ tầng Xăng dầu
PJT,HSX,STOCK,Vận tải thủy PETROLIMEX,Công ty Cổ phần Vận tải Xăng dầu đường thủy Petrolimex
PJS,UPCOM,STOCK,Cấp nước Phú Hòa Tân,Công ty Cổ phần Cấp nước Phú Hòa Tân
PJC,HNX,STOCK,TM và Vận tải Petrolimex HN,Công ty Cổ phần Thương mại và Vận tải Petrolimex Hà Nội
PIV,UPCOM,STOCK,PIV JSC,Công ty Cổ phần PIV
PIT,HSX,STOCK,XNK PETROLIMEX,Công ty Cổ phần Xuất nhập khẩu Petrolimex
PIS,UPCOM,STOCK,Pisico Bình Định,Tổng Công ty Pisico Bình Định - Công ty Cổ phần
PID,UPCOM,STOCK,Trang trí nội thất Dầu khí,Công ty Cổ phần Trang trí nội thất Dầu khí
PIC,HNX,STOCK,Đầu tư Điện lực 3,Công ty Cổ phần Đầu tư Điện lực 3
PIA,HNX,STOCK,Tin học Viễn thông Petrolimex,Công ty Cổ phần Tin học Viễn thông Petrolimex
PHS,UPCOM,STOCK,Chứng khoán Phú Hưng,Công ty Cổ phần Chứng khoán Phú Hưng
PHR,HSX,STOCK,Cao su Phước Hòa,Công ty Cổ phần Cao su Phước Hòa
PHP,UPCOM,STOCK,Cảng Hải Phòng,Công ty Cổ phần Cảng Hải Phòng
PHN,HNX,STOCK,Pin Hà Nội,Công ty Cổ phần Pin Hà Nội
PHH,UPCOM,STOCK,Hồng Hà Việt Nam,Công ty Cổ phần Hồng Hà Việt Nam
PHC,HSX,STOCK,Xây dựng Phục Hưng Holdings,Công ty Cổ phần Xây dựng Phục Hưng Holdings
PGV,HSX,STOCK,Tổng Công ty Phát điện 3,Tổng Công ty Phát điện 3 - Công ty Cổ phần
PGT,HNX,STOCK,PGT Holdings,Công ty Cổ phần PGT Holdings
PGS,HNX,STOCK,Khí Miền Nam,Công ty Cổ phần Kinh doanh Khí Miền Nam
PGN,HNX,STOCK,Phụ Gia Nhựa,Công ty Cổ phần Phụ Gia Nhựa
PGI,HSX,STOCK,Bảo hiểm PJICO,Tổng Công ty Cổ phần Bảo hiểm Petrolimex
PGD,HSX,STOCK,PV GAS D,Công ty Cổ phần Phân phối khí thấp áp dầu khí Việt Nam
PGC,HSX,STOCK,Gas Petrolimex,Tổng Công ty Gas Petrolimex - Công ty Cổ phần
PGB,UPCOM,STOCK,PG Bank,Ngân hàng Thương mại Cổ phần Thịnh vượng và Phát triển
PFL,UPCOM,STOCK,Dầu khí Đông Đô,Công ty Cổ phần Dầu khí Đông Đô
PET,HSX,STOCK,Dịch vụ Tổng hợp Dầu khí,Tổng Công ty Cổ phần Dịch vụ Tổng hợp Dầu khí
PEQ,UPCOM,STOCK,Thiết bị xăng dầu Petrolimex,Công ty Cổ phần Thiết bị xăng dầu Petrolimex
PEN,HNX,STOCK,Xây lắp III Petrolimex,Công ty Cổ phần Xây lắp III Petrolimex
PEG,UPCOM,STOCK,TM Kỹ thuật và Đầu tư (PETEC),Tổng Công ty Thương mại Kỹ thuật và Đầu tư - Công ty Cổ phần
PEC,UPCOM,STOCK,Cơ khí Điện lực,Công ty Cổ phần Cơ khí Điện lực
PDV,UPCOM,STOCK,Vận tải Phương Đông Việt,Công ty Cổ phần Vận tải và Tiếp vận Phương Đông Việt
PDT,DELISTED,STOCK,,
PDR,HSX,STOCK,BĐS Phát Đạt,Công ty Cổ phần Phát triển Bất động sản Phát Đạt
PDN,HSX,STOCK,Cảng Đồng Nai,Công ty Cổ phần Cảng Đồng Nai
PDC,UPCOM,STOCK,Dầu khí Phương Đông,Công ty Cổ phần Du lịch Dầu khí Phương Đông
PDB,HNX,STOCK,DIN Capital,Công ty Cổ phần Tập đoàn Đầu tư DIN Capital
PCT,HNX,STOCK,Vận tải Biển Global Pacific,Công ty Cổ phần Vận tải Biển Global Pacific
PCN,DELISTED,STOCK,Dầu khí DMC-Miền Bắc,Công ty Cổ phần Hóa phẩm dầu khí DMC - Miền Bắc
PCM,UPCOM,STOCK,VLXD Bưu điện,Công ty Cổ phần Vật liệu Xây dựng Bưu điện
PCH,HNX,STOCK,Nhựa Picomat,Công ty Cổ phần Nhựa Picomat
PCG,HNX,STOCK,Đầu tư PT Gas Đô thị,Công ty Cổ phần Đầu tư Phát triển Gas Đô thị
PCF,UPCOM,STOCK,Cà phê PETEC,Công ty Cổ phần Cà phê PETEC
PCE,HNX,STOCK,Phân bón và Hóa chất DK Miền Trung,Công ty Cổ phần Phân bón và hóa chất dầu khí Miền Trung
PCC,UPCOM,STOCK,Xây lắp 1- Petrolimex,Công ty Cổ phần Tập đoàn Xây lắp 1 - Petrolimex
PC1,HSX,STOCK,Tập đoàn PC1,Công ty Cổ phần Tập đoàn PC1
PBT,UPCOM,STOCK,BSPPT,Công ty Cổ Phần Bao bì và Thương mại Dầu khí Bình Sơn
PBP,HNX,STOCK,Bao bì Dầu khí VN,Công ty Cổ phần Bao bì Dầu khí Việt Nam
PBC,UPCOM,STOCK,Dược Phẩm TW 1- Pharbaco,Công ty Cổ phần Dược Phẩm Trung ương 1 - Pharbaco
PAT,UPCOM,STOCK,Phốt pho Apatit Việt Nam,Công ty Cổ phần Phốt pho Apatit Việt Nam
PAS,UPCOM,STOCK,Quốc tế Phương Anh,Công ty Cổ phần Quốc tế Phương Anh
PAP,UPCOM,STOCK,Cảng Phước An,Công ty Cổ phần Dầu khí đầu tư khai thác Cảng Phước An
PAN,HSX,STOCK,Tập đoàn PAN,Công ty Cổ phần Tập đoàn PAN
PAI,UPCOM,STOCK,"CNTT, VT và Tự động hóa Dầu khí - PAIC","Công ty Cổ phần Công nghê thông tin, Viễn thông và Tự động hóa Dầu khí"
PAC,HSX,STOCK,Pin Ắc quy Miền Nam,Công ty Cổ phần Pin Ắc quy Miền Nam
ORS,HSX,STOCK,Chứng khoán Tiên Phong,Công ty Cổ phần Chứng khoán Tiên Phong
OPC,HSX,STOCK,Dược phẩm OPC,Công ty Cổ phần Dược Phẩm OPC
ONW,UPCOM,STOCK,Dịch vụ Một Thế giới,Công ty Cổ phần Dịch vụ Một Thế giới
ONE,HNX,STOCK,Truyền thông Số 1,Công ty Cổ phần Công nghệ ONE
OIL,UPCOM,STOCK,PV Oil,Tổng Công ty Dầu Việt Nam - Công ty Cổ phần
OGC,HSX,STOCK,Tập đoàn Đại Dương,Công ty Cổ phần Tập đoàn Đại Dương
ODE,UPCOM,STOCK,Tập đoàn Truyền thông và Giải trí ODE,Công ty cổ phần Tập đoàn Truyền thông và Giải trí ODE
OCH,HNX,STOCK,Khách sạn và Dịch vụ OCH,Công ty Cổ phần One Capital Hospitality
OCB,HSX,STOCK,Ngân hàng Phương Đông,Ngân hàng Thương mại Cổ phần Phương Đông
NXT,UPCOM,STOCK,SX và Cung ứng VLXD Kon Tum,Công ty Cổ phần Sản xuất và Cung ứng vật liệu xây dựng Kon Tum
NWT,UPCOM,STOCK,Vận tải Newway,Công ty Cổ phần Vận tải Newway
NVT,HSX,STOCK,Ninh Vân Bay,Công ty Cổ phần Bất động sản Du lịch Ninh Vân Bay
NVP,UPCOM,STOCK,Nước sạch Vĩnh Phúc,Công ty Cổ phần Nước sạch Vĩnh Phúc
NVL122001,BOND,BOND,NVL122001 - Trái phiếu,NVL122001 - Trái phiếu
NVL,HSX,STOCK,Novaland,Công ty Cổ phần Tập đoàn Đầu tư Địa ốc No Va
NVB,HNX,STOCK,Ngân hàng Quốc Dân,Ngân hàng Thương mại Cổ phần Quốc Dân
NUE,UPCOM,STOCK,Môi trường Đô thị Nha Trang,Công ty Cổ phần Môi trường Đô thị Nha Trang
NTW,UPCOM,STOCK,Cấp nước Nhơn Trạch,Công ty Cổ phần Cấp nước Nhơn Trạch
NTT,UPCOM,STOCK,Dệt - May Nha Trang,Công ty Cổ phần Dệt - May Nha Trang
NTP,HNX,STOCK,Nhựa Tiền Phong,Công ty Cổ phần Nhựa Thiếu niên Tiền Phong
NTL,HSX,STOCK,Đô thị Từ Liêm,Công ty Cổ phần Phát triển Đô thị Từ Liêm
NTH,HNX,STOCK,Thủy điện Nước Trong,Công ty Cổ phần Thủy điện Nước Trong
NTF,UPCOM,STOCK,Dược Nghệ An,Công ty Cổ phần Dược - Vật tư y tế Nghệ An
NTC,UPCOM,STOCK,KCN Nam Tân Uyên,Công ty Cổ phần Khu Công nghiệp Nam Tân Uyên
NTB,UPCOM,STOCK,Công trình giao thông 584,Công ty Cổ phần Đầu tư Xây dựng và Khai thác Công trình giao thông 584
NT2,HSX,STOCK,Điện lực Nhơn Trạch 2,Công ty Cổ phần Điện lực Dầu khí Nhơn Trạch 2
NST,HNX,STOCK,Thuốc lá Ngân Sơn,Công ty Cổ phần Ngân Sơn
NSS,UPCOM,STOCK,Nông súc sản Đồng Nai,Công ty Cổ phần Nông súc sản Đồng Nai
NSL,UPCOM,STOCK,Cấp nước Sơn La,Công ty Cổ phần Cấp nước Sơn La
NSH,HNX,STOCK,Nhôm Sông Hồng,Công ty Cổ phần Tập đoàn Nhôm Sông Hồng Shalumi
NSG,UPCOM,STOCK,Nhựa Sài Gòn,Công ty Cổ phần Nhựa Sài Gòn
NSC,HSX,STOCK,Tập đoàn Giống cây trồng Việt Nam,Công ty Cổ phần Tập đoàn Giống cây trồng Việt Nam
NS3,DELISTED,STOCK,Nước sạch số 3 Hà Nội,Công ty Cổ phần Sản xuất Kinh doanh Nước sạch số 3 Hà Nội
NS2,UPCOM,STOCK,Nước sạch số 2 Hà Nội,Công ty Cổ phần Nước sạch số 2 Hà Nội
NRC,HNX,STOCK,Tập đoàn Danh Khôi,Công ty Cổ phần Tập đoàn Danh Khôi
NQT,UPCOM,STOCK,Nước sạch Quảng Trị,Công ty Cổ phần Nước sạch Quảng Trị
NQN,UPCOM,STOCK,Nước sạch Quảng Ninh,Công ty Cổ phần Nước sạch Quảng Ninh
NQB,UPCOM,STOCK,Cấp nước Quảng Bình,Công ty Cổ phần Cấp nước Quảng Bình
NPM123024,BOND,BOND,NPM123024 - Trái phiếu,NPM123024 - Trái phiếu
NPM123023,BOND,BOND,NPM123023 - Trái phiếu,NPM123023 - Trái phiếu
NPM123022,BOND,BOND,NPM123022 - Trái phiếu,NPM123022 - Trái phiếu
NPM123021,BOND,BOND,NPM123021 - Trái phiếu,NPM123021 - Trái phiếu
NPM11911,DELISTED,BOND,NPM11911 - Trái phiếu,NPM11911 - Trái phiếu
NPM11907,DELISTED,BOND,NPM11907 - Trái phiếu,NPM11907 - Trái phiếu
NPM11805,DELISTED,BOND,NPM11805 - Trái phiếu,NPM11805 - Trái phiếu
NOS,UPCOM,STOCK,Vận tải Biển và Thương mại Phương Đông,Công ty Cổ phần Vận tải Biển và Thương mại Phương Đông
NO1,HSX,STOCK,Tâp đoàn 911,Công ty Cổ phần Tâp đoàn 911
NNT,UPCOM,STOCK,Cấp nước Ninh Thuận,Công ty Cổ phần Cấp nước Ninh Thuận
NNQ,DELISTED,STOCK,,
NNG,DELISTED,STOCK,CN - DV - TM Ngọc Nghĩa,Công ty Cổ phần Công nghiệp - Dịch vụ - Thương mại Ngọc Nghĩa
NNC,HSX,STOCK,Đá Núi Nhỏ,Công ty Cổ phần Đá Núi Nhỏ
NLS,UPCOM,STOCK,Cấp thoát nước Lạng Sơn,Công ty Cổ phần Cấp thoát nước Lạng Sơn
NLG,HSX,STOCK,BĐS Nam Long,Công ty Cổ phần Đầu tư Nam Long
NKG,HSX,STOCK,Thép Nam Kim,Công ty Cổ phần Thép Nam Kim
NJC,UPCOM,STOCK,May Nam Định,Công ty Cổ phần May Nam Định
NHV,UPCOM,STOCK,Đầu tư NHV,Công ty Cổ phần Sức khỏe Hồi sinh Việt Nam
NHT,HSX,STOCK,Sản xuất và Thương mại Nam Hoa,Công ty Cổ phần Sản xuất và Thương mại Nam Hoa
NHP,UPCOM,STOCK,Sản xuất XNK NHP,Công ty Cổ phần Sản xuất Xuất nhập khẩu NHP
NHH,HSX,STOCK,Nhựa Hà Nội,Công ty Cổ phần Nhựa Hà Nội
NHC,HNX,STOCK,Gạch ngói Nhị Hiệp,Công ty Cổ phần Gạch ngói Nhị Hiệp
NHA,HSX,STOCK,PT Nhà và Đô thị Nam HN,Tổng Công ty Đầu tư Phát triển Nhà và Đô thị Nam Hà Nội
NGC,UPCOM,STOCK,Thủy sản Ngô Quyền,Công ty Cổ phần Chế biến Thủy sản Xuất khẩu Ngô Quyền
NFC,HNX,STOCK,Phân lân Ninh Bình,Công ty Cổ phần Phân lân Ninh Bình
NET,HNX,STOCK,Bột giặt Net,Công ty Cổ phần Bột giặt Net
NEM,UPCOM,STOCK,Thiết bị Điện Miền Bắc,Công ty Cổ phần Thiết bị Điện Miền Bắc
NED,UPCOM,STOCK,Phát triển Điện Tây Bắc,Công ty Cổ phần Đầu tư và Phát triển Điện Tây Bắc
NDX,HNX,STOCK,Phát triển Nhà Đà Nẵng,Công ty Cổ phần Xây lắp Phát triển Nhà Đà Nẵng
NDW,UPCOM,STOCK,Cấp nước Nam Định,Công ty Cổ phần Cấp nước Nam Định
NDT,UPCOM,STOCK,Dệt may Nam Định,Tổng Công ty Cổ phần Dệt may Nam Định
NDP,UPCOM,STOCK,Dược phẩm 2/9,Công ty Cổ phần Dược phẩm 2/9
NDN,HNX,STOCK,PT Nhà Đà Nẵng,Công ty Cổ phần Đầu tư Phát triển Nhà Đà Nẵng
NDF,UPCOM,STOCK,Nông sản XK Nam Định,Công ty Cổ phần Chế biến thực phẩm nông sản xuất khẩu Nam Định
NDC,UPCOM,STOCK,Dược phẩm Nam Dược,Công ty Cổ phần Nam Dược
ND2,UPCOM,STOCK,Đầu tư và PT điện Miền Bắc 2,Công ty Cổ phần Đầu tư và Phát triển điện Miền Bắc 2
NCT,HSX,STOCK,DV Hàng hóa Nội Bài,Công ty Cổ phần Dịch vụ Hàng hóa Nội Bài
NCS,UPCOM,STOCK,Suất ăn Hàng không Nội Bài,Công ty Cổ phần Suất ăn Hàng không Nội Bài
NCG,UPCOM,STOCK,Nova Consumer,Công ty Cổ phần Tập đoàn Nova Consumer
NBW,HNX,STOCK,Cấp nước Nhà Bè,Công ty Cổ phần Cấp nước Nhà Bè
NBT,UPCOM,STOCK,Cấp thoát nước Bến Tre,Công ty Cổ phần Cấp thoát nước Bến Tre
NBP,HNX,STOCK,Nhiệt điện Ninh Bình,Công ty Cổ phần Nhiệt Điện Ninh Bình
NBE,UPCOM,STOCK,Sách và Thiết bị GD Miền Bắc,Công ty Cổ phần Sách và Thiết bị Giáo dục Miền Bắc
NBC,HNX,STOCK,Than Núi Béo,Công ty Cổ phần Than Núi Béo - Vinacomin
NBB,HSX,STOCK,577 CORP,Công ty Cổ phần Đầu tư Năm Bảy Bảy
NAW,UPCOM,STOCK,Cấp nước Nghệ An,Công ty Cổ phần Cấp nước Nghệ An
NAV,HSX,STOCK,Tấm lợp và gỗ Nam Việt,Công ty Cổ phần Nam Việt
NAU,UPCOM,STOCK,Công trình Đô thị Nghệ An,Công ty Cổ phần Môi trường và Công trình Đô thị Nghệ An
NAS,UPCOM,STOCK,DV Hàng không SB Nội Bài,Công ty Cổ phần Dịch vụ Hàng không Sân bay Nội Bài
NAP,HNX,STOCK,Cảng Nghệ Tĩnh,Công ty Cổ phần Cảng Nghệ Tĩnh
NAG,HNX,STOCK,Tập đoàn Nagakawa,Công ty Cổ phần Tập đoàn Nagakawa
NAF,HSX,STOCK,Nafoods Group,Công ty Cổ phần Nafoods Group
NAC,UPCOM,STOCK,Tư vấn xây dựng Tổng hợp,Công ty Cổ phần Tư vấn Xây dựng Tổng hợp
NAB,HSX,STOCK,Ngân hàng Nam Á,Ngân hàng Thương mại Cổ phần Nam Á
MZG,UPCOM,STOCK,Miza Corp,Công ty Cổ Phần Miza
MXC,DELISTED,STOCK,,
MWG,HSX,STOCK,Thế giới di động,Công ty Cổ phần Đầu tư Thế Giới Di Động
MVN,UPCOM,STOCK,TCT Hàng hải Việt Nam,Tổng Công ty Hàng hải Việt Nam - CTCP
MVC,UPCOM,STOCK,VL và XD Bình Dương,Công ty Cổ phần Vật liệu và Xây dựng Bình Dương
MVB,HNX,STOCK,Mỏ Việt Bắc - TKV,Tổng Công ty Công nghiệp mỏ Việt Bắc TKV - Công ty Cổ phần
MTX,UPCOM,STOCK,Công Trình Đô Thị Gò Công,Công ty Cổ phần Công trình Đô thị Gò Công
MTV,UPCOM,STOCK,Công trình đô thị Vũng Tàu,Công ty Cổ phần Dịch vụ Môi trường và Công trình Đô thị Vũng Tàu
MTS,UPCOM,STOCK,Vật tư - TKV,Công ty Cổ phần Vật tư - TKV
MTP,UPCOM,STOCK,Dược Medipharco,Công ty Cổ phần Dược Medipharco
MTL,UPCOM,STOCK,Môi trường Đô thị Từ Liêm,Công ty Cổ phần Dịch vụ Môi trường Đô thị Từ Liêm
MTH,UPCOM,STOCK,Môi trường Đô thị Hà Đông,Công ty Cổ phần Môi trường Đô thị Hà Đông
MTG,UPCOM,STOCK,MTGAS,Công ty Cổ phần MT Gas
MTC,UPCOM,STOCK,Dịch Vụ Du Lịch Mỹ Trà,Công ty Cổ phần Dịch vụ Du lịch Mỹ Trà
MTB,UPCOM,STOCK,Công trình đô thị tỉnh Thái Bình,Công ty Cổ phần Môi trường và Công trình đô thị tỉnh Thái Bình
MTA,UPCOM,STOCK,Khoáng sản và TM Hà Tĩnh,Tổng Công ty Khoáng sản và Thương mại Hà Tĩnh - Công ty Cổ phần
MST,HNX,STOCK,Đầu tư MST,Công ty Cổ phần Đầu tư MST
MSR11808,DELISTED,BOND,MSR11808 - Trái phiếu,MSR11808 - Trái phiếu
MSR,UPCOM,STOCK,Masan High-Tech Materials,Công ty Cổ phần Masan High-Tech Materials
MSN123014,BOND,BOND,MSN123014 - Trái phiếu,MSN123014 - Trái phiếu
MSN123010,BOND,BOND,MSN123010 - Trái phiếu,MSN123010 - Trái phiếu
MSN123009,BOND,BOND,MSN123009 - Trái phiếu,MSN123009 - Trái phiếu
MSN123008,BOND,BOND,MSN123008 - Trái phiếu,MSN123008 - Trái phiếu
MSN121015,DELISTED,BOND,MSN121015 - Trái phiếu,MSN121015 - Trái phiếu
MSN121014,DELISTED,BOND,MSN121014 - Trái phiếu,MSN121014 - Trái phiếu
MSN121013,DELISTED,BOND,MSN121013 - Trái phiếu,MSN121013 - Trái phiếu
MSN12005,DELISTED,BOND,MSN12005 - Trái phiếu,MSN12005 - Trái phiếu
MSN12003,DELISTED,BOND,MSN12003 - Trái phiếu,MSN12003 - Trái phiếu
MSN12002,DELISTED,BOND,MSN12002 - Trái phiếu,MSN12002 - Trái phiếu
MSN120012,DELISTED,BOND,MSN120012 - Trái phiếu,MSN120012 - Trái phiếu
MSN120011,DELISTED,BOND,MSN120011 - Trái phiếu,MSN120011 - Trái phiếu
MSN120010,DELISTED,BOND,MSN120010 - Trái phiếu,MSN120010 - Trái phiếu
MSN12001,DELISTED,BOND,MSN12001 - Trái phiếu,MSN12001 - Trái phiếu
MSN120009,DELISTED,BOND,MSN120009 - Trái phiếu,MSN120009 - Trái phiếu
MSN120008,DELISTED,BOND,MSN120008 - Trái phiếu,MSN120008 - Trái phiếu
MSN120007,DELISTED,BOND,MSN120007 - Trái phiếu,MSN120007 - Trái phiếu
MSN,HSX,STOCK,Tập đoàn Masan,Công ty Cổ phần Tập đoàn Masan
MSH,HSX,STOCK,May Sông Hồng,Công ty Cổ phần May Sông Hồng
MSB,HSX,STOCK,MSB Bank,Ngân hàng Thương mại Cổ phần Hàng Hải Việt Nam
MRF,UPCOM,STOCK,Cao su y tế MERUFA,Công ty Cổ phần MERUFA
MQN,UPCOM,STOCK,Môi trường đô thị Quảng Ngãi,Công ty Cổ phần Môi trường đô thị Quảng Ngãi
MQB,UPCOM,STOCK,Môi trường và PT đô thị Quảng Bình,Công ty Cổ phần Môi trường và Phát triển đô thị Quảng Bình
MPY,UPCOM,STOCK,Môi trường đô thị Phú Yên,Công ty Cổ phần Môi trường đô thị Phú Yên
MPT,UPCOM,STOCK,Tập đoàn MPT,Công ty Cổ phần Tập đoàn MPT
MPC,UPCOM,STOCK,Thủy sản Minh Phú,Công ty Cổ phần Tập đoàn Thủy sản Minh Phú
MND,UPCOM,STOCK,Môi trường Nam Định,Công ty Cổ phần Môi trường Nam Định
MNB,UPCOM,STOCK,May Nhà Bè,Tổng Công ty May Nhà Bè - Công ty Cổ phần
MML121021,BOND,BOND,MML121021 - Trái phiếu,MML121021 - Trái phiếu
MML,UPCOM,STOCK,Masan MEATLife,Công ty Cổ phần Masan MEATLife
MLS,UPCOM,STOCK,Chăn nuôi Mitraco,Công ty Cổ phần Chăn nuôi - Mitraco
MLC,UPCOM,STOCK,Môi trường Đô thị Tỉnh Lào Cai,Công ty Cổ phần Môi trường Đô thị Tỉnh Lào Cai
MKV,HNX,STOCK,Dược Thú Y Cai Lậy,Công ty Cổ phần Dược Thú Y Cai Lậy
MKP,UPCOM,STOCK,Dược phẩm Mekophar,Công ty Cổ phần Hóa - Dược phẩm Mekophar
MIM,UPCOM,STOCK,Khoáng sản và Cơ khí,Công ty Cổ phần Khoáng sản và Cơ khí
MIG,HSX,STOCK,Bảo hiểm Quân đội,Tổng Công ty Cổ phần Bảo hiểm Quân đội
MIE,UPCOM,STOCK,Máy và Thiết bị Công nghiệp,Tổng Công ty Máy và Thiết bị Công nghiệp - CTCP
MIC,HNX,STOCK,Khoáng sản Quảng Nam,Công ty Cổ phần Kỹ nghệ Khoáng sản Quảng Nam
MHL,UPCOM,STOCK,Minh Hữu Liên,Công ty Cổ phần Minh Hữu Liên
MHC,HSX,STOCK,CTCP MHC,Công ty Cổ phần MHC
MH3,UPCOM,STOCK,KCN Cao su Bình Long,Công ty Cổ phần Khu công nghiệp Cao su Bình Long
MGR,UPCOM,STOCK,Tập đoàn MGROUP,Công ty cổ phần Tập đoàn MGROUP
MGG,UPCOM,STOCK,May Đức Giang,Tổng Công ty Đức Giang - Công ty Cổ phần
MGC,UPCOM,STOCK,Địa chất mỏ - TKV,Công ty Cổ phần Địa chất mỏ - TKV
MFS,UPCOM,STOCK,Mobifone Service,Công ty Cổ phần Dịch vụ kỹ thuật Mobifone
MES,UPCOM,STOCK,Cơ điện Công trình,Công ty Cổ phần Cơ điện Công trình
MEL,HNX,STOCK,Thép Mê Lin,Công ty Cổ phần Thép Mê Lin
MEG,DELISTED,STOCK,Công ty Megram,Công ty Cổ phần Megram
MEF,UPCOM,STOCK,MEINFA,Công ty Cổ phần MEINFA
MED,HNX,STOCK,Dược Mediplantex,Công ty Cổ phần Dược Trung ương Mediplantex
MEC,UPCOM,STOCK,Lắp máy Sông Đà,Công ty Cổ phần Cơ khí - Lắp máy Sông Đà
MDG,HSX,STOCK,Xây dựng Miền Đông,Công ty Cổ phần Miền Đông
MDF,UPCOM,STOCK,Gỗ MDF VRG - Quảng Trị,Công ty Cổ phần Gỗ MDF VRG - Quảng Trị
MDC,HNX,STOCK,Than Mông Dương,Công ty Cổ phần Than Mông Dương - Vinacomin
MDA,UPCOM,STOCK,Môi trường Đô thị Đông Anh,Công ty Cổ phần Môi trường Đô thị Đông Anh
MCP,HSX,STOCK,In và Bao bì Mỹ Châu,Công ty Cổ phần In và Bao bì Mỹ Châu
MCO,HNX,STOCK,BDC Việt Nam,Công ty Cổ phần Đầu tư và Xây dựng BDC Việt Nam
MCM,HSX,STOCK,Giống bò sữa Mộc Châu,Công ty Cổ phần Giống bò sữa Mộc Châu
MCI,DELISTED,STOCK,Đầu tư Xây dựng và Phát triển Vật liệu IDICO,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Vật liệu IDICO
MCH,UPCOM,STOCK,Hàng Tiêu Dùng MaSan,Công ty Cổ phần Hàng Tiêu Dùng MaSan
MCG,UPCOM,STOCK,Năng lượng và Bất động sản MCG,Công ty Cổ phần Năng lượng và Bất động sản MCG
MCF,HNX,STOCK,Cơ khí và Lương thực Thực phẩm,Công ty Cổ phần Xây lắp Cơ khí và Lương thực Thực phẩm
MCD,DELISTED,STOCK,Môi trường và Đô thị Đông Hà,Công ty Cổ phần Môi trường và Công trình Đô thị Đông Hà
MCC,HNX,STOCK,Gạch ngói cao cấp,Công ty Cổ phần Gạch ngói cao cấp
MC3,DELISTED,STOCK,Khoáng sản 3 - Vimico,Công ty Cổ phần Khoáng sản 3 - Vimico
MBT,UPCOM,STOCK,BĐS cho thuê Minh Bảo Tín,Công ty Cổ phần Bất động sản cho thuê Minh Bảo Tín
MBS,HNX,STOCK,Chứng khoán MB,Công ty Cổ phần Chứng khoán MB
MBN,UPCOM,STOCK,Môi trường và Công trình ĐT Bắc Ninh,Công ty Cổ phần Môi trường và Công trình đô thị Bắc Ninh
MBG,HNX,STOCK,Tập đoàn MBG,Công ty Cổ phần Tập đoàn MBG
MBB124022,BOND,BOND,MBB124022 - Trái phiếu,MBB124022 - Trái phiếu
MBB124017,BOND,BOND,MBB124017 - Trái phiếu,MBB124017 - Trái phiếu
MBB,HSX,STOCK,MBBank,Ngân hàng Thương mại Cổ phần Quân đội
MAS,HNX,STOCK,Sân bay Đà Nẵng,Công ty cổ phần Dịch vụ Hàng Không Sân Bay Đà Nẵng
MAC,HNX,STOCK,Cung ứng & DVKT Hàng Hải,Công ty Cổ phần Cung ứng và Dịch vụ Kỹ thuật Hàng Hải
MA1,UPCOM,STOCK,MACHINCO1,Công ty Cổ phần Thiết bị
M10,UPCOM,STOCK,May10,Tổng công ty May 10 - Công ty Cổ phần
LYF,DELISTED,STOCK,Công ty Lương Thực Lương Yên,Công ty Cổ phần Lương Thực Lương Yên
LWS,DELISTED,STOCK,Cấp nước Lào Cai,Công ty Cổ phần Cấp nước Tỉnh Lào Cai
LUT,UPCOM,STOCK,Đầu tư Xây dựng Lương Tài,Công ty Cổ phần Đầu tư Xây dựng Lương Tài
LTG,UPCOM,STOCK,Tập đoàn Lộc Trời (BVTV An Giang),Công ty Cổ phần Tập đoàn Lộc Trời
LTC,UPCOM,STOCK,Điện nhẹ Viễn thông,Công ty Cổ phần Điện nhẹ Viễn Thông
LSS,HSX,STOCK,Mía đường Lam Sơn,Công ty Cổ phần Mía đường Lam Sơn
LSG,UPCOM,STOCK,BĐS Sài Gòn Vina,Công ty Cổ phần Bất động sản Sài Gòn Vi na
LQN,UPCOM,STOCK,Licogi Quảng Ngãi,Công ty Cổ phần Licogi Quảng Ngãi
LPT,UPCOM,STOCK,TM và SX Lập Phương Thành,Công ty Cổ phần Thương mại và Sản xuất Lập Phương Thành
LPB123016,BOND,BOND,LPB123016 - Trái phiếu,LPB123016 - Trái phiếu
LPB123015,BOND,BOND,LPB123015 - Trái phiếu,LPB123015 - Trái phiếu
LPB123009,BOND,BOND,LPB123009 - Trái phiếu,LPB123009 - Trái phiếu
LPB123008,BOND,BOND,LPB123008 - Trái phiếu,LPB123008 - Trái phiếu
LPB122013,BOND,BOND,LPB122013 - Trái phiếu,LPB122013 - Trái phiếu
LPB122012,DELISTED,BOND,LPB122012 - Trái phiếu,LPB122012 - Trái phiếu
LPB122011,BOND,BOND,LPB122011 - Trái phiếu,LPB122011 - Trái phiếu
LPB122010,DELISTED,BOND,LPB122010 - Trái phiếu,LPB122010 - Trái phiếu
LPB121036,BOND,BOND,LPB121036 - Trái phiếu,LPB121036 - Trái phiếu
LPB121035,DELISTED,BOND,LPB121035 - Trái phiếu,LPB121035 - Trái phiếu
LPB,HSX,STOCK,LPBank,Ngân hàng Thương mại Cổ phần Lộc Phát Việt Nam
LO5,UPCOM,STOCK,LILAMA 5,Công ty Cổ phần Lilama 5
LNC,UPCOM,STOCK,Lệ Ninh - Quảng Bình,Công ty Cổ phần Lệ Ninh
LMI,UPCOM,STOCK,Lắp máy IDICO,Công ty Cổ phần Đầu tư Xây dựng Lắp máy IDICO
LMH,UPCOM,STOCK,Quoc te Holding,Công ty Cổ phần Quốc Tế Holding
LMC,UPCOM,STOCK,Khoáng sản LATCA,Công ty Cổ phần Long Beach LMC
LM8,HSX,STOCK,LILAMA 18,Công ty Cổ phần Lilama 18
LM7,UPCOM,STOCK,LILAMA 7,Công ty Cổ phần Lilama 7
LM3,UPCOM,STOCK,Lilama 3,Công ty Cổ phần Lilama 3
LLM,UPCOM,STOCK,LILAMA,Tổng Công ty lắp máy Việt Nam - Công ty Cổ phần
LKW,UPCOM,STOCK,Cấp nước Long Khánh,Công ty Cổ phần Cấp nước Long Khánh
LIX,HSX,STOCK,Bột Giặt Lix,Công ty Cổ phần Bột Giặt LiX
LIG,HNX,STOCK,Licogi 13,Công ty Cổ phần Licogi 13
LIC,UPCOM,STOCK,LICOGI,Tổng Công ty LICOGI - Công ty Cổ phần
LHG,HSX,STOCK,KCN Long Hậu,Công ty Cổ phần Long Hậu
LHC,HNX,STOCK,XD Thủy lợi Lâm Đồng,Công ty Cổ phần Đầu tư và Xây dựng Thủy lợi Lâm Đồng
LGM,UPCOM,STOCK,Giày da và may mặc XK (Legamex),Công ty Cổ phần Giày da và May mặc Xuất khẩu (Legamex)
LGL,HSX,STOCK,Long Giang Land,Công ty Cổ phần Đầu tư và Phát triển Đô thị Long Giang
LGC,HSX,STOCK,Đầu tư Cầu đường CII,Công ty Cổ phần Đầu tư Cầu đường CII
LG9,UPCOM,STOCK,Cơ giới và XL số 9 (Licogi 9),Công ty Cổ phần Cơ giới và Xây lắp số 9
LEC,HSX,STOCK,BĐS Điện lực Miền Trung,Công ty Cổ phần Bất động sản Điện lực Miền Trung
LDW,UPCOM,STOCK,Cấp thoát nước Lâm Đồng,Công ty Cổ phần Cấp thoát nước Lâm Đồng
LDP,HNX,STOCK,Dược Lâm Đồng - Ladophar,Công ty Cổ phần Dược Lâm Đồng - Ladophar
LDG,HSX,STOCK,Đầu tư LDG,Công ty Cổ phần Đầu tư LDG
LCW,DELISTED,STOCK,Nước sạch Lai Châu,Công ty Cổ phần Nước sạch Lai Châu
LCS,UPCOM,STOCK,Licogi 16.6,Công ty Cổ phần Licogi 16.6
LCM,UPCOM,STOCK,Khoáng sản Lào Cai,Công ty Cổ phần Khai thác và Chế biến Khoáng sản Lào Cai
LCG,HSX,STOCK,LIZEN,Công ty Cổ phần Lizen
LCD,HNX,STOCK,Thí nghiệm cơ điện,Công ty Cổ phần Lắp máy - Thí nghiệm cơ điện
LCC,UPCOM,STOCK,Xi măng Hồng Phong,Công ty Cổ phần Xi măng Hồng Phong
LBM,HSX,STOCK,Khoáng sản Lâm Đồng,Công ty Cổ phần Khoáng sản và Vật liệu xây dựng Lâm Đồng
LBE,HNX,STOCK,Thương mại và Dịch vụ LVA,Công ty Cổ phần Thương mại và Dịch vụ LVA
LBC,DELISTED,STOCK,Thương mại - Đầu tư Long Biên,Công ty Cổ phần Thương mại - Đầu tư Long Biên
LAW,UPCOM,STOCK,Cấp thoát nước Long An,Công ty Cổ phần Cấp thoát nước Long An
LAS,HNX,STOCK,Hóa chất Lâm Thao,Công ty Cổ phần Supe Phốt phát và Hóa chất Lâm Thao
LAI,UPCOM,STOCK,XD Long An IDICO,Công ty Cổ phần Đầu tư Xây dựng Long An IDICO
LAF,HSX,STOCK,Chế biến Hàng XK Long An,Công ty Cổ phần Chế biến Hàng Xuất khẩu Long An
L63,UPCOM,STOCK,Lilama 69-3,Công ty Cổ phần Lilama 69-3
L62,UPCOM,STOCK,LILAMA 69.2,Công ty Cổ phần Lilama 69 - 2
L61,UPCOM,STOCK,LILAMA 69-1,Công ty Cổ phần Lilama 69-1
L45,UPCOM,STOCK,Lilama 45.1,Công ty Cổ phần Lilama 45.1
L44,UPCOM,STOCK,LILAMA 45.4,Công ty Cổ phần Lilama 45.4
L43,UPCOM,STOCK,LILAMA 45.3,Công ty Cổ phần Lilama 45.3
L40,HNX,STOCK,Đầu tư và Xây dựng 40,Công ty Cổ phần Đầu tư và Xây dựng 40
L35,UPCOM,STOCK,Cơ khí Lilama,Công ty Cổ phần Cơ khí Lắp máy Lilama
L18,HNX,STOCK,LICOGI - 18,Công ty Cổ phần Đầu tư và Xây dựng số 18
L14,HNX,STOCK,Licogi 14,Công ty Cổ phần Licogi 14
L12,UPCOM,STOCK,LICOGI 12,Công ty Cổ phần Licogi 12
L10,HSX,STOCK,LILAMA 10,Công ty Cổ phần Lilama 10
KWA,UPCOM,STOCK,Cấp thoát nước Kiến Tường,Công ty Cổ phần Cấp thoát nước và Môi trường Kiến Tường
KVC,UPCOM,STOCK,XNK Inox Kim Vĩ,Công ty Cổ phần Sản xuất Xuất nhập khẩu Inox Kim Vĩ
KTW,DELISTED,STOCK,Cấp nước Kon Tum,Công ty Cổ phần Cấp nước Kon Tum
KTT,UPCOM,STOCK,Tập đoàn Đầu tư KTT,Công ty Cổ phần Tập đoàn Đầu tư KTT
KTS,HNX,STOCK,Đường Kon Tum,Công ty Cổ phần Đường Kon Tum
KTL,UPCOM,STOCK,Kim khí Thăng Long,Công ty Cổ phần Kim khí Thăng Long
KTC,UPCOM,STOCK,Thương mại Kiên Giang,Công ty Cổ phần Thương mại Kiên Giang
KSV,HNX,STOCK,Khoáng sản TKV,Tổng Công ty Khoáng sản TKV - Công ty Cổ phần
KST,HNX,STOCK,KASATI,Công ty Cổ phần KASATI
KSQ,HNX,STOCK,CNC Capital Việt Nam,Công ty Cổ phần CNC Capital Việt Nam
KSH,UPCOM,STOCK,Damac GLS,Công ty Cổ phần Damac GLS
KSF,HNX,STOCK,Tập đoàn Sunshine,Công ty Cổ phần Tập đoàn Sunshine
KSD,HNX,STOCK,Đầu tư DNA,Công ty Cổ phần Đầu tư DNA
KSB,HSX,STOCK,Khoáng sản Bình Dương,Công ty Cổ phần Khoáng sản và Xây dựng Bình Dương
KPF,HSX,STOCK,Đầu tư Tài sản KOJI,Công ty Cổ phần Đầu tư Tài sản KOJI
KOS,HSX,STOCK,Công ty KOSY,Công ty Cổ phần KOSY
KMT,HNX,STOCK,Kim khí Miền Trung,Công ty Cổ phần Kim khí Miền Trung
KMR,HSX,STOCK,MIRAE,Công ty Cổ phần Mirae
KLM,DELISTED,STOCK,Kim loại màu Nghệ Tĩnh,Công ty Cổ phần Kim loại màu Nghệ Tĩnh
KLF,UPCOM,STOCK,KLF Global,Công ty Cổ phần Đầu tư Thương mại và Xuất nhập khẩu CFS
KLB,UPCOM,STOCK,KienlongBank,Ngân hàng Thương mại Cổ phần Kiên Long
KKC,HNX,STOCK,Tập đoàn Thành Thái,Công ty Cổ phần Tập đoàn Thành Thái
KIP,UPCOM,STOCK,K.I.P Việt Nam,Công ty Cổ phần K.I.P Việt Nam
KHW,UPCOM,STOCK,Cấp thoát nước Khánh Hòa,Công ty Cổ phần Cấp thoát nước Khánh Hòa
KHS,HNX,STOCK,Thủy sản Kiên Hùng,Công ty Cổ phần Kiên Hùng
KHP,HSX,STOCK,Điện lực Khánh Hòa,Công ty Cổ phần Điện lực Khánh Hòa
KHL,UPCOM,STOCK,VLXD Hưng Long,Công ty Cổ phần Khoáng sản và Vật liệu Xây dựng Hưng Long
KHG,HSX,STOCK,Tập đoàn Khải Hoàn Land,Công ty Cổ phần Tập đoàn Khải Hoàn Land
KHD,UPCOM,STOCK,Khoáng sản Hải Dương,"Công ty Cổ phần Khai thác, Chế biến Khoáng sản Hải Dương"
KHB,DELISTED,STOCK,Khoáng sản Hòa Bình,Công ty Cổ phần Khoáng sản Hòa Bình
KHA,DELISTED,STOCK,Đầu tư và DV Khánh Hội,Công ty Cổ phần Đầu tư và Dịch vụ Khánh Hội
KGM,UPCOM,STOCK,XNK Kiên Giang,Công ty Cổ phần Xuất nhập khẩu Kiên Giang
KDM,HNX,STOCK,Tập đoàn GCL,Công ty Cổ phần Tập đoàn GCL
KDH,HSX,STOCK,Nhà Khang Điền,Công ty Cổ phần Đầu tư và Kinh doanh nhà Khang Điền
KDC,HSX,STOCK,Tập đoàn KIDO,Công ty Cổ phần Tập đoàn KIDO
KCE,UPCOM,STOCK,Bê tông Ly tâm ĐL Khánh Hòa,Công ty Cổ phần Bê tông Ly tâm Điện lực Khánh Hòa
KCB,UPCOM,STOCK,Khoáng Sản Luyện Kim Cao Bằng,Công ty Cổ phần Khoáng Sản và Luyện Kim Cao Bằng
KBC121020,DELISTED,BOND,KBC121020 - Trái phiếu,KBC121020 - Trái phiếu
KBC,HSX,STOCK,TCT Đô thị Kinh Bắc,Tổng Công ty Phát triển Đô thị Kinh Bắc
KAC,UPCOM,STOCK,Địa ốc Khang An,Công ty Cổ phần Đầu tư Địa ốc Khang An
JVC,HSX,STOCK,Đầu tư và Phát triển Y tế Việt Nhật,Công ty Cổ phần Đầu tư và Phát triển Y tế Việt Nhật
JOS,UPCOM,STOCK,Thủy sản Minh Hải,Công ty Cổ phần Chế biến Thủy sản Xuất khẩu Minh Hải
IVS,HNX,STOCK,Chứng khoán Guotai Junan (Việt Nam),Công ty Cổ phần Chứng khoán Guotai Junan (Việt Nam)
ITS,UPCOM,STOCK,Thương mại và DV - Vinacomin,"Công ty Cổ phần Đầu tư, Thương mại và Dịch vụ - Vinacomin"
ITQ,HNX,STOCK,Tập đoàn Thiên Quang,Công ty Cổ phần Tập đoàn Thiên Quang
ITD,HSX,STOCK,Công nghệ Tiên Phong,Công ty Cổ phần Công nghệ Tiên Phong
ITC,HSX,STOCK,Đầu tư kinh doanh Nhà,Công ty Cổ phần Đầu tư - Kinh doanh nhà
ITA,UPCOM,STOCK,Đầu tư CN Tân Tạo,Công ty Cổ phần Đầu tư và Công nghiệp Tân Tạo
IST,UPCOM,STOCK,ICD Tân Cảng Sóng Thần,Công ty Cổ phần ICD Tân Cảng Sóng Thần
ISH,UPCOM,STOCK,Thủy điện Srok Phu Miêng,Công ty Cổ phần Thủy điện Srok Phu Miêng IDICO
ISG,UPCOM,STOCK,Vận tải biển và Hợp tác LĐ Quốc Tế,Công ty Cổ phần Vận tải biển và Hợp tác lao động Quốc Tế
IRC,UPCOM,STOCK,Cao su Công nghiệp,Công ty Cổ phần Cao su Công nghiệp
IPH,DELISTED,STOCK,,
IPA,HNX,STOCK,Tập đoàn Đầu tư I.P.A,Công ty Cổ phần Tập đoàn Đầu tư I.P.A
INN,HNX,STOCK,Bao bì và In Nông Nghiệp,Công ty Cổ phần Bao bì và In Nông nghiệp
ING,UPCOM,STOCK,Đầu Tư Và Pt Xây Dựng,Công ty Cổ phần Đầu Tư Và Phát Triển Xây Dựng
INC,HNX,STOCK,Tư vấn Đầu tư IDICO,Công ty Cổ phần Tư vấn Đầu tư IDICO
IN4,UPCOM,STOCK,In số 4,Công ty Cổ phần In số 4
IMP,HSX,STOCK,IMEXPHARM,Công ty Cổ phần Dược phẩm IMEXPHARM
IME,UPCOM,STOCK,Xây lắp Công nghiệp,Công ty Cổ phần Cơ khí và Xây lắp Công nghiệp
ILS,UPCOM,STOCK,TM và Dịch vụ Quốc tế,Công ty Cổ phần Đầu tư Thương mại và Dịch vụ Quốc tế
ILC,UPCOM,STOCK,Hợp tác lao động với nước ngoài,Công ty Cổ phần Hợp tác lao động với nước ngoài
ILB,HSX,STOCK,ICD Tân Cảng Long Bình,Công ty Cổ phần ICD Tân Cảng - Long Bình
ILA,UPCOM,STOCK,Công ty ILA,Công ty Cổ phần ILA
IJC,HSX,STOCK,Becamex IJC,Công ty Cổ phần Phát triển Hạ tầng Kỹ thuật
IHK,UPCOM,STOCK,In Hàng Không,Công ty Cổ phần In Hàng Không
IFS,UPCOM,STOCK,Thực phẩm Quốc tế,Công ty Cổ phần Thực phẩm Quốc tế
IDV,HNX,STOCK,PT Hạ tầng Vĩnh Phúc,Công ty Cổ phần Phát triển Hạ tầng Vĩnh Phúc
IDP,UPCOM,STOCK,Sữa Quốc tế LOF,Công ty Cổ phần Sữa Quốc tế LOF
IDJ,HNX,STOCK,Đầu tư IDJ Việt Nam,Công ty Cổ phần Đầu tư IDJ Việt Nam
IDI,HSX,STOCK,Đầu tư và PT Đa Quốc Gia,Công ty Cổ phần Đầu tư và Phát triển Đa Quốc Gia I.D.I
IDC,HNX,STOCK,IDICO,Tổng Công ty IDICO - CTCP
ICT,HSX,STOCK,Viễn thông - Tin học Bưu điện,Công ty Cổ phần Viễn thông - Tin học Bưu điện
ICN,UPCOM,STOCK,XD Dầu Khí IDICO,Công ty Cổ phần Đầu tư Xây dựng Dầu khí IDICO
ICI,UPCOM,STOCK,Đầu tư và XD Công nghiệp,Công ty Cổ phần Đầu tư và Xây dựng Công nghiệp
ICG,HNX,STOCK,Xây dựng Sông Hồng,Công ty Cổ phần Xây dựng Sông Hồng
ICF,UPCOM,STOCK,ĐT TM Thủy sản,Công ty Cổ phần Đầu tư - Thương mại - Thuỷ sản
ICC,UPCOM,STOCK,Xây dựng công nghiệp,Công ty Cổ phần Xây dựng công nghiệp
IBN,DELISTED,STOCK,In báo Nghệ An,Công ty Cổ phần In báo Nghệ An
IBD,UPCOM,STOCK,In Tổng hợp Bình Dương,Công ty Cổ phần In Tổng hợp Bình Dương
IBC,UPCOM,STOCK,Đầu tư APAX Holdings,Công ty Cổ phần Đầu tư APAX Holdings
HWS,UPCOM,STOCK,Cấp nước Huế,Công ty Cổ phần Cấp nước Huế
HVX,HSX,STOCK,Xi măng Vicem Hải Vân,Công ty Cổ phần Xi măng Vicem Hải Vân
HVT,HNX,STOCK,Hóa chất Việt trì,Công ty Cổ phần Hóa chất Việt Trì
HVN,HSX,STOCK,Vietnam Airlines,Tổng Công ty Hàng không Việt Nam - CTCP
HVH,HSX,STOCK,Đầu tư và Công nghệ HVC,Công ty Cổ phần Đầu tư và Công nghệ HVC
HVG,UPCOM,STOCK,Thủy sản Hùng Vương,Công ty Cổ phần Hùng Vương
HVA,UPCOM,STOCK,Đầu tư HVA,Công ty Cổ phần Đầu tư HVA
HUX,DELISTED,STOCK,,
HUT,HNX,STOCK,Tasco,Công ty Cổ phần Tasco
HUG,UPCOM,STOCK,May Hưng Yên,Tổng công ty May Hưng Yên - Công ty Cổ phần
HUB,HSX,STOCK,Xây lắp Huế,Công ty Cổ phần Xây lắp Thừa Thiên Huế
HU6,UPCOM,STOCK,PT Nhà và Đô thị HUD6,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị HUD6
HU4,UPCOM,STOCK,Đầu tư và Xây dựng HUD4,Công ty Cổ phần Đầu tư và Xây dựng HUD4
HU3,UPCOM,STOCK,Xây dựng HUD3,Công ty Cổ phần Đầu tư và Xây dựng HUD3
HU1,HSX,STOCK,Xây dựng HUD1,Công ty Cổ phần Đầu tư và Xây dựng HUD1
HTW,DELISTED,STOCK,Cấp nước Hà Tĩnh,Công ty Cổ phần Cấp nước Hà Tĩnh
HTV,HSX,STOCK,Logistics Vicem,Công ty Cổ phần Logistics Vicem
HTT,UPCOM,STOCK,Thương mại Hà Tây,Công ty Cổ phần Thương mại Hà Tây
HTR,DELISTED,STOCK,Đường sắt Hà Thái,Công ty Cổ phần Đường sắt Hà Thái
HTP,UPCOM,STOCK,In SGK Hòa Phát,Công ty Cổ phần In Sách Giáo Khoa Hòa Phát
HTN,HSX,STOCK,Hưng Thịnh Incons,Công ty Cổ phần Hưng Thịnh Incons
HTM,UPCOM,STOCK,Thương mại Hà Nội - Hapro,Tổng Công ty Thương mại Hà Nội – Công ty cổ phần
HTL,HSX,STOCK,Ô tô Trường Long,Công ty Cổ phần Kỹ thuật và Ô tô Trường Long
HTK,DELISTED,STOCK,,
HTI,HSX,STOCK,PT Hạ tầng IDICO,Công ty Cổ phần Đầu tư Phát triển Hạ tầng IDICO
HTH,DELISTED,STOCK,Hoa tiêu Hàng hải - TKV,Công ty Cổ phần Hoa tiêu Hàng hải - TKV
HTG,HSX,STOCK,Dệt may Hòa Thọ,Tổng Công ty Cổ phần Dệt may Hòa Thọ
HTE,UPCOM,STOCK,Kinh doanh điện lực TP HCM,Công ty Cổ phần Đầu tư Kinh doanh Điện lực Thành phố Hồ Chí Minh
HTC,HNX,STOCK,Thương mại Hóc Môn,Công ty Cổ phần Thương mại Hóc Môn
HT1,HSX,STOCK,VICEM Hà Tiên,Công ty Cổ phần Xi măng VICEM Hà Tiên
HSV,UPCOM,STOCK,Gang Thép Hà Nội,Công ty Cổ phần Tập đoàn HSV Việt Nam
HSP,UPCOM,STOCK,Sơn Tổng hợp Hà Nội,Công ty Cổ phần Sơn Tổng hợp Hà Nội
HSM,UPCOM,STOCK,HANOSIMEX,Tổng Công ty Cổ phần Dệt May Hà Nội
HSL,HSX,STOCK,Thực phẩm Hồng Hà,Công ty Cổ phần Đầu tư Phát triển Thực phẩm Hồng Hà
HSI,UPCOM,STOCK,Phân bón Hóa sinh,Công ty Cổ phần Vật tư Tổng hợp và Phân bón Hóa sinh
HSG,HSX,STOCK,Tập đoàn Hoa Sen,Công ty Cổ phần Tập đoàn Hoa Sen
HSA,UPCOM,STOCK,HESTIA,Công ty Cổ phần HESTIA
HRT,DELISTED,STOCK,Vận tải đường sắt Hà Nội,Công ty Cổ phần Vận tải đường sắt Hà Nội
HRC,HSX,STOCK,Cao su Hòa Bình,Công ty Cổ phần Cao su Hòa Bình
HRB,UPCOM,STOCK,Harec Đầu tư và Thương Mại,Công ty Cổ phần Harec Đầu tư và Thương Mại
HQC,HSX,STOCK,Địa ốc Hoàng Quân,Công ty Cổ phần Tư vấn - Thương mại - Dịch vụ Địa ốc Hoàng Quân
HPX,HSX,STOCK,Đầu tư Hải Phát,Công ty Cổ phần Đầu tư Hải Phát
HPW,UPCOM,STOCK,Cấp nước Hải Phòng,Công ty Cổ phần Cấp nước Hải Phòng
HPT,UPCOM,STOCK,DV Công nghệ Tin học HPT,Công ty Cổ phần Dịch vụ Công nghệ Tin học HPT
HPP,UPCOM,STOCK,Sơn Hải Phòng,Công ty Cổ phần Sơn Hải Phòng
HPM,UPCOM,STOCK,Khoáng sản Hoàng Phúc,Công ty Cổ phần Xây dựng Thương mại và Khoáng sản Hoàng Phúc
HPI,UPCOM,STOCK,Khu công nghiệp Hiệp Phước,Công ty Cổ phần Khu công nghiệp Hiệp Phước
HPH,UPCOM,STOCK,Hóa Chất Hưng Phát Hà Bắc,Công ty Cổ phần Hóa Chất Hưng Phát Hà Bắc
HPG,HSX,STOCK,Hòa Phát,Công ty Cổ phần Tập đoàn Hòa Phát
HPD,UPCOM,STOCK,Thủy điện Đăk Đoa,Công ty Cổ phần Thủy điện Đăk Đoa
HPB,UPCOM,STOCK,Bao bì PP,Công ty Cổ phần Bao bì PP
HOT,UPCOM,STOCK,Du lịch - DV Hội An,Công ty Cổ phần Du lịch - Dịch vụ Hội An
HOM,HNX,STOCK,Xi măng VICEM Hoàng Mai,Công ty Cổ phần Xi măng VICEM Hoàng Mai
HNT,DELISTED,STOCK,Xe điện Hà Nội,Công ty Cổ phần Xe điện Hà Nội
HNR,UPCOM,STOCK,Cồn Rượu và Nước Giải Khát Hà Nội,Công ty Cổ phần Rượu và Nước Giải Khát Hà Nội
HNP,UPCOM,STOCK,Hanel Xốp Nhựa,Công ty Cổ phần Hanel Xốp Nhựa
HNM,UPCOM,STOCK,HANOIMILK,Công ty Cổ phần Sữa Hà Nội
HNI,UPCOM,STOCK,May Hữu Nghị,Công ty Cổ phần May Hữu Nghị
HNG,UPCOM,STOCK,Nông nghiệp Quốc tế HAGL,Công ty Cổ phần Nông nghiệp Quốc tế Hoàng Anh Gia Lai
HNF,UPCOM,STOCK,Bánh kẹo Hữu Nghị,Công ty Cổ phần Thực phẩm Hữu Nghị
HNE,DELISTED,STOCK,,
HND,UPCOM,STOCK,Nhiệt điện Hải Phòng,Công ty Cổ phần Nhiệt điện Hải Phòng
HNB,UPCOM,STOCK,Bến xe Hà Nội,Công ty Cổ phần Bến xe Hà Nội
HNA,HSX,STOCK,Thủy điện Hủa Na,Công ty Cổ phần Thủy điện Hủa Na
HMS,UPCOM,STOCK,XD Bảo tàng Hồ Chí Minh,Công ty Cổ phần Xây dựng Bảo tàng Hồ Chí Minh
HMR,HNX,STOCK,Đá Hoàng Mai,Công ty cổ phần Đá Hoàng Mai
HMH,HNX,STOCK,Tập đoàn Hải Minh,Công ty Cổ phần Hải Minh
HMG,UPCOM,STOCK,Kim Khí Hà Nội,Công ty Cổ phần Kim Khí Hà Nội - VNSTEEL
HMD,UPCOM,STOCK,Minh Duccsco,Công ty Cổ phần Hóa chất Minh Đức
HMC,HSX,STOCK,Kim khí TP.HCM,Công ty Cổ phần Kim khí Thành phố Hồ Chí Minh - VNSTEEL
HLY,UPCOM,STOCK,Gốm Xây Dựng Yên Hưng,Công ty Cổ phần Gốm xây dựng Yên Hưng
HLT,UPCOM,STOCK,Dệt may Hoàng Thị Loan,Công ty Cổ phần Dệt may Hoàng Thị Loan
HLS,UPCOM,STOCK,Sứ Hoàng Liên Sơn,Công ty Cổ phần Sứ kỹ thuật Hoàng Liên Sơn
HLR,DELISTED,STOCK,Đường sắt Hà Lạng,Công ty Cổ phần Đường sắt Hà Lạng
HLO,UPCOM,STOCK,Công Nghệ Ha Lô,Công Ty Cổ Phần Công Nghệ Ha Lô
HLG,DELISTED,STOCK,Tập đoàn Hoàng Long,Công ty Cổ phần Tập đoàn Hoàng Long
HLE,DELISTED,STOCK,Điện chiếu sáng Hải Phòng,Công ty Cổ phần Điện chiếu sáng Hải Phòng
HLD,HNX,STOCK,Bất động sản HUDLAND,Công ty Cổ phần Đầu tư và Phát triển Bất động sản HUDLAND
HLC,HNX,STOCK,Than Hà Lầm,Công ty Cổ phần Than Hà Lầm - Vinacomin
HLB,UPCOM,STOCK,Bia và NGK Hạ Long,Công ty Cổ phần Bia và Nước giải khát Hạ Long
HLA,UPCOM,STOCK,Hữu Liên Á Châu,Công ty Cổ phần Hữu Liên Á Châu
HKT,HNX,STOCK,Đầu tư QP Xanh,Công ty Cổ phần Đầu tư QP Xanh
HKP,DELISTED,STOCK,Bao bì Hà Tiên,Công ty Cổ phần Bao bì Hà Tiên
HKB,UPCOM,STOCK,Thực phẩm Hà Nội - Kinh Bắc,Công ty Cổ phần Nông nghiệp và Thực phẩm Hà Nội - Kinh Bắc
HJS,HNX,STOCK,Thủy điện Nậm Mu,Công ty Cổ phần Thủy điện Nậm Mu
HJC,UPCOM,STOCK,Công ty Cổ phần Hoà Việt,Công ty Cổ phần Hoà Việt
HIO,UPCOM,STOCK,Helio Energy,Công ty Cổ Phần Helio Energy
HII,HSX,STOCK,An Tiến Industries,Công ty Cổ phần An Tiến Industries
HIG,UPCOM,STOCK,Tập đoàn HIPT,Công ty Cổ phần Tập đoàn HIPT
HID,HSX,STOCK,Halcom Vietnam,Công ty Cổ phần Halcom Vietnam
HHV,HSX,STOCK,Đầu tư Hạ tầng Giao thông Đèo Cả,Công ty Cổ phần Đầu tư Hạ tầng Giao thông Đèo Cả
HHS,HSX,STOCK,Đầu tư DV Hoàng Huy,Công ty Cổ phần Đầu tư Dịch vụ Hoàng Huy
HHR,DELISTED,STOCK,Đường sắt Hà Hải,Công ty Cổ phần Đường sắt Hà Hải
HHP,HSX,STOCK,HHP Global,Công ty Cổ phần HHP Global
HHN,UPCOM,STOCK,Vận tải và DV Hàng hóa Hà Nội,Công ty Cổ phần Vận tải và Dịch vụ Hàng hóa Hà Nội
HHG,UPCOM,STOCK,Vận tải Hoàng Hà,Công ty Cổ phần Hoàng Hà
HHC,HNX,STOCK,Bánh kẹo Hải Hà,Công ty Cổ phần Bánh kẹo Hải Hà
HGW,DELISTED,STOCK,Công trình đô thị Hậu Giang,Công ty Cổ phần Cấp thoát nước - Công trình Đô thị Hậu Giang
HGT,UPCOM,STOCK,Du lịch Hương Giang,Công ty Cổ phần Du lịch Hương Giang
HGR,DELISTED,STOCK,,
HGM,HNX,STOCK,Khoáng sản Hà Giang,Công ty Cổ phần Cơ khí và Khoáng sản Hà Giang
HGC,DELISTED,STOCK,,
HGA,DELISTED,STOCK,,
HFX,UPCOM,STOCK,XNK Thanh Hà,Công ty Cổ phần Sản xuất - Xuất nhập khẩu Thanh Hà
HFC,UPCOM,STOCK,Xăng dầu HFC,Công ty Cổ phần Xăng dầu HFC
HFB,UPCOM,STOCK,Công trình Cầu phà TP HCM,Công ty Cổ phần Công trình Cầu phà Thành phố Hồ Chí Minh
HEV,HNX,STOCK,Sách Đại học - Dạy nghề,Công ty Cổ phần Sách Đại học - Dạy nghề
HES,UPCOM,STOCK,Dịch vụ Giải trí Hà Nội,Công ty Cổ phần Dịch vụ Giải trí Hà Nội
HEP,UPCOM,STOCK,Môi trường và Công trình đô thị Huế,Công ty Cổ phần Môi trường và Công trình đô thị Huế
HEM,DELISTED,STOCK,Chế tạo điện cơ Hà Nội,Công ty Cổ phần Chế tạo Điện cơ Hà Nội
HEJ,UPCOM,STOCK,Tư vấn Xây dựng Thủy Lợi VN,Tổng Công ty Tư vấn Xây dựng Thủy Lợi Việt Nam - CTCP
HEC,UPCOM,STOCK,Tư vấn XD Thủy Lợi II (HEC II),Công ty Cổ phần Tư vấn xây dựng Thủy Lợi II
HDW,UPCOM,STOCK,Nước sạch Hải Dương,Công ty Cổ phần Kinh doanh Nước sạch Hải Dương
HDS,UPCOM,STOCK,Giống cây trồng Hải Dương,Công ty Cổ phần Giống cây trồng Hải Dương
HDP,UPCOM,STOCK,Dược Hà Tĩnh,Công ty Cổ phần Dược Hà Tĩnh
HDO,UPCOM,STOCK,Hưng Đạo Container,Công ty Cổ phần Hưng Đạo Container
HDM,UPCOM,STOCK,Dệt May Huế,Công ty Cổ phần Dệt May Huế
HDG121001,DELISTED,BOND,HDG121001 - Trái phiếu,HDG121001 - Trái phiếu
HDG,HSX,STOCK,Tập đoàn Hà Đô,Công ty Cổ phần Tập đoàn Hà Đô
HDC,HSX,STOCK,Phát triển Nhà BR-VT,Công ty Cổ phần Phát triển Nhà Bà Rịa Vũng Tàu
HDB124023,BOND,BOND,HDB124023 - Trái phiếu,HDB124023 - Trái phiếu
HDB124018,BOND,BOND,HDB124018 - Trái phiếu,HDB124018 - Trái phiếu
HDB124006,BOND,BOND,HDB124006 - Trái phiếu,HDB124006 - Trái phiếu
HDB,HSX,STOCK,HDBank,Ngân hàng Thương mại Cổ phần Phát Triển Thành phố Hồ Chí Minh
HDA,HNX,STOCK,Hãng sơn Đông Á,Công ty Cổ phần Hãng sơn Đông Á
HD8,UPCOM,STOCK,PT Nhà và Đô thị HUD8,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị HUD8
HD6,UPCOM,STOCK,Phát triển nhà số 6 Hà Nội,Công ty Cổ phần Đầu tư và Phát triển nhà số 6 Hà Nội
HD2,UPCOM,STOCK,Đầu tư phát triển nhà HUD 2,Công ty Cổ phần Đầu tư phát triển nhà HUD2
HCT,HNX,STOCK,TM - DV - Vận tải Xi măng Hải Phòng ,Công ty Cổ phần Thương mại - Dịch vụ - Vận tải Xi măng Hải Phòng
HCMA0307,DELISTED,DEBENTURE,,
HCM,HSX,STOCK,Chứng khoán HSC,Công ty Cổ phần Chứng khoán Thành phố Hồ Chí Minh
HCI,UPCOM,STOCK,Đầu tư - XD Hà Nội,Công ty Cổ phần Đầu tư - Xây dựng Hà Nội
HCD,HSX,STOCK,SX và Thương mại HCD,Công ty Cổ phần Đầu tư Sản xuất và Thương mại HCD
HCC,HNX,STOCK,Bê tông Hòa Cầm,Công ty Cổ phần Bê tông Hòa Cầm - Intimex
HCB,UPCOM,STOCK,Dệt may 29/3,Công ty Cổ phần Dệt may 29/3
HC3,UPCOM,STOCK,Xây dựng số 3 Hải Phòng,Công ty Cổ phần Xây dựng số 3 Hải Phòng
HC1,UPCOM,STOCK,Xây dựng số 1 Hà Nội,Công ty Cổ phần Xây dựng số 1 Hà Nội
HBS,HNX,STOCK,Chứng khoán Hòa Bình,Công ty Cổ phần Chứng khoán Hòa Bình
HBH,UPCOM,STOCK,HABECO Hải Phòng,Công ty Cổ phần HABECO - Hải Phòng
HBD,UPCOM,STOCK,Bao bì PP Bình Dương,Công ty Cổ phần Bao bì PP Bình Dương
HBC,UPCOM,STOCK,Tập đoàn Xây dựng Hòa Bình,Công ty Cổ phần Tập đoàn Xây dựng Hòa Bình
HAX,HSX,STOCK,Ô tô Hàng Xanh,Công ty Cổ phần Dịch vụ Ô tô Hàng Xanh
HAW,DELISTED,STOCK,,
HAV,UPCOM,STOCK,Rượu Hapro,Công ty Cổ phần Rượu Hapro
HAT,HNX,STOCK,TM Bia Hà Nội,Công ty Cổ phần Thương mại Bia Hà Nội
HAS,HSX,STOCK,Hacisco,Công ty Cổ phần Hacisco
HAR,HSX,STOCK,BĐS An Dương Thảo Điền,Công ty Cổ phần Đầu tư Thương mại Bất động sản An Dương Thảo Điền
HAP,HSX,STOCK,Tập đoàn Hapaco,Công ty Cổ phần Tập Đoàn Hapaco
HAN,UPCOM,STOCK,Xây dựng Hà Nội,Tổng Công ty Xây dựng Hà Nội - CTCP
HAM,UPCOM,STOCK,Vật tư Hậu Giang,Công ty Cổ phần Vật tư Hậu Giang
HAI,UPCOM,STOCK,Nông Dược HAI,Công ty Cổ phần Nông dược HAI
HAH,HSX,STOCK,Vận tải và Xếp dỡ Hải An,Công ty Cổ phần Vận tải và Xếp dỡ Hải An
HAG,HSX,STOCK,Hoàng Anh Gia Lai,Công ty Cổ phần Hoàng Anh Gia Lai
HAF,UPCOM,STOCK,Thực phẩm Hà Nội,Công ty Cổ phần Thực phẩm Hà Nội
HAD,HNX,STOCK,Bia Hà Nội - Hải Dương,Công ty Cổ phần Bia Hà Nội - Hải Dương
HAC,UPCOM,STOCK,Chứng khoán Hải Phòng,Công ty Cổ phần Chứng khoán Hải Phòng
HAB,DELISTED,STOCK,,
H11,UPCOM,STOCK,Xây dựng HUD101,Công ty Cổ phần Xây dựng HUD101
GVT,UPCOM,STOCK,Giấy Việt Trì,Công ty Cổ phần Giấy Việt Trì
GVR,HSX,STOCK,Tập đoàn CN Cao su VN,Tập đoàn Công nghiệp Cao su Việt Nam - Công ty Cổ phần
GTT,UPCOM,STOCK,Thuận Thảo Group,Công ty Cổ phần Thuận Thảo
GTS,UPCOM,STOCK,Công trình Giao thông Sài Gòn,Công ty Cổ phần Công trình Giao thông Sài Gòn
GTK,DELISTED,STOCK,,
GTH,DELISTED,STOCK,XD-GT Thừa Thiên Huế,Công ty Cổ phần Xây dựng Giao thông Thừa Thiên Huế
GTD,UPCOM,STOCK,Giầy Thượng Đình,Công ty Cổ phần Giầy Thượng Đình
GTA,HSX,STOCK,Gỗ Thuận An,Công ty Cổ phần Chế biến Gỗ Thuận An
GSP,HSX,STOCK,Vận tải Sản phẩm Khí Quốc tế,Công ty Cổ phần Vận tải Sản phẩm Khí Quốc tế
GSM,UPCOM,STOCK,Thủy điện Hương Sơn,Công ty Cổ phần Thủy điện Hương Sơn
GQN,DELISTED,STOCK,,
GPC,UPCOM,STOCK,Tập đoàn Green+,Công ty Cổ phần Tập đoàn Green+
GND,UPCOM,STOCK,Gạch ngói Đồng Nai,Công ty Cổ phần Gạch ngói Đồng Nai
GMX,HNX,STOCK,Gạch ngói Mỹ Xuân,Công ty Cổ phần Gạch ngói Gốm xây dựng Mỹ Xuân
GMH,HSX,STOCK,Minh Hưng Quảng Trị,Công ty Cổ phần Minh Hưng Quảng Trị
GMD,HSX,STOCK,Gemadept,Công ty Cổ phần Gemadept
GMC,UPCOM,STOCK,Garmex Sài Gòn,Công ty Cổ phần Garmex Sài Gòn
GMA,HNX,STOCK,G-Automobile,Công ty Cổ phần G-Automobile
GLW,UPCOM,STOCK,Cấp thoát nước Gia Lai,Công ty Cổ phần Cấp thoát nước Gia Lai
GLT,HNX,STOCK,KT Điện Toàn Cầu,Công ty Cổ phần Kỹ thuật điện Toàn Cầu
GLH121026,DELISTED,BOND,GLH121026 - Trái phiếu,GLH121026 - Trái phiếu
GLH121019,DELISTED,BOND,GLH121019 - Trái phiếu,GLH121019 - Trái phiếu
GLC,UPCOM,STOCK,Vàng Lào Cai,Công ty Cổ phần Vàng Lào Cai
GKM,HNX,STOCK,Khang Minh Group,Công ty Cổ phần GKM Holdings
GIL,HSX,STOCK,XNK Bình Thạnh,Công ty Cổ phần Sản xuất Kinh doanh Xuất nhập khẩu Bình Thạnh
GIC,HNX,STOCK,ĐT Dịch vụ và PT Xanh,Công ty Cổ phần VSC Green Logistics
GHC,UPCOM,STOCK,Thủy điện Gia Lai,Công ty Cổ phần Thủy điện Gia Lai
GH3,UPCOM,STOCK,Công trình giao thông Hà Nội,Công ty Cổ phần Công trình giao thông Hà Nội
GGG,UPCOM,STOCK,Ôtô Giải Phóng,Công ty Cổ phần Ô tô Giải Phóng
GEX,HSX,STOCK,Tập đoàn Gelex,Công ty Cổ phần Tập đoàn Gelex
GER,UPCOM,STOCK,Thể thao Ngôi sao Geru,Công ty Cổ phần Thể thao Ngôi sao Geru
GEG121022,DELISTED,BOND,GEG121022 - Trái phiếu,GEG121022 - Trái phiếu
GEG,HSX,STOCK,Điện Gia Lai,Công ty Cổ phần Điện Gia Lai
GEE,HSX,STOCK,Thiết bị điện GELEX,Công ty Cổ phần Điện lực Gelex
GE2,DELISTED,STOCK,Tổng Công ty Phát điện 2,Tổng Công ty Phát điện 2
GDW,HNX,STOCK,Cấp nước Gia Định,Công ty Cổ phần Cấp nước Gia Định
GDT,HSX,STOCK,Gỗ Đức Thành,Công ty Cổ phần Chế biến Gỗ Đức Thành
GDA,UPCOM,STOCK,Tôn Đông Á,Công ty Cổ phần Tôn Đông Á
GCF,UPCOM,STOCK,Thực phẩm G.C,Công ty Cổ phần Thực phẩm G.C
GCB,UPCOM,STOCK,PETEC Bình Định,Công ty Cổ phần PETEC Bình Định
GB10F2512,HNX,FU,GB10F2512 - HĐTL,GB10F2512 - HĐTL
GB10F2509,HNX,FU,GB10F2509 - HĐTL,GB10F2509 - HĐTL
GB10F2506,HNX,FU,GB10F2506 - HĐTL,GB10F2506 - HĐTL
GB10F2503,DELISTED,FU,GB10F2503 - HĐTL,GB10F2503 - HĐTL
GB10F2412,DELISTED,FU,GB10F2412 - HĐTL,GB10F2412 - HĐTL
GB10F2409,DELISTED,FU,GB10F2409 - HĐTL,GB10F2409 - HĐTL
GB10F2406,DELISTED,FU,GB10F2406 - HĐTL,GB10F2406 - HĐTL
GB10F2403,DELISTED,FU,GB10F2403 - HĐTL,GB10F2403 - HĐTL
GB10F2312,DELISTED,FU,GB10F2312 - HĐTL,GB10F2312 - HĐTL
GB10F2309,DELISTED,FU,GB10F2309 - HĐTL,GB10F2309 - HĐTL
GB10F2306,DELISTED,FU,GB10F2306 - HĐTL,GB10F2306 - HĐTL
GB10F2303,DELISTED,FU,GB10F2303 - HĐTL,GB10F2303 - HĐTL
GB10F2212,DELISTED,FU,GB10F2212 - HĐTL,GB10F2212 - HĐTL
GB10F2209,DELISTED,FU,GB10F2209 - HĐTL,GB10F2209 - HĐTL
GB10F2206,DELISTED,FU,GB10F2206 - HĐTL,GB10F2206 - HĐTL
GB05F2512,HNX,FU,GB05F2512 - HĐTL,GB05F2512 - HĐTL
GB05F2509,HNX,FU,GB05F2509 - HĐTL,GB05F2509 - HĐTL
GB05F2506,HNX,FU,GB05F2506 - HĐTL,GB05F2506 - HĐTL
GB05F2503,DELISTED,FU,GB05F2503 - HĐTL,GB05F2503 - HĐTL
GB05F2412,DELISTED,FU,GB05F2412 - HĐTL,GB05F2412 - HĐTL
GB05F2409,DELISTED,FU,GB05F2409 - HĐTL,GB05F2409 - HĐTL
GB05F2406,DELISTED,FU,GB05F2406 - HĐTL,GB05F2406 - HĐTL
GB05F2403,DELISTED,FU,GB05F2403 - HĐTL,GB05F2403 - HĐTL
GB05F2312,DELISTED,FU,GB05F2312 - HĐTL,GB05F2312 - HĐTL
GB05F2309,DELISTED,FU,GB05F2309 - HĐTL,GB05F2309 - HĐTL
GB05F2306,DELISTED,FU,GB05F2306 - HĐTL,GB05F2306 - HĐTL
GB05F2303,DELISTED,FU,GB05F2303 - HĐTL,GB05F2303 - HĐTL
GB05F2212,DELISTED,FU,GB05F2212 - HĐTL,GB05F2212 - HĐTL
GB05F2209,DELISTED,FU,GB05F2209 - HĐTL,GB05F2209 - HĐTL
GB05F2206,DELISTED,FU,GB05F2206 - HĐTL,GB05F2206 - HĐTL
GAS,HSX,STOCK,PV Gas,Tổng Công ty Khí Việt Nam - Công ty Cổ phần
GAB,UPCOM,STOCK,ĐT Khai khoáng và QL Tài sản FLC,Công ty Cổ phần Đầu tư Khai khoáng & Quản lý Tài sản FLC
G36,UPCOM,STOCK,Tổng Công ty 36,Tổng Công ty 36 - Công ty Cổ phần
G20,UPCOM,STOCK,Đầu tư Dệt may Vĩnh Phúc,Công ty Cổ phần Đầu tư Dệt may Vĩnh Phúc
FUEVN100,HSX,ETF,FUEVN100 - ETF,FUEVN100 - ETF
FUEVFVND,HSX,ETF,FUEVFVND - ETF,FUEVFVND - ETF
FUETCC50,HSX,ETF,FUETCC50 - ETF,FUETCC50 - ETF
FUESSVFL,HSX,ETF,FUESSVFL - ETF,FUESSVFL - ETF
FUESSV50,HSX,ETF,FUESSV50 - ETF,FUESSV50 - ETF
FUESSV30,HSX,ETF,FUESSV30 - ETF,FUESSV30 - ETF
FUEMAVND,HSX,ETF,FUEMAVND - ETF,FUEMAVND - ETF
FUEMAV30,HSX,ETF,FUEMAV30 - ETF,FUEMAV30 - ETF
FUEKIVND,HSX,ETF,FUEKIVND - ETF,FUEKIVND - ETF
FUEKIVFS,HSX,ETF,FUEKIVFS - ETF,FUEKIVFS - ETF
FUEKIV30,HSX,ETF,FUEKIV30 - ETF,FUEKIV30 - ETF
FUEIP100,HSX,ETF,FUEIP100 - ETF,FUEIP100 - ETF
FUEFCV50,HSX,ETF,FUEFCV50 - ETF,FUEFCV50 - ETF
FUEDCMID,HSX,ETF,FUEDCMID - ETF,FUEDCMID - ETF
FUEBFVND,HSX,ETF,FUEBFVND - ETF,FUEBFVND - ETF
FUEABVND,HSX,ETF,FUEABVND - ETF,FUEABVND - ETF
FUCVREIT,HSX,UNIT_TRUST,FUCVREIT,FUCVREIT
FUCTVGF5,HSX,UNIT_TRUST,FUCTVGF5,FUCTVGF5
FUCTVGF4,HSX,UNIT_TRUST,FUCTVGF4,FUCTVGF4
FUCTVGF3,HSX,UNIT_TRUST,FUCTVGF3,FUCTVGF3
FTS,HSX,STOCK,Chứng khoán FPT,Công ty Cổ phần Chứng khoán FPT
FTM,UPCOM,STOCK,Phát triển Đức Quân,Công ty Cổ phần Đầu tư và Phát triển Đức Quân
FTI,UPCOM,STOCK,Công nghiệp - Thương mại Hữu Nghị,Công ty Cổ phần Công nghiệp - Thương mại Hữu Nghị
FT1,UPCOM,STOCK,Phụ tùng máy số 1,Công ty Cổ phần Phụ tùng máy số 1
FSO,UPCOM,STOCK,Đóng tàu thủy sản VN,Công ty Cổ phần Cơ khí đóng tàu thủy sản Việt Nam
FRT,HSX,STOCK,Bán lẻ FPT,Công ty Cổ phần Bán lẻ Kỹ thuật số FPT
FRM,UPCOM,STOCK,Lâm nghiệp Sài Gòn,Công ty Cổ phần Lâm nghiệp Sài Gòn
FRC,UPCOM,STOCK,Lâm đặc sản xuất khẩu Quảng Nam,Công ty Cổ phần Lâm đặc sản xuất khẩu Quảng Nam
FPT,HSX,STOCK,FPT Corp,Công ty Cổ phần FPT
FOX,UPCOM,STOCK,FPT Telecom,Công ty Cổ phần Viễn thông FPT
FOC,UPCOM,STOCK,FPT Online,Công ty Cổ phần Dịch vụ Trực tuyến FPT
FMC,HSX,STOCK,Thực phẩm Sao Ta,Công ty Cổ phần Thực phẩm Sao Ta
FLC,UPCOM,STOCK,Tập đoàn FLC,Công ty Cổ phần Tập đoàn FLC
FIT,HSX,STOCK,Tập đoàn F.I.T,Công ty Cổ phần Tập đoàn F.I.T
FIR,HSX,STOCK,Địa ốc First Real,Công ty Cổ phần Địa ốc First Real
FID,HNX,STOCK,Đầu tư và PT doanh nghiệp VN,Công ty Cổ phần Đầu tư và Phát triển Doanh nghiệp Việt Nam
FIC,UPCOM,STOCK,VLXD số 1,Tổng Công ty Vật liệu Xây dựng số 1 - Công ty Cổ phần
FHS,UPCOM,STOCK,Phát hành sách TP HCM - FAHASA,Công ty Cổ phần Phát hành sách Thành phố Hồ Chí Minh - FAHASA
FHN,UPCOM,STOCK,XNK lương thực Hà Nội,Công ty Cổ phần Xuất nhập khẩu Lương thực - Thực phẩm Hà Nội
FGL,UPCOM,STOCK,Cà Phê Gia Lai,Công ty Cổ phần Cà phê Gia Lai
FDG,DELISTED,STOCK,Thủy sản Docimexco,Công ty Cổ phần Docimexco
FDC,HSX,STOCK,FIDECO,Công ty Cổ phần Ngoại thương và Phát triển Đầu tư Thành phố Hồ Chí Minh
FCS,UPCOM,STOCK,Lương thực TP Hồ Chí Minh,Công ty Cổ phần Lương thực Thành phố Hồ Chí Minh
FCN,HSX,STOCK,FECON CORP,Công ty Cổ phần FECON
FCM,HSX,STOCK,Khoáng sản FECON,Công ty Cổ phần Khoáng sản FECON
FCC,UPCOM,STOCK,Liên hợp Thực phẩm,Công ty Cổ phần Liên hợp Thực phẩm
FBC,UPCOM,STOCK,Cơ khí Phổ Yên,Công ty Cổ phần Cơ khí Phổ Yên
FBA,UPCOM,STOCK,Tập đoàn Quốc tế FBA,Công ty Cổ phần Tập đoàn Quốc tế FBA
EVS,HNX,STOCK,Chứng khoán Everest,Công ty Cổ phần Chứng khoán Everest
EVG,HSX,STOCK,Tập đoàn Everland,Công ty Cổ phần Tập đoàn Everland
EVF,HSX,STOCK,Tài chính Điện lực,Công ty Tài chính Cổ phần Điện Lực
EVE,HSX,STOCK,Everpia,Công ty Cổ phần Everpia
EPH,UPCOM,STOCK,Xuất bản giáo dục Hà Nội,Công ty Cổ phần Dịch vụ Xuất bản Giáo dục Hà Nội
EPC,UPCOM,STOCK,Cà Phê Ea Pốk,Công ty Cổ phần Cà Phê Ea Pốk
EMS,UPCOM,STOCK,Chuyển phát nhanh Bưu điện,Tổng Công ty Chuyển phát nhanh Bưu điện - Công ty Cổ phần
EMG,UPCOM,STOCK,Thiết bị phụ tùng cơ điện,Công ty Cổ phần Thiết bị Phụ tùng Cơ điện
EME,UPCOM,STOCK,Điện Cơ,Công ty Cổ phần Điện Cơ
EMC,DELISTED,STOCK,Cơ điện Thủ Đức,Công ty Cổ phần Cơ điện Thủ Đức
ELC,HSX,STOCK,ELCOM,Công ty Cổ phần Công nghệ - Viễn thông ELCOM
EIN,UPCOM,STOCK,Đầu tư - TM - DV Điện lực,Công ty Cổ phần Đầu tư - Thương Mại - Dịch vụ Điện lực
EID,HNX,STOCK,Phát triển GD Hà Nội,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Hà Nội
EIC,UPCOM,STOCK,EVN Quốc Tế,Công ty Cổ phần EVN Quốc Tế
EIB,HSX,STOCK,Eximbank,Ngân hàng Thương mại Cổ phần Xuất nhập khẩu Việt Nam
EFI,UPCOM,STOCK,Tài chính giáo dục,Công ty Cổ phần Đầu tư Tài chính Giáo dục
ECO,UPCOM,STOCK,Ecoplastic VN,Công ty Cổ Phần Nhựa Sinh Thái Việt Nam
ECI,HNX,STOCK,Bản đồ và tranh ảnh GD,Công ty Cổ phần Tập đoàn ECI
EBS,HNX,STOCK,Sách Giáo dục Hà Nội,Công ty Cổ phần Sách Giáo dục tại Thành phố Hà Nội
EAD,DELISTED,STOCK,Điện lực Đắk Lắk,Công ty Cổ phần Thủy điện Điện lực Đắk Lắk
E29,UPCOM,STOCK,Đầu tư XD và Kỹ thuật 29,Công ty cổ phần Đầu tư Xây dựng và Kỹ thuật 29
E1VFVN30,HSX,ETF,E1VFVN30 - ETF,E1VFVN30 - ETF
E12,UPCOM,STOCK,XD Điện VNECO 12,Công ty Cổ phần Xây Dựng Điện VNECO 12
DZM,UPCOM,STOCK,Cơ điện Dzĩ An,Công ty Cổ phần Cơ điện Dzĩ An
DXV,HSX,STOCK,Vật liệu Xây dựng Đà Nẵng,Công ty Cổ phần VICEM Vật liệu Xây dựng Đà Nẵng
DXS,HSX,STOCK,Dịch vụ BĐS Đất Xanh,Công ty Cổ phần Dịch vụ Bất động sản Đất Xanh
DXP,HNX,STOCK,Cảng Đoạn Xá,Công ty Cổ phần Cảng Đoạn Xá
DXL,UPCOM,STOCK,Du lịch và Xuất nhập khẩu Lạng Sơn,Công ty Cổ phần Du lịch và Xuất nhập khẩu Lạng Sơn
DXG,HSX,STOCK,Địa ốc Đất Xanh,Công ty Cổ phần Tập đoàn Đất Xanh
DX2,DELISTED,STOCK,,
DWS,UPCOM,STOCK,Cấp nước Đồng Tháp,Công ty Cổ phần Cấp nước và Môi trường Đô thị Đồng Tháp
DWC,UPCOM,STOCK,Cấp nước Đắk Lắk,Công ty Cổ phần Cấp nước Đắk Lắk
DVW,UPCOM,STOCK,DV và XD cấp nước Đồng Nai,Công ty Cổ phần Dịch vụ và Xây dựng cấp nước Đồng Nai
DVP,HSX,STOCK,ĐT và PT Cảng Đình Vũ,Công ty Cổ phần Đầu tư và Phát triển Cảng Đình Vũ
DVN,UPCOM,STOCK,Tổng Công ty Dược Việt Nam,Tổng Công ty Dược Việt Nam - CTCP
DVM,HNX,STOCK,Dược liệu Việt Nam,Công ty Cổ phần Dược liệu Việt Nam
DVG,UPCOM,STOCK,Tập đoàn Sơn Đại Việt,Công ty Cổ phần Đại Việt Group DVG
DVC,UPCOM,STOCK,TM dịch vụ Cảng Hải Phòng,Công ty Cổ phần Thương mại dịch vụ Tổng Hợp Cảng Hải Phòng
DUS,UPCOM,STOCK,Dịch vụ Đô thị Đà Lạt,Công ty Cổ phần Dịch vụ Đô thị Đà Lạt
DTV,DELISTED,STOCK,PT điện Nông thôn Trà Vinh,Công ty Cổ phần Phát triển điện Trà Vinh
DTT,HSX,STOCK,Kỹ nghệ Đô Thành,Công ty Cổ phần Kỹ nghệ Đô Thành
DTP,UPCOM,STOCK,Dược phẩm CPC1 Hà Nội,Công ty Cổ phần Dược phẩm CPC1 Hà Nội
DTL,HSX,STOCK,Đại Thiên Lộc,Công ty Cổ phần Đại Thiên Lộc
DTK,HNX,STOCK,Vinacomin Power,Tổng Công ty Điện lực TKV - Công ty Cổ phần
DTI,UPCOM,STOCK,Đầu tư Đức Trung,Công ty Cổ phần Đầu tư Đức Trung
DTH,UPCOM,STOCK,Vật tư Y tế Thanh Hóa,Công ty Cổ phần Dược - Vật tư Y tế Thanh Hóa
DTG,HNX,STOCK,Dược phẩm Tipharco,Công ty Cổ phần Dược phẩm Tipharco
DTE,UPCOM,STOCK,Đại Trường Thành Holdings,Công ty Cổ phần Đầu tư Năng lượng Đại Trường Thành Holdings
DTD,HNX,STOCK,Đầu tư Phát triển Thành Đạt,Công ty Cổ phần Đầu tư Phát triển Thành Đạt
DTC,UPCOM,STOCK,Viglacera Đông Triều,Công ty Cổ phần Viglacera Đông Triều
DTB,UPCOM,STOCK,Công trình Đô thị Bảo Lộc,Công ty Cổ phần Công trình Đô thị Bảo Lộc
DTA,HSX,STOCK,BĐS Đệ Tam,Công ty Cổ phần Đệ Tam
DT4,DELISTED,STOCK,Bảo trì đường thủy nội địa số 4,Công ty Cổ phần Quản lý Đường sông số 4
DSV,DELISTED,STOCK,Đường sắt Vĩnh Phú,Công ty Cổ phần Đường sắt Vĩnh Phú
DST,HNX,STOCK,Đầu tư Sao Thăng Long,Công ty Cổ phần Đầu tư Sao Thăng Long
DSP,UPCOM,STOCK,Dịch vụ Du lịch Phú Thọ,Công ty Cổ phần Dịch vụ Du lịch Phú Thọ
DSN,HSX,STOCK,Công viên nước Đầm Sen,Công ty Cổ phần Công viên nước Đầm Sen
DSG,UPCOM,STOCK,Kính Đáp Cầu,Công ty Cổ phần Kính Đáp Cầu
DSE,HSX,STOCK,Chứng Khoán DNSE,Công ty Cổ phần Chứng khoán DNSE
DSD,UPCOM,STOCK,DHC Suối Đôi,Công ty cổ phần DHC Suối Đôi
DSC,HSX,STOCK,Chứng khoán DSC,Công ty Cổ phần Chứng khoán DSC
DS3,HNX,STOCK,Quản lý Đường sông số 3,Công ty Cổ phần DS3
DRL,HSX,STOCK,Thủy điện - Điện lực 3,Công ty Cổ phần Thủy điện - Điện lực 3
DRI,UPCOM,STOCK,Đầu tư Cao su Đắk Lắk,Công ty Cổ phần Đầu tư Cao su Đắk Lắk
DRH,HSX,STOCK,DRH Holdings,Công ty Cổ phần DRH Holdings
DRG,UPCOM,STOCK,Cao su Đắk Lắk,Công ty Cổ phần Cao su Đắk Lắk
DRC,HSX,STOCK,Cao su Đà Nẵng,Công ty Cổ phần Cao su Đà Nẵng
DQC,HSX,STOCK,Tập đoàn Điện Quang,Công ty Cổ phần Tập đoàn Điện Quang
DPS,UPCOM,STOCK,Đầu tư Phát triển Sóc Sơn,Công ty Cổ phần Đầu tư Phát triển Sóc Sơn
DPR,HSX,STOCK,Cao su Đồng Phú,Công ty Cổ phần Cao su Đồng Phú
DPP,UPCOM,STOCK,Dược Đồng Nai,Công ty Cổ phần Dược Đồng Nai
DPM,HSX,STOCK,Tổng Công ty Phân bón và Hóa chất Dầu khí,Tổng Công ty Phân bón và Hóa chất Dầu khí - Công ty Cổ phần
DPH,UPCOM,STOCK,Dược phẩm Hải Phòng,Công ty Cổ phần Dược phẩm Hải Phòng
DPG,HSX,STOCK,Tập đoàn Đạt Phương,Công ty Cổ phần Tập đoàn Đạt Phương
DPD,DELISTED,STOCK,Cao su Đồng Phú Đắk Nông,Công ty cổ phần Cao su Đồng Phú - Đắk Nông
DPC,UPCOM,STOCK,Nhựa Đà Nẵng,Công ty Cổ phần Nhựa Đà Nẵng
DP3,HNX,STOCK,Dược Phẩm TW3,Công ty Cổ Phần Dược Phẩm Trung Ương 3
DP2,UPCOM,STOCK,Dược phẩm TW 2,Công ty Cổ phần Dược phẩm Trung ương 2
DP1,UPCOM,STOCK,Dược phẩm Trung ương CPC1,Công ty Cổ phần Dược phẩm Trung ương CPC1
DOP,UPCOM,STOCK,Vận tải XD Đồng Tháp,Công ty Cổ phần Vận tải Xăng dầu Đồng Tháp
DOC,UPCOM,STOCK,Vật tư nông nghiệp Đồng Nai,Công ty Cổ phần Vật tư nông nghiệp Đồng Nai
DNW,UPCOM,STOCK,Cấp nước Đồng Nai,Công ty Cổ phần Cấp nước Đồng Nai
DNT,UPCOM,STOCK,Du lịch Đồng Nai,Công ty Cổ phần Du lịch Đồng Nai
DNP,HNX,STOCK,Nhựa Đồng Nai,Công ty Cổ phần DNP Holding
DNN,UPCOM,STOCK,Cấp nước Đà Nẵng,Công ty Cổ phần Cấp nước Đà Nẵng
DNM,UPCOM,STOCK,Y tế Danameco,Tổng Công ty Cổ phần Y tế Danameco
DNL,UPCOM,STOCK,Logistics Cảng Đà Nẵng,Công ty Cổ phần Logistics Cảng Đà Nẵng
DNH,UPCOM,STOCK,Thủy điện Đa Nhim-Hàm Thuận-Đa Mi,Công ty Cổ phần Thủy điện Đa Nhim - Hàm Thuận - Đa Mi
DNE,UPCOM,STOCK,Môi trường Đô thị Đà Nẵng,Công ty Cổ phần Môi trường Đô thị Đà Nẵng
DND,UPCOM,STOCK,XD và Vật liệu Đồng Nai,Công ty Cổ phần Đầu tư Xây dựng và Vật liệu Đồng Nai
DNC,HNX,STOCK,Điện nước Hải Phòng,Công ty Cổ phần Điện nước Lắp máy Hải Phòng
DNB,DELISTED,STOCK,,
DNA,UPCOM,STOCK,Điện nước An Giang,Công ty Cổ phần Điện nước An Giang
DMS,UPCOM,STOCK,Dầu khí DMC-miền Nam,Công ty Cổ phần Hóa phẩm dầu khí DMC - Miền Nam
DMN,UPCOM,STOCK,Domenal,Công ty Cổ phần Domenal
DMC,HSX,STOCK,Dược phẩm DOMESCO,Công ty Cổ phần Xuất nhập khẩu Y tế DOMESCO
DM7,UPCOM,STOCK,Dệt may 7,Công ty Cổ phần Dệt may 7
DLT,UPCOM,STOCK,Du lịch và TM - Vinacomin,Công ty Cổ phần Du lịch và Thương mại - Vinacomin
DLR,UPCOM,STOCK,Địa ốc Đà Lạt,Công ty Cổ phần Địa ốc Đà Lạt
DLM,DELISTED,STOCK,Chiếu sáng công cộng Đà Nẵng,Công ty Cổ phần Chiếu sáng công cộng Đà Nẵng
DLG,HSX,STOCK,Đức Long Gia Lai,Công ty Cổ phần Tập đoàn Đức Long Gia Lai
DLD,UPCOM,STOCK,Du lịch Đắk Lắk,Công ty Cổ phần Du lịch Đắk Lắk
DL1,HNX,STOCK,Tập đoàn Alpha 7,Công ty Cổ phần Tập đoàn Alpha Seven
DKW,UPCOM,STOCK,Cấp nước sinh hoạt Châu Thành,Công ty Cổ phần Cấp nước sinh hoạt Châu Thành
DKH,DELISTED,STOCK,,
DKC,UPCOM,STOCK,Chợ Lạng Sơn,Công ty Cổ phần Chợ Lạng Sơn
DIH,HNX,STOCK,PT Xây dựng Hội An,Công ty Cổ phần Đầu tư Phát triển Xây dựng - Hội An
DIG,HSX,STOCK,DIC Corp,Tổng Công ty Cổ phần Đầu tư Phát triển Xây dựng
DID,UPCOM,STOCK,DIC - Đồng Tiến,Công ty Cổ phần DIC - Đồng Tiến
DIC,UPCOM,STOCK,ĐT và TM DIC,Công ty Cổ phần Đầu tư và Thương mại DIC
DHT,HNX,STOCK,Dược phẩm Hà Tây,Công ty Cổ phần Dược phẩm Hà Tây
DHP,HNX,STOCK,Điện cơ Hải Phòng,Công ty Cổ phần Điện cơ Hải Phòng
DHN,UPCOM,STOCK,Dược Hà Nội,Công ty Cổ phần Dược phẩm Hà Nội
DHM,HSX,STOCK,Khoáng sản Dương Hiếu,Công ty Cổ phần Thương mại & Khai thác Khoáng sản Dương Hiếu
DHG,HSX,STOCK,Dược Hậu Giang,Công ty Cổ phần Dược Hậu Giang
DHD,UPCOM,STOCK,Dược Vật Tư Y Tế Hải Dương,Công ty Cổ phần Dược Vật Tư Y Tế Hải Dương
DHC,HSX,STOCK,Đông Hải Bến Tre,Công ty Cổ phần Đông Hải Bến Tre
DHB,UPCOM,STOCK,Đạm Hà Bắc,Công ty Cổ phần Phân đạm và Hóa chất Hà Bắc
DHA,HSX,STOCK,Hóa An,Công ty Cổ phần Hóa An
DGW,HSX,STOCK,Thế Giới Số,Công ty Cổ phần Thế Giới Số
DGT,UPCOM,STOCK,Công trình GT Đồng Nai,Công ty Cổ phần Công trình Giao thông Đồng Nai
DGC,HSX,STOCK,Hóa chất Đức Giang,Công ty Cổ phần Tập đoàn Hóa chất Đức Giang
DFF,UPCOM,STOCK,Tập đoàn Đua Fat,Công ty Cổ phần Tập đoàn Đua Fat
DFC,UPCOM,STOCK,Xích líp Đông Anh,Công ty Cổ phần Xích líp Đông Anh
DDV,UPCOM,STOCK,DAP - Vinachem,Công ty Cổ phần DAP - Vinachem
DDN,UPCOM,STOCK,Dược - TB Y tế Đà Nẵng,Công ty Cổ phần Dược - Thiết bị y tế Đà Nẵng
DDM,UPCOM,STOCK,Hàng hải Đông Đô,Công ty Cổ phần Hàng hải Đông Đô
DDH,UPCOM,STOCK,Đảm bảo GTĐT Hải Phòng,Công ty Cổ phần Đảm bảo giao thông đường thủy Hải Phòng
DDG,HNX,STOCK,Đầu tư CN XNK Đông Dương,Công ty Cổ phần Đầu tư Công nghiệp Xuất nhập khẩu Đông Dương
DDB,UPCOM,STOCK,TM & XD Đông Dương,Công ty Cổ Phần Thương Mại Và Xây Dựng Đông Dương
DCT,UPCOM,STOCK,Tấm lợp VLXD Đồng Nai,Công ty Cổ phần Tấm lợp Vật liệu Xây dựng Đồng Nai
DCS,UPCOM,STOCK,Đại Châu,Công ty Cổ phần Tập đoàn Đại Châu
DCR,UPCOM,STOCK,Gạch men COSEVCO,Công ty Cổ phần Gạch men COSEVCO
DCM,HSX,STOCK,Đạm Cà Mau,Công ty Cổ phần Phân bón Dầu Khí Cà Mau
DCL,HSX,STOCK,Dược phẩm Cửu Long,Công ty Cổ phần Dược phẩm Cửu Long
DCH,UPCOM,STOCK,Địa chính Hà Nội,Công ty Cổ phần Địa chính Hà Nội
DCG,UPCOM,STOCK,May Đáp Cầu,Công ty Cổ phần Tổng Công ty May Đáp Cầu
DCF,UPCOM,STOCK,XD và Thiết kế số 1,Công ty Cổ phần Xây dựng và Thiết kế số 1
DC4,HSX,STOCK,Xây dựng DIC Holdings,Công ty Cổ phần Xây dựng DIC Holdings
DC2,HNX,STOCK,DIC Số 2,Công ty Cổ phần Đầu tư Phát triển - Xây dựng (DIC) số 2
DC1,UPCOM,STOCK,Phát triển Xây dựng số 1 (DIC1),Công ty Cổ phần Đầu tư Phát triển Xây dựng số 1
DBW,DELISTED,STOCK,Cấp nước Điện Biên,Công ty Cổ phần Cấp nước Điện Biên
DBT,HSX,STOCK,Dược phẩm Bến Tre,Công ty Cổ phần Dược phẩm Bến Tre
DBM,UPCOM,STOCK,BAMEPHARM,Công ty Cổ phần Dược - Vật tư Y tế Đắk Lắk
DBH,DELISTED,STOCK,Đường bộ Hải Phòng,Công ty Cổ phần Đường bộ Hải Phòng
DBD,HSX,STOCK,Dược - TB Y tế Bình Định,Công ty Cổ phần Dược - Trang thiết bị y tế Bình Định (BIDIPHAR)
DBC,HSX,STOCK,Tập đoàn DABACO,Công ty Cổ phần Tập đoàn Dabaco Việt Nam
DAT,HSX,STOCK,ĐT Du lịch và PT Thủy sản,Công ty Cổ phần Đầu tư Du lịch và Phát triển Thủy sản
DAS,UPCOM,STOCK,Thiết bị Dầu khí Đà Nẵng,Công ty Cổ phần Máy - Thiết bị Dầu khí Đà Nẵng
DAR,DELISTED,STOCK,Xe lửa Dĩ An,Công ty Cổ phần Xe lửa Dĩ An
DAN,UPCOM,STOCK,Dược Danapha,Công ty Cổ phần Dược Danapha
DAH,HSX,STOCK,Tập đoàn Khách sạn Đông Á,Công ty Cổ phần Tập đoàn Khách sạn Đông Á
DAG,UPCOM,STOCK,TĐ Nhựa Đông Á,Công ty Cổ phần Tập đoàn Nhựa Đông Á
DAE,HNX,STOCK,Sách Giáo dục Đà Nẵng,Công ty Cổ phần Sách Giáo dục tại Thành phố Đà Nẵng
DAD,HNX,STOCK,Phát triển GD Đà Nẵng,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Đà Nẵng
DAC,UPCOM,STOCK,CTCP 382 Đông Anh,Công ty Cổ phần 382 Đông Anh
D2D,HSX,STOCK,Phát triển Đô thị số 2,Công ty Cổ phần Phát triển Đô thị Công nghiệp số 2
D17,DELISTED,STOCK,Khai thác mỏ Đồng Tân,Công ty Cổ Phần Đồng Tân
D11,HNX,STOCK,Địa ốc 11,Công ty Cổ phần Địa ốc 11
CYC,UPCOM,STOCK,Gạch men Chang YIH,Công ty Cổ phần Gạch men Chang Yih
CX8,HNX,STOCK,Constrexim số 8,Công ty Cổ phần Đầu tư và Xây lắp Constrexim số 8
CVT122009,BOND,BOND,CVT122009 - Trái phiếu,CVT122009 - Trái phiếu
CVT122008,DELISTED,BOND,CVT122008 - Trái phiếu,CVT122008 - Trái phiếu
CVT122007,DELISTED,BOND,CVT122007 - Trái phiếu,CVT122007 - Trái phiếu
CVT,HSX,STOCK,CMC JSC,Công ty Cổ phần CMC
CVRE2505,HSX,CW,CVRE2505 - Chứng quyền,CVRE2505 - Chứng quyền
CVRE2504,HSX,CW,CVRE2504 - Chứng quyền,CVRE2504 - Chứng quyền
CVRE2503,HSX,CW,CVRE2503 - Chứng quyền,CVRE2503 - Chứng quyền
CVRE2502,HSX,CW,CVRE2502 - Chứng quyền,CVRE2502 - Chứng quyền
CVRE2501,HSX,CW,CVRE2501 - Chứng quyền,CVRE2501 - Chứng quyền
CVRE2410,HSX,CW,CVRE2410 - Chứng quyền,CVRE2410 - Chứng quyền
CVRE2409,DELISTED,CW,CVRE2409 - Chứng quyền,CVRE2409 - Chứng quyền
CVRE2408,HSX,CW,CVRE2408 - Chứng quyền,CVRE2408 - Chứng quyền
CVRE2407,HSX,CW,CVRE2407 - Chứng quyền,CVRE2407 - Chứng quyền
CVRE2406,HSX,CW,CVRE2406 - Chứng quyền,CVRE2406 - Chứng quyền
CVRE2405,HSX,CW,CVRE2405 - Chứng quyền,CVRE2405 - Chứng quyền
CVRE2404,DELISTED,CW,CVRE2404 - Chứng quyền,CVRE2404 - Chứng quyền
CVRE2403,DELISTED,CW,CVRE2403 - Chứng quyền,CVRE2403 - Chứng quyền
CVRE2402,DELISTED,CW,CVRE2402 - Chứng quyền,CVRE2402 - Chứng quyền
CVRE2401,DELISTED,CW,CVRE2401 - Chứng quyền,CVRE2401 - Chứng quyền
CVRE2323,DELISTED,CW,CVRE2323 - Chứng quyền,CVRE2323 - Chứng quyền
CVRE2322,DELISTED,CW,CVRE2322 - Chứng quyền,CVRE2322 - Chứng quyền
CVRE2321,DELISTED,CW,CVRE2321 - Chứng quyền,CVRE2321 - Chứng quyền
CVRE2320,DELISTED,CW,CVRE2320 - Chứng quyền,CVRE2320 - Chứng quyền
CVRE2319,DELISTED,CW,CVRE2319 - Chứng quyền,CVRE2319 - Chứng quyền
CVRE2318,DELISTED,CW,CVRE2318 - Chứng quyền,CVRE2318 - Chứng quyền
CVRE2317,DELISTED,CW,CVRE2317 - Chứng quyền,CVRE2317 - Chứng quyền
CVRE2316,DELISTED,CW,CVRE2316 - Chứng quyền,CVRE2316 - Chứng quyền
CVRE2315,DELISTED,CW,CVRE2315 - Chứng quyền,CVRE2315 - Chứng quyền
CVRE2314,DELISTED,CW,CVRE2314 - Chứng quyền,CVRE2314 - Chứng quyền
CVRE2313,DELISTED,CW,CVRE2313 - Chứng quyền,CVRE2313 - Chứng quyền
CVRE2312,DELISTED,CW,CVRE2312 - Chứng quyền,CVRE2312 - Chứng quyền
CVRE2311,DELISTED,CW,CVRE2311 - Chứng quyền,CVRE2311 - Chứng quyền
CVRE2310,DELISTED,CW,CVRE2310 - Chứng quyền,CVRE2310 - Chứng quyền
CVRE2309,DELISTED,CW,CVRE2309 - Chứng quyền,CVRE2309 - Chứng quyền
CVRE2308,DELISTED,CW,CVRE2308 - Chứng quyền,CVRE2308 - Chứng quyền
CVRE2307,DELISTED,CW,CVRE2307 - Chứng quyền,CVRE2307 - Chứng quyền
CVRE2306,DELISTED,CW,CVRE2306 - Chứng quyền,CVRE2306 - Chứng quyền
CVRE2305,DELISTED,CW,CVRE2305 - Chứng quyền,CVRE2305 - Chứng quyền
CVRE2304,DELISTED,CW,CVRE2304 - Chứng quyền,CVRE2304 - Chứng quyền
CVRE2303,DELISTED,CW,CVRE2303 - Chứng quyền,CVRE2303 - Chứng quyền
CVRE2302,DELISTED,CW,CVRE2302 - Chứng quyền,CVRE2302 - Chứng quyền
CVRE2301,DELISTED,CW,CVRE2301 - Chứng quyền,CVRE2301 - Chứng quyền
CVRE2221,DELISTED,CW,CVRE2221 - Chứng quyền,CVRE2221 - Chứng quyền
CVRE2220,DELISTED,CW,CVRE2220 - Chứng quyền,CVRE2220 - Chứng quyền
CVRE2219,DELISTED,CW,CVRE2219 - Chứng quyền,CVRE2219 - Chứng quyền
CVRE2218,DELISTED,CW,CVRE2218 - Chứng quyền,CVRE2218 - Chứng quyền
CVRE2217,DELISTED,CW,CVRE2217 - Chứng quyền,CVRE2217 - Chứng quyền
CVRE2216,DELISTED,CW,CVRE2216 - Chứng quyền,CVRE2216 - Chứng quyền
CVRE2215,DELISTED,CW,CVRE2215 - Chứng quyền,CVRE2215 - Chứng quyền
CVRE2214,DELISTED,CW,CVRE2214 - Chứng quyền,CVRE2214 - Chứng quyền
CVRE2213,DELISTED,CW,CVRE2213 - Chứng quyền,CVRE2213 - Chứng quyền
CVRE2212,DELISTED,CW,CVRE2212 - Chứng quyền,CVRE2212 - Chứng quyền
CVRE2211,DELISTED,CW,CVRE2211 - Chứng quyền,CVRE2211 - Chứng quyền
CVRE2210,DELISTED,CW,CVRE2210 - Chứng quyền,CVRE2210 - Chứng quyền
CVRE2209,DELISTED,CW,CVRE2209 - Chứng quyền,CVRE2209 - Chứng quyền
CVRE2208,DELISTED,CW,CVRE2208 - Chứng quyền,CVRE2208 - Chứng quyền
CVRE2207,DELISTED,CW,CVRE2207 - Chứng quyền,CVRE2207 - Chứng quyền
CVRE2206,DELISTED,CW,CVRE2206 - Chứng quyền,CVRE2206 - Chứng quyền
CVRE2205,DELISTED,CW,CVRE2205 - Chứng quyền,CVRE2205 - Chứng quyền
CVRE2204,DELISTED,CW,CVRE2204 - Chứng quyền,CVRE2204 - Chứng quyền
CVRE2203,DELISTED,CW,CVRE2203 - Chứng quyền,CVRE2203 - Chứng quyền
CVRE2202,DELISTED,CW,CVRE2202 - Chứng quyền,CVRE2202 - Chứng quyền
CVRE2201,DELISTED,CW,CVRE2201 - Chứng quyền,CVRE2201 - Chứng quyền
CVRE2114,DELISTED,CW,CVRE2114 - Chứng quyền,CVRE2114 - Chứng quyền
CVRE2113,DELISTED,CW,CVRE2113 - Chứng quyền,CVRE2113 - Chứng quyền
CVRE2110,DELISTED,CW,CVRE2110 - Chứng quyền,CVRE2110 - Chứng quyền
CVRE2105,DELISTED,CW,CVRE2105 - Chứng quyền,CVRE2105 - Chứng quyền
CVPB2506,HSX,CW,CVPB2506 - Chứng quyền,CVPB2506 - Chứng quyền
CVPB2505,HSX,CW,CVPB2505 - Chứng quyền,CVPB2505 - Chứng quyền
CVPB2504,HSX,CW,CVPB2504 - Chứng quyền,CVPB2504 - Chứng quyền
CVPB2503,HSX,CW,CVPB2503 - Chứng quyền,CVPB2503 - Chứng quyền
CVPB2502,HSX,CW,CVPB2502 - Chứng quyền,CVPB2502 - Chứng quyền
CVPB2501,HSX,CW,CVPB2501 - Chứng quyền,CVPB2501 - Chứng quyền
CVPB2412,HSX,CW,CVPB2412 - Chứng quyền,CVPB2412 - Chứng quyền
CVPB2411,DELISTED,CW,CVPB2411 - Chứng quyền,CVPB2411 - Chứng quyền
CVPB2410,HSX,CW,CVPB2410 - Chứng quyền,CVPB2410 - Chứng quyền
CVPB2409,HSX,CW,CVPB2409 - Chứng quyền,CVPB2409 - Chứng quyền
CVPB2408,HSX,CW,CVPB2408 - Chứng quyền,CVPB2408 - Chứng quyền
CVPB2407,HSX,CW,CVPB2407 - Chứng quyền,CVPB2407 - Chứng quyền
CVPB2406,DELISTED,CW,CVPB2406 - Chứng quyền,CVPB2406 - Chứng quyền
CVPB2405,DELISTED,CW,CVPB2405 - Chứng quyền,CVPB2405 - Chứng quyền
CVPB2404,DELISTED,CW,CVPB2404 - Chứng quyền,CVPB2404 - Chứng quyền
CVPB2403,DELISTED,CW,CVPB2403 - Chứng quyền,CVPB2403 - Chứng quyền
CVPB2402,DELISTED,CW,CVPB2402 - Chứng quyền,CVPB2402 - Chứng quyền
CVPB2401,HSX,CW,CVPB2401 - Chứng quyền,CVPB2401 - Chứng quyền
CVPB2322,DELISTED,CW,CVPB2322 - Chứng quyền,CVPB2322 - Chứng quyền
CVPB2321,DELISTED,CW,CVPB2321 - Chứng quyền,CVPB2321 - Chứng quyền
CVPB2320,DELISTED,CW,CVPB2320 - Chứng quyền,CVPB2320 - Chứng quyền
CVPB2319,DELISTED,CW,CVPB2319 - Chứng quyền,CVPB2319 - Chứng quyền
CVPB2318,DELISTED,CW,CVPB2318 - Chứng quyền,CVPB2318 - Chứng quyền
CVPB2317,DELISTED,CW,CVPB2317 - Chứng quyền,CVPB2317 - Chứng quyền
CVPB2316,DELISTED,CW,CVPB2316 - Chứng quyền,CVPB2316 - Chứng quyền
CVPB2315,DELISTED,CW,CVPB2315 - Chứng quyền,CVPB2315 - Chứng quyền
CVPB2314,DELISTED,CW,CVPB2314 - Chứng quyền,CVPB2314 - Chứng quyền
CVPB2313,DELISTED,CW,CVPB2313 - Chứng quyền,CVPB2313 - Chứng quyền
CVPB2312,DELISTED,CW,CVPB2312 - Chứng quyền,CVPB2312 - Chứng quyền
CVPB2311,DELISTED,CW,CVPB2311 - Chứng quyền,CVPB2311 - Chứng quyền
CVPB2310,DELISTED,CW,CVPB2310 - Chứng quyền,CVPB2310 - Chứng quyền
CVPB2309,DELISTED,CW,CVPB2309 - Chứng quyền,CVPB2309 - Chứng quyền
CVPB2308,DELISTED,CW,CVPB2308 - Chứng quyền,CVPB2308 - Chứng quyền
CVPB2307,DELISTED,CW,CVPB2307 - Chứng quyền,CVPB2307 - Chứng quyền
CVPB2306,DELISTED,CW,CVPB2306 - Chứng quyền,CVPB2306 - Chứng quyền
CVPB2305,DELISTED,CW,CVPB2305 - Chứng quyền,CVPB2305 - Chứng quyền
CVPB2304,DELISTED,CW,CVPB2304 - Chứng quyền,CVPB2304 - Chứng quyền
CVPB2303,DELISTED,CW,CVPB2303 - Chứng quyền,CVPB2303 - Chứng quyền
CVPB2302,DELISTED,CW,CVPB2302 - Chứng quyền,CVPB2302 - Chứng quyền
CVPB2301,DELISTED,CW,CVPB2301 - Chứng quyền,CVPB2301 - Chứng quyền
CVPB2214,DELISTED,CW,CVPB2214 - Chứng quyền,CVPB2214 - Chứng quyền
CVPB2213,DELISTED,CW,CVPB2213 - Chứng quyền,CVPB2213 - Chứng quyền
CVPB2212,DELISTED,CW,CVPB2212 - Chứng quyền,CVPB2212 - Chứng quyền
CVPB2211,DELISTED,CW,CVPB2211 - Chứng quyền,CVPB2211 - Chứng quyền
CVPB2210,DELISTED,CW,CVPB2210 - Chứng quyền,CVPB2210 - Chứng quyền
CVPB2209,DELISTED,CW,CVPB2209 - Chứng quyền,CVPB2209 - Chứng quyền
CVPB2208,DELISTED,CW,CVPB2208 - Chứng quyền,CVPB2208 - Chứng quyền
CVPB2207,DELISTED,CW,CVPB2207 - Chứng quyền,CVPB2207 - Chứng quyền
CVPB2206,DELISTED,CW,CVPB2206 - Chứng quyền,CVPB2206 - Chứng quyền
CVPB2205,DELISTED,CW,CVPB2205 - Chứng quyền,CVPB2205 - Chứng quyền
CVPB2204,DELISTED,CW,CVPB2204 - Chứng quyền,CVPB2204 - Chứng quyền
CVPB2203,DELISTED,CW,CVPB2203 - Chứng quyền,CVPB2203 - Chứng quyền
CVPB2202,DELISTED,CW,CVPB2202 - Chứng quyền,CVPB2202 - Chứng quyền
CVPB2201,DELISTED,CW,CVPB2201 - Chứng quyền,CVPB2201 - Chứng quyền
CVPB2111,DELISTED,CW,CVPB2111 - Chứng quyền,CVPB2111 - Chứng quyền
CVP,DELISTED,STOCK,Cảng Cửa Việt,Công ty cổ phần Cảng Cửa Việt
CVNM2505,HSX,CW,CVNM2505 - Chứng quyền,CVNM2505 - Chứng quyền
CVNM2504,HSX,CW,CVNM2504 - Chứng quyền,CVNM2504 - Chứng quyền
CVNM2503,HSX,CW,CVNM2503 - Chứng quyền,CVNM2503 - Chứng quyền
CVNM2502,HSX,CW,CVNM2502 - Chứng quyền,CVNM2502 - Chứng quyền
CVNM2501,HSX,CW,CVNM2501 - Chứng quyền,CVNM2501 - Chứng quyền
CVNM2408,DELISTED,CW,CVNM2408 - Chứng quyền,CVNM2408 - Chứng quyền
CVNM2407,HSX,CW,CVNM2407 - Chứng quyền,CVNM2407 - Chứng quyền
CVNM2406,HSX,CW,CVNM2406 - Chứng quyền,CVNM2406 - Chứng quyền
CVNM2405,HSX,CW,CVNM2405 - Chứng quyền,CVNM2405 - Chứng quyền
CVNM2404,DELISTED,CW,CVNM2404 - Chứng quyền,CVNM2404 - Chứng quyền
CVNM2403,DELISTED,CW,CVNM2403 - Chứng quyền,CVNM2403 - Chứng quyền
CVNM2402,DELISTED,CW,CVNM2402 - Chứng quyền,CVNM2402 - Chứng quyền
CVNM2401,HSX,CW,CVNM2401 - Chứng quyền,CVNM2401 - Chứng quyền
CVNM2316,DELISTED,CW,CVNM2316 - Chứng quyền,CVNM2316 - Chứng quyền
CVNM2315,DELISTED,CW,CVNM2315 - Chứng quyền,CVNM2315 - Chứng quyền
CVNM2314,DELISTED,CW,CVNM2314 - Chứng quyền,CVNM2314 - Chứng quyền
CVNM2313,DELISTED,CW,CVNM2313 - Chứng quyền,CVNM2313 - Chứng quyền
CVNM2312,DELISTED,CW,CVNM2312 - Chứng quyền,CVNM2312 - Chứng quyền
CVNM2311,DELISTED,CW,CVNM2311 - Chứng quyền,CVNM2311 - Chứng quyền
CVNM2310,DELISTED,CW,CVNM2310 - Chứng quyền,CVNM2310 - Chứng quyền
CVNM2309,DELISTED,CW,CVNM2309 - Chứng quyền,CVNM2309 - Chứng quyền
CVNM2308,DELISTED,CW,CVNM2308 - Chứng quyền,CVNM2308 - Chứng quyền
CVNM2307,DELISTED,CW,CVNM2307 - Chứng quyền,CVNM2307 - Chứng quyền
CVNM2306,DELISTED,CW,CVNM2306 - Chứng quyền,CVNM2306 - Chứng quyền
CVNM2305,DELISTED,CW,CVNM2305 - Chứng quyền,CVNM2305 - Chứng quyền
CVNM2304,DELISTED,CW,CVNM2304 - Chứng quyền,CVNM2304 - Chứng quyền
CVNM2303,DELISTED,CW,CVNM2303 - Chứng quyền,CVNM2303 - Chứng quyền
CVNM2302,DELISTED,CW,CVNM2302 - Chứng quyền,CVNM2302 - Chứng quyền
CVNM2301,DELISTED,CW,CVNM2301 - Chứng quyền,CVNM2301 - Chứng quyền
CVNM2212,DELISTED,CW,CVNM2212 - Chứng quyền,CVNM2212 - Chứng quyền
CVNM2211,DELISTED,CW,CVNM2211 - Chứng quyền,CVNM2211 - Chứng quyền
CVNM2210,DELISTED,CW,CVNM2210 - Chứng quyền,CVNM2210 - Chứng quyền
CVNM2209,DELISTED,CW,CVNM2209 - Chứng quyền,CVNM2209 - Chứng quyền
CVNM2208,DELISTED,CW,CVNM2208 - Chứng quyền,CVNM2208 - Chứng quyền
CVNM2207,DELISTED,CW,CVNM2207 - Chứng quyền,CVNM2207 - Chứng quyền
CVNM2206,DELISTED,CW,CVNM2206 - Chứng quyền,CVNM2206 - Chứng quyền
CVNM2205,DELISTED,CW,CVNM2205 - Chứng quyền,CVNM2205 - Chứng quyền
CVNM2204,DELISTED,CW,CVNM2204 - Chứng quyền,CVNM2204 - Chứng quyền
CVNM2203,DELISTED,CW,CVNM2203 - Chứng quyền,CVNM2203 - Chứng quyền
CVNM2202,DELISTED,CW,CVNM2202 - Chứng quyền,CVNM2202 - Chứng quyền
CVNM2201,DELISTED,CW,CVNM2201 - Chứng quyền,CVNM2201 - Chứng quyền
CVNM2114,DELISTED,CW,CVNM2114 - Chứng quyền,CVNM2114 - Chứng quyền
CVNM2113,DELISTED,CW,CVNM2113 - Chứng quyền,CVNM2113 - Chứng quyền
CVNM2112,DELISTED,CW,,
CVNM2111,DELISTED,CW,CVNM2111 - Chứng quyền,CVNM2111 - Chứng quyền
CVN,HNX,STOCK,Vinam Group,Công ty Cổ phần Vinam
CVJC2501,HSX,CW,CVJC2501 - Chứng quyền,CVJC2501 - Chứng quyền
CVJC2401,DELISTED,CW,CVJC2401 - Chứng quyền,CVJC2401 - Chứng quyền
CVJC2206,DELISTED,CW,CVJC2206 - Chứng quyền,CVJC2206 - Chứng quyền
CVJC2205,DELISTED,CW,CVJC2205 - Chứng quyền,CVJC2205 - Chứng quyền
CVJC2204,DELISTED,CW,CVJC2204 - Chứng quyền,CVJC2204 - Chứng quyền
CVJC2203,DELISTED,CW,CVJC2203 - Chứng quyền,CVJC2203 - Chứng quyền
CVJC2202,DELISTED,CW,CVJC2202 - Chứng quyền,CVJC2202 - Chứng quyền
CVJC2201,DELISTED,CW,CVJC2201 - Chứng quyền,CVJC2201 - Chứng quyền
CVJC2103,DELISTED,CW,CVJC2103 - Chứng quyền,CVJC2103 - Chứng quyền
CVIC2503,HSX,CW,CVIC2503 - Chứng quyền,CVIC2503 - Chứng quyền
CVIC2502,HSX,CW,CVIC2502 - Chứng quyền,CVIC2502 - Chứng quyền
CVIC2501,HSX,CW,CVIC2501 - Chứng quyền,CVIC2501 - Chứng quyền
CVIC2407,HSX,CW,CVIC2407 - Chứng quyền,CVIC2407 - Chứng quyền
CVIC2406,DELISTED,CW,CVIC2406 - Chứng quyền,CVIC2406 - Chứng quyền
CVIC2405,HSX,CW,CVIC2405 - Chứng quyền,CVIC2405 - Chứng quyền
CVIC2404,HSX,CW,CVIC2404 - Chứng quyền,CVIC2404 - Chứng quyền
CVIC2403,DELISTED,CW,CVIC2403 - Chứng quyền,CVIC2403 - Chứng quyền
CVIC2402,DELISTED,CW,CVIC2402 - Chứng quyền,CVIC2402 - Chứng quyền
CVIC2401,DELISTED,CW,CVIC2401 - Chứng quyền,CVIC2401 - Chứng quyền
CVIC2314,DELISTED,CW,CVIC2314 - Chứng quyền,CVIC2314 - Chứng quyền
CVIC2313,DELISTED,CW,CVIC2313 - Chứng quyền,CVIC2313 - Chứng quyền
CVIC2312,DELISTED,CW,CVIC2312 - Chứng quyền,CVIC2312 - Chứng quyền
CVIC2311,DELISTED,CW,CVIC2311 - Chứng quyền,CVIC2311 - Chứng quyền
CVIC2310,DELISTED,CW,CVIC2310 - Chứng quyền,CVIC2310 - Chứng quyền
CVIC2309,DELISTED,CW,CVIC2309 - Chứng quyền,CVIC2309 - Chứng quyền
CVIC2308,DELISTED,CW,CVIC2308 - Chứng quyền,CVIC2308 - Chứng quyền
CVIC2307,DELISTED,CW,CVIC2307 - Chứng quyền,CVIC2307 - Chứng quyền
CVIC2306,DELISTED,CW,CVIC2306 - Chứng quyền,CVIC2306 - Chứng quyền
CVIC2305,DELISTED,CW,CVIC2305 - Chứng quyền,CVIC2305 - Chứng quyền
CVIC2304,DELISTED,CW,CVIC2304 - Chứng quyền,CVIC2304 - Chứng quyền
CVIC2303,DELISTED,CW,CVIC2303 - Chứng quyền,CVIC2303 - Chứng quyền
CVIC2302,DELISTED,CW,CVIC2302 - Chứng quyền,CVIC2302 - Chứng quyền
CVIC2301,DELISTED,CW,CVIC2301 - Chứng quyền,CVIC2301 - Chứng quyền
CVIC2206,DELISTED,CW,CVIC2206 - Chứng quyền,CVIC2206 - Chứng quyền
CVIC2205,DELISTED,CW,CVIC2205 - Chứng quyền,CVIC2205 - Chứng quyền
CVIC2204,DELISTED,CW,CVIC2204 - Chứng quyền,CVIC2204 - Chứng quyền
CVIC2203,DELISTED,CW,CVIC2203 - Chứng quyền,CVIC2203 - Chứng quyền
CVIC2202,DELISTED,CW,CVIC2202 - Chứng quyền,CVIC2202 - Chứng quyền
CVIC2201,DELISTED,CW,CVIC2201 - Chứng quyền,CVIC2201 - Chứng quyền
CVIC2109,DELISTED,CW,CVIC2109 - Chứng quyền,CVIC2109 - Chứng quyền
CVIC2108,DELISTED,CW,CVIC2108 - Chứng quyền,CVIC2108 - Chứng quyền
CVIC2107,DELISTED,CW,,
CVIC2106,DELISTED,CW,CVIC2106 - Chứng quyền,CVIC2106 - Chứng quyền
CVIB2503,HSX,CW,CVIB2503 - Chứng quyền,CVIB2503 - Chứng quyền
CVIB2502,HSX,CW,CVIB2502 - Chứng quyền,CVIB2502 - Chứng quyền
CVIB2501,HSX,CW,CVIB2501 - Chứng quyền,CVIB2501 - Chứng quyền
CVIB2408,HSX,CW,CVIB2408 - Chứng quyền,CVIB2408 - Chứng quyền
CVIB2407,HSX,CW,CVIB2407 - Chứng quyền,CVIB2407 - Chứng quyền
CVIB2406,HSX,CW,CVIB2406 - Chứng quyền,CVIB2406 - Chứng quyền
CVIB2405,HSX,CW,CVIB2405 - Chứng quyền,CVIB2405 - Chứng quyền
CVIB2404,DELISTED,CW,CVIB2404 - Chứng quyền,CVIB2404 - Chứng quyền
CVIB2403,DELISTED,CW,CVIB2403 - Chứng quyền,CVIB2403 - Chứng quyền
CVIB2402,HSX,CW,CVIB2402 - Chứng quyền,CVIB2402 - Chứng quyền
CVIB2401,DELISTED,CW,CVIB2401 - Chứng quyền,CVIB2401 - Chứng quyền
CVIB2307,DELISTED,CW,CVIB2307 - Chứng quyền,CVIB2307 - Chứng quyền
CVIB2306,DELISTED,CW,CVIB2306 - Chứng quyền,CVIB2306 - Chứng quyền
CVIB2305,DELISTED,CW,CVIB2305 - Chứng quyền,CVIB2305 - Chứng quyền
CVIB2304,DELISTED,CW,CVIB2304 - Chứng quyền,CVIB2304 - Chứng quyền
CVIB2303,DELISTED,CW,CVIB2303 - Chứng quyền,CVIB2303 - Chứng quyền
CVIB2302,DELISTED,CW,CVIB2302 - Chứng quyền,CVIB2302 - Chứng quyền
CVIB2301,DELISTED,CW,CVIB2301 - Chứng quyền,CVIB2301 - Chứng quyền
CVIB2201,DELISTED,CW,CVIB2201 - Chứng quyền,CVIB2201 - Chứng quyền
CVHM2504,HSX,CW,CVHM2504 - Chứng quyền,CVHM2504 - Chứng quyền
CVHM2503,HSX,CW,CVHM2503 - Chứng quyền,CVHM2503 - Chứng quyền
CVHM2502,HSX,CW,CVHM2502 - Chứng quyền,CVHM2502 - Chứng quyền
CVHM2501,HSX,CW,CVHM2501 - Chứng quyền,CVHM2501 - Chứng quyền
CVHM2411,HSX,CW,CVHM2411 - Chứng quyền,CVHM2411 - Chứng quyền
CVHM2410,DELISTED,CW,CVHM2410 - Chứng quyền,CVHM2410 - Chứng quyền
CVHM2409,HSX,CW,CVHM2409 - Chứng quyền,CVHM2409 - Chứng quyền
CVHM2408,HSX,CW,CVHM2408 - Chứng quyền,CVHM2408 - Chứng quyền
CVHM2407,HSX,CW,CVHM2407 - Chứng quyền,CVHM2407 - Chứng quyền
CVHM2406,HSX,CW,CVHM2406 - Chứng quyền,CVHM2406 - Chứng quyền
CVHM2405,DELISTED,CW,CVHM2405 - Chứng quyền,CVHM2405 - Chứng quyền
CVHM2404,DELISTED,CW,CVHM2404 - Chứng quyền,CVHM2404 - Chứng quyền
CVHM2403,DELISTED,CW,CVHM2403 - Chứng quyền,CVHM2403 - Chứng quyền
CVHM2402,DELISTED,CW,CVHM2402 - Chứng quyền,CVHM2402 - Chứng quyền
CVHM2401,DELISTED,CW,CVHM2401 - Chứng quyền,CVHM2401 - Chứng quyền
CVHM2319,DELISTED,CW,CVHM2319 - Chứng quyền,CVHM2319 - Chứng quyền
CVHM2318,DELISTED,CW,CVHM2318 - Chứng quyền,CVHM2318 - Chứng quyền
CVHM2317,DELISTED,CW,CVHM2317 - Chứng quyền,CVHM2317 - Chứng quyền
CVHM2316,DELISTED,CW,CVHM2316 - Chứng quyền,CVHM2316 - Chứng quyền
CVHM2315,DELISTED,CW,CVHM2315 - Chứng quyền,CVHM2315 - Chứng quyền
CVHM2314,DELISTED,CW,CVHM2314 - Chứng quyền,CVHM2314 - Chứng quyền
CVHM2313,DELISTED,CW,CVHM2313 - Chứng quyền,CVHM2313 - Chứng quyền
CVHM2312,DELISTED,CW,CVHM2312 - Chứng quyền,CVHM2312 - Chứng quyền
CVHM2311,DELISTED,CW,CVHM2311 - Chứng quyền,CVHM2311 - Chứng quyền
CVHM2310,DELISTED,CW,CVHM2310 - Chứng quyền,CVHM2310 - Chứng quyền
CVHM2309,DELISTED,CW,CVHM2309 - Chứng quyền,CVHM2309 - Chứng quyền
CVHM2308,DELISTED,CW,CVHM2308 - Chứng quyền,CVHM2308 - Chứng quyền
CVHM2307,DELISTED,CW,CVHM2307 - Chứng quyền,CVHM2307 - Chứng quyền
CVHM2306,DELISTED,CW,CVHM2306 - Chứng quyền,CVHM2306 - Chứng quyền
CVHM2305,DELISTED,CW,CVHM2305 - Chứng quyền,CVHM2305 - Chứng quyền
CVHM2304,DELISTED,CW,CVHM2304 - Chứng quyền,CVHM2304 - Chứng quyền
CVHM2303,DELISTED,CW,CVHM2303 - Chứng quyền,CVHM2303 - Chứng quyền
CVHM2302,DELISTED,CW,CVHM2302 - Chứng quyền,CVHM2302 - Chứng quyền
CVHM2301,DELISTED,CW,CVHM2301 - Chứng quyền,CVHM2301 - Chứng quyền
CVHM2220,DELISTED,CW,CVHM2220 - Chứng quyền,CVHM2220 - Chứng quyền
CVHM2219,DELISTED,CW,CVHM2219 - Chứng quyền,CVHM2219 - Chứng quyền
CVHM2218,DELISTED,CW,CVHM2218 - Chứng quyền,CVHM2218 - Chứng quyền
CVHM2217,DELISTED,CW,CVHM2217 - Chứng quyền,CVHM2217 - Chứng quyền
CVHM2216,DELISTED,CW,CVHM2216 - Chứng quyền,CVHM2216 - Chứng quyền
CVHM2215,DELISTED,CW,CVHM2215 - Chứng quyền,CVHM2215 - Chứng quyền
CVHM2214,DELISTED,CW,CVHM2214 - Chứng quyền,CVHM2214 - Chứng quyền
CVHM2213,DELISTED,CW,CVHM2213 - Chứng quyền,CVHM2213 - Chứng quyền
CVHM2212,DELISTED,CW,CVHM2212 - Chứng quyền,CVHM2212 - Chứng quyền
CVHM2211,DELISTED,CW,CVHM2211 - Chứng quyền,CVHM2211 - Chứng quyền
CVHM2210,DELISTED,CW,CVHM2210 - Chứng quyền,CVHM2210 - Chứng quyền
CVHM2209,DELISTED,CW,CVHM2209 - Chứng quyền,CVHM2209 - Chứng quyền
CVHM2208,DELISTED,CW,CVHM2208 - Chứng quyền,CVHM2208 - Chứng quyền
CVHM2207,DELISTED,CW,CVHM2207 - Chứng quyền,CVHM2207 - Chứng quyền
CVHM2206,DELISTED,CW,CVHM2206 - Chứng quyền,CVHM2206 - Chứng quyền
CVHM2205,DELISTED,CW,CVHM2205 - Chứng quyền,CVHM2205 - Chứng quyền
CVHM2204,DELISTED,CW,CVHM2204 - Chứng quyền,CVHM2204 - Chứng quyền
CVHM2203,DELISTED,CW,CVHM2203 - Chứng quyền,CVHM2203 - Chứng quyền
CVHM2202,DELISTED,CW,CVHM2202 - Chứng quyền,CVHM2202 - Chứng quyền
CVHM2201,DELISTED,CW,CVHM2201 - Chứng quyền,CVHM2201 - Chứng quyền
CVHM2115,DELISTED,CW,CVHM2115 - Chứng quyền,CVHM2115 - Chứng quyền
CVHM2114,DELISTED,CW,CVHM2114 - Chứng quyền,CVHM2114 - Chứng quyền
CVHM2113,DELISTED,CW,CVHM2113 - Chứng quyền,CVHM2113 - Chứng quyền
CVHM2111,DELISTED,CW,CVHM2111 - Chứng quyền,CVHM2111 - Chứng quyền
CTX,UPCOM,STOCK,CONSTREXIM,Tổng Công ty Cổ phần Đầu tư Xây dựng và Thương mại Việt Nam
CTW,UPCOM,STOCK,Cấp thoát nước Cần Thơ,Công ty Cổ phần Cấp thoát nước Cần Thơ
CTT,HNX,STOCK,Chế tạo máy Vinacomin,Công ty Cổ phần Chế tạo máy Vinacomin
CTS,HSX,STOCK,Chứng khoán Vietinbank,Công ty Cổ phần Chứng khoán Ngân hàng Công thương Việt Nam
CTR,HSX,STOCK,Công trình Viettel,Tổng Công ty Cổ phần Công trình Viettel
CTPB2501,HSX,CW,CTPB2501 - Chứng quyền,CTPB2501 - Chứng quyền
CTPB2405,HSX,CW,CTPB2405 - Chứng quyền,CTPB2405 - Chứng quyền
CTPB2404,DELISTED,CW,CTPB2404 - Chứng quyền,CTPB2404 - Chứng quyền
CTPB2403,HSX,CW,CTPB2403 - Chứng quyền,CTPB2403 - Chứng quyền
CTPB2402,DELISTED,CW,CTPB2402 - Chứng quyền,CTPB2402 - Chứng quyền
CTPB2401,DELISTED,CW,CTPB2401 - Chứng quyền,CTPB2401 - Chứng quyền
CTPB2306,DELISTED,CW,CTPB2306 - Chứng quyền,CTPB2306 - Chứng quyền
CTPB2305,DELISTED,CW,CTPB2305 - Chứng quyền,CTPB2305 - Chứng quyền
CTPB2304,DELISTED,CW,CTPB2304 - Chứng quyền,CTPB2304 - Chứng quyền
CTPB2303,DELISTED,CW,CTPB2303 - Chứng quyền,CTPB2303 - Chứng quyền
CTPB2302,DELISTED,CW,CTPB2302 - Chứng quyền,CTPB2302 - Chứng quyền
CTPB2301,DELISTED,CW,CTPB2301 - Chứng quyền,CTPB2301 - Chứng quyền
CTPB2206,DELISTED,CW,CTPB2206 - Chứng quyền,CTPB2206 - Chứng quyền
CTPB2205,DELISTED,CW,CTPB2205 - Chứng quyền,CTPB2205 - Chứng quyền
CTPB2204,DELISTED,CW,CTPB2204 - Chứng quyền,CTPB2204 - Chứng quyền
CTPB2203,DELISTED,CW,CTPB2203 - Chứng quyền,CTPB2203 - Chứng quyền
CTPB2202,DELISTED,CW,CTPB2202 - Chứng quyền,CTPB2202 - Chứng quyền
CTPB2201,DELISTED,CW,CTPB2201 - Chứng quyền,CTPB2201 - Chứng quyền
CTP,HNX,STOCK,Hoà Bình Takara,Công ty Cổ phần Hoà Bình Takara
CTN,UPCOM,STOCK,VINAVICO,Công ty Cổ phần Xây dựng Công trình ngầm
CTI,HSX,STOCK,Cường Thuận IDICO,Công ty Cổ phần Đầu tư Phát triển Cường Thuận IDICO
CTG123034,BOND,BOND,CTG123034 - Trái phiếu,CTG123034 - Trái phiếu
CTG123033,BOND,BOND,CTG123033 - Trái phiếu,CTG123033 - Trái phiếu
CTG123019,BOND,BOND,CTG123019 - Trái phiếu,CTG123019 - Trái phiếu
CTG123018,BOND,BOND,CTG123018 - Trái phiếu,CTG123018 - Trái phiếu
CTG121031,BOND,BOND,CTG121031 - Trái phiếu,CTG121031 - Trái phiếu
CTG121030,DELISTED,BOND,CTG121030 - Trái phiếu,CTG121030 - Trái phiếu
CTG,HSX,STOCK,VietinBank,Ngân hàng Thương mại Cổ phần Công thương Việt Nam
CTF,HSX,STOCK,City Auto,Công ty Cổ phần City Auto
CTD122015,DELISTED,BOND,CTD122015 - Trái phiếu,CTD122015 - Trái phiếu
CTD,HSX,STOCK,Xây dựng Coteccons,Công ty Cổ phần Xây dựng Coteccons
CTCB2506,HSX,CW,CTCB2506 - Chứng quyền,CTCB2506 - Chứng quyền
CTCB2505,HSX,CW,CTCB2505 - Chứng quyền,CTCB2505 - Chứng quyền
CTCB2504,HSX,CW,CTCB2504 - Chứng quyền,CTCB2504 - Chứng quyền
CTCB2503,HSX,CW,CTCB2503 - Chứng quyền,CTCB2503 - Chứng quyền
CTCB2502,HSX,CW,CTCB2502 - Chứng quyền,CTCB2502 - Chứng quyền
CTCB2501,HSX,CW,CTCB2501 - Chứng quyền,CTCB2501 - Chứng quyền
CTCB2406,HSX,CW,CTCB2406 - Chứng quyền,CTCB2406 - Chứng quyền
CTCB2405,DELISTED,CW,CTCB2405 - Chứng quyền,CTCB2405 - Chứng quyền
CTCB2404,HSX,CW,CTCB2404 - Chứng quyền,CTCB2404 - Chứng quyền
CTCB2403,HSX,CW,CTCB2403 - Chứng quyền,CTCB2403 - Chứng quyền
CTCB2402,DELISTED,CW,CTCB2402 - Chứng quyền,CTCB2402 - Chứng quyền
CTCB2401,DELISTED,CW,CTCB2401 - Chứng quyền,CTCB2401 - Chứng quyền
CTCB2312,DELISTED,CW,CTCB2312 - Chứng quyền,CTCB2312 - Chứng quyền
CTCB2311,DELISTED,CW,CTCB2311 - Chứng quyền,CTCB2311 - Chứng quyền
CTCB2310,DELISTED,CW,CTCB2310 - Chứng quyền,CTCB2310 - Chứng quyền
CTCB2309,DELISTED,CW,CTCB2309 - Chứng quyền,CTCB2309 - Chứng quyền
CTCB2308,DELISTED,CW,CTCB2308 - Chứng quyền,CTCB2308 - Chứng quyền
CTCB2307,DELISTED,CW,CTCB2307 - Chứng quyền,CTCB2307 - Chứng quyền
CTCB2306,DELISTED,CW,CTCB2306 - Chứng quyền,CTCB2306 - Chứng quyền
CTCB2305,DELISTED,CW,CTCB2305 - Chứng quyền,CTCB2305 - Chứng quyền
CTCB2304,DELISTED,CW,CTCB2304 - Chứng quyền,CTCB2304 - Chứng quyền
CTCB2303,DELISTED,CW,CTCB2303 - Chứng quyền,CTCB2303 - Chứng quyền
CTCB2302,DELISTED,CW,CTCB2302 - Chứng quyền,CTCB2302 - Chứng quyền
CTCB2301,DELISTED,CW,CTCB2301 - Chứng quyền,CTCB2301 - Chứng quyền
CTCB2216,DELISTED,CW,CTCB2216 - Chứng quyền,CTCB2216 - Chứng quyền
CTCB2215,DELISTED,CW,CTCB2215 - Chứng quyền,CTCB2215 - Chứng quyền
CTCB2214,DELISTED,CW,CTCB2214 - Chứng quyền,CTCB2214 - Chứng quyền
CTCB2213,DELISTED,CW,CTCB2213 - Chứng quyền,CTCB2213 - Chứng quyền
CTCB2212,DELISTED,CW,CTCB2212 - Chứng quyền,CTCB2212 - Chứng quyền
CTCB2211,DELISTED,CW,CTCB2211 - Chứng quyền,CTCB2211 - Chứng quyền
CTCB2210,DELISTED,CW,CTCB2210 - Chứng quyền,CTCB2210 - Chứng quyền
CTCB2209,DELISTED,CW,CTCB2209 - Chứng quyền,CTCB2209 - Chứng quyền
CTCB2208,DELISTED,CW,CTCB2208 - Chứng quyền,CTCB2208 - Chứng quyền
CTCB2207,DELISTED,CW,CTCB2207 - Chứng quyền,CTCB2207 - Chứng quyền
CTCB2206,DELISTED,CW,CTCB2206 - Chứng quyền,CTCB2206 - Chứng quyền
CTCB2205,DELISTED,CW,CTCB2205 - Chứng quyền,CTCB2205 - Chứng quyền
CTCB2204,DELISTED,CW,CTCB2204 - Chứng quyền,CTCB2204 - Chứng quyền
CTCB2203,DELISTED,CW,CTCB2203 - Chứng quyền,CTCB2203 - Chứng quyền
CTCB2202,DELISTED,CW,CTCB2202 - Chứng quyền,CTCB2202 - Chứng quyền
CTCB2201,DELISTED,CW,CTCB2201 - Chứng quyền,CTCB2201 - Chứng quyền
CTCB2112,DELISTED,CW,CTCB2112 - Chứng quyền,CTCB2112 - Chứng quyền
CTCB2105,DELISTED,CW,CTCB2105 - Chứng quyền,CTCB2105 - Chứng quyền
CTC,DELISTED,STOCK,Tập đoàn Hoàng Kim Tây Nguyên,Công ty Cổ phần Tập đoàn Hoàng Kim Tây Nguyên
CTB,HNX,STOCK,Bơm Hải Dương,Công ty Cổ phần Chế tạo Bơm Hải Dương
CTA,UPCOM,STOCK,Xây dựng Vinavico,Công ty Cổ phần Vinavico
CT6,UPCOM,STOCK,Công trình 6,Công ty Cổ phần Công trình 6
CT5,DELISTED,STOCK,,
CT3,UPCOM,STOCK,Xây dựng công trình 3,Công ty Cổ phần Đầu tư và Xây dựng công trình 3
CSV,HSX,STOCK,Hóa chất Cơ bản miền Nam,Công ty Cổ phần Hóa chất Cơ bản miền Nam
CSTB2506,HSX,CW,CSTB2506 - Chứng quyền,CSTB2506 - Chứng quyền
CSTB2505,HSX,CW,CSTB2505 - Chứng quyền,CSTB2505 - Chứng quyền
CSTB2504,HSX,CW,CSTB2504 - Chứng quyền,CSTB2504 - Chứng quyền
CSTB2503,HSX,CW,CSTB2503 - Chứng quyền,CSTB2503 - Chứng quyền
CSTB2502,HSX,CW,CSTB2502 - Chứng quyền,CSTB2502 - Chứng quyền
CSTB2501,HSX,CW,CSTB2501 - Chứng quyền,CSTB2501 - Chứng quyền
CSTB2413,HSX,CW,CSTB2413 - Chứng quyền,CSTB2413 - Chứng quyền
CSTB2412,DELISTED,CW,CSTB2412 - Chứng quyền,CSTB2412 - Chứng quyền
CSTB2411,HSX,CW,CSTB2411 - Chứng quyền,CSTB2411 - Chứng quyền
CSTB2410,HSX,CW,CSTB2410 - Chứng quyền,CSTB2410 - Chứng quyền
CSTB2409,HSX,CW,CSTB2409 - Chứng quyền,CSTB2409 - Chứng quyền
CSTB2408,HSX,CW,CSTB2408 - Chứng quyền,CSTB2408 - Chứng quyền
CSTB2407,DELISTED,CW,CSTB2407 - Chứng quyền,CSTB2407 - Chứng quyền
CSTB2406,DELISTED,CW,CSTB2406 - Chứng quyền,CSTB2406 - Chứng quyền
CSTB2405,DELISTED,CW,CSTB2405 - Chứng quyền,CSTB2405 - Chứng quyền
CSTB2404,DELISTED,CW,CSTB2404 - Chứng quyền,CSTB2404 - Chứng quyền
CSTB2403,DELISTED,CW,CSTB2403 - Chứng quyền,CSTB2403 - Chứng quyền
CSTB2402,HSX,CW,CSTB2402 - Chứng quyền,CSTB2402 - Chứng quyền
CSTB2401,DELISTED,CW,CSTB2401 - Chứng quyền,CSTB2401 - Chứng quyền
CSTB2338,DELISTED,CW,CSTB2338 - Chứng quyền,CSTB2338 - Chứng quyền
CSTB2337,DELISTED,CW,CSTB2337 - Chứng quyền,CSTB2337 - Chứng quyền
CSTB2336,DELISTED,CW,CSTB2336 - Chứng quyền,CSTB2336 - Chứng quyền
CSTB2335,DELISTED,CW,CSTB2335 - Chứng quyền,CSTB2335 - Chứng quyền
CSTB2334,DELISTED,CW,CSTB2334 - Chứng quyền,CSTB2334 - Chứng quyền
CSTB2333,DELISTED,CW,CSTB2333 - Chứng quyền,CSTB2333 - Chứng quyền
CSTB2332,DELISTED,CW,CSTB2332 - Chứng quyền,CSTB2332 - Chứng quyền
CSTB2331,DELISTED,CW,CSTB2331 - Chứng quyền,CSTB2331 - Chứng quyền
CSTB2330,DELISTED,CW,CSTB2330 - Chứng quyền,CSTB2330 - Chứng quyền
CSTB2329,DELISTED,CW,CSTB2329 - Chứng quyền,CSTB2329 - Chứng quyền
CSTB2328,DELISTED,CW,CSTB2328 - Chứng quyền,CSTB2328 - Chứng quyền
CSTB2327,DELISTED,CW,CSTB2327 - Chứng quyền,CSTB2327 - Chứng quyền
CSTB2326,DELISTED,CW,CSTB2326 - Chứng quyền,CSTB2326 - Chứng quyền
CSTB2325,DELISTED,CW,CSTB2325 - Chứng quyền,CSTB2325 - Chứng quyền
CSTB2324,DELISTED,CW,CSTB2324 - Chứng quyền,CSTB2324 - Chứng quyền
CSTB2323,DELISTED,CW,CSTB2323 - Chứng quyền,CSTB2323 - Chứng quyền
CSTB2322,DELISTED,CW,CSTB2322 - Chứng quyền,CSTB2322 - Chứng quyền
CSTB2321,DELISTED,CW,CSTB2321 - Chứng quyền,CSTB2321 - Chứng quyền
CSTB2320,DELISTED,CW,CSTB2320 - Chứng quyền,CSTB2320 - Chứng quyền
CSTB2319,DELISTED,CW,CSTB2319 - Chứng quyền,CSTB2319 - Chứng quyền
CSTB2318,DELISTED,CW,CSTB2318 - Chứng quyền,CSTB2318 - Chứng quyền
CSTB2317,DELISTED,CW,CSTB2317 - Chứng quyền,CSTB2317 - Chứng quyền
CSTB2316,DELISTED,CW,CSTB2316 - Chứng quyền,CSTB2316 - Chứng quyền
CSTB2315,DELISTED,CW,CSTB2315 - Chứng quyền,CSTB2315 - Chứng quyền
CSTB2314,DELISTED,CW,CSTB2314 - Chứng quyền,CSTB2314 - Chứng quyền
CSTB2313,DELISTED,CW,CSTB2313 - Chứng quyền,CSTB2313 - Chứng quyền
CSTB2312,DELISTED,CW,CSTB2312 - Chứng quyền,CSTB2312 - Chứng quyền
CSTB2311,DELISTED,CW,CSTB2311 - Chứng quyền,CSTB2311 - Chứng quyền
CSTB2310,DELISTED,CW,CSTB2310 - Chứng quyền,CSTB2310 - Chứng quyền
CSTB2309,DELISTED,CW,CSTB2309 - Chứng quyền,CSTB2309 - Chứng quyền
CSTB2308,DELISTED,CW,CSTB2308 - Chứng quyền,CSTB2308 - Chứng quyền
CSTB2307,DELISTED,CW,CSTB2307 - Chứng quyền,CSTB2307 - Chứng quyền
CSTB2306,DELISTED,CW,CSTB2306 - Chứng quyền,CSTB2306 - Chứng quyền
CSTB2305,DELISTED,CW,CSTB2305 - Chứng quyền,CSTB2305 - Chứng quyền
CSTB2304,DELISTED,CW,CSTB2304 - Chứng quyền,CSTB2304 - Chứng quyền
CSTB2303,DELISTED,CW,CSTB2303 - Chứng quyền,CSTB2303 - Chứng quyền
CSTB2302,DELISTED,CW,CSTB2302 - Chứng quyền,CSTB2302 - Chứng quyền
CSTB2301,DELISTED,CW,CSTB2301 - Chứng quyền,CSTB2301 - Chứng quyền
CSTB2225,DELISTED,CW,CSTB2225 - Chứng quyền,CSTB2225 - Chứng quyền
CSTB2224,DELISTED,CW,CSTB2224 - Chứng quyền,CSTB2224 - Chứng quyền
CSTB2223,DELISTED,CW,CSTB2223 - Chứng quyền,CSTB2223 - Chứng quyền
CSTB2222,DELISTED,CW,CSTB2222 - Chứng quyền,CSTB2222 - Chứng quyền
CSTB2220,DELISTED,CW,CSTB2220 - Chứng quyền,CSTB2220 - Chứng quyền
CSTB2218,DELISTED,CW,CSTB2218 - Chứng quyền,CSTB2218 - Chứng quyền
CSTB2217,DELISTED,CW,CSTB2217 - Chứng quyền,CSTB2217 - Chứng quyền
CSTB2216,DELISTED,CW,CSTB2216 - Chứng quyền,CSTB2216 - Chứng quyền
CSTB2215,DELISTED,CW,CSTB2215 - Chứng quyền,CSTB2215 - Chứng quyền
CSTB2214,DELISTED,CW,CSTB2214 - Chứng quyền,CSTB2214 - Chứng quyền
CSTB2213,DELISTED,CW,CSTB2213 - Chứng quyền,CSTB2213 - Chứng quyền
CSTB2212,DELISTED,CW,CSTB2212 - Chứng quyền,CSTB2212 - Chứng quyền
CSTB2211,DELISTED,CW,CSTB2211 - Chứng quyền,CSTB2211 - Chứng quyền
CSTB2210,DELISTED,CW,CSTB2210 - Chứng quyền,CSTB2210 - Chứng quyền
CSTB2209,DELISTED,CW,CSTB2209 - Chứng quyền,CSTB2209 - Chứng quyền
CSTB2208,DELISTED,CW,CSTB2208 - Chứng quyền,CSTB2208 - Chứng quyền
CSTB2207,DELISTED,CW,CSTB2207 - Chứng quyền,CSTB2207 - Chứng quyền
CSTB2206,DELISTED,CW,CSTB2206 - Chứng quyền,CSTB2206 - Chứng quyền
CSTB2205,DELISTED,CW,CSTB2205 - Chứng quyền,CSTB2205 - Chứng quyền
CSTB2203,DELISTED,CW,CSTB2203 - Chứng quyền,CSTB2203 - Chứng quyền
CSTB2202,DELISTED,CW,CSTB2202 - Chứng quyền,CSTB2202 - Chứng quyền
CSTB2201,DELISTED,CW,CSTB2201 - Chứng quyền,CSTB2201 - Chứng quyền
CSTB2112,DELISTED,CW,CSTB2112 - Chứng quyền,CSTB2112 - Chứng quyền
CSTB2110,DELISTED,CW,CSTB2110 - Chứng quyền,CSTB2110 - Chứng quyền
CST,HNX,STOCK,Than Cao Sơn - TKV,Công ty Cổ phần Than Cao Sơn - TKV
CSSB2401,DELISTED,CW,CSSB2401 - Chứng quyền,CSSB2401 - Chứng quyền
CSM,HSX,STOCK,Cao su Miền Nam,Công ty Cổ phần Công nghiệp Cao su Miền Nam
CSI,UPCOM,STOCK,Chứng khoán Kiến thiết VN,Công ty Cổ phần Chứng khoán Kiến thiết Việt Nam
CSHB2501,HSX,CW,CSHB2501 - Chứng quyền,CSHB2501 - Chứng quyền
CSHB2403,HSX,CW,CSHB2403 - Chứng quyền,CSHB2403 - Chứng quyền
CSHB2402,DELISTED,CW,CSHB2402 - Chứng quyền,CSHB2402 - Chứng quyền
CSHB2401,HSX,CW,CSHB2401 - Chứng quyền,CSHB2401 - Chứng quyền
CSHB2306,DELISTED,CW,CSHB2306 - Chứng quyền,CSHB2306 - Chứng quyền
CSHB2305,DELISTED,CW,CSHB2305 - Chứng quyền,CSHB2305 - Chứng quyền
CSHB2304,DELISTED,CW,CSHB2304 - Chứng quyền,CSHB2304 - Chứng quyền
CSHB2303,DELISTED,CW,CSHB2303 - Chứng quyền,CSHB2303 - Chứng quyền
CSHB2302,DELISTED,CW,CSHB2302 - Chứng quyền,CSHB2302 - Chứng quyền
CSHB2301,DELISTED,CW,CSHB2301 - Chứng quyền,CSHB2301 - Chứng quyền
CSC,HNX,STOCK,Tập đoàn COTANA,Công ty Cổ phần Tập đoàn COTANA
CRE,HSX,STOCK,Bất động sản Thế Kỷ,Công ty Cổ phần Bất động sản Thế Kỷ
CRC,HSX,STOCK,Create Capital Việt Nam,Công ty Cổ phần Create Capital Việt Nam
CQT,UPCOM,STOCK,Xi măng Quán Triều VVMI,Công ty Cổ phần Xi măng Quán Triều VVMI
CQN,UPCOM,STOCK,Cảng Quảng Ninh,Công ty Cổ phần Cảng Quảng Ninh
CPOW2315,DELISTED,CW,CPOW2315 - Chứng quyền,CPOW2315 - Chứng quyền
CPOW2314,DELISTED,CW,CPOW2314 - Chứng quyền,CPOW2314 - Chứng quyền
CPOW2313,DELISTED,CW,CPOW2313 - Chứng quyền,CPOW2313 - Chứng quyền
CPOW2312,DELISTED,CW,CPOW2312 - Chứng quyền,CPOW2312 - Chứng quyền
CPOW2311,DELISTED,CW,CPOW2311 - Chứng quyền,CPOW2311 - Chứng quyền
CPOW2310,DELISTED,CW,CPOW2310 - Chứng quyền,CPOW2310 - Chứng quyền
CPOW2309,DELISTED,CW,CPOW2309 - Chứng quyền,CPOW2309 - Chứng quyền
CPOW2308,DELISTED,CW,CPOW2308 - Chứng quyền,CPOW2308 - Chứng quyền
CPOW2307,DELISTED,CW,CPOW2307 - Chứng quyền,CPOW2307 - Chứng quyền
CPOW2306,DELISTED,CW,CPOW2306 - Chứng quyền,CPOW2306 - Chứng quyền
CPOW2305,DELISTED,CW,CPOW2305 - Chứng quyền,CPOW2305 - Chứng quyền
CPOW2304,DELISTED,CW,CPOW2304 - Chứng quyền,CPOW2304 - Chứng quyền
CPOW2303,DELISTED,CW,CPOW2303 - Chứng quyền,CPOW2303 - Chứng quyền
CPOW2302,DELISTED,CW,CPOW2302 - Chứng quyền,CPOW2302 - Chứng quyền
CPOW2301,DELISTED,CW,CPOW2301 - Chứng quyền,CPOW2301 - Chứng quyền
CPOW2210,DELISTED,CW,CPOW2210 - Chứng quyền,CPOW2210 - Chứng quyền
CPOW2209,DELISTED,CW,CPOW2209 - Chứng quyền,CPOW2209 - Chứng quyền
CPOW2208,DELISTED,CW,CPOW2208 - Chứng quyền,CPOW2208 - Chứng quyền
CPOW2207,DELISTED,CW,CPOW2207 - Chứng quyền,CPOW2207 - Chứng quyền
CPOW2206,DELISTED,CW,CPOW2206 - Chứng quyền,CPOW2206 - Chứng quyền
CPOW2205,DELISTED,CW,CPOW2205 - Chứng quyền,CPOW2205 - Chứng quyền
CPOW2204,DELISTED,CW,CPOW2204 - Chứng quyền,CPOW2204 - Chứng quyền
CPOW2203,DELISTED,CW,CPOW2203 - Chứng quyền,CPOW2203 - Chứng quyền
CPOW2202,DELISTED,CW,CPOW2202 - Chứng quyền,CPOW2202 - Chứng quyền
CPOW2201,DELISTED,CW,CPOW2201 - Chứng quyền,CPOW2201 - Chứng quyền
CPNJ2205,DELISTED,CW,CPNJ2205 - Chứng quyền,CPNJ2205 - Chứng quyền
CPNJ2204,DELISTED,CW,CPNJ2204 - Chứng quyền,CPNJ2204 - Chứng quyền
CPNJ2203,DELISTED,CW,CPNJ2203 - Chứng quyền,CPNJ2203 - Chứng quyền
CPNJ2202,DELISTED,CW,CPNJ2202 - Chứng quyền,CPNJ2202 - Chứng quyền
CPNJ2201,DELISTED,CW,CPNJ2201 - Chứng quyền,CPNJ2201 - Chứng quyền
CPNJ2110,DELISTED,CW,CPNJ2110 - Chứng quyền,CPNJ2110 - Chứng quyền
CPNJ2109,DELISTED,CW,CPNJ2109 - Chứng quyền,CPNJ2109 - Chứng quyền
CPI,UPCOM,STOCK,Đầu tư Cảng Cái Lân,Công ty Cổ phần Đầu tư Cảng Cái Lân
CPH,UPCOM,STOCK,PV mai táng Hải Phòng,Công ty Cổ phần Phục vụ Mai táng Hải Phòng
CPDR2305,DELISTED,CW,CPDR2305 - Chứng quyền,CPDR2305 - Chứng quyền
CPDR2304,DELISTED,CW,CPDR2304 - Chứng quyền,CPDR2304 - Chứng quyền
CPDR2303,DELISTED,CW,CPDR2303 - Chứng quyền,CPDR2303 - Chứng quyền
CPDR2302,DELISTED,CW,CPDR2302 - Chứng quyền,CPDR2302 - Chứng quyền
CPDR2301,DELISTED,CW,CPDR2301 - Chứng quyền,CPDR2301 - Chứng quyền
CPDR2206,DELISTED,CW,CPDR2206 - Chứng quyền,CPDR2206 - Chứng quyền
CPDR2205,DELISTED,CW,CPDR2205 - Chứng quyền,CPDR2205 - Chứng quyền
CPDR2204,DELISTED,CW,CPDR2204 - Chứng quyền,CPDR2204 - Chứng quyền
CPDR2203,DELISTED,CW,CPDR2203 - Chứng quyền,CPDR2203 - Chứng quyền
CPDR2202,DELISTED,CW,CPDR2202 - Chứng quyền,CPDR2202 - Chứng quyền
CPDR2201,DELISTED,CW,CPDR2201 - Chứng quyền,CPDR2201 - Chứng quyền
CPDR2103,DELISTED,CW,CPDR2103 - Chứng quyền,CPDR2103 - Chứng quyền
CPC,HNX,STOCK,Thuốc sát trùng Cần Thơ,Công ty Cổ phần Thuốc sát trùng Cần Thơ
CPA,UPCOM,STOCK,Cà phê Phước An,Công ty Cổ phần Cà phê Phước An
COM,HSX,STOCK,Vật tư Xăng dầu,Công ty Cổ phần Vật tư Xăng dầu
CNVL2305,DELISTED,CW,CNVL2305 - Chứng quyền,CNVL2305 - Chứng quyền
CNVL2304,DELISTED,CW,CNVL2304 - Chứng quyền,CNVL2304 - Chứng quyền
CNVL2303,DELISTED,CW,CNVL2303 - Chứng quyền,CNVL2303 - Chứng quyền
CNVL2302,DELISTED,CW,CNVL2302 - Chứng quyền,CNVL2302 - Chứng quyền
CNVL2301,DELISTED,CW,CNVL2301 - Chứng quyền,CNVL2301 - Chứng quyền
CNVL2210,DELISTED,CW,CNVL2210 - Chứng quyền,CNVL2210 - Chứng quyền
CNVL2209,DELISTED,CW,CNVL2209 - Chứng quyền,CNVL2209 - Chứng quyền
CNVL2208,DELISTED,CW,CNVL2208 - Chứng quyền,CNVL2208 - Chứng quyền
CNVL2207,DELISTED,CW,CNVL2207 - Chứng quyền,CNVL2207 - Chứng quyền
CNVL2206,DELISTED,CW,CNVL2206 - Chứng quyền,CNVL2206 - Chứng quyền
CNVL2205,DELISTED,CW,CNVL2205 - Chứng quyền,CNVL2205 - Chứng quyền
CNVL2204,DELISTED,CW,CNVL2204 - Chứng quyền,CNVL2204 - Chứng quyền
CNVL2203,DELISTED,CW,CNVL2203 - Chứng quyền,CNVL2203 - Chứng quyền
CNVL2202,DELISTED,CW,CNVL2202 - Chứng quyền,CNVL2202 - Chứng quyền
CNVL2201,DELISTED,CW,CNVL2201 - Chứng quyền,CNVL2201 - Chứng quyền
CNVL2104,DELISTED,CW,CNVL2104 - Chứng quyền,CNVL2104 - Chứng quyền
CNT,UPCOM,STOCK,Tập đoàn CNT,Công ty Cổ phần Tập đoàn CNT
CNN,UPCOM,STOCK,Xây dựng Coninco,"Công ty Cổ phần Tư vấn Công nghệ, Thiết bị và Kiểm định Xây dựng - CONINCO"
CNG,HSX,STOCK,CNG Việt Nam,Công ty Cổ phần CNG Việt Nam
CNC,UPCOM,STOCK,Công nghệ cao Traphaco,Công ty Cổ phần Công nghệ cao Traphaco
CNA,UPCOM,STOCK,Tổng công ty Chè Nghệ An - CTCP,Công ty Cổ phần Tổng công ty Chè Nghệ An
CMX123035,BOND,BOND,CMX123035 - Trái phiếu,CMX123035 - Trái phiếu
CMX,HSX,STOCK,CAMIMEX Group,Công ty Cổ phần CAMIMEX Group
CMWG2506,HSX,CW,CMWG2506 - Chứng quyền,CMWG2506 - Chứng quyền
CMWG2505,HSX,CW,CMWG2505 - Chứng quyền,CMWG2505 - Chứng quyền
CMWG2504,HSX,CW,CMWG2504 - Chứng quyền,CMWG2504 - Chứng quyền
CMWG2503,HSX,CW,CMWG2503 - Chứng quyền,CMWG2503 - Chứng quyền
CMWG2502,HSX,CW,CMWG2502 - Chứng quyền,CMWG2502 - Chứng quyền
CMWG2501,HSX,CW,CMWG2501 - Chứng quyền,CMWG2501 - Chứng quyền
CMWG2410,HSX,CW,CMWG2410 - Chứng quyền,CMWG2410 - Chứng quyền
CMWG2409,DELISTED,CW,CMWG2409 - Chứng quyền,CMWG2409 - Chứng quyền
CMWG2408,HSX,CW,CMWG2408 - Chứng quyền,CMWG2408 - Chứng quyền
CMWG2407,HSX,CW,CMWG2407 - Chứng quyền,CMWG2407 - Chứng quyền
CMWG2406,HSX,CW,CMWG2406 - Chứng quyền,CMWG2406 - Chứng quyền
CMWG2405,HSX,CW,CMWG2405 - Chứng quyền,CMWG2405 - Chứng quyền
CMWG2404,DELISTED,CW,CMWG2404 - Chứng quyền,CMWG2404 - Chứng quyền
CMWG2403,DELISTED,CW,CMWG2403 - Chứng quyền,CMWG2403 - Chứng quyền
CMWG2402,DELISTED,CW,CMWG2402 - Chứng quyền,CMWG2402 - Chứng quyền
CMWG2401,HSX,CW,CMWG2401 - Chứng quyền,CMWG2401 - Chứng quyền
CMWG2318,DELISTED,CW,CMWG2318 - Chứng quyền,CMWG2318 - Chứng quyền
CMWG2317,DELISTED,CW,CMWG2317 - Chứng quyền,CMWG2317 - Chứng quyền
CMWG2316,DELISTED,CW,CMWG2316 - Chứng quyền,CMWG2316 - Chứng quyền
CMWG2315,DELISTED,CW,CMWG2315 - Chứng quyền,CMWG2315 - Chứng quyền
CMWG2314,DELISTED,CW,CMWG2314 - Chứng quyền,CMWG2314 - Chứng quyền
CMWG2313,DELISTED,CW,CMWG2313 - Chứng quyền,CMWG2313 - Chứng quyền
CMWG2312,DELISTED,CW,CMWG2312 - Chứng quyền,CMWG2312 - Chứng quyền
CMWG2311,DELISTED,CW,CMWG2311 - Chứng quyền,CMWG2311 - Chứng quyền
CMWG2310,DELISTED,CW,CMWG2310 - Chứng quyền,CMWG2310 - Chứng quyền
CMWG2309,DELISTED,CW,CMWG2309 - Chứng quyền,CMWG2309 - Chứng quyền
CMWG2308,DELISTED,CW,CMWG2308 - Chứng quyền,CMWG2308 - Chứng quyền
CMWG2307,DELISTED,CW,CMWG2307 - Chứng quyền,CMWG2307 - Chứng quyền
CMWG2306,DELISTED,CW,CMWG2306 - Chứng quyền,CMWG2306 - Chứng quyền
CMWG2305,DELISTED,CW,CMWG2305 - Chứng quyền,CMWG2305 - Chứng quyền
CMWG2304,DELISTED,CW,CMWG2304 - Chứng quyền,CMWG2304 - Chứng quyền
CMWG2303,DELISTED,CW,CMWG2303 - Chứng quyền,CMWG2303 - Chứng quyền
CMWG2302,DELISTED,CW,CMWG2302 - Chứng quyền,CMWG2302 - Chứng quyền
CMWG2301,DELISTED,CW,CMWG2301 - Chứng quyền,CMWG2301 - Chứng quyền
CMWG2215,DELISTED,CW,CMWG2215 - Chứng quyền,CMWG2215 - Chứng quyền
CMWG2214,DELISTED,CW,CMWG2214 - Chứng quyền,CMWG2214 - Chứng quyền
CMWG2213,DELISTED,CW,CMWG2213 - Chứng quyền,CMWG2213 - Chứng quyền
CMWG2212,DELISTED,CW,CMWG2212 - Chứng quyền,CMWG2212 - Chứng quyền
CMWG2211,DELISTED,CW,CMWG2211 - Chứng quyền,CMWG2211 - Chứng quyền
CMWG2210,DELISTED,CW,CMWG2210 - Chứng quyền,CMWG2210 - Chứng quyền
CMWG2209,DELISTED,CW,CMWG2209 - Chứng quyền,CMWG2209 - Chứng quyền
CMWG2208,DELISTED,CW,CMWG2208 - Chứng quyền,CMWG2208 - Chứng quyền
CMWG2207,DELISTED,CW,CMWG2207 - Chứng quyền,CMWG2207 - Chứng quyền
CMWG2206,DELISTED,CW,CMWG2206 - Chứng quyền,CMWG2206 - Chứng quyền
CMWG2205,DELISTED,CW,CMWG2205 - Chứng quyền,CMWG2205 - Chứng quyền
CMWG2204,DELISTED,CW,CMWG2204 - Chứng quyền,CMWG2204 - Chứng quyền
CMWG2203,DELISTED,CW,CMWG2203 - Chứng quyền,CMWG2203 - Chứng quyền
CMWG2202,DELISTED,CW,CMWG2202 - Chứng quyền,CMWG2202 - Chứng quyền
CMWG2201,DELISTED,CW,CMWG2201 - Chứng quyền,CMWG2201 - Chứng quyền
CMWG2114,DELISTED,CW,CMWG2114 - Chứng quyền,CMWG2114 - Chứng quyền
CMWG2113,DELISTED,CW,CMWG2113 - Chứng quyền,CMWG2113 - Chứng quyền
CMWG2111,DELISTED,CW,,
CMW,UPCOM,STOCK,Cấp nước Cà Mau,Công ty Cổ phần Cấp nước Cà Mau
CMV,HSX,STOCK,Thương nghiệp Cà Mau,Công ty Cổ phần Thương nghiệp Cà Mau
CMT,UPCOM,STOCK,CN mạng và Truyền thông,Công ty Cổ phần Công nghệ mạng và Truyền thông
CMSN2504,HSX,CW,CMSN2504 - Chứng quyền,CMSN2504 - Chứng quyền
CMSN2503,HSX,CW,CMSN2503 - Chứng quyền,CMSN2503 - Chứng quyền
CMSN2502,HSX,CW,CMSN2502 - Chứng quyền,CMSN2502 - Chứng quyền
CMSN2501,HSX,CW,CMSN2501 - Chứng quyền,CMSN2501 - Chứng quyền
CMSN2408,HSX,CW,CMSN2408 - Chứng quyền,CMSN2408 - Chứng quyền
CMSN2407,DELISTED,CW,CMSN2407 - Chứng quyền,CMSN2407 - Chứng quyền
CMSN2406,HSX,CW,CMSN2406 - Chứng quyền,CMSN2406 - Chứng quyền
CMSN2405,HSX,CW,CMSN2405 - Chứng quyền,CMSN2405 - Chứng quyền
CMSN2404,HSX,CW,CMSN2404 - Chứng quyền,CMSN2404 - Chứng quyền
CMSN2403,DELISTED,CW,CMSN2403 - Chứng quyền,CMSN2403 - Chứng quyền
CMSN2402,DELISTED,CW,CMSN2402 - Chứng quyền,CMSN2402 - Chứng quyền
CMSN2401,DELISTED,CW,CMSN2401 - Chứng quyền,CMSN2401 - Chứng quyền
CMSN2317,DELISTED,CW,CMSN2317 - Chứng quyền,CMSN2317 - Chứng quyền
CMSN2316,DELISTED,CW,CMSN2316 - Chứng quyền,CMSN2316 - Chứng quyền
CMSN2315,DELISTED,CW,CMSN2315 - Chứng quyền,CMSN2315 - Chứng quyền
CMSN2314,DELISTED,CW,CMSN2314 - Chứng quyền,CMSN2314 - Chứng quyền
CMSN2313,DELISTED,CW,CMSN2313 - Chứng quyền,CMSN2313 - Chứng quyền
CMSN2312,DELISTED,CW,CMSN2312 - Chứng quyền,CMSN2312 - Chứng quyền
CMSN2311,DELISTED,CW,CMSN2311 - Chứng quyền,CMSN2311 - Chứng quyền
CMSN2310,DELISTED,CW,CMSN2310 - Chứng quyền,CMSN2310 - Chứng quyền
CMSN2309,DELISTED,CW,CMSN2309 - Chứng quyền,CMSN2309 - Chứng quyền
CMSN2308,DELISTED,CW,CMSN2308 - Chứng quyền,CMSN2308 - Chứng quyền
CMSN2307,DELISTED,CW,CMSN2307 - Chứng quyền,CMSN2307 - Chứng quyền
CMSN2306,DELISTED,CW,CMSN2306 - Chứng quyền,CMSN2306 - Chứng quyền
CMSN2305,DELISTED,CW,CMSN2305 - Chứng quyền,CMSN2305 - Chứng quyền
CMSN2304,DELISTED,CW,CMSN2304 - Chứng quyền,CMSN2304 - Chứng quyền
CMSN2303,DELISTED,CW,CMSN2303 - Chứng quyền,CMSN2303 - Chứng quyền
CMSN2302,DELISTED,CW,CMSN2302 - Chứng quyền,CMSN2302 - Chứng quyền
CMSN2301,DELISTED,CW,CMSN2301 - Chứng quyền,CMSN2301 - Chứng quyền
CMSN2215,DELISTED,CW,CMSN2215 - Chứng quyền,CMSN2215 - Chứng quyền
CMSN2214,DELISTED,CW,CMSN2214 - Chứng quyền,CMSN2214 - Chứng quyền
CMSN2213,DELISTED,CW,CMSN2213 - Chứng quyền,CMSN2213 - Chứng quyền
CMSN2212,DELISTED,CW,CMSN2212 - Chứng quyền,CMSN2212 - Chứng quyền
CMSN2211,DELISTED,CW,CMSN2211 - Chứng quyền,CMSN2211 - Chứng quyền
CMSN2210,DELISTED,CW,CMSN2210 - Chứng quyền,CMSN2210 - Chứng quyền
CMSN2209,DELISTED,CW,CMSN2209 - Chứng quyền,CMSN2209 - Chứng quyền
CMSN2208,DELISTED,CW,CMSN2208 - Chứng quyền,CMSN2208 - Chứng quyền
CMSN2207,DELISTED,CW,CMSN2207 - Chứng quyền,CMSN2207 - Chứng quyền
CMSN2206,DELISTED,CW,CMSN2206 - Chứng quyền,CMSN2206 - Chứng quyền
CMSN2205,DELISTED,CW,CMSN2205 - Chứng quyền,CMSN2205 - Chứng quyền
CMSN2204,DELISTED,CW,CMSN2204 - Chứng quyền,CMSN2204 - Chứng quyền
CMSN2203,DELISTED,CW,CMSN2203 - Chứng quyền,CMSN2203 - Chứng quyền
CMSN2202,DELISTED,CW,CMSN2202 - Chứng quyền,CMSN2202 - Chứng quyền
CMSN2201,DELISTED,CW,CMSN2201 - Chứng quyền,CMSN2201 - Chứng quyền
CMSN2111,DELISTED,CW,CMSN2111 - Chứng quyền,CMSN2111 - Chứng quyền
CMSN2110,DELISTED,CW,,
CMSN2108,DELISTED,CW,CMSN2108 - Chứng quyền,CMSN2108 - Chứng quyền
CMSN2104,DELISTED,CW,CMSN2104 - Chứng quyền,CMSN2104 - Chứng quyền
CMS,HNX,STOCK,Tập đoàn CMH Việt Nam,Công ty Cổ phần Tập đoàn CMH Việt Nam
CMP,UPCOM,STOCK,Cảng Chân Mây,Công ty Cổ phần Cảng Chân Mây
CMN,UPCOM,STOCK,Colusa -  Miliket,Công ty Cổ phần Lương thực Thực phẩm Colusa - Miliket
CMM,UPCOM,STOCK,Camimex,Công ty Cổ phần Camimex
CMK,UPCOM,STOCK,Cơ khí Mạo Khê - Vinacomin,Công ty Cổ phần Cơ khí Mạo Khê - Vinacomin
CMI,UPCOM,STOCK,CMISTONE Việt Nam,Công ty Cổ phần CMISTONE Việt Nam
CMG,HSX,STOCK,Tập đoàn Công nghệ CMC,Công ty Cổ phần Tập đoàn Công nghệ CMC
CMF,UPCOM,STOCK,Thực phẩm Cholimex,Công ty Cổ phần Thực phẩm Cholimex
CMD,UPCOM,STOCK,VLXD và Nội thất TP.HCM,Công ty Cổ phần Vật liệu xây dựng và Trang trí nội thất TP Hồ Chí Minh
CMC,HNX,STOCK,Đầu tư CMC,Công ty Cổ phần Đầu tư CMC
CMBB2508,HSX,CW,CMBB2508 - Chứng quyền,CMBB2508 - Chứng quyền
CMBB2507,HSX,CW,CMBB2507 - Chứng quyền,CMBB2507 - Chứng quyền
CMBB2506,HSX,CW,CMBB2506 - Chứng quyền,CMBB2506 - Chứng quyền
CMBB2505,HSX,CW,CMBB2505 - Chứng quyền,CMBB2505 - Chứng quyền
CMBB2504,HSX,CW,CMBB2504 - Chứng quyền,CMBB2504 - Chứng quyền
CMBB2503,HSX,CW,CMBB2503 - Chứng quyền,CMBB2503 - Chứng quyền
CMBB2502,HSX,CW,CMBB2502 - Chứng quyền,CMBB2502 - Chứng quyền
CMBB2501,HSX,CW,CMBB2501 - Chứng quyền,CMBB2501 - Chứng quyền
CMBB2409,HSX,CW,CMBB2409 - Chứng quyền,CMBB2409 - Chứng quyền
CMBB2408,DELISTED,CW,CMBB2408 - Chứng quyền,CMBB2408 - Chứng quyền
CMBB2407,HSX,CW,CMBB2407 - Chứng quyền,CMBB2407 - Chứng quyền
CMBB2406,HSX,CW,CMBB2406 - Chứng quyền,CMBB2406 - Chứng quyền
CMBB2405,HSX,CW,CMBB2405 - Chứng quyền,CMBB2405 - Chứng quyền
CMBB2404,DELISTED,CW,CMBB2404 - Chứng quyền,CMBB2404 - Chứng quyền
CMBB2403,DELISTED,CW,CMBB2403 - Chứng quyền,CMBB2403 - Chứng quyền
CMBB2402,HSX,CW,CMBB2402 - Chứng quyền,CMBB2402 - Chứng quyền
CMBB2401,DELISTED,CW,CMBB2401 - Chứng quyền,CMBB2401 - Chứng quyền
CMBB2318,DELISTED,CW,CMBB2318 - Chứng quyền,CMBB2318 - Chứng quyền
CMBB2317,DELISTED,CW,CMBB2317 - Chứng quyền,CMBB2317 - Chứng quyền
CMBB2316,DELISTED,CW,CMBB2316 - Chứng quyền,CMBB2316 - Chứng quyền
CMBB2315,DELISTED,CW,CMBB2315 - Chứng quyền,CMBB2315 - Chứng quyền
CMBB2314,DELISTED,CW,CMBB2314 - Chứng quyền,CMBB2314 - Chứng quyền
CMBB2313,DELISTED,CW,CMBB2313 - Chứng quyền,CMBB2313 - Chứng quyền
CMBB2312,DELISTED,CW,CMBB2312 - Chứng quyền,CMBB2312 - Chứng quyền
CMBB2311,DELISTED,CW,CMBB2311 - Chứng quyền,CMBB2311 - Chứng quyền
CMBB2310,DELISTED,CW,CMBB2310 - Chứng quyền,CMBB2310 - Chứng quyền
CMBB2309,DELISTED,CW,CMBB2309 - Chứng quyền,CMBB2309 - Chứng quyền
CMBB2308,DELISTED,CW,CMBB2308 - Chứng quyền,CMBB2308 - Chứng quyền
CMBB2307,DELISTED,CW,CMBB2307 - Chứng quyền,CMBB2307 - Chứng quyền
CMBB2306,DELISTED,CW,CMBB2306 - Chứng quyền,CMBB2306 - Chứng quyền
CMBB2305,DELISTED,CW,CMBB2305 - Chứng quyền,CMBB2305 - Chứng quyền
CMBB2304,DELISTED,CW,CMBB2304 - Chứng quyền,CMBB2304 - Chứng quyền
CMBB2303,DELISTED,CW,CMBB2303 - Chứng quyền,CMBB2303 - Chứng quyền
CMBB2302,DELISTED,CW,CMBB2302 - Chứng quyền,CMBB2302 - Chứng quyền
CMBB2301,DELISTED,CW,CMBB2301 - Chứng quyền,CMBB2301 - Chứng quyền
CMBB2215,DELISTED,CW,CMBB2215 - Chứng quyền,CMBB2215 - Chứng quyền
CMBB2214,DELISTED,CW,CMBB2214 - Chứng quyền,CMBB2214 - Chứng quyền
CMBB2213,DELISTED,CW,CMBB2213 - Chứng quyền,CMBB2213 - Chứng quyền
CMBB2212,DELISTED,CW,CMBB2212 - Chứng quyền,CMBB2212 - Chứng quyền
CMBB2211,DELISTED,CW,CMBB2211 - Chứng quyền,CMBB2211 - Chứng quyền
CMBB2210,DELISTED,CW,CMBB2210 - Chứng quyền,CMBB2210 - Chứng quyền
CMBB2209,DELISTED,CW,CMBB2209 - Chứng quyền,CMBB2209 - Chứng quyền
CMBB2208,DELISTED,CW,CMBB2208 - Chứng quyền,CMBB2208 - Chứng quyền
CMBB2207,DELISTED,CW,CMBB2207 - Chứng quyền,CMBB2207 - Chứng quyền
CMBB2206,DELISTED,CW,CMBB2206 - Chứng quyền,CMBB2206 - Chứng quyền
CMBB2205,DELISTED,CW,CMBB2205 - Chứng quyền,CMBB2205 - Chứng quyền
CMBB2204,DELISTED,CW,CMBB2204 - Chứng quyền,CMBB2204 - Chứng quyền
CMBB2203,DELISTED,CW,CMBB2203 - Chứng quyền,CMBB2203 - Chứng quyền
CMBB2201,DELISTED,CW,CMBB2201 - Chứng quyền,CMBB2201 - Chứng quyền
CMBB2109,DELISTED,CW,CMBB2109 - Chứng quyền,CMBB2109 - Chứng quyền
CMBB2107,DELISTED,CW,,
CLX,UPCOM,STOCK,XNK và ĐT Chợ Lớn (CHOLIMEX),Công ty Cổ phần Xuất nhập khẩu và Đầu tư Chợ Lớn (CHOLIMEX)
CLW,HSX,STOCK,Cấp nước Chợ Lớn,Công ty Cổ phần Cấp nước Chợ Lớn
CLM,HNX,STOCK,Xuất nhập khẩu Than - Vinacomin,Công ty Cổ phần Xuất nhập khẩu Than - Vinacomin
CLL,HSX,STOCK,Cảng Cát Lái,Công ty Cổ phần Cảng Cát Lái
CLH,HNX,STOCK,Xi măng La Hiên,Công ty Cổ phần Xi măng La Hiên VVMI
CLG,UPCOM,STOCK,Cotec Land,Công ty Cổ phần Đầu tư và Phát triển Nhà đất Cotec
CLC,HSX,STOCK,Thuốc lá Cát Lợi,Công ty Cổ phần Cát Lợi
CKV,HNX,STOCK,CokyVina,Công ty Cổ phần CokyVina
CKG,HSX,STOCK,Xây dựng Kiên Giang,Công ty Cổ phần Tập đoàn Tư vấn Đầu tư Xây dựng Kiên Giang
CKDH2213,DELISTED,CW,CKDH2213 - Chứng quyền,CKDH2213 - Chứng quyền
CKDH2212,DELISTED,CW,CKDH2212 - Chứng quyền,CKDH2212 - Chứng quyền
CKDH2211,DELISTED,CW,CKDH2211 - Chứng quyền,CKDH2211 - Chứng quyền
CKDH2210,DELISTED,CW,CKDH2210 - Chứng quyền,CKDH2210 - Chứng quyền
CKDH2209,DELISTED,CW,CKDH2209 - Chứng quyền,CKDH2209 - Chứng quyền
CKDH2208,DELISTED,CW,CKDH2208 - Chứng quyền,CKDH2208 - Chứng quyền
CKDH2207,DELISTED,CW,CKDH2207 - Chứng quyền,CKDH2207 - Chứng quyền
CKDH2206,DELISTED,CW,CKDH2206 - Chứng quyền,CKDH2206 - Chứng quyền
CKDH2205,DELISTED,CW,CKDH2205 - Chứng quyền,CKDH2205 - Chứng quyền
CKDH2204,DELISTED,CW,CKDH2204 - Chứng quyền,CKDH2204 - Chứng quyền
CKDH2203,DELISTED,CW,CKDH2203 - Chứng quyền,CKDH2203 - Chứng quyền
CKDH2202,DELISTED,CW,CKDH2202 - Chứng quyền,CKDH2202 - Chứng quyền
CKDH2201,DELISTED,CW,CKDH2201 - Chứng quyền,CKDH2201 - Chứng quyền
CKDH2107,DELISTED,CW,CKDH2107 - Chứng quyền,CKDH2107 - Chứng quyền
CKD,UPCOM,STOCK,Đông Anh Licogi,Công ty Cổ phần Cơ khí Đông Anh Licogi
CKA,UPCOM,STOCK,Cơ khí An Giang,Công ty Cổ phần Cơ khí An Giang
CK8,UPCOM,STOCK,Cơ khí 120,Công ty Cổ phần Cơ khí 120
CJC,HNX,STOCK,Cơ điện Miền Trung,Công ty Cổ phần Cơ điện Miền Trung
CIP,UPCOM,STOCK,XL và SX công nghiệp,Công ty Cổ phần Xây lắp và Sản xuất Công nghiệp
CII424002,BOND,BOND,CII424002 - Trái phiếu,CII424002 - Trái phiếu
CII42013,BOND,BOND,CII42013 - Trái phiếu,CII42013 - Trái phiếu
CII124021,BOND,BOND,CII124021 - Trái phiếu,CII124021 - Trái phiếu
CII121029,DELISTED,BOND,CII121029 - Trái phiếu,CII121029 - Trái phiếu
CII121006,DELISTED,BOND,CII121006 - Trái phiếu,CII121006 - Trái phiếu
CII120018,DELISTED,BOND,CII120018 - Trái phiếu,CII120018 - Trái phiếu
CII,HSX,STOCK,Hạ tầng Kỹ thuật TP.HCM,Công ty Cổ phần Đầu tư Hạ tầng Kỹ thuật Thành phố Hồ Chí Minh
CIG,HSX,STOCK,Xây dựng COMA 18,Công ty Cổ phần COMA 18
CID,UPCOM,STOCK,Xây dựng và Phát triển Cơ sở Hạ tầng,Công ty Cổ phần Xây dựng và Phát triển Cơ sở Hạ tầng
CIA,HNX,STOCK,DV Sân Bay Cam Ranh,Công ty Cổ Phần Dịch Vụ Sân Bay Quốc Tế Cam Ranh
CI5,UPCOM,STOCK,Đầu tư Xây dựng số 5,Công ty Cổ phần Đầu tư Xây dựng số 5
CHS,UPCOM,STOCK,Chiếu sáng TPHCM,Công ty Cổ phần Chiếu sáng Công cộng Thành phố Hồ Chí Minh
CHPG2510,HSX,CW,CHPG2510 - Chứng quyền,CHPG2510 - Chứng quyền
CHPG2509,HSX,CW,CHPG2509 - Chứng quyền,CHPG2509 - Chứng quyền
CHPG2508,HSX,CW,CHPG2508 - Chứng quyền,CHPG2508 - Chứng quyền
CHPG2507,HSX,CW,CHPG2507 - Chứng quyền,CHPG2507 - Chứng quyền
CHPG2506,HSX,CW,CHPG2506 - Chứng quyền,CHPG2506 - Chứng quyền
CHPG2505,HSX,CW,CHPG2505 - Chứng quyền,CHPG2505 - Chứng quyền
CHPG2504,HSX,CW,CHPG2504 - Chứng quyền,CHPG2504 - Chứng quyền
CHPG2503,HSX,CW,CHPG2503 - Chứng quyền,CHPG2503 - Chứng quyền
CHPG2502,HSX,CW,CHPG2502 - Chứng quyền,CHPG2502 - Chứng quyền
CHPG2501,HSX,CW,CHPG2501 - Chứng quyền,CHPG2501 - Chứng quyền
CHPG2412,HSX,CW,CHPG2412 - Chứng quyền,CHPG2412 - Chứng quyền
CHPG2411,DELISTED,CW,CHPG2411 - Chứng quyền,CHPG2411 - Chứng quyền
CHPG2410,HSX,CW,CHPG2410 - Chứng quyền,CHPG2410 - Chứng quyền
CHPG2409,HSX,CW,CHPG2409 - Chứng quyền,CHPG2409 - Chứng quyền
CHPG2408,HSX,CW,CHPG2408 - Chứng quyền,CHPG2408 - Chứng quyền
CHPG2407,HSX,CW,CHPG2407 - Chứng quyền,CHPG2407 - Chứng quyền
CHPG2406,HSX,CW,CHPG2406 - Chứng quyền,CHPG2406 - Chứng quyền
CHPG2405,DELISTED,CW,CHPG2405 - Chứng quyền,CHPG2405 - Chứng quyền
CHPG2404,DELISTED,CW,CHPG2404 - Chứng quyền,CHPG2404 - Chứng quyền
CHPG2403,DELISTED,CW,CHPG2403 - Chứng quyền,CHPG2403 - Chứng quyền
CHPG2402,HSX,CW,CHPG2402 - Chứng quyền,CHPG2402 - Chứng quyền
CHPG2401,DELISTED,CW,CHPG2401 - Chứng quyền,CHPG2401 - Chứng quyền
CHPG2343,DELISTED,CW,CHPG2343 - Chứng quyền,CHPG2343 - Chứng quyền
CHPG2342,DELISTED,CW,CHPG2342 - Chứng quyền,CHPG2342 - Chứng quyền
CHPG2341,DELISTED,CW,CHPG2341 - Chứng quyền,CHPG2341 - Chứng quyền
CHPG2340,DELISTED,CW,CHPG2340 - Chứng quyền,CHPG2340 - Chứng quyền
CHPG2339,DELISTED,CW,CHPG2339 - Chứng quyền,CHPG2339 - Chứng quyền
CHPG2338,DELISTED,CW,CHPG2338 - Chứng quyền,CHPG2338 - Chứng quyền
CHPG2337,DELISTED,CW,CHPG2337 - Chứng quyền,CHPG2337 - Chứng quyền
CHPG2336,DELISTED,CW,CHPG2336 - Chứng quyền,CHPG2336 - Chứng quyền
CHPG2335,DELISTED,CW,CHPG2335 - Chứng quyền,CHPG2335 - Chứng quyền
CHPG2334,DELISTED,CW,CHPG2334 - Chứng quyền,CHPG2334 - Chứng quyền
CHPG2333,DELISTED,CW,CHPG2333 - Chứng quyền,CHPG2333 - Chứng quyền
CHPG2332,DELISTED,CW,CHPG2332 - Chứng quyền,CHPG2332 - Chứng quyền
CHPG2331,DELISTED,CW,CHPG2331 - Chứng quyền,CHPG2331 - Chứng quyền
CHPG2330,DELISTED,CW,CHPG2330 - Chứng quyền,CHPG2330 - Chứng quyền
CHPG2329,DELISTED,CW,CHPG2329 - Chứng quyền,CHPG2329 - Chứng quyền
CHPG2328,DELISTED,CW,CHPG2328 - Chứng quyền,CHPG2328 - Chứng quyền
CHPG2327,DELISTED,CW,CHPG2327 - Chứng quyền,CHPG2327 - Chứng quyền
CHPG2326,DELISTED,CW,CHPG2326 - Chứng quyền,CHPG2326 - Chứng quyền
CHPG2325,DELISTED,CW,CHPG2325 - Chứng quyền,CHPG2325 - Chứng quyền
CHPG2324,DELISTED,CW,CHPG2324 - Chứng quyền,CHPG2324 - Chứng quyền
CHPG2323,DELISTED,CW,CHPG2323 - Chứng quyền,CHPG2323 - Chứng quyền
CHPG2322,DELISTED,CW,CHPG2322 - Chứng quyền,CHPG2322 - Chứng quyền
CHPG2321,DELISTED,CW,CHPG2321 - Chứng quyền,CHPG2321 - Chứng quyền
CHPG2320,DELISTED,CW,CHPG2320 - Chứng quyền,CHPG2320 - Chứng quyền
CHPG2319,DELISTED,CW,CHPG2319 - Chứng quyền,CHPG2319 - Chứng quyền
CHPG2318,DELISTED,CW,CHPG2318 - Chứng quyền,CHPG2318 - Chứng quyền
CHPG2317,DELISTED,CW,CHPG2317 - Chứng quyền,CHPG2317 - Chứng quyền
CHPG2316,DELISTED,CW,CHPG2316 - Chứng quyền,CHPG2316 - Chứng quyền
CHPG2315,DELISTED,CW,CHPG2315 - Chứng quyền,CHPG2315 - Chứng quyền
CHPG2314,DELISTED,CW,CHPG2314 - Chứng quyền,CHPG2314 - Chứng quyền
CHPG2313,DELISTED,CW,CHPG2313 - Chứng quyền,CHPG2313 - Chứng quyền
CHPG2312,DELISTED,CW,CHPG2312 - Chứng quyền,CHPG2312 - Chứng quyền
CHPG2311,DELISTED,CW,CHPG2311 - Chứng quyền,CHPG2311 - Chứng quyền
CHPG2310,DELISTED,CW,CHPG2310 - Chứng quyền,CHPG2310 - Chứng quyền
CHPG2309,DELISTED,CW,CHPG2309 - Chứng quyền,CHPG2309 - Chứng quyền
CHPG2308,DELISTED,CW,CHPG2308 - Chứng quyền,CHPG2308 - Chứng quyền
CHPG2307,DELISTED,CW,CHPG2307 - Chứng quyền,CHPG2307 - Chứng quyền
CHPG2306,DELISTED,CW,CHPG2306 - Chứng quyền,CHPG2306 - Chứng quyền
CHPG2305,DELISTED,CW,CHPG2305 - Chứng quyền,CHPG2305 - Chứng quyền
CHPG2304,DELISTED,CW,CHPG2304 - Chứng quyền,CHPG2304 - Chứng quyền
CHPG2303,DELISTED,CW,CHPG2303 - Chứng quyền,CHPG2303 - Chứng quyền
CHPG2302,DELISTED,CW,CHPG2302 - Chứng quyền,CHPG2302 - Chứng quyền
CHPG2301,DELISTED,CW,CHPG2301 - Chứng quyền,CHPG2301 - Chứng quyền
CHPG2227,DELISTED,CW,CHPG2227 - Chứng quyền,CHPG2227 - Chứng quyền
CHPG2226,DELISTED,CW,CHPG2226 - Chứng quyền,CHPG2226 - Chứng quyền
CHPG2225,DELISTED,CW,CHPG2225 - Chứng quyền,CHPG2225 - Chứng quyền
CHPG2224,DELISTED,CW,CHPG2224 - Chứng quyền,CHPG2224 - Chứng quyền
CHPG2223,DELISTED,CW,CHPG2223 - Chứng quyền,CHPG2223 - Chứng quyền
CHPG2221,DELISTED,CW,CHPG2221 - Chứng quyền,CHPG2221 - Chứng quyền
CHPG2220,DELISTED,CW,CHPG2220 - Chứng quyền,CHPG2220 - Chứng quyền
CHPG2219,DELISTED,CW,CHPG2219 - Chứng quyền,CHPG2219 - Chứng quyền
CHPG2218,DELISTED,CW,CHPG2218 - Chứng quyền,CHPG2218 - Chứng quyền
CHPG2217,DELISTED,CW,CHPG2217 - Chứng quyền,CHPG2217 - Chứng quyền
CHPG2216,DELISTED,CW,CHPG2216 - Chứng quyền,CHPG2216 - Chứng quyền
CHPG2215,DELISTED,CW,CHPG2215 - Chứng quyền,CHPG2215 - Chứng quyền
CHPG2214,DELISTED,CW,CHPG2214 - Chứng quyền,CHPG2214 - Chứng quyền
CHPG2213,DELISTED,CW,CHPG2213 - Chứng quyền,CHPG2213 - Chứng quyền
CHPG2212,DELISTED,CW,CHPG2212 - Chứng quyền,CHPG2212 - Chứng quyền
CHPG2211,DELISTED,CW,CHPG2211 - Chứng quyền,CHPG2211 - Chứng quyền
CHPG2210,DELISTED,CW,CHPG2210 - Chứng quyền,CHPG2210 - Chứng quyền
CHPG2209,DELISTED,CW,CHPG2209 - Chứng quyền,CHPG2209 - Chứng quyền
CHPG2208,DELISTED,CW,CHPG2208 - Chứng quyền,CHPG2208 - Chứng quyền
CHPG2207,DELISTED,CW,CHPG2207 - Chứng quyền,CHPG2207 - Chứng quyền
CHPG2206,DELISTED,CW,CHPG2206 - Chứng quyền,CHPG2206 - Chứng quyền
CHPG2204,DELISTED,CW,CHPG2204 - Chứng quyền,CHPG2204 - Chứng quyền
CHPG2203,DELISTED,CW,CHPG2203 - Chứng quyền,CHPG2203 - Chứng quyền
CHPG2202,DELISTED,CW,CHPG2202 - Chứng quyền,CHPG2202 - Chứng quyền
CHPG2201,DELISTED,CW,CHPG2201 - Chứng quyền,CHPG2201 - Chứng quyền
CHPG2119,DELISTED,CW,CHPG2119 - Chứng quyền,CHPG2119 - Chứng quyền
CHPG2118,DELISTED,CW,CHPG2118 - Chứng quyền,CHPG2118 - Chứng quyền
CHPG2117,DELISTED,CW,CHPG2117 - Chứng quyền,CHPG2117 - Chứng quyền
CHPG2116,DELISTED,CW,CHPG2116 - Chứng quyền,CHPG2116 - Chứng quyền
CHPG2114,DELISTED,CW,CHPG2114 - Chứng quyền,CHPG2114 - Chứng quyền
CHP,HSX,STOCK,Thủy điện Miền Trung,Công ty Cổ phần Thủy điện Miền Trung
CHDB2501,HSX,CW,CHDB2501 - Chứng quyền,CHDB2501 - Chứng quyền
CHDB2401,DELISTED,CW,CHDB2401 - Chứng quyền,CHDB2401 - Chứng quyền
CHDB2306,DELISTED,CW,CHDB2306 - Chứng quyền,CHDB2306 - Chứng quyền
CHDB2305,DELISTED,CW,CHDB2305 - Chứng quyền,CHDB2305 - Chứng quyền
CHDB2304,DELISTED,CW,CHDB2304 - Chứng quyền,CHDB2304 - Chứng quyền
CHDB2303,DELISTED,CW,CHDB2303 - Chứng quyền,CHDB2303 - Chứng quyền
CHDB2302,DELISTED,CW,CHDB2302 - Chứng quyền,CHDB2302 - Chứng quyền
CHDB2301,DELISTED,CW,CHDB2301 - Chứng quyền,CHDB2301 - Chứng quyền
CHDB2210,DELISTED,CW,CHDB2210 - Chứng quyền,CHDB2210 - Chứng quyền
CHDB2209,DELISTED,CW,CHDB2209 - Chứng quyền,CHDB2209 - Chứng quyền
CHDB2208,DELISTED,CW,CHDB2208 - Chứng quyền,CHDB2208 - Chứng quyền
CHDB2207,DELISTED,CW,CHDB2207 - Chứng quyền,CHDB2207 - Chứng quyền
CHDB2206,DELISTED,CW,CHDB2206 - Chứng quyền,CHDB2206 - Chứng quyền
CHDB2205,DELISTED,CW,CHDB2205 - Chứng quyền,CHDB2205 - Chứng quyền
CHDB2204,DELISTED,CW,CHDB2204 - Chứng quyền,CHDB2204 - Chứng quyền
CHDB2203,DELISTED,CW,CHDB2203 - Chứng quyền,CHDB2203 - Chứng quyền
CHDB2202,DELISTED,CW,CHDB2202 - Chứng quyền,CHDB2202 - Chứng quyền
CHDB2201,DELISTED,CW,CHDB2201 - Chứng quyền,CHDB2201 - Chứng quyền
CHDB2103,DELISTED,CW,CHDB2103 - Chứng quyền,CHDB2103 - Chứng quyền
CHC,UPCOM,STOCK,Nội thất Cẩm Hà,Công ty Cổ phần Cẩm Hà
CH5,UPCOM,STOCK,Xây dựng số 5 Hà Nội,Công ty Cổ phần Xây dựng số 5 Hà Nội
CGV,UPCOM,STOCK,Vinaceglass JSC,Công ty Cổ phần Vinaceglass
CGL,DELISTED,STOCK,Thương mại Gia Lai,Công ty Cổ phần Thương mại Gia Lai
CFV,UPCOM,STOCK,Cà phê Thắng Lợi,Công ty Cổ phần Cà phê Thắng Lợi
CFPT2508,HSX,CW,CFPT2508 - Chứng quyền,CFPT2508 - Chứng quyền
CFPT2507,HSX,CW,CFPT2507 - Chứng quyền,CFPT2507 - Chứng quyền
CFPT2506,HSX,CW,CFPT2506 - Chứng quyền,CFPT2506 - Chứng quyền
CFPT2505,HSX,CW,CFPT2505 - Chứng quyền,CFPT2505 - Chứng quyền
CFPT2504,HSX,CW,CFPT2504 - Chứng quyền,CFPT2504 - Chứng quyền
CFPT2503,HSX,CW,CFPT2503 - Chứng quyền,CFPT2503 - Chứng quyền
CFPT2502,HSX,CW,CFPT2502 - Chứng quyền,CFPT2502 - Chứng quyền
CFPT2501,HSX,CW,CFPT2501 - Chứng quyền,CFPT2501 - Chứng quyền
CFPT2407,HSX,CW,CFPT2407 - Chứng quyền,CFPT2407 - Chứng quyền
CFPT2406,DELISTED,CW,CFPT2406 - Chứng quyền,CFPT2406 - Chứng quyền
CFPT2405,HSX,CW,CFPT2405 - Chứng quyền,CFPT2405 - Chứng quyền
CFPT2404,HSX,CW,CFPT2404 - Chứng quyền,CFPT2404 - Chứng quyền
CFPT2403,HSX,CW,CFPT2403 - Chứng quyền,CFPT2403 - Chứng quyền
CFPT2402,HSX,CW,CFPT2402 - Chứng quyền,CFPT2402 - Chứng quyền
CFPT2401,DELISTED,CW,CFPT2401 - Chứng quyền,CFPT2401 - Chứng quyền
CFPT2318,DELISTED,CW,CFPT2318 - Chứng quyền,CFPT2318 - Chứng quyền
CFPT2317,DELISTED,CW,CFPT2317 - Chứng quyền,CFPT2317 - Chứng quyền
CFPT2316,DELISTED,CW,CFPT2316 - Chứng quyền,CFPT2316 - Chứng quyền
CFPT2315,DELISTED,CW,CFPT2315 - Chứng quyền,CFPT2315 - Chứng quyền
CFPT2314,DELISTED,CW,CFPT2314 - Chứng quyền,CFPT2314 - Chứng quyền
CFPT2313,DELISTED,CW,CFPT2313 - Chứng quyền,CFPT2313 - Chứng quyền
CFPT2312,DELISTED,CW,CFPT2312 - Chứng quyền,CFPT2312 - Chứng quyền
CFPT2311,DELISTED,CW,CFPT2311 - Chứng quyền,CFPT2311 - Chứng quyền
CFPT2310,DELISTED,CW,CFPT2310 - Chứng quyền,CFPT2310 - Chứng quyền
CFPT2309,DELISTED,CW,CFPT2309 - Chứng quyền,CFPT2309 - Chứng quyền
CFPT2308,DELISTED,CW,CFPT2308 - Chứng quyền,CFPT2308 - Chứng quyền
CFPT2307,DELISTED,CW,CFPT2307 - Chứng quyền,CFPT2307 - Chứng quyền
CFPT2306,DELISTED,CW,CFPT2306 - Chứng quyền,CFPT2306 - Chứng quyền
CFPT2305,DELISTED,CW,CFPT2305 - Chứng quyền,CFPT2305 - Chứng quyền
CFPT2304,DELISTED,CW,CFPT2304 - Chứng quyền,CFPT2304 - Chứng quyền
CFPT2303,DELISTED,CW,CFPT2303 - Chứng quyền,CFPT2303 - Chứng quyền
CFPT2302,DELISTED,CW,CFPT2302 - Chứng quyền,CFPT2302 - Chứng quyền
CFPT2301,DELISTED,CW,CFPT2301 - Chứng quyền,CFPT2301 - Chứng quyền
CFPT2214,DELISTED,CW,CFPT2214 - Chứng quyền,CFPT2214 - Chứng quyền
CFPT2213,DELISTED,CW,CFPT2213 - Chứng quyền,CFPT2213 - Chứng quyền
CFPT2212,DELISTED,CW,CFPT2212 - Chứng quyền,CFPT2212 - Chứng quyền
CFPT2211,DELISTED,CW,CFPT2211 - Chứng quyền,CFPT2211 - Chứng quyền
CFPT2210,DELISTED,CW,CFPT2210 - Chứng quyền,CFPT2210 - Chứng quyền
CFPT2209,DELISTED,CW,CFPT2209 - Chứng quyền,CFPT2209 - Chứng quyền
CFPT2208,DELISTED,CW,CFPT2208 - Chứng quyền,CFPT2208 - Chứng quyền
CFPT2207,DELISTED,CW,CFPT2207 - Chứng quyền,CFPT2207 - Chứng quyền
CFPT2206,DELISTED,CW,CFPT2206 - Chứng quyền,CFPT2206 - Chứng quyền
CFPT2205,DELISTED,CW,CFPT2205 - Chứng quyền,CFPT2205 - Chứng quyền
CFPT2204,DELISTED,CW,CFPT2204 - Chứng quyền,CFPT2204 - Chứng quyền
CFPT2203,DELISTED,CW,CFPT2203 - Chứng quyền,CFPT2203 - Chứng quyền
CFPT2202,DELISTED,CW,CFPT2202 - Chứng quyền,CFPT2202 - Chứng quyền
CFPT2201,DELISTED,CW,CFPT2201 - Chứng quyền,CFPT2201 - Chứng quyền
CFPT2111,DELISTED,CW,CFPT2111 - Chứng quyền,CFPT2111 - Chứng quyền
CFPT2109,DELISTED,CW,,
CFPT2108,DELISTED,CW,CFPT2108 - Chứng quyền,CFPT2108 - Chứng quyền
CFM,UPCOM,STOCK,Đầu tư CFM,Công ty Cổ phần Đầu tư CFM
CET,HNX,STOCK,HTC Holding ,Công ty Cổ phần HTC Holding
CEO,HNX,STOCK,Tập đoàn CEO,Công ty Cổ phần Tập đoàn C.E.O
CEN,UPCOM,STOCK,CENCON Việt Nam,Công ty Cổ phần CENCON Việt Nam
CEG,DELISTED,STOCK,XD và Thiết bị Công nghiệp,Công ty Cổ phần Tập đoàn Xây dựng và Thiết bị Công nghiệp
CEE,DELISTED,STOCK,Xây dựng Hạ tầng CII,Công ty Cổ phần Xây dựng Hạ tầng CII
CE1,DELISTED,STOCK,Thiết bị Công nghiệp CIE1,Công ty Cổ phần Xây dựng và Thiết bị Công nghiệp CIE1
CDR,UPCOM,STOCK,Xây dựng Cao su Đồng Nai,Công ty Cổ phần Xây dựng Cao su Đồng Nai
CDP,UPCOM,STOCK,Dược phẩm TW Codupha,Công ty Cổ phần Dược phẩm Trung ương Codupha
CDO,UPCOM,STOCK,Tư vấn Thiết kế và PT Đô thị,Công ty Cổ phần Tư vấn Thiết kế và Phát triển Đô thị
CDN,HNX,STOCK,Cảng Đà Nẵng,Công ty Cổ phần Cảng Đà Nẵng
CDH,UPCOM,STOCK,CTCC và DV Du lịch Hải Phòng,Công ty Cổ phần Công trình Công cộng và Dịch vụ Du lịch Hải Phòng
CDG,UPCOM,STOCK,VLXD Cầu Đuống,Công ty Cổ phần Cầu Đuống
CDC,HSX,STOCK,Chương Dương Corp,Công ty Cổ phần Chương Dương
CCV,UPCOM,STOCK,XD CN và đô thị Việt Nam,Công ty Cổ phần Tư vấn Xây dựng Công nghiệp và Đô thị Việt Nam
CCT,UPCOM,STOCK,Cảng Cần Thơ,Công ty Cổ phần Cảng Cần Thơ
CCR,HNX,STOCK,Cảng Cam Ranh,Công ty Cổ phần Cảng Cam Ranh
CCP,UPCOM,STOCK,Cảng Cửa Cấm,Công ty Cổ phần Cảng Cửa Cấm Hải Phòng
CCM,UPCOM,STOCK,Xi măng Cần Thơ,Công ty Cổ phần Khoáng sản và Xi măng Cần Thơ
CCL,HSX,STOCK,ĐT & PT Đô thị Dầu khí Cửu Long,Công ty Cổ phần Đầu tư và Phát triển Đô thị Dầu khí Cửu Long
CCI,HSX,STOCK,CIDICO,Công ty Cổ phần Đầu tư Phát triển Công nghiệp Thương mại Củ Chi
CCC,UPCOM,STOCK,Xây Dựng CDC,Công ty Cổ Phần Xây Dựng CDC
CCA,UPCOM,STOCK,XNK Thuỷ sản Cần Thơ,Công ty Cổ phần Xuất nhập khẩu Thủy sản Cần Thơ
CC4,UPCOM,STOCK,ĐT và XD số 4,Công ty Cổ phần Đầu tư và Xây dựng số 4
CC1,UPCOM,STOCK,TCT Xây dựng số 1,Tổng Công ty Xây dựng số 1 - CTCP
CBS,UPCOM,STOCK,Mía đường Cao Bằng,Công ty Cổ phần Mía đường Cao Bằng
CBI,UPCOM,STOCK,Gang thép Cao Bằng,Công ty Cổ phần Gang thép Cao Bằng
CAV,DELISTED,STOCK,Dây cáp điện Việt Nam,Công ty Cổ Phần Dây cáp điện Việt Nam
CAT,UPCOM,STOCK,Thủy sản Cà Mau,Công ty Cổ phần Thủy sản Cà Mau
CAR,HNX,STOCK,Tập đoàn Giáo dục Trí Việt,Công ty cổ phần Tập đoàn Giáo dục Trí Việt
CAP,HNX,STOCK,Lâm nông sản Yên Bái,Công ty Cổ phần Lâm Nông sản Thực phẩm Yên Bái
CAN,HNX,STOCK,Đồ hộp Hạ Long,Công ty Cổ phần Đồ hộp Hạ Long
CAG,HNX,STOCK,Cảng An Giang,Công ty Cổ phần Cảng An Giang
CAD,UPCOM,STOCK,Thủy sản Cadovimex,Công ty Cổ phần Chế biến và Xuất khẩu Thủy sản Cadovimex
CACB2506,HSX,CW,CACB2506 - Chứng quyền,CACB2506 - Chứng quyền
CACB2505,HSX,CW,CACB2505 - Chứng quyền,CACB2505 - Chứng quyền
CACB2504,HSX,CW,CACB2504 - Chứng quyền,CACB2504 - Chứng quyền
CACB2503,HSX,CW,CACB2503 - Chứng quyền,CACB2503 - Chứng quyền
CACB2502,HSX,CW,CACB2502 - Chứng quyền,CACB2502 - Chứng quyền
CACB2501,HSX,CW,CACB2501 - Chứng quyền,CACB2501 - Chứng quyền
CACB2405,HSX,CW,CACB2405 - Chứng quyền,CACB2405 - Chứng quyền
CACB2404,HSX,CW,CACB2404 - Chứng quyền,CACB2404 - Chứng quyền
CACB2403,HSX,CW,CACB2403 - Chứng quyền,CACB2403 - Chứng quyền
CACB2402,DELISTED,CW,CACB2402 - Chứng quyền,CACB2402 - Chứng quyền
CACB2401,DELISTED,CW,CACB2401 - Chứng quyền,CACB2401 - Chứng quyền
CACB2307,DELISTED,CW,CACB2307 - Chứng quyền,CACB2307 - Chứng quyền
CACB2306,DELISTED,CW,CACB2306 - Chứng quyền,CACB2306 - Chứng quyền
CACB2305,DELISTED,CW,CACB2305 - Chứng quyền,CACB2305 - Chứng quyền
CACB2304,DELISTED,CW,CACB2304 - Chứng quyền,CACB2304 - Chứng quyền
CACB2303,DELISTED,CW,CACB2303 - Chứng quyền,CACB2303 - Chứng quyền
CACB2302,DELISTED,CW,CACB2302 - Chứng quyền,CACB2302 - Chứng quyền
CACB2301,DELISTED,CW,CACB2301 - Chứng quyền,CACB2301 - Chứng quyền
CACB2208,DELISTED,CW,CACB2208 - Chứng quyền,CACB2208 - Chứng quyền
CACB2207,DELISTED,CW,CACB2207 - Chứng quyền,CACB2207 - Chứng quyền
CACB2206,DELISTED,CW,CACB2206 - Chứng quyền,CACB2206 - Chứng quyền
CACB2205,DELISTED,CW,CACB2205 - Chứng quyền,CACB2205 - Chứng quyền
CACB2204,DELISTED,CW,CACB2204 - Chứng quyền,CACB2204 - Chứng quyền
CACB2203,DELISTED,CW,CACB2203 - Chứng quyền,CACB2203 - Chứng quyền
CACB2202,DELISTED,CW,CACB2202 - Chứng quyền,CACB2202 - Chứng quyền
CACB2201,DELISTED,CW,CACB2201 - Chứng quyền,CACB2201 - Chứng quyền
CACB2103,DELISTED,CW,CACB2103 - Chứng quyền,CACB2103 - Chứng quyền
CACB2102,DELISTED,CW,CACB2102 - Chứng quyền,CACB2102 - Chứng quyền
CAB,DELISTED,STOCK,Truyền hình Cáp Việt Nam,Công ty Cổ phần Tổng Công ty Truyền hình Cáp Việt Nam
C92,UPCOM,STOCK,Xây dựng và Đầu tư 492,Công ty Cổ phần Xây dựng và Đầu tư 492
C69,HNX,STOCK,Xây dựng 1369,Công ty Cổ phần Xây dựng 1369
C4G,UPCOM,STOCK,Tập Đoàn Cienco4,Công ty Cổ phần Tập Đoàn Cienco4
C47,HSX,STOCK,Xây dựng 47,Công ty Cổ phần Xây dựng 47
C32,HSX,STOCK,CIC39,Công ty Cổ phần CIC39
C22,UPCOM,STOCK,Công ty 22,Công ty Cổ phần 22
C21,UPCOM,STOCK,Thế kỷ 21,Công ty Cổ phần Thế kỷ 21
C12,UPCOM,STOCK,Cầu 12,Công ty Cổ phần Cầu 12
BXT,DELISTED,STOCK,,
BXH,HNX,STOCK,Bao bì Xi măng HP,Công ty Cổ phần VICEM Bao bì Hải Phòng
BWS,UPCOM,STOCK,Cấp Nước Bà Rịa Vũng Tàu,Công ty Cổ phần Cấp Nước Bà Rịa - Vũng Tàu
BWE,HSX,STOCK,Nước - Môi trường Bình Dương,Công ty Cổ phần - Tổng công ty Nước - Môi trường Bình Dương
BWA,UPCOM,STOCK,Cấp thoát nước và Xây dựng Bảo Lộc,Công ty Cổ phần Cấp thoát nước và Xây dựng Bảo Lộc
BVS,HNX,STOCK,Chứng khoán Bảo Việt,Công ty Cổ phần Chứng khoán Bảo Việt
BVN,UPCOM,STOCK,Bông Việt Nam,Công ty Cổ phần Bông Việt Nam
BVL,UPCOM,STOCK,BV Land,Công ty Cổ phần BV Land
BVH,HSX,STOCK,Tập đoàn Bảo Việt,Tập đoàn Bảo Việt
BVG,UPCOM,STOCK,Group Bắc Việt,Công ty Cổ phần Group Bắc Việt
BVB124020,BOND,BOND,BVB124020 - Trái phiếu,BVB124020 - Trái phiếu
BVB123025,DELISTED,BOND,BVB123025 - Trái phiếu,BVB123025 - Trái phiếu
BVB122028,DELISTED,BOND,BVB122028 - Trái phiếu,BVB122028 - Trái phiếu
BVB121034,DELISTED,BOND,BVB121034 - Trái phiếu,BVB121034 - Trái phiếu
BVB,UPCOM,STOCK,Ngân hàng Bản Việt - BVBank,Ngân hàng Thương mại Cổ phần Bản Việt
BUD,DELISTED,STOCK,,
BTW,HNX,STOCK,Cấp nước Bến Thành,Công ty Cổ phần Cấp nước Bến Thành
BTV,UPCOM,STOCK,DV Du lịch Bến Thành,Công ty Cổ phần Dịch vụ Du lịch Bến Thành
BTU,UPCOM,STOCK,Công trình Đô thị Bến Tre,Công ty Cổ phần Công trình Đô thị Bến Tre
BTT,HSX,STOCK,TM - DV Bến Thành,Công ty Cổ phần Thương mại - Dịch vụ Bến Thành
BTS,HNX,STOCK,Xi măng Bút Sơn,Công ty Cổ phần Xi măng VICEM Bút Sơn
BTP,HSX,STOCK,Nhiệt điện Bà Rịa,Công ty Cổ phần Nhiệt điện Bà Rịa
BTN,UPCOM,STOCK,Gạch Tuy Nen Bình Định,Công ty Cổ phần Đầu tư Bitco Bình Định
BTH,UPCOM,STOCK,Biến thế và Vật liệu Điện Hà Nội,Công ty Cổ phần Chế tạo Biến thế và Vật liệu Điện Hà Nội
BTG,UPCOM,STOCK,Bao bì Tiền Giang,Công ty Cổ phần Bao bì Tiền Giang
BTD,UPCOM,STOCK,Bê tông ly tâm Thủ Đức,Công ty Cổ phần Bê tông ly tâm Thủ Đức
BTB,UPCOM,STOCK,Bia Hà Nội - Thái Bình,Công ty Cổ phần Bia Hà Nội - Thái Bình
BT6,UPCOM,STOCK,Bê tông 6,Công ty Cổ phần BETON 6
BT1,UPCOM,STOCK,Bảo vệ thực vật 1 TW,Công ty Cổ phần Bảo vệ thực vật 1 Trung ương
BST,HNX,STOCK,Sách và Thiết bị Bình Thuận,Công ty Cổ phần Sách và Thiết bị Bình Thuận
BSR,HSX,STOCK,Lọc Hóa dầu Bình Sơn,Công ty Cổ phần Lọc Hóa dầu Bình Sơn
BSQ,UPCOM,STOCK,Bia Sài Gòn - Quảng Ngãi,Công ty Cổ phần Bia Sài Gòn - Quảng Ngãi
BSP,UPCOM,STOCK,Bia Sài Gòn - Phú Thọ,Công ty Cổ phần Bia Sài Gòn - Phú Thọ
BSL,UPCOM,STOCK,Bia Sài Gòn - Sông Lam,Công ty Cổ phần Bia Sài Gòn - Sông Lam
BSI,HSX,STOCK,Chứng khoán BIDV,Công ty Cổ phần Chứng khoán BIDV
BSH,UPCOM,STOCK,Bia Sài Gòn - Hà Nội,Công ty Cổ phần Bia Sài Gòn - Hà Nội
BSG,UPCOM,STOCK,Xe khách Sài Gòn,Công ty Cổ phần Xe khách Sài Gòn
BSD,UPCOM,STOCK,"Bia, rượu Sài Gòn - Đồng Xuân","Công ty Cổ phần Bia, Rượu Sài Gòn - Đồng Xuân"
BSC,HNX,STOCK,Dịch vụ Bến Thành,Công ty Cổ phần Dịch vụ Bến Thành
BSA,UPCOM,STOCK,Thủy điện Buôn Đôn,Công ty Cổ phần Thủy điện Buôn Đôn
BRS,UPCOM,STOCK,Dịch vụ Đô thị Bà Rịa,Công ty Cổ phần Dịch vụ Đô thị Bà Rịa
BRR,UPCOM,STOCK,Cao su Bà Rịa,Công ty Cổ phần Cao su Bà Rịa
BRC,HSX,STOCK,Cao su Bến Thành,Công ty Cổ phần Cao su Bến Thành
BQB,UPCOM,STOCK,Bia Hà Nội - Quảng Bình,Công ty Cổ phần Bia Hà Nội - Quảng Bình
BPW,DELISTED,STOCK,,
BPC,HNX,STOCK,Bao bì Bỉm Sơn,Công ty Cổ phần Vicem Bao bì Bỉm Sơn
BOT,UPCOM,STOCK,BOT Cầu Thái Hà,Công ty Cổ phần BOT Cầu Thái Hà
BNW,UPCOM,STOCK,Nước sạch Bắc Ninh,Công ty Cổ phần Nước sạch Bắc Ninh
BNA,HNX,STOCK,Tập đoàn Đầu tư Bảo Ngọc,Công ty Cổ phần Tập đoàn Đầu tư Bảo Ngọc
BMV,UPCOM,STOCK,Bột mỳ Vinafood 1,Công ty Cổ phần Bột mỳ Vinafood 1
BMS,UPCOM,STOCK,Chứng khoán Bảo Minh,Công ty Cổ phần Chứng khoán Bảo Minh
BMP,HSX,STOCK,Nhựa Bình Minh,Công ty Cổ phần Nhựa Bình Minh
BMN,UPCOM,STOCK,Công ty 715,Công ty Cổ phần 715
BMK,UPCOM,STOCK,Black Cat,Công ty Cổ Phần Kỹ thuật Nhiệt Mèo Đen
BMJ,UPCOM,STOCK,Khoáng sản Miền Đông AHP,Công ty Cổ phần Khoáng sản Miền Đông AHP
BMI,HSX,STOCK,Bảo hiểm Bảo Minh,Tổng Công ty Cổ phần Bảo Minh
BMG,UPCOM,STOCK,May Bình Minh,Công ty Cổ phần May Bình Minh
BMF,UPCOM,STOCK,VLXD và Chất đốt Đồng Nai,Công ty Cổ phần Vật liệu Xây dựng và Chất đốt Đồng Nai
BMD,UPCOM,STOCK,Môi trường và DV Đô thị Bình Thuận,Công ty Cổ phần Môi trường và Dịch vụ Đô thị Bình Thuận
BMC,HSX,STOCK,Khoáng sản Bình Định,Công ty Cổ phần Khoáng sản Bình Định
BLW,DELISTED,STOCK,Cấp nước Bạc Liêu,Công ty Cổ phần Cấp nước Bạc Liêu
BLU,DELISTED,STOCK,,
BLT,UPCOM,STOCK,Lương Thực Bình Định,Công ty Cổ phần Lương thực Bình Định
BLN,UPCOM,STOCK,Xe buýt Liên Ninh,Công ty Cổ phần Vận tải và Dịch vụ Liên Ninh
BLI,UPCOM,STOCK,Bảo hiểm Nhà Rồng,Tổng Công ty Cổ phần Bảo hiểm Bảo Long
BLF,UPCOM,STOCK,Thủy sản Bạc Liêu,Công ty Cổ phần Thủy sản Bạc Liêu
BKH,DELISTED,STOCK,Bánh mứt kẹo Hà Nội,Công ty Cổ phần Bánh mứt kẹo Hà Nội
BKG,HSX,STOCK,Đầu tư BKG Việt Nam,Công ty Cổ phần Đầu tư BKG Việt Nam
BKC,HNX,STOCK,Khoáng sản Bắc Kạn,Công ty Cổ phần Khoáng sản Bắc Kạn
BIO,UPCOM,STOCK,Vắc xin và Sinh phẩm Nha Trang,Công ty Cổ phần Vắc xin và Sinh phẩm Nha Trang
BII,UPCOM,STOCK,Đầu tư và Phát triển Công nghiệp Bảo Thư,Công ty Cổ phần Đầu tư và Phát triển Công nghiệp Bảo Thư
BIG,UPCOM,STOCK,BIG Invest Group,Công ty cổ phần BIG Invest Group
BID123004,BOND,BOND,BID123004 - Trái phiếu,BID123004 - Trái phiếu
BID123003,BOND,BOND,BID123003 - Trái phiếu,BID123003 - Trái phiếu
BID123002,DELISTED,BOND,BID123002 - Trái phiếu,BID123002 - Trái phiếu
BID122005,BOND,BOND,BID122005 - Trái phiếu,BID122005 - Trái phiếu
BID122004,DELISTED,BOND,BID122004 - Trái phiếu,BID122004 - Trái phiếu
BID122003,DELISTED,BOND,BID122003 - Trái phiếu,BID122003 - Trái phiếu
BID121028,DELISTED,BOND,BID121028 - Trái phiếu,BID121028 - Trái phiếu
BID121027,DELISTED,BOND,BID121027 - Trái phiếu,BID121027 - Trái phiếu
BID,HSX,STOCK,BIDV,Ngân hàng Thương mại Cổ phần Đầu tư và Phát triển Việt Nam
BIC,HSX,STOCK,Bảo hiểm BIDV,Tổng Công ty Cổ phần Bảo hiểm Ngân hàng Đầu tư và Phát triển Việt Nam
BHT,DELISTED,STOCK,Đầu tư XD Bạch Đằng,Công ty Cổ phần Đầu tư Xây dựng Bạch Đằng TMC
BHP,UPCOM,STOCK,Bia Hà Nội - Hải Phòng,Công ty Cổ phần Bia Hà Nội - Hải Phòng
BHN,HSX,STOCK,HABECO,Tổng Công ty Cổ phần Bia - Rượu - Nước giải khát Hà Nội
BHK,UPCOM,STOCK,Bia Hà Nội - Kim Bài,Công ty Cổ phần Bia Hà Nội - Kim Bài
BHI,UPCOM,STOCK,Bảo hiểm Sài Gòn - Hà Nội,Tổng Công ty Cổ phần Bảo hiểm Sài Gòn - Hà Nội
BHG,UPCOM,STOCK,Chè Biển Hồ,Công ty Cổ phần Chè Biển Hồ
BHC,UPCOM,STOCK,Bê tông Biên Hòa,Công ty Cổ phần Bê tông Biên Hòa
BHA,UPCOM,STOCK,Thủy điện Bắc Hà,Công ty Cổ phần Thủy điện Bắc Hà
BGW,UPCOM,STOCK,Nước sạch Bắc Giang,Công ty Cổ phần Nước sạch Bắc Giang
BGE,UPCOM,STOCK,BCG Energy,Công ty Cổ phần BCG Energy
BFC,HSX,STOCK,Phân bón Bình Điền,Công ty Cổ phần Phân bón Bình Điền
BEL,UPCOM,STOCK,Điện tử Biên Hoà,Công ty Cổ phần Điện tử Biên Hòa
BED,HNX,STOCK,Sách Đà Nẵng,Công ty Cổ phần Sách và Thiết bị trường học Đà Nẵng
BDW,UPCOM,STOCK,Cấp thoát nước Bình Định,Công ty Cổ phần Cấp thoát nước Bình Định
BDT,UPCOM,STOCK,VLXD Đồng Tháp,Công ty Cổ phần Xây lắp và Vật liệu xây dựng Đồng Tháp
BDG,UPCOM,STOCK,May mặc Bình Dương,Công ty Cổ phần May mặc Bình Dương
BDB,HNX,STOCK,Sách Bình Định,Công ty Cổ phần Sách và Thiết bị Bình Định
BCV,UPCOM,STOCK,Du lịch và Thương mại Bằng Giang Cao Bằng - Vimico,Công ty Cổ phần Du lịch và Thương mại Bằng Giang Cao Bằng - Vimico
BCR,UPCOM,STOCK,BCG Land,Công ty Cổ phần BCG Land
BCP,UPCOM,STOCK,Dược Enlie,Công ty Cổ phần Dược Enlie
BCO,DELISTED,STOCK,Xây dựng Bình Phước,Công ty Cổ phần Xây dựng Bình Phước
BCM,HSX,STOCK,Becamex IDC,Tổng Công ty Đầu tư và Phát triển Công nghiệp - CTCP
BCG122006,BOND,BOND,BCG122006 - Trái phiếu,BCG122006 - Trái phiếu
BCG,HSX,STOCK,Bamboo Capital,Công ty Cổ phần Tập đoàn Bamboo Capital
BCF,HNX,STOCK,Thực phẩm Bích Chi,Công ty Cổ phần Thực phẩm Bích Chi
BCE,HSX,STOCK,XD và GT Bình Dương,Công ty Cổ phần Xây dựng và Giao thông Bình Dương
BCC,HNX,STOCK,Xi măng Bỉm Sơn,Công ty Cổ phần Xi măng Bỉm Sơn
BCB,UPCOM,STOCK,Công ty 397,Công ty Cổ phần 397
BCA,UPCOM,STOCK,Công ty B.C.H,Công ty cổ phần B.C.H
BBT,UPCOM,STOCK,Bông Bạch Tuyết,Công ty Cổ phần Bông Bạch Tuyết
BBS,HNX,STOCK,Bao bì Xi măng Bút Sơn,Công ty Cổ phần VICEM Bao bì Bút Sơn
BBM,UPCOM,STOCK,Bia Hà Nội - Nam Định,Công ty Cổ phần Bia Hà Nội - Nam Định
BBH,UPCOM,STOCK,Bao bì Hoàng Thạch,Công ty Cổ phần Bao bì Hoàng Thạch
BBC,HSX,STOCK,Bánh kẹo BIBICA,Công ty Cổ phần Bibica
BAX,HNX,STOCK,Công ty Thống Nhất,Công ty Cổ phần Thống Nhất
BAL,UPCOM,STOCK,Bao bì Balpac,Công ty Cổ phần Bao bì Bia - Rượu - Nước giải khát
BAF123020,BOND,BOND,BAF123020 - Trái phiếu,BAF123020 - Trái phiếu
BAF122029,BOND,BOND,BAF122029 - Trái phiếu,BAF122029 - Trái phiếu
BAF,HSX,STOCK,Nông nghiệp BAF Việt Nam,Công ty Cổ phần Nông nghiệp BAF Việt Nam
BAB124026,BOND,BOND,BAB124026 - Trái phiếu,BAB124026 - Trái phiếu
BAB124025,BOND,BOND,BAB124025 - Trái phiếu,BAB124025 - Trái phiếu
BAB124024,BOND,BOND,BAB124024 - Trái phiếu,BAB124024 - Trái phiếu
BAB124016,BOND,BOND,BAB124016 - Trái phiếu,BAB124016 - Trái phiếu
BAB124015,BOND,BOND,BAB124015 - Trái phiếu,BAB124015 - Trái phiếu
BAB124014,BOND,BOND,BAB124014 - Trái phiếu,BAB124014 - Trái phiếu
BAB123032,BOND,BOND,BAB123032 - Trái phiếu,BAB123032 - Trái phiếu
BAB123031,BOND,BOND,BAB123031 - Trái phiếu,BAB123031 - Trái phiếu
BAB123030,DELISTED,BOND,BAB123030 - Trái phiếu,BAB123030 - Trái phiếu
BAB123007,BOND,BOND,BAB123007 - Trái phiếu,BAB123007 - Trái phiếu
BAB123006,DELISTED,BOND,BAB123006 - Trái phiếu,BAB123006 - Trái phiếu
BAB123005,DELISTED,BOND,BAB123005 - Trái phiếu,BAB123005 - Trái phiếu
BAB122032,BOND,BOND,BAB122032 - Trái phiếu,BAB122032 - Trái phiếu
BAB122031,DELISTED,BOND,BAB122031 - Trái phiếu,BAB122031 - Trái phiếu
BAB122030,DELISTED,BOND,BAB122030 - Trái phiếu,BAB122030 - Trái phiếu
BAB,HNX,STOCK,Ngân hàng Bắc Á,Ngân hàng Thương mại Cổ phần Bắc Á
B82,DELISTED,STOCK,Công ty 482,Công ty Cổ phần 482
AVG,UPCOM,STOCK,Phân Bón Quốc Tế Âu Việt,Công ty Cổ phần Phân Bón Quốc Tế Âu Việt
AVF,UPCOM,STOCK,Thủy sản Việt An,Công ty Cổ phần Việt An
AVC,UPCOM,STOCK,Thủy điện A Vương,Công ty Cổ phần Thủy điện A Vương
AUM,DELISTED,STOCK,Vinacafe Sơn Thành,Công ty Cổ phần Vinacafe Sơn Thành
ATS,HNX,STOCK,Tập đoàn Đầu tư ATS,Công ty Cổ phần Tập đoàn Đầu tư ATS
ATG,UPCOM,STOCK,An Trường An,Công ty Cổ phần An Trường An
ATB,UPCOM,STOCK,Công ty An Thịnh,Công ty Cổ phần An Thịnh
ATA,UPCOM,STOCK,NTACO,Công ty Cổ phần NTACO
AST,HSX,STOCK,Dịch vụ Hàng không Taseco,Công ty Cổ phần Dịch vụ Hàng không Taseco
ASP,HSX,STOCK,Dầu khí An Pha,Công ty Cổ phần Tập đoàn Dầu khí An Pha
ASM,HSX,STOCK,Tập đoàn Sao Mai,Công ty Cổ phần Tập đoàn Sao Mai
ASG,HSX,STOCK,Tập đoàn ASG,Công ty Cổ phần Tập đoàn ASG
ASA,UPCOM,STOCK,Hàng tiêu dùng ASA,Công ty Cổ phần ASA
ART,UPCOM,STOCK,Chứng khoán BOS,Công ty Cổ phần Chứng khoán BOS
ARM,HNX,STOCK,XNK Hàng không,Công ty Cổ phần Xuất nhập khẩu Hàng không
APT,UPCOM,STOCK,Thủy hải sản Sài Gòn,Công ty Cổ phần Kinh doanh thủy hải sản Sài Gòn
APS,HNX,STOCK,CK Châu Á - TBD,Công ty Cổ phần Chứng khoán Châu Á - Thái Bình Dương
APP,UPCOM,STOCK,Phụ gia và SP Dầu mỏ,Công ty Cổ phần Phát triển Phụ gia và Sản phẩm dầu mỏ
APL,UPCOM,STOCK,Cơ khí và Thiết bị áp lực - VVMI,Công ty Cổ phần Cơ khí và Thiết bị áp lực - VVMI
API,HNX,STOCK,Đầu tư Châu Á - Thái Bình Dương,Công ty Cổ phần Đầu tư Châu Á - Thái Bình Dương
APH,HSX,STOCK,Tập đoàn An Phát Holdings,Công ty Cổ phần Tập đoàn An Phát Holdings
APG,HSX,STOCK,Chứng khoán APG,Công ty Cổ phần Chứng khoán APG
APF,UPCOM,STOCK,Nông sản Quảng Ngãi,Công ty Cổ phần Nông sản Thực phẩm Quảng Ngãi
APC,UPCOM,STOCK,Chiếu xạ An Phú,Công ty Cổ phần Chiếu xạ An Phú
ANV,HSX,STOCK,Thủy sản Nam Việt,Công ty Cổ phần Nam Việt
ANT,UPCOM,STOCK,Rau quả thực phẩm An Giang,Công ty Cổ phần Rau quả Thực phẩm An Giang
AMV,HNX,STOCK,Dược-TB Y tế Việt Mỹ,Công ty Cổ phần Sản xuất Kinh doanh Dược và Trang thiết bị Y tế Việt Mỹ
AMS,UPCOM,STOCK,Xây dựng AMECC,Công ty Cổ phần Cơ khí Xây dựng AMECC
AMP,UPCOM,STOCK,Armephaco,Công ty Cổ phần Armephaco
AME,HNX,STOCK,Cơ điện Alphanam,Công ty cổ phần Alphanam E&C
AMD,UPCOM,STOCK,FLC Stone,Công ty Cổ phần Đầu tư và Khoáng sản FLC Stone
AMC,HNX,STOCK,Khoáng sản Á Châu,Công ty Cổ phần Khoáng sản Á Châu
ALV,UPCOM,STOCK,Xây dựng ALVICO,Công ty Cổ phần Xây dựng ALVICO
ALT,HNX,STOCK,Văn hóa Tân Bình,Công ty Cổ phần Văn hóa Tân Bình
AIG,UPCOM,STOCK,Nguyên liệu Á Châu AIG,Công ty Cổ phần Nguyên liệu Á Châu AIG
AIC,UPCOM,STOCK,Bảo hiểm Hàng không,Tổng Công ty Cổ phần Bảo hiểm Hàng không
AGX,UPCOM,STOCK,Nông sản Xuất khẩu Sài Gòn,Công ty Cổ phần Thực phẩm Nông sản Xuất khẩu Sài Gòn
AGR,HSX,STOCK,Agriseco,Công ty Cổ phần Chứng khoán AGRIBANK
AGP,UPCOM,STOCK,Dược phẩm AGIMEXPHARM,Công ty Cổ phần Dược phẩm AGIMEXPHARM
AGM,HSX,STOCK,XNK An Giang,Công ty Cổ phần Xuất nhập khẩu An Giang
AGG,HSX,STOCK,Bất động sản An Gia,Công ty Cổ phần Đầu tư và Phát triển Bất động sản An Gia
AGF,UPCOM,STOCK,Thủy sản An Giang,Công ty Cổ phần Xuất nhập khẩu Thủy sản An Giang
AGE,DELISTED,STOCK,Môi trường Đô thị An Giang,Công ty Cổ phần Môi trường Đô thị An Giang
AG1,UPCOM,STOCK,28.1 JSC,Công ty Cổ phần 28.1
AFX,UPCOM,STOCK,XNK Nông sản Thực phẩm An Giang,Công ty Cổ phần Xuất Nhập khẩu Nông sản Thực phẩm An Giang
ADS,HSX,STOCK,Dệt sợi DAMSAN,Công ty Cổ phần DAMSAN
ADP,HSX,STOCK,Sơn Á Đông,Công ty Cổ phần Sơn Á Đông
ADG,HSX,STOCK,Clever Group,Công ty Cổ phần Clever Group
ADC,HNX,STOCK,Mĩ thuật và Truyền thông,Công ty Cổ phần Mĩ thuật và Truyền thông
ACV,UPCOM,STOCK,Cảng Hàng không VN,Tổng Công ty Cảng Hàng không Việt Nam - CTCP
ACS,UPCOM,STOCK,Xây lắp Thương mại 2,Công ty Cổ phần Xây lắp Thương mại 2
ACM,UPCOM,STOCK,Tập đoàn Khoáng sản Á Cường,Công ty Cổ phần Tập đoàn Khoáng sản Á Cường
ACL,HSX,STOCK,Thủy sản CL An Giang,Công ty Cổ phần Xuất nhập khẩu Thủy sản Cửu Long An Giang
ACG,HSX,STOCK,Gỗ An Cường,Công ty Cổ phần Gỗ An Cường
ACE,UPCOM,STOCK,Bê tông An Giang,Công ty Cổ phần Bê tông ly tâm An Giang
ACC,HSX,STOCK,Đầu tư và XD Bình Dương ACC,Công ty Cổ phần Đầu tư và Xây dựng Bình Dương ACC
ACB,HSX,STOCK,ACB,Ngân hàng Thương mại Cổ phần Á Châu
ABW,UPCOM,STOCK,Chứng khoán An Bình,Công ty Cổ phần Chứng khoán An Bình
ABT,HSX,STOCK,Thủy sản Bến Tre,Công ty Cổ phần Xuất nhập khẩu Thủy sản Bến Tre
ABS,HSX,STOCK,DV Nông nghiệp Bình Thuận,Công ty Cổ phần Dịch vụ Nông nghiệp Bình Thuận
ABR,HSX,STOCK,Đầu tư Nhãn Hiệu Việt,Công ty Cổ phần Đầu tư Nhãn Hiệu Việt
ABI,UPCOM,STOCK,BH NH Nông Nghiệp,Công ty Cổ phần Bảo hiểm Ngân hàng Nông Nghiệp
ABC,UPCOM,STOCK,Truyền thông VMG,Công ty Cổ phần Truyền thông VMG
ABB,UPCOM,STOCK,Ngân hàng An Bình,Ngân hàng Thương mại Cổ phần An Bình
AAV,HNX,STOCK,Việt Tiên Sơn Địa ốc,Công ty Cổ phần AAV Group
AAT,HSX,STOCK,Tập đoàn Tiên Sơn Thanh Hóa,Công ty Cổ phần Tập đoàn Tiên Sơn Thanh Hóa
AAS,UPCOM,STOCK,Chứng khoán SmartInvest,Công ty Cổ phần Chứng khoán SmartInvest
AAM,HSX,STOCK,Thủy sản Mekong,Công ty Cổ Phần Thủy Sản MeKong
AAH,UPCOM,STOCK,Than Hợp Nhất,Công ty Cổ phần Hợp Nhất
AAA,HSX,STOCK,An Phát Bioplastics,Công ty Cổ phần Nhựa An Phát Xanh
A32,UPCOM,STOCK,Công ty 32,Công ty Cổ phần 32



================================================
FILE: assets/data/symbols_by_industries.csv
================================================
symbol,organ_name,icb_name3,icb_name2,icb_name4,com_type_code,icb_code1,icb_code2,icb_code3,icb_code4
BMK,Công ty Cổ Phần Kỹ thuật Nhiệt Mèo Đen,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
LPT,Công ty Cổ phần Thương mại và Sản xuất Lập Phương Thành,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Đào tạo & Việc làm,CT,2000,2700,2790,2793
ACB,Ngân hàng Thương mại Cổ phần Á Châu,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
CAG,Công ty Cổ phần Cảng An Giang,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
AGR,Công ty Cổ phần Chứng khoán AGRIBANK,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
AAA,Công ty Cổ phần Nhựa An Phát Xanh,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
AIG,Công ty Cổ phần Nguyên liệu Á Châu AIG,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HNB,Công ty Cổ phần Bến xe Hà Nội,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
ABR,Công ty Cổ phần Đầu tư Nhãn Hiệu Việt,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
ATB,Công ty Cổ phần An Thịnh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
AGG,Công ty Cổ phần Đầu tư và Phát triển Bất động sản An Gia,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
BNA,Công ty Cổ phần Tập đoàn Đầu tư Bảo Ngọc,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
BRR,Công ty Cổ phần Cao su Bà Rịa,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
BDB,Công ty Cổ phần Sách và Thiết bị Bình Định,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
BSA,Công ty Cổ phần Thủy điện Buôn Đôn,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
PRT,Tổng Công ty Sản xuất - Xuất nhập khẩu Bình Dương - Công ty cổ phần,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
BDW,Công ty Cổ phần Cấp thoát nước Bình Định,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
BNW,Công ty Cổ phần Nước sạch Bắc Ninh,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
BTS,Công ty Cổ phần Xi măng VICEM Bút Sơn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
BTD,Công ty Cổ phần Bê tông ly tâm Thủ Đức,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CAD,Công ty Cổ phần Chế biến và Xuất khẩu Thủy sản Cadovimex,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
DTB,Công ty Cổ phần Công trình Đô thị Bảo Lộc,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
CDC,Công ty Cổ phần Chương Dương,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
ACL,Công ty Cổ phần Xuất nhập khẩu Thủy sản Cửu Long An Giang,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
ACM,Công ty Cổ phần Tập đoàn Khoáng sản Á Cường,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
BRC,Công ty Cổ phần Cao su Bến Thành,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
VTG,Công ty Cổ phần Du lịch tỉnh Bà Rịa - Vũng Tàu,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
TS3,Công ty Cổ phần Trường Sơn 532,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
ACS,Công ty Cổ phần Xây lắp Thương mại 2,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CIP,Công ty Cổ phần Xây lắp và Sản xuất Công nghiệp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BST,Công ty Cổ phần Sách và Thiết bị Bình Thuận,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
CIA,Công ty Cổ Phần Dịch Vụ Sân Bay Quốc Tế Cam Ranh,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
BIG,Công ty cổ phần BIG Invest Group,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
CKV,Công ty Cổ phần CokyVina,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
A32,Công ty Cổ phần 32,Hàng cá nhân,Hàng cá nhân & Gia dụng,Giầy dép,CT,3000,3700,3760,3765
CPA,Công ty Cổ phần Cà phê Phước An,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
CSC,Công ty Cổ phần Tập đoàn COTANA,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CTF,Công ty Cổ phần City Auto,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
CT6,Công ty Cổ phần Công trình 6,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NO1,Công ty Cổ phần Tâp đoàn 911,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
DHB,Công ty Cổ phần Phân đạm và Hóa chất Hà Bắc,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
CMK,Công ty Cổ phần Cơ khí Mạo Khê - Vinacomin,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
ATG,Công ty Cổ phần An Trường An,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
DAS,Công ty Cổ phần Máy - Thiết bị Dầu khí Đà Nẵng,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
YEG,Công ty Cổ phần Tập đoàn Yeah1,Truyền thông,Truyền thông,Giải trí & Truyền thông,CT,5000,5500,5550,5553
DRI,Công ty Cổ phần Đầu tư Cao su Đắk Lắk,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
DC4,Công ty Cổ phần Xây dựng DIC Holdings,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DDV,Công ty Cổ phần DAP - Vinachem,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
DFF,Công ty Cổ phần Tập đoàn Đua Fat,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DGC,Công ty Cổ phần Tập đoàn Hóa chất Đức Giang,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
BWE,Công ty Cổ phần - Tổng công ty Nước - Môi trường Bình Dương,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
DGT,Công ty Cổ phần Công trình Giao thông Đồng Nai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DHG,Công ty Cổ phần Dược Hậu Giang,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
BGW,Công ty Cổ phần Nước sạch Bắc Giang,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
DLG,Công ty Cổ phần Tập đoàn Đức Long Gia Lai,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
BID,Ngân hàng Thương mại Cổ phần Đầu tư và Phát triển Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
DUS,Công ty Cổ phần Dịch vụ Đô thị Đà Lạt,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
ACV,Tổng Công ty Cảng Hàng không Việt Nam - CTCP,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
AGX,Công ty Cổ phần Thực phẩm Nông sản Xuất khẩu Sài Gòn,Phân phối thực phẩm & dược phẩm,Bán lẻ,Phân phối thực phẩm,CT,5000,5300,5330,5337
DNW,Công ty Cổ phần Cấp nước Đồng Nai,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
DC1,Công ty Cổ phần Đầu tư Phát triển Xây dựng số 1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DPM,Tổng Công ty Phân bón và Hóa chất Dầu khí - Công ty Cổ phần,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
BMD,Công ty Cổ phần Môi trường và Dịch vụ Đô thị Bình Thuận,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
DPR,Công ty Cổ phần Cao su Đồng Phú,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
GCF,Công ty Cổ phần Thực phẩm G.C,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
BMS,Công ty Cổ phần Chứng khoán Bảo Minh,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
DTI,Công ty Cổ phần Đầu tư Đức Trung,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
DVG,Công ty Cổ phần Đại Việt Group DVG,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
DVW,Công ty Cổ phần Dịch vụ và Xây dựng cấp nước Đồng Nai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DLD,Công ty Cổ phần Du lịch Đắk Lắk,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
CX8,Công ty Cổ phần Đầu tư và Xây lắp Constrexim số 8,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
ATS,Công ty Cổ phần Tập đoàn Đầu tư ATS,Du lịch & Giải trí,Du lịch và Giải trí,Nhà hàng và quán bar,CT,5000,5700,5750,5757
DAD,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Đà Nẵng,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
DXL,Công ty Cổ phần Du lịch và Xuất nhập khẩu Lạng Sơn,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
AMV,Công ty Cổ phần Sản xuất Kinh doanh Dược và Trang thiết bị Y tế Việt Mỹ,Thiết bị và Dịch vụ Y tế,Y tế,Thiết bị y tế,CT,4000,4500,4530,4535
ADC,Công ty Cổ phần Mĩ thuật và Truyền thông,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
ECO,Công ty Cổ Phần Nhựa Sinh Thái Việt Nam,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
DNN,Công ty Cổ phần Cấp nước Đà Nẵng,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
BIO,Công ty Cổ phần Vắc xin và Sinh phẩm Nha Trang,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
DXV,Công ty Cổ phần VICEM Vật liệu Xây dựng Đà Nẵng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
EPC,Công ty Cổ phần Cà Phê Ea Pốk,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
DSN,Công ty Cổ phần Công viên nước Đầm Sen,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
ANT,Công ty Cổ phần Rau quả Thực phẩm An Giang,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
DAH,Công ty Cổ phần Tập đoàn Khách sạn Đông Á,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
MTV,Công ty Cổ phần Dịch vụ Môi trường và Công trình Đô thị Vũng Tàu,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
DSC,Công ty Cổ phần Chứng khoán DSC,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
DRG,Công ty Cổ phần Cao su Đắk Lắk,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
ANV,Công ty Cổ phần Nam Việt,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
ELC,Công ty Cổ phần Công nghệ - Viễn thông ELCOM,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
APC,Công ty Cổ phần Chiếu xạ An Phú,Dược phẩm,Y tế,Công nghệ sinh học,CT,4000,4500,4570,4573
EBS,Công ty Cổ phần Sách Giáo dục tại Thành phố Hà Nội,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
UDL,Công ty Cổ phần Đô thị và Môi trường Đắk Lắk,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
DNM,Tổng Công ty Cổ phần Y tế Danameco,Thiết bị và Dịch vụ Y tế,Y tế,Dụng cụ y tế,CT,4000,4500,4530,4537
EID,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Hà Nội,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
CSV,Công ty Cổ phần Hóa chất Cơ bản miền Nam,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
EVE,Công ty Cổ phần Everpia,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
APF,Công ty Cổ phần Nông sản Thực phẩm Quảng Ngãi,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
APG,Công ty Cổ phần Chứng khoán APG,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
EVG,Công ty Cổ phần Tập đoàn Everland,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
EIC,Công ty Cổ phần EVN Quốc Tế,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CFV,Công ty Cổ phần Cà phê Thắng Lợi,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
LEC,Công ty Cổ phần Bất động sản Điện lực Miền Trung,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DSE,Công ty Cổ phần Chứng khoán DNSE,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
BAF,Công ty Cổ phần Nông nghiệp BAF Việt Nam,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
ADP,Công ty Cổ phần Sơn Á Đông,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
BCV,Công ty Cổ phần Du lịch và Thương mại Bằng Giang Cao Bằng - Vimico,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
APH,Công ty Cổ phần Tập đoàn An Phát Holdings,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
AFX,Công ty Cổ phần Xuất Nhập khẩu Nông sản Thực phẩm An Giang,Phân phối thực phẩm & dược phẩm,Bán lẻ,Phân phối thực phẩm,CT,5000,5300,5330,5337
ICT,Công ty Cổ phần Viễn thông - Tin học Bưu điện,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
CTW,Công ty Cổ phần Cấp thoát nước Cần Thơ,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
DCR,Công ty Cổ phần Gạch men COSEVCO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
API,Công ty Cổ phần Đầu tư Châu Á - Thái Bình Dương,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CLL,Công ty Cổ phần Cảng Cát Lái,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
BBS,Công ty Cổ phần VICEM Bao bì Bút Sơn,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
APL,Công ty Cổ phần Cơ khí và Thiết bị áp lực - VVMI,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
BBT,Công ty Cổ phần Bông Bạch Tuyết,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
HLO,Công Ty Cổ Phần Công Nghệ Ha Lô,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
VMK,Công ty Cổ phần Vimarko,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
DOP,Công ty Cổ phần Vận tải Xăng dầu Đồng Tháp,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
DCG,Công ty Cổ phần Tổng Công ty May Đáp Cầu,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
ROS,Công ty Cổ phần Xây dựng FLC FAROS,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BMF,Công ty Cổ phần Vật liệu Xây dựng và Chất đốt Đồng Nai,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
CSM,Công ty Cổ phần Công nghiệp Cao su Miền Nam,Ô tô và phụ tùng,Ô tô và phụ tùng,Lốp xe,CT,3000,3300,3350,3357
FBA,Công ty Cổ phần Tập đoàn Quốc tế FBA,Hàng gia dụng,Hàng cá nhân & Gia dụng,Thiết bị gia dụng,CT,3000,3700,3720,3726
BCB,Công ty Cổ phần 397,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
FCN,Công ty Cổ phần FECON,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
FDC,Công ty Cổ phần Ngoại thương và Phát triển Đầu tư Thành phố Hồ Chí Minh,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DPP,Công ty Cổ phần Dược Đồng Nai,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
C12,Công ty Cổ phần Cầu 12,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DHA,Công ty Cổ phần Hóa An,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
DCM,Công ty Cổ phần Phân bón Dầu Khí Cà Mau,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
CBI,Công ty Cổ phần Gang thép Cao Bằng,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
DDN,Công ty Cổ phần Dược - Thiết bị y tế Đà Nẵng,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
FSO,Công ty Cổ phần Cơ khí đóng tàu thủy sản Việt Nam,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Xe tải & Đóng tàu,CT,2000,2700,2750,2753
C22,Công ty Cổ phần 22,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
FIT,Công ty Cổ phần Tập đoàn F.I.T,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
C32,Công ty Cổ phần CIC39,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
D11,Công ty Cổ phần Địa ốc 11,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
FMC,Công ty Cổ phần Thực phẩm Sao Ta,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
C47,Công ty Cổ phần Xây dựng 47,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CKD,Công ty Cổ phần Cơ khí Đông Anh Licogi,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
FOC,Công ty Cổ phần Dịch vụ Trực tuyến FPT,Truyền thông,Truyền thông,Dịch vụ truyền thông,CT,5000,5500,5550,5555
FBC,Công ty Cổ phần Cơ khí Phổ Yên,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
CTC,Công ty Cổ phần Tập đoàn Hoàng Kim Tây Nguyên,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
VTZ,Công ty Cổ phần Sản xuất và Thương mại Nhựa Việt Thành,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
BCA,Công ty cổ phần B.C.H,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
FHS,Công ty Cổ phần Phát hành sách Thành phố Hồ Chí Minh - FAHASA,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
DP3,Công ty Cổ Phần Dược Phẩm Trung Ương 3,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
DCF,Công ty Cổ phần Xây dựng và Thiết kế số 1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
FCS,Công ty Cổ phần Lương thực Thành phố Hồ Chí Minh,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
BHI,Tổng Công ty Cổ phần Bảo hiểm Sài Gòn - Hà Nội,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
BSI,Công ty Cổ phần Chứng khoán BIDV,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
FTM,Công ty Cổ phần Đầu tư và Phát triển Đức Quân,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
FPT,Công ty Cổ phần FPT,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
DAE,Công ty Cổ phần Sách Giáo dục tại Thành phố Đà Nẵng,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
DDB,Công ty Cổ Phần Thương Mại Và Xây Dựng Đông Dương,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
FOX,Công ty Cổ phần Viễn thông FPT,Viễn thông cố định,Viễn thông,Viễn thông cố định,CT,6000,6500,6530,6535
BMI,Tổng Công ty Cổ phần Bảo Minh,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
DVP,Công ty Cổ phần Đầu tư và Phát triển Cảng Đình Vũ,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
FTI,Công ty Cổ phần Công nghiệp - Thương mại Hữu Nghị,Ô tô và phụ tùng,Ô tô và phụ tùng,Phụ tùng ô tô,CT,3000,3300,3350,3355
BMG,Công ty Cổ phần May Bình Minh,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
CTP,Công ty Cổ phần Hoà Bình Takara,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
CLC,Công ty Cổ phần Cát Lợi,Thuốc lá,Hàng cá nhân & Gia dụng,Thuốc lá,CT,3000,3700,3780,3785
DSG,Công ty Cổ phần Kính Đáp Cầu,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
GAB,Công ty Cổ phần Đầu tư Khai khoáng & Quản lý Tài sản FLC,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TSA,Công ty Cổ Phần Đầu Tư Và Xây Lắp Trường Sơn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BCC,Công ty Cổ phần Xi măng Bỉm Sơn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
BMJ,Công ty Cổ phần Khoáng sản Miền Đông AHP,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
CTS,Công ty Cổ phần Chứng khoán Ngân hàng Công thương Việt Nam,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
G20,Công ty Cổ phần Đầu tư Dệt may Vĩnh Phúc,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
BTT,Công ty Cổ phần Thương mại - Dịch vụ Bến Thành,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
CTT,Công ty Cổ phần Chế tạo máy Vinacomin,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
BMP,Công ty Cổ phần Nhựa Bình Minh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
APP,Công ty Cổ phần Phát triển Phụ gia và Sản phẩm dầu mỏ,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
BVB,Ngân hàng Thương mại Cổ phần Bản Việt,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
GDT,Công ty Cổ phần Chế biến Gỗ Đức Thành,Hàng gia dụng,Hàng cá nhân & Gia dụng,Thiết bị gia dụng,CT,3000,3700,3720,3726
GDW,Công ty Cổ phần Cấp nước Gia Định,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
THM,Công ty Cổ phần Tứ Hải Hà Nam,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
HII,Công ty Cổ phần An Tiến Industries,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
GGG,Công ty Cổ phần Ô tô Giải Phóng,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
MBN,Công ty Cổ phần Môi trường và Công trình đô thị Bắc Ninh,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
CCT,Công ty Cổ phần Cảng Cần Thơ,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
CVT,Công ty Cổ phần CMC,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
BCE,Công ty Cổ phần Xây dựng và Giao thông Bình Dương,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BCG,Công ty Cổ phần Tập đoàn Bamboo Capital,Dịch vụ tài chính,Dịch vụ tài chính,Tài chính đặc biệt,CT,8000,8700,8770,8775
HFB,Công ty Cổ phần Công trình Cầu phà Thành phố Hồ Chí Minh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BTV,Công ty Cổ phần Dịch vụ Du lịch Bến Thành,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
GHC,Công ty Cổ phần Thủy điện Gia Lai,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
DNL,Công ty Cổ phần Logistics Cảng Đà Nẵng,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
GMH,Công ty Cổ phần Minh Hưng Quảng Trị,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
ARM,Công ty Cổ phần Xuất nhập khẩu Hàng không,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Nhà cung cấp thiết bị,CT,2000,2700,2790,2797
EMS,Tổng Công ty Chuyển phát nhanh Bưu điện - Công ty Cổ phần,Vận tải,Hàng & Dịch vụ Công nghiệp,Chuyển phát nhanh,CT,2000,2700,2770,2771
BVG,Công ty Cổ phần Group Bắc Việt,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
DID,Công ty Cổ phần DIC - Đồng Tiến,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TTE,Công ty Cổ phần Đầu tư Năng lượng Trường Thịnh,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
BOT,Công ty Cổ phần BOT Cầu Thái Hà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
GMC,Công ty Cổ phần Garmex Sài Gòn,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
GLC,Công ty Cổ phần Vàng Lào Cai,Khai khoáng,Tài nguyên Cơ bản,Khai thác vàng,CT,1000,1700,1770,1777
BGE,Công ty Cổ phần BCG Energy,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
ASA,Công ty Cổ phần ASA,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
BCR,Công ty Cổ phần BCG Land,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DND,Công ty Cổ phần Đầu tư Xây dựng và Vật liệu Đồng Nai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CMI,Công ty Cổ phần CMISTONE Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
GMA,Công ty Cổ phần G-Automobile,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
BWA,Công ty Cổ phần Cấp thoát nước và Xây dựng Bảo Lộc,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
GSM,Công ty Cổ phần Thủy điện Hương Sơn,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
CKA,Công ty Cổ phần Cơ khí An Giang,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
HTE,Công ty Cổ phần Đầu tư Kinh doanh Điện lực Thành phố Hồ Chí Minh,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
HIO,Công ty Cổ Phần Helio Energy,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
HSV,Công ty Cổ phần Tập đoàn HSV Việt Nam,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
BXH,Công ty Cổ phần VICEM Bao bì Hải Phòng,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
DM7,Công ty Cổ phần Dệt may 7,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
HC3,Công ty Cổ phần Xây dựng số 3 Hải Phòng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
GTA,Công ty Cổ phần Chế biến Gỗ Thuận An,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
CNG,Công ty Cổ phần CNG Việt Nam,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
DDH,Công ty Cổ phần Đảm bảo giao thông đường thủy Hải Phòng,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
BCP,Công ty Cổ phần Dược Enlie,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
XDH,Công ty Cổ phần Đầu tư Xây dựng Dân dụng Hà Nội,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DRL,Công ty Cổ phần Thủy điện - Điện lực 3,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
BPC,Công ty Cổ phần Vicem Bao bì Bỉm Sơn,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
CMM,Công ty Cổ phần Camimex,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HAH,Công ty Cổ phần Vận tải và Xếp dỡ Hải An,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
AGP,Công ty Cổ phần Dược phẩm AGIMEXPHARM,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
HAI,Công ty Cổ phần Nông dược HAI,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
FRC,Công ty Cổ phần Lâm đặc sản xuất khẩu Quảng Nam,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
DNT,Công ty Cổ phần Du lịch Đồng Nai,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
HLB,Công ty Cổ phần Bia và Nước giải khát Hạ Long,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
DBT,Công ty Cổ phần Dược phẩm Bến Tre,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
CNA,Công ty Cổ phần Tổng công ty Chè Nghệ An,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
BRS,Công ty Cổ phần Dịch vụ Đô thị Bà Rịa,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
HLT,Công ty Cổ phần Dệt may Hoàng Thị Loan,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
AAS,Công ty Cổ phần Chứng khoán SmartInvest,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
HHV,Công ty Cổ phần Đầu tư Hạ tầng Giao thông Đèo Cả,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
C69,Công ty Cổ phần Xây dựng 1369,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BBM,Công ty Cổ phần Bia Hà Nội - Nam Định,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
C21,Công ty Cổ phần Thế kỷ 21,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
H11,Công ty Cổ phần Xây dựng HUD101,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DMS,Công ty Cổ phần Hóa phẩm dầu khí DMC - Miền Nam,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
D2D,Công ty Cổ phần Phát triển Đô thị Công nghiệp số 2,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DC2,Công ty Cổ phần Đầu tư Phát triển - Xây dựng (DIC) số 2,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DNC,Công ty Cổ phần Điện nước Lắp máy Hải Phòng,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
AGM,Công ty Cổ phần Xuất nhập khẩu An Giang,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HAN,Tổng Công ty Xây dựng Hà Nội - CTCP,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MVC,Công ty Cổ phần Vật liệu và Xây dựng Bình Dương,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
AVG,Công ty Cổ phần Phân Bón Quốc Tế Âu Việt,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
BFC,Công ty Cổ phần Phân bón Bình Điền,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
BDG,Công ty Cổ phần May mặc Bình Dương,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
CIG,Công ty Cổ phần COMA 18,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DNH,Công ty Cổ phần Thủy điện Đa Nhim - Hàm Thuận - Đa Mi,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
LTG,Công ty Cổ phần Tập đoàn Lộc Trời,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
DAC,Công ty Cổ phần 382 Đông Anh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
HSM,Tổng Công ty Cổ phần Dệt May Hà Nội,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
TT6,Công ty Cổ Phần Tập Đoàn Tiến Thịnh,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
CII,Công ty Cổ phần Đầu tư Hạ tầng Kỹ thuật Thành phố Hồ Chí Minh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BSP,Công ty Cổ phần Bia Sài Gòn - Phú Thọ,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
FGL,Công ty Cổ phần Cà phê Gia Lai,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
AAM,Công ty Cổ Phần Thủy Sản MeKong,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HAT,Công ty Cổ phần Thương mại Bia Hà Nội,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
CK8,Công ty Cổ phần Cơ khí 120,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HAR,Công ty Cổ phần Đầu tư Thương mại Bất động sản An Dương Thảo Điền,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
BED,Công ty Cổ phần Sách và Thiết bị trường học Đà Nẵng,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
ASG,Công ty Cổ phần Tập đoàn ASG,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
BTG,Công ty Cổ phần Bao bì Tiền Giang,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
BTH,Công ty Cổ phần Chế tạo Biến thế và Vật liệu Điện Hà Nội,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
BTN,Công ty Cổ phần Đầu tư Bitco Bình Định,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
DAG,Công ty Cổ phần Tập đoàn Nhựa Đông Á,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
HAV,Công ty Cổ phần Rượu Hapro,Bia và đồ uống,Thực phẩm và đồ uống,Vang & Rượu mạnh,CT,3000,3500,3530,3535
LMI,Công ty Cổ phần Đầu tư Xây dựng Lắp máy IDICO,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
HBC,Công ty Cổ phần Tập đoàn Xây dựng Hòa Bình,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CTA,Công ty Cổ phần Vinavico,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
AG1,Công ty Cổ phần 28.1,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
HAX,Công ty Cổ phần Dịch vụ Ô tô Hàng Xanh,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
AAT,Công ty Cổ phần Tập đoàn Tiên Sơn Thanh Hóa,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
C92,Công ty Cổ phần Xây dựng và Đầu tư 492,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HCC,Công ty Cổ phần Bê tông Hòa Cầm - Intimex,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
BTP,Công ty Cổ phần Nhiệt điện Bà Rịa,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
ODE,Công ty cổ phần Tập đoàn Truyền thông và Giải trí ODE,Truyền thông,Truyền thông,Giải trí & Truyền thông,CT,5000,5500,5550,5553
CTB,Công ty Cổ phần Chế tạo Bơm Hải Dương,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
HCD,Công ty Cổ phần Đầu tư Sản xuất và Thương mại HCD,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
BEL,Công ty Cổ phần Điện tử Biên Hòa,Hàng hóa giải trí,Hàng cá nhân & Gia dụng,Điện tử tiêu dùng,CT,3000,3700,3740,3743
HCI,Công ty Cổ phần Đầu tư - Xây dựng Hà Nội,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
AAV,Công ty Cổ phần AAV Group,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
ABB,Ngân hàng Thương mại Cổ phần An Bình,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
HDO,Công ty Cổ phần Hưng Đạo Container,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
DRC,Công ty Cổ phần Cao su Đà Nẵng,Ô tô và phụ tùng,Ô tô và phụ tùng,Lốp xe,CT,3000,3300,3350,3357
HMR,Công ty cổ phần Đá Hoàng Mai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
KWA,Công ty Cổ phần Cấp thoát nước và Môi trường Kiến Tường,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
CAN,Công ty Cổ phần Đồ hộp Hạ Long,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HAS,Công ty Cổ phần Hacisco,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DHD,Công ty Cổ phần Dược Vật Tư Y Tế Hải Dương,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
ADG,Công ty Cổ phần Clever Group,Truyền thông,Truyền thông,Dịch vụ truyền thông,CT,5000,5500,5550,5555
CAP,Công ty Cổ phần Lâm Nông sản Thực phẩm Yên Bái,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
PCH,Công ty Cổ phần Nhựa Picomat,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
HEC,Công ty Cổ phần Tư vấn xây dựng Thủy Lợi II,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
HEJ,Tổng Công ty Tư vấn Xây dựng Thủy Lợi Việt Nam - CTCP,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HEP,Công ty Cổ phần Môi trường và Công trình đô thị Huế,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
ASM,Công ty Cổ phần Tập đoàn Sao Mai,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HFX,Công ty Cổ phần Sản xuất - Xuất nhập khẩu Thanh Hà,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
CLG,Công ty Cổ phần Đầu tư và Phát triển Nhà đất Cotec,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DLR,Công ty Cổ phần Địa ốc Đà Lạt,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HCT,Công ty Cổ phần Thương mại - Dịch vụ - Vận tải Xi măng Hải Phòng,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
NBT,Công ty Cổ phần Cấp thoát nước Bến Tre,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
MDG,Công ty Cổ phần Miền Đông,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
DSD,Công ty cổ phần DHC Suối Đôi,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
CMF,Công ty Cổ phần Thực phẩm Cholimex,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
ASP,Công ty Cổ phần Tập đoàn Dầu khí An Pha,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
EME,Công ty Cổ phần Điện Cơ,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
GLW,Công ty Cổ phần Cấp thoát nước Gia Lai,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
DMC,Công ty Cổ phần Xuất nhập khẩu Y tế DOMESCO,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
CDR,Công ty Cổ phần Xây dựng Cao su Đồng Nai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
ABI,Công ty Cổ phần Bảo hiểm Ngân hàng Nông Nghiệp,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
HBS,Công ty Cổ phần Chứng khoán Hòa Bình,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
AAH,Công ty Cổ phần Hợp Nhất,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
HDW,Công ty Cổ phần Kinh doanh Nước sạch Hải Dương,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
CCA,Công ty Cổ phần Xuất nhập khẩu Thủy sản Cần Thơ,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HGT,Công ty Cổ phần Du lịch Hương Giang,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
DTT,Công ty Cổ phần Kỹ nghệ Đô Thành,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
CTG,Ngân hàng Thương mại Cổ phần Công thương Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
ATA,Công ty Cổ phần NTACO,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
CLW,Công ty Cổ phần Cấp nước Chợ Lớn,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
MGG,Tổng Công ty Đức Giang - Công ty Cổ phần,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
BHA,Công ty Cổ phần Thủy điện Bắc Hà,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
DWS,Công ty Cổ phần Cấp nước và Môi trường Đô thị Đồng Tháp,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
CMC,Công ty Cổ phần Đầu tư CMC,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
CST,Công ty Cổ phần Than Cao Sơn - TKV,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
DPC,Công ty Cổ phần Nhựa Đà Nẵng,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
MGR,Công ty cổ phần Tập đoàn MGROUP,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
GTS,Công ty Cổ phần Công trình Giao thông Sài Gòn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BHK,Công ty Cổ phần Bia Hà Nội - Kim Bài,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
TIN,Công ty Tài chính Cổ phần Tín Việt,Dịch vụ tài chính,Dịch vụ tài chính,Quản lý tài sản,NH,8000,8700,8770,8771
DKW,Công ty Cổ phần Cấp nước sinh hoạt Châu Thành,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
VVS,Công ty Cổ phần Đầu tư Phát triển Máy Việt Nam,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
BHN,Tổng Công ty Cổ phần Bia - Rượu - Nước giải khát Hà Nội,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
DWC,Công ty Cổ phần Cấp nước Đắk Lắk,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
BTU,Công ty Cổ phần Công trình Đô thị Bến Tre,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
CMG,Công ty Cổ phần Tập đoàn Công nghệ CMC,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Dịch vụ Máy tính,CT,9000,9500,9530,9533
DPS,Công ty Cổ phần Đầu tư Phát triển Sóc Sơn,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
BTW,Công ty Cổ phần Cấp nước Bến Thành,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
HBD,Công ty Cổ phần Bao bì PP Bình Dương,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
BHP,Công ty Cổ phần Bia Hà Nội - Hải Phòng,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
HLD,Công ty Cổ phần Đầu tư và Phát triển Bất động sản HUDLAND,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CMW,Công ty Cổ phần Cấp nước Cà Mau,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
ABS,Công ty Cổ phần Dịch vụ Nông nghiệp Bình Thuận,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
CCC,Công ty Cổ Phần Xây Dựng CDC,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HJS,Công ty Cổ phần Thủy điện Nậm Mu,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
HLS,Công ty Cổ phần Sứ kỹ thuật Hoàng Liên Sơn,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
ABW,Công ty Cổ phần Chứng khoán An Bình,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
ADS,Công ty Cổ phần DAMSAN,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
DAN,Công ty Cổ phần Dược Danapha,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
MKP,Công ty Cổ phần Hóa - Dược phẩm Mekophar,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
DNE,Công ty Cổ phần Môi trường Đô thị Đà Nẵng,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
DQC,Công ty Cổ phần Tập đoàn Điện Quang,Hàng gia dụng,Hàng cá nhân & Gia dụng,Thiết bị gia dụng,CT,3000,3700,3720,3726
CMP,Công ty Cổ phần Cảng Chân Mây,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
KCB,Công ty Cổ phần Khoáng Sản và Luyện Kim Cao Bằng,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
CMS,Công ty Cổ phần Tập đoàn CMH Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CTI,Công ty Cổ phần Đầu tư Phát triển Cường Thuận IDICO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CBS,Công ty Cổ phần Mía đường Cao Bằng,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HMC,Công ty Cổ phần Kim khí Thành phố Hồ Chí Minh - VNSTEEL,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
DRH,Công ty Cổ phần DRH Holdings,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HPI,Công ty Cổ phần Khu công nghiệp Hiệp Phước,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
ABT,Công ty Cổ phần Xuất nhập khẩu Thủy sản Bến Tre,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
CCI,Công ty Cổ phần Đầu tư Phát triển Công nghiệp Thương mại Củ Chi,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
FIC,Tổng Công ty Vật liệu Xây dựng số 1 - Công ty Cổ phần,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
FIR,Công ty Cổ phần Địa ốc First Real,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
EVF,Công ty Tài chính Cổ phần Điện Lực,Dịch vụ tài chính,Dịch vụ tài chính,Tài chính cá nhân,NH,8000,8700,8770,8773
PPT,Công ty cổ phần Petro Times,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
BIC,Tổng Công ty Cổ phần Bảo hiểm Ngân hàng Đầu tư và Phát triển Việt Nam,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
BCM,Tổng Công ty Đầu tư và Phát triển Công nghiệp - CTCP,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HAF,Công ty Cổ phần Thực phẩm Hà Nội,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
DNP,Công ty Cổ phần DNP Holding,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CCP,Công ty Cổ phần Cảng Cửa Cấm Hải Phòng,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
BLT,Công ty Cổ phần Lương thực Bình Định,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
DBD,Công ty Cổ phần Dược - Trang thiết bị y tế Bình Định (BIDIPHAR),Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
HLC,Công ty Cổ phần Than Hà Lầm - Vinacomin,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
HPG,Công ty Cổ phần Tập đoàn Hòa Phát,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
FT1,Công ty Cổ phần Phụ tùng máy số 1,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
HQC,Công ty Cổ phần Tư vấn - Thương mại - Dịch vụ Địa ốc Hoàng Quân,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CDN,Công ty Cổ phần Cảng Đà Nẵng,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
HLY,Công ty Cổ phần Gốm xây dựng Yên Hưng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
HTC,Công ty Cổ phần Thương mại Hóc Môn,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
BHG,Công ty Cổ phần Chè Biển Hồ,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
HMS,Công ty Cổ phần Xây dựng Bảo tàng Hồ Chí Minh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HMH,Công ty Cổ phần Hải Minh,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
GEX,Công ty Cổ phần Tập đoàn Gelex,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
DCH,Công ty Cổ phần Địa chính Hà Nội,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
HNA,Công ty Cổ phần Thủy điện Hủa Na,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
DHN,Công ty Cổ phần Dược phẩm Hà Nội,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
BLN,Công ty Cổ phần Vận tải và Dịch vụ Liên Ninh,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
CTN,Công ty Cổ phần Xây dựng Công trình ngầm,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HPB,Công ty Cổ phần Bao bì PP,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
HU1,Công ty Cổ phần Đầu tư và Xây dựng HUD1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CCL,Công ty Cổ phần Đầu tư và Phát triển Đô thị Dầu khí Cửu Long,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DIC,Công ty Cổ phần Đầu tư và Thương mại DIC,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CCM,Công ty Cổ phần Khoáng sản và Xi măng Cần Thơ,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CMT,Công ty Cổ phần Công nghệ mạng và Truyền thông,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
HVA,Công ty Cổ phần Đầu tư HVA,Dịch vụ tài chính,Dịch vụ tài chính,Tài chính đặc biệt,CT,8000,8700,8770,8775
IBC,Công ty Cổ phần Đầu tư APAX Holdings,Dịch vụ tài chính,Dịch vụ tài chính,Tài chính đặc biệt,CT,8000,8700,8770,8775
BVL,Công ty Cổ phần BV Land,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
TUG,Công ty Cổ phần Lai dắt và Vận tải Cảng Hải Phòng,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
CMV,Công ty Cổ phần Thương nghiệp Cà Mau,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
CMX,Công ty Cổ phần CAMIMEX Group,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
ICI,Công ty Cổ phần Đầu tư và Xây dựng Công nghiệp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DXG,Công ty Cổ phần Tập đoàn Đất Xanh,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HHP,Công ty Cổ phần HHP Global,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
BII,Công ty Cổ phần Đầu tư và Phát triển Công nghiệp Bảo Thư,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HRC,Công ty Cổ phần Cao su Hòa Bình,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
FLC,Công ty Cổ phần Tập đoàn FLC,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HJC,Công ty Cổ phần Hoà Việt,Thuốc lá,Hàng cá nhân & Gia dụng,Thuốc lá,CT,3000,3700,3780,3785
HSP,Công ty Cổ phần Sơn Tổng hợp Hà Nội,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
ART,Công ty Cổ phần Chứng khoán BOS,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
MNB,Tổng Công ty May Nhà Bè - Công ty Cổ phần,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
TAB,Công ty Cổ phần Freco Việt Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
TCH,Công ty Cổ phần Đầu tư Dịch vụ Tài chính Hoàng Huy,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CCR,Công ty Cổ phần Cảng Cam Ranh,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
ALT,Công ty Cổ phần Văn hóa Tân Bình,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
HT1,Công ty Cổ phần Xi măng VICEM Hà Tiên,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
IDI,Công ty Cổ phần Đầu tư và Phát triển Đa Quốc Gia I.D.I,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SGI,Công ty Cổ phần Đầu tư phát triển Sài Gòn 3 Group,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
ALV,Công ty Cổ phần Xây dựng ALVICO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CTR,Tổng Công ty Cổ phần Công trình Viettel,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BVH,Tập đoàn Bảo Việt,Bảo hiểm nhân thọ,Bảo hiểm,Bảo hiểm nhân thọ,BH,8000,8500,8570,8575
HAC,Công ty Cổ phần Chứng khoán Hải Phòng,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
IDP,Công ty Cổ phần Sữa Quốc tế LOF,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HU6,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị HUD6,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
BDT,Công ty Cổ phần Xây lắp và Vật liệu xây dựng Đồng Tháp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
GTT,Công ty Cổ phần Thuận Thảo,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
CAR,Công ty cổ phần Tập đoàn Giáo dục Trí Việt,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Đào tạo & Việc làm,CT,2000,2700,2790,2793
BVN,Công ty Cổ phần Bông Việt Nam,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
HTN,Công ty Cổ phần Hưng Thịnh Incons,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HNI,Công ty Cổ phần May Hữu Nghị,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
HPM,Công ty Cổ phần Xây dựng Thương mại và Khoáng sản Hoàng Phúc,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
DTC,Công ty Cổ phần Viglacera Đông Triều,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
DXS,Công ty Cổ phần Dịch vụ Bất động sản Đất Xanh,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
TOS,Công ty Cổ phần Dịch vụ biển Tân Cảng,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
DTE,Công ty Cổ phần Đầu tư Năng lượng Đại Trường Thành Holdings,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
IJC,Công ty Cổ phần Phát triển Hạ tầng Kỹ thuật,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
ILA,Công ty Cổ phần ILA,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
DPH,Công ty Cổ phần Dược phẩm Hải Phòng,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
DZM,Công ty Cổ phần Cơ điện Dzĩ An,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
DIG,Tổng Công ty Cổ phần Đầu tư Phát triển Xây dựng,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CC1,Tổng Công ty Xây dựng số 1 - CTCP,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PHN,Công ty Cổ phần Pin Hà Nội,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
CC4,Công ty Cổ phần Đầu tư và Xây dựng số 4,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HKT,Công ty Cổ phần Đầu tư QP Xanh,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
HSL,Công ty Cổ phần Đầu tư Phát triển Thực phẩm Hồng Hà,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
IME,Công ty Cổ phần Cơ khí và Xây lắp Công nghiệp,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
DIH,Công ty Cổ phần Đầu tư Phát triển Xây dựng - Hội An,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TNH,Công ty Cổ phần Tập đoàn Bệnh viện TNH,Thiết bị và Dịch vụ Y tế,Y tế,Chăm sóc y tế,CT,4000,4500,4530,4533
AVF,Công ty Cổ phần Việt An,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
TTS,Công ty Cổ phần Cán thép Thái Trung,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
IDJ,Công ty Cổ phần Đầu tư IDJ Việt Nam,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HCB,Công ty Cổ phần Dệt may 29/3,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
AVC,Công ty Cổ phần Thủy điện A Vương,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
CDH,Công ty Cổ phần Công trình Công cộng và Dịch vụ Du lịch Hải Phòng,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
SSH,Công ty Cổ phần Phát triển Sunshine Homes,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
BVS,Công ty Cổ phần Chứng khoán Bảo Việt,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
DPG,Công ty Cổ phần Tập đoàn Đạt Phương,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SBG,Công ty Cổ Phần Tập Đoàn Cơ Khí Công Nghệ Cao Siba,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Công nghiệp phức hợp,CT,2000,2700,2720,2727
PHP,Công ty Cổ phần Cảng Hải Phòng,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
ING,Công ty Cổ phần Đầu Tư Và Phát Triển Xây Dựng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CDG,Công ty Cổ phần Cầu Đuống,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CDO,Công ty Cổ phần Tư vấn Thiết kế và Phát triển Đô thị,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
IBD,Công ty Cổ phần In Tổng hợp Bình Dương,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
HTL,Công ty Cổ phần Kỹ thuật và Ô tô Trường Long,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
CDP,Công ty Cổ phần Dược phẩm Trung ương Codupha,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
KAC,Công ty Cổ phần Đầu tư Địa ốc Khang An,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PAC,Công ty Cổ phần Pin Ắc quy Miền Nam,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
ICF,Công ty Cổ phần Đầu tư - Thương mại - Thuỷ sản,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
COM,Công ty Cổ phần Vật tư Xăng dầu,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
IN4,Công ty Cổ phần In số 4,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
AMC,Công ty Cổ phần Khoáng sản Á Châu,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
KCE,Công ty Cổ phần Bê tông Ly tâm Điện lực Khánh Hòa,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TCK,Tổng Công ty Cơ khí Xây dựng - CTCP,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
E29,Công ty cổ phần Đầu tư Xây dựng và Kỹ thuật 29,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
AMD,Công ty Cổ phần Đầu tư và Khoáng sản FLC Stone,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
BAL,Công ty Cổ phần Bao bì Bia - Rượu - Nước giải khát,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
CEN,Công ty Cổ phần CENCON Việt Nam,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
BKC,Công ty Cổ phần Khoáng sản Bắc Kạn,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
PCT,Công ty Cổ phần Vận tải Biển Global Pacific,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
GPC,Công ty Cổ phần Tập đoàn Green+,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
HHG,Công ty Cổ phần Hoàng Hà,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
BKG,Công ty Cổ phần Đầu tư BKG Việt Nam,Hàng gia dụng,Hàng cá nhân & Gia dụng,Thiết bị gia dụng,CT,3000,3700,3720,3726
AME,Công ty cổ phần Alphanam E&C,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
CMN,Công ty Cổ phần Lương thực Thực phẩm Colusa - Miliket,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
KDC,Công ty Cổ phần Tập đoàn KIDO,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
STK,Công ty Cổ phần Sợi Thế Kỷ,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
ICN,Công ty Cổ phần Đầu tư Xây dựng Dầu khí IDICO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BLI,Tổng Công ty Cổ phần Bảo hiểm Bảo Long,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
MH3,Công ty Cổ phần Khu công nghiệp Cao su Bình Long,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DBC,Công ty Cổ phần Tập đoàn Dabaco Việt Nam,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HPP,Công ty Cổ phần Sơn Hải Phòng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
GLT,Công ty Cổ phần Kỹ thuật điện Toàn Cầu,Hàng hóa giải trí,Hàng cá nhân & Gia dụng,Điện tử tiêu dùng,CT,3000,3700,3740,3743
KDH,Công ty Cổ phần Đầu tư và Kinh doanh nhà Khang Điền,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
AMP,Công ty Cổ phần Armephaco,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
HTM,Tổng Công ty Thương mại Hà Nội – Công ty cổ phần,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
CEO,Công ty Cổ phần Tập đoàn C.E.O,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DOC,Công ty Cổ phần Vật tư nông nghiệp Đồng Nai,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
DL1,Công ty Cổ phần Tập đoàn Alpha Seven,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
FRM,Công ty Cổ phần Lâm nghiệp Sài Gòn,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
ACC,Công ty Cổ phần Đầu tư và Xây dựng Bình Dương ACC,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
HHS,Công ty Cổ phần Đầu tư Dịch vụ Hoàng Huy,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
PNT,Công ty Cổ phần Kỹ thuật Xây dựng Phú Nhuận,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
EIB,Ngân hàng Thương mại Cổ phần Xuất nhập khẩu Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
KHG,Công ty Cổ phần Tập đoàn Khải Hoàn Land,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
GMX,Công ty Cổ phần Gạch ngói Gốm xây dựng Mỹ Xuân,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
ITD,Công ty Cổ phần Công nghệ Tiên Phong,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
INN,Công ty Cổ phần Bao bì và In Nông nghiệp,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
INC,Công ty Cổ phần Tư vấn Đầu tư IDICO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DDG,Công ty Cổ phần Đầu tư Công nghiệp Xuất nhập khẩu Đông Dương,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
RYG,Công ty Cổ phần Sản xuất và Đầu tư Hoàng Gia,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
POV,Công ty Cổ phần Xăng dầu Dầu khí Vũng Áng,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
DP1,Công ty Cổ phần Dược phẩm Trung ương CPC1,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
ACG,Công ty Cổ phần Gỗ An Cường,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
HPH,Công ty Cổ phần Hóa Chất Hưng Phát Hà Bắc,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
DTP,Công ty Cổ phần Dược phẩm CPC1 Hà Nội,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
CTX,Tổng Công ty Cổ phần Đầu tư Xây dựng và Thương mại Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HCM,Công ty Cổ phần Chứng khoán Thành phố Hồ Chí Minh,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
KHL,Công ty Cổ phần Khoáng sản và Vật liệu Xây dựng Hưng Long,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NCG,Công ty Cổ phần Tập đoàn Nova Consumer,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
TW3,Công ty Cổ phần Dược Trung Ương 3,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
KHP,Công ty Cổ phần Điện lực Khánh Hòa,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
BMC,Công ty Cổ phần Khoáng sản Bình Định,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
ILS,Công ty Cổ phần Đầu tư Thương mại và Dịch vụ Quốc tế,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
CFM,Công ty Cổ phần Đầu tư CFM,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Đào tạo & Việc làm,CT,2000,2700,2790,2793
CHC,Công ty Cổ phần Cẩm Hà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TDB,Công ty Cổ phần Thủy điện Định Bình,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
CLX,Công ty Cổ phần Xuất nhập khẩu và Đầu tư Chợ Lớn (CHOLIMEX),Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
ACE,Công ty Cổ phần Bê tông ly tâm An Giang,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CHP,Công ty Cổ phần Thủy điện Miền Trung,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TSJ,Công ty Cổ phần Du lịch Dịch vụ Hà Nội,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
HDC,Công ty Cổ phần Phát triển Nhà Bà Rịa Vũng Tàu,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HUT,Công ty Cổ phần Tasco,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
CI5,Công ty Cổ phần Đầu tư Xây dựng số 5,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
IST,Công ty Cổ phần ICD Tân Cảng Sóng Thần,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
HDG,Công ty Cổ phần Tập đoàn Hà Đô,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CID,Công ty Cổ phần Xây dựng và Phát triển Cơ sở Hạ tầng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BSD,"Công ty Cổ phần Bia, Rượu Sài Gòn - Đồng Xuân",Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
PSN,Công ty Cổ phần Dịch vụ Kỹ thuật PTSC Thanh Hóa,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
ITQ,Công ty Cổ phần Tập đoàn Thiên Quang,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
HTI,Công ty Cổ phần Đầu tư Phát triển Hạ tầng IDICO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BBC,Công ty Cổ phần Bibica,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HDM,Công ty Cổ phần Dệt May Huế,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VLB,Công ty Cổ phần Xây dựng và Sản xuất Vật liệu Xây dựng Biên Hòa,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CPH,Công ty Cổ phần Phục vụ Mai táng Hải Phòng,Bán lẻ,Bán lẻ,Dịch vụ tiêu dùng chuyên ngành,CT,5000,5300,5370,5377
CPI,Công ty Cổ phần Đầu tư Cảng Cái Lân,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
EMG,Công ty Cổ phần Thiết bị Phụ tùng Cơ điện,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
VDG,Công ty Cổ phần Vạn Đạt Group,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
C4G,Công ty Cổ phần Tập Đoàn Cienco4,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DMN,Công ty Cổ phần Domenal,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
IVS,Công ty Cổ phần Chứng khoán Guotai Junan (Việt Nam),Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
DBM,Công ty Cổ phần Dược - Vật tư Y tế Đắk Lắk,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
HMG,Công ty Cổ phần Kim Khí Hà Nội - VNSTEEL,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
BBH,Công ty Cổ phần Bao bì Hoàng Thạch,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
KGM,Công ty Cổ phần Xuất nhập khẩu Kiên Giang,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
CVN,Công ty Cổ phần Vinam,Thiết bị và Dịch vụ Y tế,Y tế,Thiết bị y tế,CT,4000,4500,4530,4535
DVC,Công ty Cổ phần Thương mại dịch vụ Tổng Hợp Cảng Hải Phòng,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
CT3,Công ty Cổ phần Đầu tư và Xây dựng công trình 3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HTV,Công ty Cổ phần Logistics Vicem,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
KLB,Ngân hàng Thương mại Cổ phần Kiên Long,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
KLF,Công ty Cổ phần Đầu tư Thương mại và Xuất nhập khẩu CFS,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
KMT,Công ty Cổ phần Kim khí Miền Trung,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
APS,Công ty Cổ phần Chứng khoán Châu Á - Thái Bình Dương,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
GAS,Tổng Công ty Khí Việt Nam - Công ty Cổ phần,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
KSB,Công ty Cổ phần Khoáng sản và Xây dựng Bình Dương,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
LMC,Công ty Cổ phần Long Beach LMC,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
JVC,Công ty Cổ phần Đầu tư và Phát triển Y tế Việt Nhật,Thiết bị và Dịch vụ Y tế,Y tế,Thiết bị y tế,CT,4000,4500,4530,4535
KSQ,Công ty Cổ phần CNC Capital Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
KST,Công ty Cổ phần KASATI,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
BHC,Công ty Cổ phần Bê tông Biên Hòa,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CNC,Công ty Cổ phần Công nghệ cao Traphaco,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
CRE,Công ty Cổ phần Bất động sản Thế Kỷ,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
BWS,Công ty Cổ phần Cấp Nước Bà Rịa - Vũng Tàu,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
IPA,Công ty Cổ phần Tập đoàn Đầu tư I.P.A,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
CH5,Công ty Cổ phần Xây dựng số 5 Hà Nội,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
KTL,Công ty Cổ phần Kim khí Thăng Long,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
BLF,Công ty Cổ phần Thủy sản Bạc Liêu,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HSA,Công ty Cổ phần HESTIA,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
KTS,Công ty Cổ phần Đường Kon Tum,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
GEG,Công ty Cổ phần Điện Gia Lai,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
GMD,Công ty Cổ phần Gemadept,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
HBH,Công ty Cổ phần HABECO - Hải Phòng,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
IFS,Công ty Cổ phần Thực phẩm Quốc tế,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
ICG,Công ty Cổ phần Xây dựng Sông Hồng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HD8,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị HUD8,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HVH,Công ty Cổ phần Đầu tư và Công nghệ HVC,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
L18,Công ty Cổ phần Đầu tư và Xây dựng số 18,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
L35,Công ty Cổ phần Cơ khí Lắp máy Lilama,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
KDM,Công ty Cổ phần Tập đoàn GCL,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HVT,Công ty Cổ phần Hóa chất Việt Trì,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
PGV,Tổng Công ty Phát điện 3 - Công ty Cổ phần,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
L43,Công ty Cổ phần Lilama 45.3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
KSD,Công ty Cổ phần Đầu tư DNA,Hàng gia dụng,Hàng cá nhân & Gia dụng,Đồ gia dụng lâu bền,CT,3000,3700,3720,3722
L44,Công ty Cổ phần Lilama 45.4,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
HAP,Công ty Cổ phần Tập Đoàn Hapaco,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
L62,Công ty Cổ phần Lilama 69 - 2,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
BT6,Công ty Cổ phần BETON 6,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
HTT,Công ty Cổ phần Thương mại Hà Tây,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
LAF,Công ty Cổ phần Chế biến Hàng Xuất khẩu Long An,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
CPC,Công ty Cổ phần Thuốc sát trùng Cần Thơ,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
DKC,Công ty Cổ phần Chợ Lạng Sơn,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
LSG,Công ty Cổ phần Bất động sản Sài Gòn Vi na,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SGP,Công ty Cổ phần Cảng Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
ECI,Công ty Cổ phần Tập đoàn ECI,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
KVC,Công ty Cổ phần Sản xuất Xuất nhập khẩu Inox Kim Vĩ,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
DHC,Công ty Cổ phần Đông Hải Bến Tre,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
DP2,Công ty Cổ phần Dược phẩm Trung ương 2,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
BSC,Công ty Cổ phần Dịch vụ Bến Thành,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
ISG,Công ty Cổ phần Vận tải biển và Hợp tác lao động Quốc Tế,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
LAS,Công ty Cổ phần Supe Phốt phát và Hóa chất Lâm Thao,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
LBE,Công ty Cổ phần Thương mại và Dịch vụ LVA,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
IHK,Công ty Cổ phần In Hàng Không,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
CNT,Công ty Cổ phần Tập đoàn CNT,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LCC,Công ty Cổ phần Xi măng Hồng Phong,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
LCD,Công ty Cổ phần Lắp máy - Thí nghiệm cơ điện,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LCG,Công ty Cổ phần Lizen,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LQN,Công ty Cổ phần Licogi Quảng Ngãi,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
LCS,Công ty Cổ phần Licogi 16.6,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NSS,Công ty Cổ phần Nông súc sản Đồng Nai,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
PSL,Công ty Cổ phần Chăn nuôi Phú Sơn,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HHC,Công ty Cổ phần Bánh kẹo Hải Hà,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
LCM,Công ty Cổ phần Khai thác và Chế biến Khoáng sản Lào Cai,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
LGM,Công ty Cổ phần Giày da và May mặc Xuất khẩu (Legamex),Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
LHG,Công ty Cổ phần Long Hậu,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
LIC,Tổng Công ty LICOGI - Công ty Cổ phần,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
L12,Công ty Cổ phần Licogi 12,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LIG,Công ty Cổ phần Licogi 13,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
GH3,Công ty Cổ phần Công trình giao thông Hà Nội,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HPT,Công ty Cổ phần Dịch vụ Công nghệ Tin học HPT,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
LAI,Công ty Cổ phần Đầu tư Xây dựng Long An IDICO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LIX,Công ty Cổ phần Bột Giặt LiX,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
LKW,Công ty Cổ phần Cấp nước Long Khánh,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
LM3,Công ty Cổ phần Lilama 3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LM8,Công ty Cổ phần Lilama 18,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
IMP,Công ty Cổ phần Dược phẩm IMEXPHARM,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
DCS,Công ty Cổ phần Tập đoàn Đại Châu,Hàng gia dụng,Hàng cá nhân & Gia dụng,Thiết bị gia dụng,CT,3000,3700,3720,3726
LNC,Công ty Cổ phần Lệ Ninh,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
LO5,Công ty Cổ phần Lilama 5,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
CJC,Công ty Cổ phần Cơ điện Miền Trung,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
HTG,Tổng Công ty Cổ phần Dệt may Hòa Thọ,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
KOS,Công ty Cổ phần KOSY,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
LTC,Công ty Cổ phần Điện nhẹ Viễn Thông,Thiết bị và Phần cứng,Công nghệ Thông tin,Phần cứng,CT,9000,9500,9570,9572
MAC,Công ty Cổ phần Cung ứng và Dịch vụ Kỹ thuật Hàng Hải,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Xe tải & Đóng tàu,CT,2000,2700,2750,2753
MA1,Công ty Cổ phần Thiết bị,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DHM,Công ty Cổ phần Thương mại & Khai thác Khoáng sản Dương Hiếu,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
DHT,Công ty Cổ phần Dược phẩm Hà Tây,Phân phối thực phẩm & dược phẩm,Bán lẻ,Phân phối dược phẩm,CT,5000,5300,5330,5333
CAT,Công ty Cổ phần Thủy sản Cà Mau,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
DTL,Công ty Cổ phần Đại Thiên Lộc,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
LSS,Công ty Cổ phần Mía đường Lam Sơn,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
MAS,Công ty cổ phần Dịch vụ Hàng Không Sân Bay Đà Nẵng,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
ITC,Công ty Cổ phần Đầu tư - Kinh doanh nhà,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DCT,Công ty Cổ phần Tấm lợp Vật liệu Xây dựng Đồng Nai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CRC,Công ty Cổ phần Create Capital Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
MCC,Công ty Cổ phần Gạch ngói cao cấp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
MCG,Công ty Cổ phần Năng lượng và Bất động sản MCG,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
ICC,Công ty Cổ phần Xây dựng công nghiệp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
KBC,Tổng Công ty Phát triển Đô thị Kinh Bắc,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
GSP,Công ty Cổ phần Vận tải Sản phẩm Khí Quốc tế,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
MCM,Công ty Cổ phần Giống bò sữa Mộc Châu,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
MCO,Công ty Cổ phần Đầu tư và Xây dựng BDC Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MBB,Ngân hàng Thương mại Cổ phần Quân đội,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
LLM,Tổng Công ty lắp máy Việt Nam - Công ty Cổ phần,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
MDA,Công ty Cổ phần Môi trường Đô thị Đông Anh,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
MDC,Công ty Cổ phần Than Mông Dương - Vinacomin,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
HMD,Công ty Cổ phần Hóa chất Minh Đức,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
VSM,Công ty Cổ phần Container Miền Trung,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
MEC,Công ty Cổ phần Cơ khí - Lắp máy Sông Đà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
GIC,Công ty Cổ phần VSC Green Logistics,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
MED,Công ty Cổ phần Dược Trung ương Mediplantex,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
DGW,Công ty Cổ phần Thế Giới Số,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
MIC,Công ty Cổ phần Kỹ nghệ Khoáng sản Quảng Nam,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
VBG,Công ty Cổ phần Địa chất Việt Bắc - TKV,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
L40,Công ty Cổ phần Đầu tư và Xây dựng 40,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MZG,Công ty Cổ Phần Miza,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
LPB,Ngân hàng Thương mại Cổ phần Lộc Phát Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
MHL,Công ty Cổ phần Minh Hữu Liên,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
MKV,Công ty Cổ phần Dược Thú Y Cai Lậy,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
GIL,Công ty Cổ phần Sản xuất Kinh doanh Xuất nhập khẩu Bình Thạnh,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
MLC,Công ty Cổ phần Môi trường Đô thị Tỉnh Lào Cai,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
YTC,Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố Hồ Chí Minh,Thiết bị và Dịch vụ Y tế,Y tế,Dụng cụ y tế,CT,4000,4500,4530,4537
MML,Công ty Cổ phần Masan MEATLife,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
MPT,Công ty Cổ phần Tập đoàn MPT,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
LBM,Công ty Cổ phần Khoáng sản và Vật liệu xây dựng Lâm Đồng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
MPY,Công ty Cổ phần Môi trường đô thị Phú Yên,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
MQB,Công ty Cổ phần Môi trường và Phát triển đô thị Quảng Bình,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
KKC,Công ty Cổ phần Tập đoàn Thành Thái,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
GER,Công ty Cổ phần Thể thao Ngôi sao Geru,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
MSN,Công ty Cổ phần Tập đoàn Masan,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
MSR,Công ty Cổ phần Masan High-Tech Materials,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
MTC,Công ty Cổ phần Dịch vụ Du lịch Mỹ Trà,Du lịch & Giải trí,Du lịch và Giải trí,Nhà hàng và quán bar,CT,5000,5700,5750,5757
ILB,Công ty Cổ phần ICD Tân Cảng - Long Bình,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
DST,Công ty Cổ phần Đầu tư Sao Thăng Long,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
MTH,Công ty Cổ phần Môi trường Đô thị Hà Đông,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
HAD,Công ty Cổ phần Bia Hà Nội - Hải Dương,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
MTL,Công ty Cổ phần Dịch vụ Môi trường Đô thị Từ Liêm,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
ITA,Công ty Cổ phần Đầu tư và Công nghiệp Tân Tạo,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NAU,Công ty Cổ phần Môi trường và Công trình Đô thị Nghệ An,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
HHN,Công ty Cổ phần Vận tải và Dịch vụ Hàng hóa Hà Nội,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
AMS,Công ty Cổ phần Cơ khí Xây dựng AMECC,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Nhà cung cấp thiết bị,CT,2000,2700,2790,2797
MTP,Công ty Cổ phần Dược Medipharco,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
FTS,Công ty Cổ phần Chứng khoán FPT,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
NDP,Công ty Cổ phần Dược phẩm 2/9,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
NAG,Công ty Cổ phần Tập đoàn Nagakawa,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
NJC,Công ty Cổ phần May Nam Định,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
NAC,Công ty Cổ phần Tư vấn Xây dựng Tổng hợp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HD6,Công ty Cổ phần Đầu tư và Phát triển nhà số 6 Hà Nội,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HEV,Công ty Cổ phần Sách Đại học - Dạy nghề,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
L14,Công ty Cổ phần Licogi 14,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NAP,Công ty Cổ phần Cảng Nghệ Tĩnh,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
BAB,Ngân hàng Thương mại Cổ phần Bắc Á,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
DTA,Công ty Cổ phần Đệ Tam,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NAS,Công ty Cổ phần Dịch vụ Hàng không Sân bay Nội Bài,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VET,Công ty Cổ phần Thuốc Thú y Trung ương NAVETCO,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
NBC,Công ty Cổ phần Than Núi Béo - Vinacomin,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
MEF,Công ty Cổ phần MEINFA,Thiết bị và Dịch vụ Y tế,Y tế,Dụng cụ y tế,CT,4000,4500,4530,4537
AGF,Công ty Cổ phần Xuất nhập khẩu Thủy sản An Giang,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
DDM,Công ty Cổ phần Hàng hải Đông Đô,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
CKG,Công ty Cổ phần Tập đoàn Tư vấn Đầu tư Xây dựng Kiên Giang,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HPX,Công ty Cổ phần Đầu tư Hải Phát,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NBE,Công ty Cổ phần Sách và Thiết bị Giáo dục Miền Bắc,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
NBP,Công ty Cổ phần Nhiệt Điện Ninh Bình,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TVH,Công ty Cổ phần Tư vấn Xây dựng công trình Hàng hải,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CMD,Công ty Cổ phần Vật liệu xây dựng và Trang trí nội thất TP Hồ Chí Minh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
LGL,Công ty Cổ phần Đầu tư và Phát triển Đô thị Long Giang,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NAW,Công ty Cổ phần Cấp nước Nghệ An,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
HPD,Công ty Cổ phần Thủy điện Đăk Đoa,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
FID,Công ty Cổ phần Đầu tư và Phát triển Doanh nghiệp Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NCT,Công ty Cổ phần Dịch vụ Hàng hóa Nội Bài,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
MND,Công ty Cổ phần Môi trường Nam Định,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
NAV,Công ty Cổ phần Nam Việt,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NBB,Công ty Cổ phần Đầu tư Năm Bảy Bảy,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HPW,Công ty Cổ phần Cấp nước Hải Phòng,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
HND,Công ty Cổ phần Nhiệt điện Hải Phòng,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
NDX,Công ty Cổ phần Xây lắp Phát triển Nhà Đà Nẵng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NEM,Công ty Cổ phần Thiết bị Điện Miền Bắc,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
HSI,Công ty Cổ phần Vật tư Tổng hợp và Phân bón Hóa sinh,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
PTP,Công ty Cổ phần PTP,Viễn thông cố định,Viễn thông,Viễn thông cố định,CT,6000,6500,6530,6535
NDN,Công ty Cổ phần Đầu tư Phát triển Nhà Đà Nẵng,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CTD,Công ty Cổ phần Xây dựng Coteccons,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NFC,Công ty Cổ phần Phân lân Ninh Bình,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
NGC,Công ty Cổ phần Chế biến Thủy sản Xuất khẩu Ngô Quyền,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
MWG,Công ty Cổ phần Đầu tư Thế Giới Di Động,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
M10,Tổng công ty May 10 - Công ty Cổ phần,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VCE,Công ty Cổ phần Xây lắp Môi trường,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NHH,Công ty Cổ phần Nhựa Hà Nội,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
NHP,Công ty Cổ phần Sản xuất Xuất nhập khẩu NHP,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
NHT,Công ty Cổ phần Sản xuất và Thương mại Nam Hoa,Hàng hóa giải trí,Hàng cá nhân & Gia dụng,Đồ chơi,CT,3000,3700,3740,3747
MRF,Công ty Cổ phần MERUFA,Thiết bị và Dịch vụ Y tế,Y tế,Thiết bị y tế,CT,4000,4500,4530,4535
NHV,Công ty Cổ phần Sức khỏe Hồi sinh Việt Nam,Kim loại,Tài nguyên Cơ bản,Kim Loại màu,CT,1000,1700,1750,1755
NED,Công ty Cổ phần Đầu tư và Phát triển Điện Tây Bắc,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NLG,Công ty Cổ phần Đầu tư Nam Long,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
FCM,Công ty Cổ phần Khoáng sản FECON,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NRC,Công ty Cổ phần Tập đoàn Danh Khôi,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NLS,Công ty Cổ phần Cấp thoát nước Lạng Sơn,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
KSV,Tổng Công ty Khoáng sản TKV - Công ty Cổ phần,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
HNG,Công ty Cổ phần Nông nghiệp Quốc tế Hoàng Anh Gia Lai,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HNM,Công ty Cổ phần Sữa Hà Nội,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HTP,Công ty Cổ phần In Sách Giáo Khoa Hòa Phát,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
NNC,Công ty Cổ phần Đá Núi Nhỏ,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NNT,Công ty Cổ phần Cấp nước Ninh Thuận,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
NOS,Công ty Cổ phần Vận tải Biển và Thương mại Phương Đông,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
PMB,Công ty Cổ phần Phân bón và Hóa chất Dầu khí Miền Bắc,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
DXP,Công ty Cổ phần Cảng Đoạn Xá,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
HLA,Công ty Cổ phần Hữu Liên Á Châu,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
HU4,Công ty Cổ phần Đầu tư và Xây dựng HUD4,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NQB,Công ty Cổ phần Cấp nước Quảng Bình,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
NQT,Công ty Cổ phần Nước sạch Quảng Trị,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
NS2,Công ty Cổ phần Nước sạch số 2 Hà Nội,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
PSH,Công ty Cổ phần Thương mại Đầu tư Dầu khí Nam Sông Hậu,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
BSR,Công ty Cổ phần Lọc Hóa dầu Bình Sơn,Sản xuất Dầu khí,Dầu khí,Sản xuất và Khai thác dầu khí,CT,0001,0500,0530,0533
EFI,Công ty Cổ phần Đầu tư Tài chính Giáo dục,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HDP,Công ty Cổ phần Dược Hà Tĩnh,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
HDB,Ngân hàng Thương mại Cổ phần Phát Triển Thành phố Hồ Chí Minh,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
NT2,Công ty Cổ phần Điện lực Dầu khí Nhơn Trạch 2,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
NTB,Công ty Cổ phần Đầu tư Xây dựng và Khai thác Công trình giao thông 584,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NTT,Công ty Cổ phần Dệt - May Nha Trang,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
NTL,Công ty Cổ phần Phát triển Đô thị Từ Liêm,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NSC,Công ty Cổ phần Tập đoàn Giống cây trồng Việt Nam,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HFC,Công ty Cổ phần Xăng dầu HFC,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
NUE,Công ty Cổ phần Môi trường Đô thị Nha Trang,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
HOM,Công ty Cổ phần Xi măng VICEM Hoàng Mai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NST,Công ty Cổ phần Ngân Sơn,Thuốc lá,Hàng cá nhân & Gia dụng,Thuốc lá,CT,3000,3700,3780,3785
NTW,Công ty Cổ phần Cấp nước Nhơn Trạch,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
NVT,Công ty Cổ phần Bất động sản Du lịch Ninh Vân Bay,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NWT,Công ty Cổ phần Vận tải Newway,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
NDF,Công ty Cổ phần Chế biến thực phẩm nông sản xuất khẩu Nam Định,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
NXT,Công ty Cổ phần Sản xuất và Cung ứng vật liệu xây dựng Kon Tum,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
LDW,Công ty Cổ phần Cấp thoát nước Lâm Đồng,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
OCB,Ngân hàng Thương mại Cổ phần Phương Đông,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
NTC,Công ty Cổ phần Khu Công nghiệp Nam Tân Uyên,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
OCH,Công ty Cổ phần One Capital Hospitality,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
HRB,Công ty Cổ phần Harec Đầu tư và Thương Mại,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
EVS,Công ty Cổ phần Chứng khoán Everest,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
MEL,Công ty Cổ phần Thép Mê Lin,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
ONE,Công ty Cổ phần Công nghệ ONE,Thiết bị và Phần cứng,Công nghệ Thông tin,Phần cứng,CT,9000,9500,9570,9572
OPC,Công ty Cổ phần Dược Phẩm OPC,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
ORS,Công ty Cổ phần Chứng khoán Tiên Phong,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
PAP,Công ty Cổ phần Dầu khí đầu tư khai thác Cảng Phước An,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
HDS,Công ty Cổ phần Giống cây trồng Hải Dương,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
PAS,Công ty Cổ phần Quốc tế Phương Anh,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
HVX,Công ty Cổ phần Xi măng Vicem Hải Vân,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PBP,Công ty Cổ phần Bao bì Dầu khí Việt Nam,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
PCC,Công ty Cổ phần Tập đoàn Xây lắp 1 - Petrolimex,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PCM,Công ty Cổ phần Vật liệu Xây dựng Bưu điện,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
ONW,Công ty Cổ phần Dịch vụ Một Thế giới,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
PDB,Công ty Cổ phần Tập đoàn Đầu tư DIN Capital,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PDC,Công ty Cổ phần Du lịch Dầu khí Phương Đông,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
PDN,Công ty Cổ phần Cảng Đồng Nai,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
CNN,"Công ty Cổ phần Tư vấn Công nghệ, Thiết bị và Kiểm định Xây dựng - CONINCO",Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PEC,Công ty Cổ phần Cơ khí Điện lực,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
PEN,Công ty Cổ phần Xây lắp III Petrolimex,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PET,Tổng Công ty Cổ phần Dịch vụ Tổng hợp Dầu khí,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
MCH,Công ty Cổ phần Hàng Tiêu Dùng MaSan,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
PCF,Công ty Cổ phần Cà phê PETEC,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
PFL,Công ty Cổ phần Dầu khí Đông Đô,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MLS,Công ty Cổ phần Chăn nuôi - Mitraco,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
GEE,Công ty Cổ phần Điện lực Gelex,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
TOW,Công ty Cổ phần Cấp nước Trà Nóc - Ô Môn,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
PCG,Công ty Cổ phần Đầu tư Phát triển Gas Đô thị,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
PGB,Ngân hàng Thương mại Cổ phần Thịnh vượng và Phát triển,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
PGC,Tổng Công ty Gas Petrolimex - Công ty Cổ phần,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
PGD,Công ty Cổ phần Phân phối khí thấp áp dầu khí Việt Nam,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
OGC,Công ty Cổ phần Tập đoàn Đại Dương,Dịch vụ tài chính,Dịch vụ tài chính,Tài chính đặc biệt,CT,8000,8700,8770,8775
DCL,Công ty Cổ phần Dược phẩm Cửu Long,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
PGN,Công ty Cổ phần Phụ Gia Nhựa,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
PGT,Công ty Cổ phần PGT Holdings,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
PBC,Công ty Cổ phần Dược Phẩm Trung ương 1 - Pharbaco,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
BMN,Công ty Cổ phần 715,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CYC,Công ty Cổ phần Gạch men Chang Yih,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
MSB,Ngân hàng Thương mại Cổ phần Hàng Hải Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
PEG,Tổng Công ty Thương mại Kỹ thuật và Đầu tư - Công ty Cổ phần,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
PTV,Công ty Cổ phần Thương mại Dầu khí,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
HGM,Công ty Cổ phần Cơ khí và Khoáng sản Hà Giang,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
DHP,Công ty Cổ phần Điện cơ Hải Phòng,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
PLX,Tập đoàn Xăng dầu Việt Nam,Sản xuất Dầu khí,Dầu khí,Sản xuất và Khai thác dầu khí,CT,0001,0500,0530,0533
MES,Công ty Cổ phần Cơ điện Công trình,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PIA,Công ty Cổ phần Tin học Viễn thông Petrolimex,Viễn thông cố định,Viễn thông,Viễn thông cố định,CT,6000,6500,6530,6535
PIC,Công ty Cổ phần Đầu tư Điện lực 3,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
PIS,Tổng Công ty Pisico Bình Định - Công ty Cổ phần,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
EIN,Công ty Cổ phần Đầu tư - Thương Mại - Dịch vụ Điện lực,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
PIT,Công ty Cổ phần Xuất nhập khẩu Petrolimex,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
PIV,Công ty Cổ phần PIV,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
PJS,Công ty Cổ phần Cấp nước Phú Hòa Tân,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
HKB,Công ty Cổ phần Nông nghiệp và Thực phẩm Hà Nội - Kinh Bắc,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
PHC,Công ty Cổ phần Xây dựng Phục Hưng Holdings,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NTF,Công ty Cổ phần Dược - Vật tư y tế Nghệ An,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
PJT,Công ty Cổ phần Vận tải Xăng dầu đường thủy Petrolimex,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
PHH,Công ty Cổ phần Hồng Hà Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PLA,Công ty Cổ phần Đầu tư và Dịch vụ hạ tầng Xăng dầu,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PLO,Công ty Cổ phần Kho vận Petec,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
PLE,Công ty Cổ phần Tư vấn Xây dựng Petrolimex,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PC1,Công ty Cổ phần Tập đoàn PC1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PMC,Công ty Cổ phần Dược phẩm Dược liệu Pharmedic,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
PMJ,Công ty Cổ phần Vật tư Bưu điện,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
PID,Công ty Cổ phần Trang trí nội thất Dầu khí,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
GKM,Công ty Cổ phần GKM Holdings,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PMP,Công ty Cổ phần Bao bì Đạm Phú Mỹ,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
HC1,Công ty Cổ phần Xây dựng số 1 Hà Nội,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PNC,Công ty Cổ phần Văn hóa Phương Nam,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
PGI,Tổng Công ty Cổ phần Bảo hiểm Petrolimex,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
PND,Công ty Cổ phần Xăng dầu Dầu khí Nam Định,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
PNJ,Công ty Cổ phần Vàng bạc Đá quý Phú Nhuận,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
POT,Công ty Cổ phần Thiết bị Bưu điện,Thiết bị và Phần cứng,Công nghệ Thông tin,Phần cứng,CT,9000,9500,9570,9572
KHD,"Công ty Cổ phần Khai thác, Chế biến Khoáng sản Hải Dương",Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
DNA,Công ty Cổ phần Điện nước An Giang,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
PPE,Công ty Cổ phần Tư vấn Đầu tư PP Enterprise,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
HID,Công ty Cổ phần Halcom Vietnam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PPI,Công ty Cổ phần Đầu tư và Phát triển dự án hạ tầng Thái Bình Dương,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PPS,Công ty Cổ phần Dịch vụ Kỹ thuật Điện lực Dầu khí Việt Nam,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
PRC,Công ty Cổ phần Logistics Portserco,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
PLC,Tổng Công ty Hóa dầu Petrolimex - Công ty Cổ phần,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
PPP,Công ty Cổ phần Dược phẩm Phong Phú,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
HNP,Công ty Cổ phần Hanel Xốp Nhựa,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
PNP,Công ty Cổ phần Tân Cảng – Phú Hữu,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
BT1,Công ty Cổ phần Bảo vệ thực vật 1 Trung ương,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
PSE,Công ty Cổ phần Phân bón và hóa chất dầu khí Đông Nam Bộ,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
PSI,Công ty Cổ phần Chứng khoán Dầu khí,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
L61,Công ty Cổ phần Lilama 69-1,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
PSP,Công ty Cổ phần Cảng Dịch vụ Dầu khí Đình Vũ,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
PTB,Công ty Cổ phần Phú Tài,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
GCB,Công ty Cổ phần PETEC Bình Định,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
PTC,Công ty Cổ phần Đầu tư ICAPITAL,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PMS,Công ty Cổ phần Cơ khí Xăng dầu,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
PTD,Công ty Cổ phần Thiết kế - Xây dựng - Thương mại Phúc Thịnh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PTG,Công ty Cổ phần May Xuất Khẩu Phan Thiết,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
PTH,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Hà Tây,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
LAW,Công ty Cổ phần Cấp thoát nước Long An,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
PRO,Công ty Cổ phần Procimex Việt Nam,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
PTI,Tổng Công ty Cổ phần Bảo hiểm Bưu điện,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
PSC,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
PTL,Công ty Cổ phần Victory Group,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PTS,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Hải Phòng,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
PTX,Công ty Cổ phần Vận tải và Dịch vụ Petrolimex Nghệ Tĩnh,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
PTT,Công ty Cổ phần Vận tải Dầu khí Đông Dương,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
HNF,Công ty Cổ phần Thực phẩm Hữu Nghị,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
PDR,Công ty Cổ phần Phát triển Bất động sản Phát Đạt,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HOT,Công ty Cổ phần Du lịch - Dịch vụ Hội An,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
DSP,Công ty Cổ phần Dịch vụ Du lịch Phú Thọ,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
DTD,Công ty Cổ phần Đầu tư Phát triển Thành Đạt,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DAT,Công ty Cổ phần Đầu tư Du lịch và Phát triển Thủy sản,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
HNR,Công ty Cổ phần Rượu và Nước Giải Khát Hà Nội,Bia và đồ uống,Thực phẩm và đồ uống,Vang & Rượu mạnh,CT,3000,3500,3530,3535
PVM,Công ty Cổ phần Máy - Thiết bị Dầu khí,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Nhà cung cấp thiết bị,CT,2000,2700,2790,2797
PVD,Tổng Công ty Cổ phần Khoan và Dịch vụ khoan Dầu khí,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
PSW,Công ty Cổ phần Phân bón và hóa chất dầu khí Tây Nam Bộ,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
HU3,Công ty Cổ phần Đầu tư và Xây dựng HUD3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LG9,Công ty Cổ phần Cơ giới và Xây lắp số 9,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PVI,Công ty Cổ phần PVI,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
PVH,Công ty Cổ phần Xây lắp Dầu khí Thanh Hóa,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MCF,Công ty Cổ phần Xây lắp Cơ khí và Lương thực Thực phẩm,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
PRE,Tổng Công ty Cổ phần Tái bảo hiểm Hà Nội,Bảo hiểm phi nhân thọ,Bảo hiểm,Tái bảo hiểm,BH,8000,8500,8530,8538
ITS,"Công ty Cổ phần Đầu tư, Thương mại và Dịch vụ - Vinacomin",Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
PVL,Công ty Cổ phần Đầu tư Nhà Đất Việt,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PPY,Công ty Cổ phần Xăng dầu dầu khí Phú Yên,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
LDG,Công ty Cổ phần Đầu tư LDG,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
PVP,Công ty Cổ phần Vận tải Dầu khí Thái Bình Dương,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
KMR,Công ty Cổ phần Mirae,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
PXI,Công ty Cổ phần Xây dựng Công nghiệp và Dân dụng Dầu khí,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PXL,Công ty Cổ phần Đầu tư Khu Công Nghiệp Dầu khí Long Sơn,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PXS,Công ty Cổ phần Kết cấu Kim loại và Lắp máy Dầu khí,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PWS,Công ty Cổ phần Cấp thoát nước Phú Yên,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
HD2,Công ty Cổ phần Đầu tư phát triển nhà HUD2,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
QCG,Công ty Cổ phần Quốc Cường Gia Lai,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PAI,"Công ty Cổ phần Công nghê thông tin, Viễn thông và Tự động hóa Dầu khí",Viễn thông cố định,Viễn thông,Viễn thông cố định,CT,6000,6500,6530,6535
PHR,Công ty Cổ phần Cao su Phước Hòa,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
IDV,Công ty Cổ phần Phát triển Hạ tầng Vĩnh Phúc,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
QNC,Công ty Cổ phần Xi măng và Xây dựng Quảng Ninh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PSD,Công ty Cổ phần Dịch vụ Phân phối Tổng hợp Dầu khí,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
QNT,Công ty Cổ phần Tư vấn và Đầu tư Phát triển Quảng Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
QTP,Công ty Cổ phần Nhiệt điện Quảng Ninh,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
QPH,Công ty Cổ phần Thủy điện Quế Phong,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
ILC,Công ty Cổ phần Hợp tác lao động với nước ngoài,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Đào tạo & Việc làm,CT,2000,2700,2790,2793
QTC,Công ty Cổ phần Công trình Giao thông Vận tải Quảng Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
RAL,Công ty Cổ phần Bóng đèn Phích nước Rạng Đông,Hàng gia dụng,Hàng cá nhân & Gia dụng,Thiết bị gia dụng,CT,3000,3700,3720,3726
KHS,Công ty Cổ phần Kiên Hùng,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
RAT,Công ty Cổ phần Vận tải và Thương mại Đường sắt,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
MTA,Tổng Công ty Khoáng sản và Thương mại Hà Tĩnh - Công ty Cổ phần,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
IDC,Tổng Công ty IDICO - CTCP,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
RCD,Công ty Cổ phần Xây dựng - Địa ốc Cao su,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
RDP,Công ty Cổ phần Rạng Đông Holding,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
DS3,Công ty Cổ phần DS3,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
PVB,Công ty Cổ phần Bọc ống Dầu khí Việt Nam,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
S72,Công ty Cổ phần Sông Đà 7.02,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
S74,Công ty Cổ phần Sông Đà 7.04,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
S96,Công ty Cổ phần Sông Đà 9.06,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BSH,Công ty Cổ phần Bia Sài Gòn - Hà Nội,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
MIE,Tổng Công ty Máy và Thiết bị Công nghiệp - CTCP,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
NDW,Công ty Cổ phần Cấp nước Nam Định,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SKV,Công ty Cổ phần Nước Giải khát Yến sào Khánh Hòa,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
FHN,Công ty Cổ phần Xuất nhập khẩu Lương thực - Thực phẩm Hà Nội,Phân phối thực phẩm & dược phẩm,Bán lẻ,Phân phối thực phẩm,CT,5000,5300,5330,5337
HVG,Công ty Cổ phần Hùng Vương,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SKH,Công ty Cổ phần Nước giải khát Sanest Khánh Hòa,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
APT,Công ty Cổ phần Kinh doanh thủy hải sản Sài Gòn,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
CHS,Công ty Cổ phần Chiếu sáng Công cộng Thành phố Hồ Chí Minh,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Tiện ích khác,CT,7000,7500,7570,7575
BSL,Công ty Cổ phần Bia Sài Gòn - Sông Lam,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
FRT,Công ty Cổ phần Bán lẻ Kỹ thuật số FPT,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
NAF,Công ty Cổ phần Nafoods Group,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
IRC,Công ty Cổ phần Cao su Công nghiệp,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
SAB,Tổng Công ty Cổ phần Bia - Rượu - Nước Giải khát Sài Gòn,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
SBD,Công ty Cổ phần Công nghệ Sao Bắc Đẩu,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
PVE,Tổng Công ty Tư vấn Thiết kế Dầu khí - Công ty Cổ phần,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
SBH,Công ty Cổ phần Thủy điện Sông Ba Hạ,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
LUT,Công ty Cổ phần Đầu tư Xây dựng Lương Tài,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LGC,Công ty Cổ phần Đầu tư Cầu đường CII,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HDA,Công ty Cổ phần Hãng sơn Đông Á,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PMT,Công ty Cổ phần Viễn thông Telvina Việt Nam,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
POM,Công ty Cổ phần Thép Pomina,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
HWS,Công ty Cổ phần Cấp nước Huế,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SBT,Công ty Cổ phần Thành Thành Công - Biên Hòa,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
SC5,Công ty Cổ phần Xây dựng số 5,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MTX,Công ty Cổ phần Công trình Đô thị Gò Công,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
L45,Công ty Cổ phần Lilama 45.1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MTG,Công ty Cổ phần MT Gas,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SCC,Công ty Cổ phần Thương mại Đầu tư SHB,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SCG,Công ty Cổ phần Tập đoàn Xây dựng SCG,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SCI,Công ty Cổ phần SCI E&C,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
L10,Công ty Cổ phần Lilama 10,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
SID,Công ty Cổ phần Đầu tư Phát triển Sài Gòn Co.op,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SCL,Công ty Cổ phần Sông Đà Cao Cường,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SCR,Công ty Cổ phần Địa Ốc Sài Gòn Thương Tín,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SCS,Công ty Cổ phần Dịch vụ Hàng hóa Sài Gòn,Du lịch & Giải trí,Du lịch và Giải trí,Hàng không,CT,5000,5700,5750,5751
MIM,Công ty Cổ phần Khoáng sản và Cơ khí,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
HAG,Công ty Cổ phần Hoàng Anh Gia Lai,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SD2,Công ty Cổ phần Sông Đà 2,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NKG,Công ty Cổ phần Thép Nam Kim,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
KTC,Công ty Cổ phần Thương mại Kiên Giang,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
POW,Tổng Công ty Điện lực Dầu khí Việt Nam - CTCP,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
SD3,Công ty Cổ phần Sông Đà 3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HAM,Công ty Cổ phần Vật tư Hậu Giang,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PVT,Tổng Công ty Cổ phần Vận tải Dầu khí,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
SD4,Công ty Cổ phần Sông Đà 4,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SD5,Công ty Cổ phần Sông Đà 5,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SD7,Công ty Cổ phần Sông Đà 7,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SD9,Công ty Cổ phần Sông Đà 9,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PWA,Công ty Cổ phần Bất động sản dầu khí,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SDC,Công ty Cổ phần Tư vấn Sông Đà,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
SDD,Công ty Cổ phần Đầu tư và Xây lắp Sông Đà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PX1,Công ty Cổ phần Xi măng Sông Lam 2,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
MDF,Công ty Cổ phần Gỗ MDF VRG - Quảng Trị,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
HES,Công ty Cổ phần Dịch vụ Giải trí Hà Nội,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
SDJ,Công ty Cổ phần Sông Đà 25,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SDK,Công ty Cổ phần Cơ khí Luyện Kim,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
SDP,Công ty Cổ phần SDP,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PCE,Công ty Cổ phần Phân bón và hóa chất dầu khí Miền Trung,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
KSH,Công ty Cổ phần Damac GLS,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
PXA,Công ty Cổ phần Đầu tư và Thương mại Dầu khí Nghệ An,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
MFS,Công ty Cổ phần Dịch vụ kỹ thuật Mobifone,Viễn thông di động,Viễn thông,Viễn thông di động,CT,6000,6500,6570,6575
SDX,Công ty Cổ phần Phòng cháy chữa cháy và Đầu tư Xây dựng Sông Đà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SSB,Ngân hàng Thương mại Cổ phần Đông Nam Á,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
MHC,Công ty Cổ phần MHC,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
SEA,Tổng Công ty Thủy sản Việt Nam - Công ty Cổ phần,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SEB,Công ty Cổ phần Đầu tư và Phát triển Điện Miền Trung,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
SFN,Công ty Cổ phần Dệt lưới Sài Gòn,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Nhà cung cấp thiết bị,CT,2000,2700,2790,2797
LM7,Công ty Cổ phần Lilama 7,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
SGC,Công ty Cổ phần Xuất nhập khẩu Sa Giang,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
PXM,Công ty Cổ phần Xây lắp Dầu khí Miền Trung,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BQB,Công ty Cổ phần Bia Hà Nội - Quảng Bình,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
NVB,Ngân hàng Thương mại Cổ phần Quốc Dân,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
HUG,Tổng công ty May Hưng Yên - Công ty Cổ phần,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
PXT,Công ty Cổ phần Xây lắp Đường ống Bể chứa Dầu khí,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
LHC,Công ty Cổ phần Đầu tư và Xây dựng Thủy lợi Lâm Đồng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NSG,Công ty Cổ phần Nhựa Sài Gòn,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
SHA,Công ty Cổ phần Sơn Hà Sài Gòn,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
KPF,Công ty Cổ phần Đầu tư Tài sản KOJI,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NVL,Công ty Cổ phần Tập đoàn Đầu tư Địa ốc No Va,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
QBS,Công ty Cổ phần Xuất nhập khẩu Quảng Bình,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
QCC,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Hạ tầng Viễn Thông,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SZC,Công ty Cổ phần Sonadezi Châu Đức,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SJC,Công ty Cổ phần Sông Đà 1.01,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PHS,Công ty Cổ phần Chứng khoán Phú Hưng,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
SJD,Công ty Cổ phần Thủy điện Cần Đơn,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
MQN,Công ty Cổ phần Môi trường đô thị Quảng Ngãi,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
QSP,Công ty Cổ phần Tân cảng Quy Nhơn,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
SJG,Tổng Công ty Sông Đà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
MBT,Công ty Cổ phần Bất động sản cho thuê Minh Bảo Tín,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
QNP,Công ty Cổ phần Cảng Quy Nhơn,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
SGN,Công ty Cổ phần Phục vụ mặt đất Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
CQN,Công ty Cổ phần Cảng Quảng Ninh,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
NAB,Ngân hàng Thương mại Cổ phần Nam Á,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
PQN,Công ty Cổ phần Dịch vụ Dầu khí Quảng Ngãi PTSC,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
QNS,Công ty Cổ phần Đường Quảng Ngãi,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
LDP,Công ty Cổ phần Dược Lâm Đồng - Ladophar,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
QST,Công ty Cổ phần Sách và Thiết bị trường học Quảng Ninh,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
MST,Công ty Cổ phần Đầu tư MST,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
RCC,Công ty Cổ phần Tổng Công ty Công trình Đường sắt,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
RCL,Công ty Cổ phần Địa ốc Chợ Lớn,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
REE,Công ty Cổ phần Cơ điện Lạnh,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TBR,Công ty Cổ phần Địa ốc Tân Bình,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
RIC,Công ty Cổ phần Quốc Tế Hoàng Gia,Du lịch & Giải trí,Du lịch và Giải trí,Dịch vụ giải trí,CT,5000,5700,5750,5755
RBC,Công ty Cổ phần Công Nghiệp và Xuất nhập khẩu Cao Su,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
SPH,Công ty Cổ phần Xuất Nhập khẩu Thủy sản Hà Nội,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
S12,Công ty Cổ phần Sông Đà 12,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
HIG,Công ty Cổ phần Tập đoàn HIPT,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
S27,Công ty Cổ phần Sông Đà 27,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BSG,Công ty Cổ phần Xe khách Sài Gòn,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
S55,Công ty Cổ phần Sông Đà 505,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
S99,Công ty Cổ phần SCI,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NHA,Tổng Công ty Đầu tư Phát triển Nhà và Đô thị Nam Hà Nội,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PAN,Công ty Cổ phần Tập đoàn PAN,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
ND2,Công ty Cổ phần Đầu tư và Phát triển điện Miền Bắc 2,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
BSQ,Công ty Cổ phần Bia Sài Gòn - Quảng Ngãi,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
SAF,Công ty Cổ phần Lương thực Thực phẩm SAFOCO,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
KHW,Công ty Cổ phần Cấp thoát nước Khánh Hòa,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
MIG,Tổng Công ty Cổ phần Bảo hiểm Quân đội,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
LMH,Công ty Cổ phần Quốc Tế Holding,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
HSG,Công ty Cổ phần Tập đoàn Hoa Sen,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
SAL,Công ty Cổ phần Trục vớt Cứu hộ Việt Nam,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Xe tải & Đóng tàu,CT,2000,2700,2750,2753
SAM,Công ty Cổ phần SAM Holdings,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
PDV,Công ty Cổ phần Vận tải và Tiếp vận Phương Đông Việt,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
PPC,Công ty Cổ phần Nhiệt điện Phả Lại,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
SPI,Công ty Cổ phần Spiral Galaxy,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
PVY,Công ty Cổ phần Chế tạo Giàn khoan Dầu khí,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
KTT,Công ty Cổ phần Tập đoàn Đầu tư KTT,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NHC,Công ty Cổ phần Gạch ngói Nhị Hiệp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
NCS,Công ty Cổ phần Suất ăn Hàng không Nội Bài,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
VHM,Công ty Cổ phần Vinhomes,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NDC,Công ty Cổ phần Nam Dược,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
SAC,Công ty Cổ phần Xếp dỡ và Dịch vụ cảng Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
SBS,Công ty Cổ phần Chứng khoán SBS,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
SAV,Công ty Cổ phần Hợp tác Kinh tế và Xuất nhập khẩu Savimex,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
NET,Công ty Cổ phần Bột giặt Net,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
SBA,Công ty Cổ phần Sông Ba,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
PEQ,Công ty Cổ phần Thiết bị xăng dầu Petrolimex,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
L63,Công ty Cổ phần Lilama 69-3,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
JOS,Công ty Cổ phần Chế biến Thủy sản Xuất khẩu Minh Hải,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SBL,Công ty Cổ phần Bia Sài Gòn - Bạc Liêu,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
SBM,Công ty Cổ phần Đầu tư phát triển Bắc Minh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
STG,Công ty Cổ phần Kho Vận Miền Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
OIL,Tổng Công ty Dầu Việt Nam - Công ty Cổ phần,Sản xuất Dầu khí,Dầu khí,Sản xuất và Khai thác dầu khí,CT,0001,0500,0530,0533
PVS,Tổng Công ty Cổ phần Dịch vụ Kỹ thuật Dầu khí Việt Nam,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
SCD,Công ty Cổ phần Nước giải khát Chương Dương,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
PPH,Tổng Công ty Cổ phần Phong Phú,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
PNG,Công ty Cổ phần Thương Mại Phú Nhuận,Du lịch & Giải trí,Du lịch và Giải trí,Nhà hàng và quán bar,CT,5000,5700,5750,5757
SCJ,Công ty Cổ phần Xi măng Sài Sơn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SCO,Công ty Cổ phần Công nghiệp Thủy sản,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
MCP,Công ty Cổ phần In và Bao bì Mỹ Châu,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
SCY,Công ty Cổ phần Đóng tàu Sông Cấm,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Xe tải & Đóng tàu,CT,2000,2700,2750,2753
SD1,Công ty Cổ phần Sông Đà 1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CSI,Công ty Cổ phần Chứng khoán Kiến thiết Việt Nam,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
NBW,Công ty Cổ phần Cấp nước Nhà Bè,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SDB,Công ty Cổ phần Sông Đà 207,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PSB,Công ty Cổ phần Đầu tư Dầu khí Sao Mai Bến Đình,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PVR,Công ty Cổ phần Đầu tư PVR Hà Nội,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SEP,Công ty Cổ phần Tổng Công ty Thương mại Quảng Trị,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
MPC,Công ty Cổ phần Tập đoàn Thủy sản Minh Phú,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
PTE,Công ty Cổ phần Xi măng Phú Thọ,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SDN,Công ty Cổ phần Sơn Đồng Nai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SDT,Công ty Cổ phần Sông Đà 10,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SDV,Công ty Cổ phần Dịch vụ Sonadezi,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
PGS,Công ty Cổ phần Kinh doanh Khí Miền Nam,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SFC,Công ty Cổ phần Nhiên liệu Sài Gòn,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
KSF,Công ty Cổ phần Tập đoàn Sunshine,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SFI,Công ty Cổ phần Đại lý Vận tải SAFI,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
SGB,Ngân hàng Thương mại Cổ phần Sài Gòn Công thương,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
PLP,Công ty Cổ phần Sản xuất và Công nghệ Nhựa Pha Lê,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
PBT,Công ty Cổ Phần Bao bì và Thương mại Dầu khí Bình Sơn,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
SAP,Công ty Cổ phần In Sách Giáo khoa TP.Hồ Chí Minh,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
SBB,Công ty cổ phần Tập đoàn Bia Sài Gòn Bình Tây,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
TBC,Công ty Cổ phần Thủy điện Thác Bà,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
PV2,Công ty Cổ phần Đầu tư PV2,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
PMG,Công ty Cổ phần Đầu tư và Sản xuất Petro Miền Trung,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SGH,Công ty Cổ phần Khách sạn Sài Gòn,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
POB,Công ty Cổ phần Xăng dầu Dầu khí Thái Bình,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SGR,Công ty Cổ phần Tổng Công ty Cổ phần Địa ốc Sài Gòn,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
NTP,Công ty Cổ phần Nhựa Thiếu niên Tiền Phong,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SHP,Công ty Cổ phần Thủy điện Miền Nam,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TPS,Công ty Cổ phần Bến bãi vận tải Sài Gòn,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
SHB,Ngân hàng Thương mại Cổ phần Sài Gòn – Hà Nội,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
PSG,Công ty Cổ phần Đầu tư và Xây lắp Dầu khí Sài Gòn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PXC,Công ty Cổ phần Phát triển Đô thị Dầu khí,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SMB,Công ty Cổ phần Bia Sài Gòn - Miền Trung,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
SHG,Tổng Công ty Cổ phần Sông Hồng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PVC,Tổng Công ty Hóa chất và Dịch vụ Dầu khí - Công ty Cổ phần,"Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
SHN,Công ty Cổ phần Đầu tư Tổng hợp Hà Nội,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
TGP,Công ty Cổ phần Trường Phú,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
SGT,Công ty Cổ phần Công nghệ Viễn thông Sài Gòn,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Internet,CT,9000,9500,9530,9535
SDY,Công ty Cổ phần Xi măng Sông Đà Yaly,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
PTO,Công ty Cổ phần Dịch vụ - Xây dựng Công trình Bưu điện,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PVV,Công ty Cổ phần Vinaconex 39,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SHS,Công ty Cổ phần Chứng khoán Sài Gòn - Hà Nội,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
SIV,Công ty Cổ phần SIVICO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SJ1,Công ty Cổ phần Nông nghiệp Hùng Hậu,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SPV,Công ty Cổ phần Thủy Đặc Sản,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SZG,Công ty Cổ phần Sonadezi Giang Điền,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SJE,Công ty Cổ phần Sông Đà 11,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PVX,Tổng Công ty Cổ phần Xây lắp Dầu khí Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SJF,Công ty Cổ phần Đầu tư Sao Thái Dương,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
SGS,Công ty Cổ phần Vận tải biển Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VNB,Công ty Cổ phần Sách Việt Nam,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
TDG,Công ty Cổ phần Đầu tư TDG Global,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SJM,Công ty Cổ phần Sông Đà 19,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DTH,Công ty Cổ phần Dược - Vật tư Y tế Thanh Hóa,Thiết bị và Dịch vụ Y tế,Y tế,Thiết bị y tế,CT,4000,4500,4530,4535
SJS,Công ty Cổ phần SJ Group,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SKG,Công ty Cổ phần Tàu Cao tốc Superdong - Kiên Giang,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
MSH,Công ty Cổ phần May Sông Hồng,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
PVA,Công ty Cổ phần Tổng Công ty Xây lắp Dầu khí Nghệ An,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PJC,Công ty Cổ phần Thương mại và Vận tải Petrolimex Hà Nội,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SD8,Công ty Cổ phần Sông Đà 8,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
PMW,Công ty Cổ phần Cấp Nước Phú Mỹ,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SMA,Công ty Cổ phần Thiết bị Phụ tùng Sài Gòn,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
SMC,Công ty Cổ phần Đầu tư Thương mại SMC,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
SMT,Công ty Cổ phần SAMETEL,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
SNC,Công ty Cổ phần Xuất nhập khẩu Thủy sản Năm Căn,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SLS,Công ty Cổ phần Mía đường Sơn La,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
SIG,Công ty Cổ phần Đầu tư và Thương mại Sông Đà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
QHW,Công ty Cổ phần Nước khoáng Quảng Ninh,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
SMN,Công ty Cổ phần Sách và thiết bị giáo dục Miền Nam,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
POS,"Công ty Cổ phần Dịch vụ lắp đặt, vận hành và bảo dưỡng công trình dầu khí biển PTSC","Thiết bị, Dịch vụ và Phân phối Dầu khí",Dầu khí,Thiết bị và Dịch vụ Dầu khí,CT,0001,0500,0570,0573
SAS,Công ty Cổ phần Dịch vụ Hàng không Sân bay Tân Sơn Nhất,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
NQN,Công ty Cổ phần Nước sạch Quảng Ninh,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SHE,Công ty Cổ phần Phát triển Năng Lượng Sơn Hà,Hàng gia dụng,Hàng cá nhân & Gia dụng,Đồ gia dụng lâu bền,CT,3000,3700,3720,3722
XLV,Công ty Cổ phần Xây lắp và Dịch vụ Sông Đà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TNC,Công ty Cổ phần Cao su Thống Nhất,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
PVG,Công ty Cổ phần Kinh doanh LPG Việt Nam,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SPB,Công ty Cổ phần Sợi Phú Bài,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
SPC,Công ty Cổ phần Bảo vệ Thực vật Sài Gòn,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
TNI,Công ty Cổ phần Tập đoàn Thành Nam,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
SFG,Công ty Cổ phần Phân bón Miền Nam,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
SPD,Công ty Cổ phần Xuất nhập khẩu Thủy sản Miền Trung,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SP2,Công ty Cổ phần Thủy điện Sử Pán 2,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TSG,Công ty Cổ phần Thông tin Tín hiệu Đường sắt Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,Đường sắt,CT,2000,2700,2770,2775
SPM,Công ty Cổ phần S.P.M,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
ISH,Công ty Cổ phần Thủy điện Srok Phu Miêng IDICO,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TR1,Công ty Cổ phần Vận Tải 1 Traco,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
SDG,Công ty Cổ phần Sadico Cần Thơ,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
SQC,Công ty Cổ phần Khoáng sản Sài Gòn - Quy Nhơn,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
SII,Công ty Cổ phần Hạ tầng Nước Sài Gòn,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SRA,Công ty Cổ phần SARA Việt Nam,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
QNW,Công ty Cổ phần Cấp thoát nước và xây dựng Quảng Ngãi,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SRC,Công ty Cổ phần Cao su Sao Vàng,Ô tô và phụ tùng,Ô tô và phụ tùng,Lốp xe,CT,3000,3300,3350,3357
SRF,Công ty Cổ phần Searefico,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
SED,Công ty Cổ phần Đầu tư và Phát triển Giáo dục Phương Nam,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
S4A,Công ty Cổ phần Thủy điện Sê San 4A,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
SDA,Công ty Cổ phần SIMCO Sông Đà,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Đào tạo & Việc làm,CT,2000,2700,2790,2793
SSC,Công ty Cổ phần Giống cây trồng Miền Nam,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SSF,Công ty Cổ phần Giáo dục G Sài Gòn,Hàng cá nhân,Hàng cá nhân & Gia dụng,Giầy dép,CT,3000,3700,3760,3765
SGD,Công ty Cổ phần Sách Giáo dục tại Thành phố Hồ Chí Minh,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
SSG,Công ty Cổ phần Vận tải Biển Hải Âu,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
SD6,Công ty Cổ phần Sông Đà 6,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NSH,Công ty Cổ phần Tập đoàn Nhôm Sông Hồng Shalumi,Kim loại,Tài nguyên Cơ bản,Nhôm,CT,1000,1700,1750,1753
QHD,Công ty Cổ phần Que hàn điện Việt Đức,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Công nghiệp phức hợp,CT,2000,2700,2720,2727
SIP,Công ty Cổ phần Đầu tư Sài Gòn VRG,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SSM,Công ty Cổ phần Chế tạo kết cấu thép VNECO.SSM,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
SSN,Công ty Cổ phần Xuất nhập khẩu Thủy sản Sài Gòn,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
SBV,Công ty Cổ phần Siam Brothers Việt Nam,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
QNU,Công ty Cổ phần Môi trường Đô thị Quảng Nam,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
SVN,Công ty Cổ phần Tập đoàn Vexilla Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SWC,Tổng Công ty Cổ phần Đường Sông Miền Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
ST8,Công ty Cổ phần Tập đoàn ST8,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị văn phòng,CT,9000,9500,9570,9574
SKN,Công ty Cổ phần Nước giải khát Sanna Khánh Hòa,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
RTB,Công ty Cổ phần Cao su Tân Biên,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
SNZ,Tổng Công ty Cổ phần Phát triển Khu Công nghiệp,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
STC,Công ty Cổ phần Sách và Thiết bị trường học Thành phố Hồ Chí Minh,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
STB,Ngân hàng Thương mại Cổ phần Sài Gòn Thương Tín,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
TBT,Công ty Cổ phần Xây dựng Công trình Giao thông Bến Tre,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
STL,Công ty Cổ phần Sông Đà - Thăng Long,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
STP,Công ty Cổ phần Công nghiệp Thương mại Sông Đà,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
STS,Công ty Cổ phần Dịch vụ vận tải Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
SSI,Công ty Cổ phần Chứng khoán SSI,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
STT,Công ty Cổ phần Vận chuyển Sài Gòn Tourist,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
SBR,Công ty Cổ phần Cao su Sông Bé,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
SRB,Công ty Cổ phần Tập đoàn Sara,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
STW,Công ty Cổ phần Cấp nước Sóc Trăng,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SVH,Công ty Cổ phần Thủy điện Sông Vàng,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TCR,Công ty Cổ phần Công nghiệp Gốm sứ TAICERA,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
SHC,Công ty Cổ phần Hàng hải Sài Gòn,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
NSL,Công ty Cổ phần Cấp nước Sơn La,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
SHI,Công ty Cổ phần Quốc tế Sơn Hà,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
SDU,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Đô thị Sông Đà,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
SVC,Công ty Cổ phần Dịch vụ tổng hợp Sài Gòn,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
SVD,Công ty Cổ phần Đầu tư & Thương mại Vũ Đăng,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
SVI,Công ty Cổ phần Bao bì Biên Hòa,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
TCM,Công ty Cổ phần Dệt may - Đầu tư - Thương mại Thành Công,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
GND,Công ty Cổ phần Gạch ngói Đồng Nai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TCT,Công ty Cổ phần Cáp treo Núi Bà Tây Ninh,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
SVT,Công ty Cổ phần Công nghệ Sài Gòn Viễn Đông,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
TV6,Công ty Cổ phần Tập đoàn EMA LAND,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
SZE,Công ty Cổ phần Môi trường Sonadezi,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
SZL,Công ty Cổ phần Sonadezi Long Thành,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
SZB,Công ty Cổ phần Sonadezi Long Bình,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
TA6,Công ty Cổ phần Đầu tư và Xây lắp Thành An 665,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TA9,Công ty Cổ phần Xây lắp Thành An 96,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TKA,Công ty Cổ phần Bao bì Tân Khánh An,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
AST,Công ty Cổ phần Dịch vụ Hàng không Taseco,Bán lẻ,Bán lẻ,Phân phối hàng chuyên dụng,CT,5000,5300,5370,5379
TLP,Tổng Công ty Thương mại Xuất nhập khẩu Thanh Lễ - CTCP,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
SVG,Công ty Cổ phần Hơi kỹ nghệ Que hàn,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Công nghiệp phức hợp,CT,2000,2700,2720,2727
TAL,Công Ty Cổ Phần Đầu Tư Bất Động Sản Taseco,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
UDC,Công ty Cổ phần Xây dựng và Phát triển đô thị Tỉnh Bà Rịa - Vũng Tàu,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TAW,Công ty Cổ phần Cấp nước Trung An,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
TB8,Công ty Cổ phần Sản xuất và Kinh doanh Vật tư Thiết bị - VVMI,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
UNI,Công ty Cổ phần Đầu tư và Phát triển Sao Mai Việt,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Dịch vụ Máy tính,CT,9000,9500,9530,9533
TBD,Tổng công ty Thiết bị điện Đông Anh - Công ty Cổ phần,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
TBH,Công ty Cổ phần Tổng Bách Hóa,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
TBW,Công ty cổ phần Nước sạch Thái Bình,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
TBX,Công ty Cổ phần Xi măng Thái Bình,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TCB,Ngân hàng Thương mại Cổ phần Kỹ thương Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
TCL,Công ty Cổ phần Đại lý Giao nhận Vận tải Xếp dỡ Tân Cảng,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
TCO,Công ty Cổ phần TCO Holdings,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
TCI,Công ty Cổ phần Chứng khoán Thành Công,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
G36,Tổng Công ty 36 - Công ty Cổ phần,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TCW,Công ty Cổ phần Kho Vận Tân Cảng,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
TDC,Công ty Cổ phần Kinh doanh và Phát triển Bình Dương,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
VCP,Công ty Cổ phần Xây dựng và Năng lượng VCP,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
GTD,Công ty Cổ phần Giầy Thượng Đình,Hàng cá nhân,Hàng cá nhân & Gia dụng,Giầy dép,CT,3000,3700,3760,3765
TDH,Công ty Cổ phần Phát triển Nhà Thủ Đức,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
THN,Công ty Cổ phần Cấp nước Thanh Hóa,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
TTD,Công ty Cổ phần Bệnh viện Tim Tâm Đức,Thiết bị và Dịch vụ Y tế,Y tế,Chăm sóc y tế,CT,4000,4500,4530,4533
PAT,Công ty Cổ phần Phốt pho Apatit Việt Nam,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
THB,Công ty Cổ phần Bia Hà Nội - Thanh Hóa,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
TDM,Công ty Cổ phần Nước Thủ Dầu Một,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
THG,Công ty Cổ phần Đầu tư và Xây dựng Tiền Giang,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VC7,Công ty Cổ phần Tập đoàn BGI,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
NTH,Công ty Cổ phần Thủy điện Nước Trong,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TDP,Công ty Cổ phần Thuận Đức,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
TDS,Công ty Cổ phần Thép Thủ Đức - VNSTEEL,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TDT,Công ty Cổ phần Đầu tư và Phát triển TDT,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
TDW,Công ty Cổ phần Cấp nước Thủ Đức,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
CET,Công ty Cổ phần HTC Holding,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
TED,Tổng Công ty Tư vấn Thiết kế Giao thông Vận tải - CTCP,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TEG,Công ty Cổ phần Năng Lượng và Bất động sản Trường Thành,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
TEL,Công ty Cổ phần Phát triển Công trình Viễn thông,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TET,Công ty Cổ phần Vải sợi May mặc Miền Bắc,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
TFC,Công ty Cổ phần Trang,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
TGG,Công ty Cổ phần The Golden Group,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VCG,Tổng Công ty Cổ phần Xuất nhập khẩu và Xây dựng Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TH1,Công ty Cổ phần Xuất nhập khẩu Tổng hợp I Việt Nam,Phân phối thực phẩm & dược phẩm,Bán lẻ,Phân phối thực phẩm,CT,5000,5300,5330,5337
VDB,Công ty Cổ phần Vận tải và Chế biến Than Đông Bắc,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
TNV,Công ty Cổ phần Thống Nhất Hà Nội,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
MTB,Công ty Cổ phần Môi trường và Công trình đô thị tỉnh Thái Bình,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
VE2,Công ty Cổ phần Xây dựng Điện VNECO 2,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
BTB,Công ty Cổ phần Bia Hà Nội - Thái Bình,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
VFS,Công ty Cổ phần Chứng khoán Nhất Việt,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
VIC,Tập đoàn Vingroup - Công ty CP,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
THD,Công ty Cổ phần Thaiholdings,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
TIE,Công ty Cổ phần TIE,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
TLD,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Đô thị Thăng Long,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
TLH,Công ty Cổ phần Tập đoàn Thép Tiến Lên,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TLI,Công ty Cổ phần May Quốc tế Thắng Lợi,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
THT,Công ty Cổ phần Than Hà Tu - Vinacomin,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
TLT,Công ty Cổ phần Viglacera Thăng Long,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TQN,Công ty Cổ phần Thông Quảng Ninh,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
SB1,Công ty Cổ phần Bia Sài Gòn - Nghệ Tĩnh,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
VTD,Công ty Cổ phần Vietourist Holdings,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
THS,Công ty Cổ phần Thanh Hoa Sông Đà,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
THU,Công ty Cổ phần Môi trường và Công trình đô thị Thanh Hóa,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
TMW,Công ty Cổ phần Tổng hợp Gỗ Tân Mai,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
TAN,Công ty Cổ phần Cà phê Thuận An,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
TNS,Công ty Cổ phần Thép tấm lá Thống Nhất,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TNM,Công ty Cổ phần Xuất nhập khẩu và Xây dựng Công trình,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TVD,Công ty Cổ phần Than Vàng Danh - Vinacomin,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
TXM,Công ty Cổ phần VICEM Thạch cao Xi Măng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
THW,Công ty Cổ phần Cấp nước Tân Hòa,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
FCC,Công ty Cổ phần Liên hợp Thực phẩm,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
TTH,Công ty Cổ phần Thương mại và Dịch vụ Tiến Thành,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TIG,Công ty Cổ phần Tập đoàn Đầu tư Thăng Long,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
TNT,Công ty Cổ phần Tập đoàn TNT,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
TID,Công ty Cổ phần Tổng Công ty Tín Nghĩa,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VAV,Công ty Cổ phần VIWACO,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
TIP,Công ty Cổ phần Phát triển Khu công nghiệp Tín Nghĩa,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
DTG,Công ty Cổ phần Dược phẩm Tipharco,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
TVM,Công ty Cổ phần Tư vấn đầu tư Mỏ và công nghiệp - Vinacomin,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
TIS,Công ty Cổ phần Gang thép Thái Nguyên,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TIX,Công ty Cổ phần Sản xuất Kinh doanh Xuất nhập khẩu Dịch vụ và Đầu tư Tân Bình,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
TJC,Công ty Cổ phần Dịch vụ Vận tải và Thương mại,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
TMG,Công ty Cổ phần Kim loại màu Thái Nguyên - Vimico,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TKC,Công ty Cổ phần Xây dựng và Kinh doanh Địa ốc Tân Kỷ,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TKG,Công ty Cổ phần Sản xuất và Thương mại Tùng Khánh,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TKU,Công ty Cổ phần Công nghiệp Tung Kuang,Kim loại,Tài nguyên Cơ bản,Nhôm,CT,1000,1700,1750,1753
TL4,Tổng Công ty Xây dựng Thủy lợi 4 - Công ty Cổ phần,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TPP,Công ty Cổ phần Tân Phú Việt Nam,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
TNG,Công ty Cổ phần Đầu tư và Thương mại TNG,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
TLG,Công ty Cổ phần Tập đoàn Thiên Long,Hàng gia dụng,Hàng cá nhân & Gia dụng,Đồ gia dụng một lần,CT,3000,3700,3720,3724
TTL,Tổng Công ty Thăng Long - Công ty Cổ phần,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DTK,Tổng Công ty Điện lực TKV - Công ty Cổ phần,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
THP,Công ty Cổ phần Thủy sản và Thương mại Thuận Phước,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
MBS,Công ty Cổ phần Chứng khoán MB,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
TMC,Công ty Cổ phần Thương mại Xuất nhập khẩu Thủ Đức,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
TAR,Công ty Cổ phần Nông nghiệp Công nghệ cao Trung An,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
VVN,Tổng Công ty Cổ phần Xây dựng Công nghiệp Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TMP,Công ty Cổ phần Thủy điện Thác Mơ,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TMS,Công ty Cổ phần Transimex,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
TPB,Ngân hàng Thương mại Cổ phần Tiên Phong,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
TMT,Công ty Cổ phần Ô tô TMT,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
TTT,Công ty Cổ phần Du Lịch - Thương Mại Tây Ninh,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
TMX,Công ty Cổ phần VICEM Thương mại Xi măng,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TN1,Công ty Cổ phần Rox Key Holdings,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
TNA,Công ty Cổ phần Thương mại Xuất nhập khẩu Thiên Nam,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
TNB,Công ty Cổ phần Thép Nhà Bè - VNSTEEL,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
STH,Công ty Cổ phần Phát hành sách Thái Nguyên,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
GDA,Công ty Cổ phần Tôn Đông Á,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
BAX,Công ty Cổ phần Thống Nhất,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VE3,Công ty Cổ phần Xây dựng điện VNECO 3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TNP,Công ty Cổ phần Cảng Thị Nại,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VPS,Công ty Cổ phần Thuốc sát trùng Việt Nam,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
VIT,Công ty Cổ phần Viglacera Tiên Sơn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VDS,Công ty Cổ phần Chứng khoán Rồng Việt,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
VE8,Công ty Cổ phần Xây dựng Điện Vneco 8,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TCJ,Công ty Cổ phần Tô Châu,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
VWS,Công ty Cổ phần Nước và Môi trường Việt Nam,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
TOP,Công ty Cổ phần Phân phối Top One,Bán lẻ,Bán lẻ,Bán lẻ phức hợp,CT,5000,5300,5370,5373
TOT,Công ty Cổ phần Transimex Logistics,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
BCF,Công ty Cổ phần Thực phẩm Bích Chi,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
TPC,Công ty Cổ phần Nhựa Tân Đại Hưng,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
TPH,Công ty Cổ phần In Sách giáo khoa tại Thành phố Hà Nội,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
VHL,Công ty Cổ phần Viglacera Hạ Long,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TRA,Công ty Cổ phần Traphaco,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
TRC,Công ty Cổ phần Cao su Tây Ninh,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
VIW,Tổng công ty Đầu tư Nước và Môi trường Việt Nam - Công ty Cổ phần,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TCD,Công ty cổ phần Tập đoàn Xây dựng Tracodi,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TRS,Công ty Cổ phần Vận tải và Dịch vụ Hàng Hải,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
TDF,Công ty Cổ phần Trung Đô,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TVB,Công ty Cổ phần Chứng khoán Trí Việt,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
TS4,Công ty Cổ phần Thủy sản số 4,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
TSB,Công ty Cổ phần Ắc quy Tia Sáng,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
TSC,Công ty Cổ phần Vật tư Kỹ thuật Nông nghiệp Cần Thơ,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
TSD,Công ty Cổ phần Du lịch Trường Sơn Coecco,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
TST,Công ty Cổ phần Dịch vụ Kỹ thuật Viễn thông,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Dịch vụ Máy tính,CT,9000,9500,9530,9533
TTA,Công ty Cổ phần Đầu tư Xây dựng và Phát triển Trường Thành,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
TTB,Công ty Cổ phần TTBGROUP,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TTC,Công ty Cổ phần Gạch men Thanh Thanh,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TTF,Công ty Cổ phần Tập đoàn Kỹ nghệ Gỗ Trường Thành,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
TTG,Công ty Cổ phần May Thanh Trì,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
HUB,Công ty Cổ phần Xây lắp Thừa Thiên Huế,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TRT,Công ty Cổ phần RedstarCera,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TTN,Công ty Cổ phần Công nghệ & Truyền thông Việt Nam,Viễn thông cố định,Viễn thông,Viễn thông cố định,CT,6000,6500,6530,6535
TTZ,Công ty Cổ phần Đầu tư Xây dựng và Công nghệ Tiến Trung,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TQW,Công ty Cổ phần Cấp thoát nước Tuyên Quang,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
TV1,Công ty Cổ phần Tư vấn Xây dựng Điện 1,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
TV2,Công ty Cổ phần Tư vấn Xây dựng Điện 2,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
TV3,Công ty Cổ phần Tư vấn Xây dựng Điện 3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TV4,Công ty Cổ phần Tư vấn Xây dựng Điện 4,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
TVA,Công ty cổ phần Sứ Viglacera Thanh Trì,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TVC,Công ty Cổ phần Tập đoàn Quản lý Tài sản Trí Việt,Dịch vụ tài chính,Dịch vụ tài chính,Tài chính đặc biệt,CT,8000,8700,8770,8775
TVG,Công ty Cổ phần Tư vấn Đầu tư và Xây dựng Giao thông Vận tải,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
TVS,Công ty Cổ phần Chứng khoán Thiên Việt,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
TNW,Công ty Cổ phần Nước sạch Thái Nguyên,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
TYA,Công ty Cổ phần Dây và Cáp điện Taya Việt Nam,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
VND,Công ty Cổ phần Chứng khoán VNDIRECT,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
UCT,Công ty Cổ phần Đô thị Cần Thơ,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
UDJ,Công ty Cổ phần Phát triển Đô thị,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
UEM,Công ty Cổ phần Cơ điện Uông Bí - Vinacomin,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
UIC,Công ty Cổ phần Đầu tư Phát triển Nhà và Đô thị IDICO,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
UMC,Công ty Cổ phần Công trình đô thị Nam Định,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
UPC,Công ty Cổ phần Phát triển Công viên Cây xanh và Đô thị Vũng Tàu,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Tiện ích khác,CT,7000,7500,7570,7575
UPH,Công ty Cổ phần Dược phẩm TW25,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
USC,Công ty Cổ phần Khảo sát và Xây dựng - USCO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
USD,Công ty Cổ phần Công trình Đô thị Sóc Trăng,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
UXC,Công ty Cổ phần Chế biến Thủy sản Út Xi,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
V11,Công ty Cổ phần Xây dựng số 11,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
V12,Công ty Cổ phần Xây dựng số 12,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
V15,Công ty Cổ phần Xây dựng số 15,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
V21,Công ty Cổ phần Vinaconex 21,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VAB,Ngân hàng Thương mại Cổ phần Việt Á,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
VAF,Công ty Cổ phần Phân lân nung chảy Văn Điển,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
VBC,"Công ty Cổ phần Nhựa, Bao bì Vinh",Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Containers & Đóng gói,CT,2000,2700,2720,2723
VBH,Công ty Cổ phần Điện tử Bình Hòa,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
VCF,Công ty Cổ phần VinaCafé Biên Hòa,Bia và đồ uống,Thực phẩm và đồ uống,Đồ uống & giải khát,CT,3000,3500,3530,3537
VC1,Công ty Cổ phần Xây dựng số 1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VC2,Công ty Cổ phần Đầu tư và Xây dựng VINA2,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VIH,Công ty Cổ phần Viglacera Hà Nội,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VCT,Công ty Cổ phần Tư vấn Xây dựng Vinaconex,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
VC3,Công ty Cổ phần Tập đoàn Nam Mê Kông,Bất động sản,Bất động sản,"Tư Vấn, Định giá, Môi giới Bất động sản",CT,8000,8600,8630,8637
VCM,Công ty Cổ phần BV Life,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Đào tạo & Việc làm,CT,2000,2700,2790,2793
VCX,Công ty Cổ phần Xi măng Yên Bình,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VCR,Công ty Cổ phần Đầu tư và Phát triển Du lịch Vinaconex,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VCS,Công ty Cổ phần VICOSTONE,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VDL,Công ty Cổ phần Thực phẩm Lâm Đồng,Bia và đồ uống,Thực phẩm và đồ uống,Vang & Rượu mạnh,CT,3000,3500,3530,3535
VDN,Công ty Cổ phần Vinatex Đà Nẵng,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VC5,Công ty Cổ phần Xây dựng Số 5,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VDT,Công ty Cổ phần Lưới thép Bình Tây,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
VC6,Công ty cổ phần Xây dựng và Đầu tư Visicons,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VC9,Công ty Cổ phần Xây dựng số 9 - VC9,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VCA,Công ty Cổ phần Thép VICASA - VNSTEEL,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
VEA,Tổng Công ty Máy động lực và Máy nông nghiệp Việt Nam - CTCP,Công nghiệp nặng,Hàng & Dịch vụ Công nghiệp,Máy công nghiệp,CT,2000,2700,2750,2757
VCB,Ngân hàng Thương mại Cổ phần Ngoại thương Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
VEF,Công ty Cổ phần Trung tâm Hội chợ Triển lãm Việt Nam,Truyền thông,Truyền thông,Dịch vụ truyền thông,CT,5000,5500,5550,5555
VEC,Tổng Công ty Cổ phần Điện tử và Tin học Việt Nam,Thiết bị và Phần cứng,Công nghệ Thông tin,Phần cứng,CT,9000,9500,9570,9572
VE4,Công ty Cổ phần Xây dựng điện VNECO4,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VCC,Công ty Cổ phần Vinaconex 25,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VES,Công ty Cổ phần Đầu tư và Xây dựng Điện MÊ CA VNECO,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VCI,Công ty Cổ phần Chứng khoán Vietcap,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
VFG,Công ty Cổ phần Khử trùng Việt Nam,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
CCV,Công ty Cổ phần Tư vấn Xây dựng Công nghiệp và Đô thị Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VE9,Công ty Cổ phần Đầu tư và Xây dựng VNECO 9,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
CLM,Công ty Cổ phần Xuất nhập khẩu Than - Vinacomin,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
VFR,Công ty Cổ phần Vận tải và Thuê tàu,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VGP,Công ty Cổ phần Cảng Rau Quả,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VUA,Công ty Cổ phần Chứng khoán Stanley Brothers,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
NDT,Tổng Công ty Cổ phần Dệt may Nam Định,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VE1,Công ty Cổ phần Xây dựng điện VNECO 1,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VHC,Công ty Cổ phần Vĩnh Hoàn,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
VHF,Công ty Cổ phần Xây dựng và Chế biến lương thực Vĩnh Hà,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
VHH,Công ty Cổ phần Đầu tư Kinh doanh nhà Thành Đạt,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VFC,Công ty Cổ phần VINAFCO,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VGS,Công ty Cổ phần Ống thép Việt - Đức VG PIPE,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
VHG,Công ty Cổ phần Đầu tư và Phát triển Việt Trung Nam,Hàng công nghiệp,Hàng & Dịch vụ Công nghiệp,Công nghiệp phức hợp,CT,2000,2700,2720,2727
VGC,Tổng Công ty Viglacera - Công ty Cổ phần,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VIB,Ngân hàng Thương mại Cổ phần Quốc tế Việt Nam,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
TVT,Tổng Công ty Việt Thắng - CTCP,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VID,Công ty Cổ phần Đầu tư Phát triển Thương mại Viễn Đông,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
PVO,Công ty Cổ phần Dầu nhờn PV Oil,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
MBG,Công ty Cổ phần Tập đoàn MBG,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VDP,Công ty Cổ phần Dược phẩm Trung ương VIDIPHA,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
VIE,Công ty Cổ phần Công nghệ Viễn thông VI TE CO,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
MVB,Tổng Công ty Công nghiệp mỏ Việt Bắc TKV - Công ty Cổ phần,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
VJC,Công ty Cổ phần Hàng không Vietjet,Du lịch & Giải trí,Du lịch và Giải trí,Hàng không,CT,5000,5700,5750,5751
DVM,Công ty Cổ phần Dược liệu Việt Nam,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
VTR,Công ty Cổ phần Du lịch và tiếp thị giao thông vận tải Việt Nam - Vietravel,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
VIG,Công ty Cổ phần Chứng khoán Đầu tư Tài chính Việt Nam,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
VLC,Tổng Công ty Chăn nuôi Việt Nam - Công ty Cổ phần,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
VIM,Công ty Cổ phần Khoáng sản Viglacera,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
VNE,Tổng Công ty Cổ phần Xây dựng điện Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VIN,Công ty Cổ phần Giao nhận Kho vận Ngoại thương Việt Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VIF,Tổng Công ty Lâm nghiệp Việt Nam - Công ty Cổ phần,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Lâm sản và Chế biến gỗ,CT,1000,1700,1730,1733
VHE,Công ty Cổ phần Dược liệu và Thực phẩm Việt Nam,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
VHD,Công ty Cổ phần Đầu tư phát triển nhà và đô thị VINAHUD,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
KIP,Công ty Cổ phần K.I.P Việt Nam,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Thiết bị điện,CT,2000,2700,2730,2737
VGT,Tập đoàn Dệt May Việt Nam,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VMT,Công ty Cổ phần Giao nhận Vận tải Miền Trung,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
VGL,Công ty Cổ phần Mạ kẽm công nghiệp Vingal-Vnsteel,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
VIP,Công ty Cổ phần Vận tải Xăng dầu VIPCO,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VGR,Công ty Cổ phần Cảng xanh VIP,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
GVT,Công ty Cổ phần Giấy Việt Trì,Lâm nghiệp và Giấy,Tài nguyên Cơ bản,Sản xuất giấy,CT,1000,1700,1730,1737
VLP,Công ty Cổ phần Công trình Công cộng Vĩnh Long,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Chất thải & Môi trường,CT,2000,2700,2790,2799
VIR,Công ty Cổ phần Du lịch Quốc tế Vũng Tàu,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
VSN,Công ty Cổ phần Việt Nam Kỹ Nghệ Súc Sản,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
VMD,Công ty Cổ phần Y Dược phẩm Vimedimex,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
VIX,Công ty Cổ phần Chứng khoán VIX,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
VKC,Công ty Cổ phần VKC Holdings,Ô tô và phụ tùng,Ô tô và phụ tùng,Lốp xe,CT,3000,3300,3350,3357
VKP,Công ty Cổ phần Nhựa Tân Hóa,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
VLA,Công ty Cổ phần Đầu tư và Phát triển Công nghệ Văn Lang,Phần mềm & Dịch vụ Máy tính,Công nghệ Thông tin,Phần mềm,CT,9000,9500,9530,9537
VLF,Công ty Cổ phần Lương thực Thực phẩm Vĩnh Long,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
VMC,Công ty Cổ phần VIMECO,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VMS,Công ty Cổ phần Phát triển Hàng Hải,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VMG,Công ty Cổ phần Thương mại và Dịch vụ Dầu khí Vũng Tàu,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Phân phối xăng dầu & khí đốt,CT,7000,7500,7570,7573
ABC,Công ty Cổ phần Truyền thông VMG,Viễn thông di động,Viễn thông,Viễn thông di động,CT,6000,6500,6570,6575
MGC,Công ty Cổ phần Địa chất mỏ - TKV,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
VTA,Công ty Cổ phần VITALY,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VMA,Công ty Cổ phần Công nghiệp Ô tô - Vinacomin,Ô tô và phụ tùng,Ô tô và phụ tùng,Sản xuất ô tô,CT,3000,3300,3350,3353
MTS,Công ty Cổ phần Vật tư - TKV,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Nhà cung cấp thiết bị,CT,2000,2700,2790,2797
VNA,Công ty Cổ phần Vận tải biển Vinaship,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
E12,Công ty Cổ phần Xây Dựng Điện VNECO 12,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
AIC,Tổng Công ty Cổ phần Bảo hiểm Hàng không,Bảo hiểm phi nhân thọ,Bảo hiểm,Bảo hiểm phi nhân thọ,BH,8000,8500,8530,8536
HVN,Tổng Công ty Hàng không Việt Nam - CTCP,Du lịch & Giải trí,Du lịch và Giải trí,Hàng không,CT,5000,5700,5750,5751
VNC,Công ty Cổ phần Tập đoàn Vinacontrol,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
VGV,Tổng Công ty Tư vấn Xây dựng Việt Nam - CTCP,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
CGV,Công ty Cổ phần Vinaceglass,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
TMB,Công ty Cổ phần Kinh doanh Than Miền Bắc - Vinacomin,Khai khoáng,Tài nguyên Cơ bản,Khai thác Than,CT,1000,1700,1770,1771
VNM,Công ty Cổ phần Sữa Việt Nam,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
VNY,Công ty Cổ phần Thuốc thú y Trung ương I,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
VNF,Công ty Cổ phần Vinafreight,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
VNG,Công ty Cổ phần Du Lịch Thành Thành Công,Du lịch & Giải trí,Du lịch và Giải trí,Khách sạn,CT,5000,5700,5750,5753
BMV,Công ty Cổ phần Bột mỳ Vinafood 1,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
VXT,Công ty Cổ phần Kho vận và dịch vụ thương mại,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Nhà cung cấp thiết bị,CT,2000,2700,2790,2797
VSF,Tổng Công ty Lương thực Miền Nam - Công ty Cổ phần,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
VNZ,Công ty Cổ phần VNG,Truyền thông,Truyền thông,Giải trí & Truyền thông,CT,5000,5500,5550,5553
VNH,Công ty Cổ phần Đầu tư Việt Việt Nhật,Sản xuất thực phẩm,Thực phẩm và đồ uống,Nuôi trồng nông & hải sản,CT,3000,3500,3570,3573
VNI,Công ty Cổ phần Đầu tư Bất động sản Việt Nam,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VOC,Tổng Công ty Công nghiệp Dầu thực vật Việt Nam - Công ty Cổ phần,Sản xuất thực phẩm,Thực phẩm và đồ uống,Thực phẩm,CT,3000,3500,3570,3577
GVR,Tập đoàn Công nghiệp Cao su Việt Nam - Công ty Cổ phần,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
VOS,Công ty Cổ phần Vận tải Biển Việt Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VNL,Công ty Cổ phần Logistics Vinalink,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
MVN,Tổng Công ty Hàng hải Việt Nam - CTCP,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VLG,Công ty Cổ phần VIMC Logistics,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
TVN,Tổng Công ty Thép Việt Nam - Công ty Cổ phần,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
VPD,Công ty Cổ phần Phát triển Điện lực Việt Nam,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
VPC,Công ty Cổ phần Đầu tư và Phát triển Năng lượng Việt Nam,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
DVN,Tổng Công ty Dược Việt Nam - CTCP,Dược phẩm,Y tế,Dược phẩm,CT,4000,4500,4570,4577
VNS,Công ty Cổ phần Ánh Dương Việt Nam,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
VPA,Công ty Cổ phần Vận tải Hóa dầu VP,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VNP,Công ty Cổ phần Nhựa Việt Nam,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
VPI,Công ty Cổ phần Đầu tư Văn Phú - Invest,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VNR,Tổng Công ty Cổ phần Tái bảo hiểm Quốc gia Việt Nam,Bảo hiểm phi nhân thọ,Bảo hiểm,Tái bảo hiểm,BH,8000,8500,8530,8538
VNT,Công ty Cổ phần Giao nhận Vận tải Ngoại Thương,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
VSE,Công ty Cổ phần Dịch vụ Đường cao tốc Việt Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VNX,Công ty Cổ phần Quảng cáo và Hội chợ Thương mại Vinexad,Truyền thông,Truyền thông,Dịch vụ truyền thông,CT,5000,5500,5550,5555
VSA,Công ty Cổ phần Đại lý Hàng hải Việt Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
VSG,Công ty Cổ phần Container Phía Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VPB,Ngân hàng Thương mại Cổ phần Việt Nam Thịnh Vượng,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
VSI,Công ty Cổ phần Đầu tư và Xây dựng Cấp thoát nước,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VPG,Công ty Cổ phần Đầu tư Thương mại Xuất nhập khẩu Việt Phát,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775
VPH,Công ty Cổ phần Vạn Phát Hưng,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VPR,Công ty Cổ phần VINAPRINT,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
VTB,Công ty Cổ phần Viettronics Tân Bình,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
VPW,Công ty Cổ phần Cấp thoát nước số 1 Vĩnh Phúc,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
VTE,Công ty Cổ phần VINACAP Kim Long,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
NVP,Công ty Cổ phần Nước sạch Vĩnh Phúc,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
VQC,Công ty Cổ phần Giám định Vinaconmin,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
VRC,Công ty Cổ phần Bất động sản và Đầu tư VRC,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VRG,Công ty Cổ phần Phát triển Đô thị và Khu Công nghiệp Cao Su Việt Nam,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VRE,Công ty Cổ phần Vincom Retail,Bất động sản,Bất động sản,Bất động sản,CT,8000,8600,8630,8633
VSC,Công ty Cổ phần Container Việt Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VSH,Công ty Cổ phần Thủy điện Vĩnh Sơn - Sông Hinh,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
VST,Công ty Cổ phần Vận tải và Thuê Tàu biển Việt Nam,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VTP,Tổng Công ty Cổ phần Bưu chính Viettel,Vận tải,Hàng & Dịch vụ Công nghiệp,Chuyển phát nhanh,CT,2000,2700,2770,2771
VTC,Công ty Cổ phần Viễn Thông VTC,Thiết bị và Phần cứng,Công nghệ Thông tin,Thiết bị viễn thông,CT,9000,9500,9570,9578
WCS,Công ty Cổ phần Bến xe Miền Tây,Vận tải,Hàng & Dịch vụ Công nghiệp,"Kho bãi, hậu cần và bảo dưỡng",CT,2000,2700,2770,2777
VGG,Tổng Công Ty Cổ phần May Việt Tiến,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VGI,Tổng Công ty Cổ phần Đầu tư Quốc tế Viettel,Viễn thông di động,Viễn thông,Viễn thông di động,CT,6000,6500,6570,6575
VTH,Công ty Cổ phần Dây cáp điện Việt Thái,Điện tử & Thiết bị điện,Hàng & Dịch vụ Công nghiệp,Hàng điện & điện tử,CT,2000,2700,2730,2733
VTI,Công ty Cổ phần Sản xuất - Xuất nhập khẩu Dệt may,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
VTJ,Công ty Cổ phần Thương mại và Đầu tư VI NA TA BA,Thuốc lá,Hàng cá nhân & Gia dụng,Thuốc lá,CT,3000,3700,3780,3785
VTK,Công ty Cổ phần Tư vấn và Dịch vụ Viettel,Tư vấn & Hỗ trợ Kinh doanh,Hàng & Dịch vụ Công nghiệp,Tư vấn & Hỗ trợ KD,CT,2000,2700,2790,2791
WSS,Công ty Cổ phần Chứng khoán Phố Wall,Dịch vụ tài chính,Dịch vụ tài chính,Môi giới chứng khoán,CK,8000,8700,8770,8777
VTL,Công ty Cổ phần Vang Thăng Long,Bia và đồ uống,Thực phẩm và đồ uống,Vang & Rượu mạnh,CT,3000,3500,3530,3535
VTM,Công ty Cổ phần Vận tải và Đưa đón thợ mỏ - Vinacomin,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
VTO,Công ty Cổ phần Vận tải Xăng dầu VITACO,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VTQ,Công ty Cổ phần Việt Trung Quảng Bình,Hóa chất,Hóa chất,"Nhựa, cao su & sợi",CT,1000,1300,1350,1353
VTS,Công ty Cổ phần Gạch Ngói Từ Sơn,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
WTC,Công ty Cổ phần Vận tải thủy - Vinacomin,Vận tải,Hàng & Dịch vụ Công nghiệp,Vận tải Thủy,CT,2000,2700,2770,2773
VBB,Ngân hàng Thương mại Cổ phần Việt Nam Thương Tín,Ngân hàng,Ngân hàng,Ngân hàng,NH,8301,8300,8350,8355
DLT,Công ty Cổ phần Du lịch và Thương mại - Vinacomin,Du lịch & Giải trí,Du lịch và Giải trí,Vận tải hành khách & Du lịch,CT,5000,5700,5750,5759
VTV,Công ty Cổ phần Năng lượng và Môi trường VICEM,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VTX,Công ty Cổ phần Vận tải Đa phương thức VIETRANSTIMEX,Vận tải,Hàng & Dịch vụ Công nghiệp,Dịch vụ vận tải,CT,2000,2700,2770,2779
CLH,Công ty Cổ phần Xi măng La Hiên VVMI,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VLW,Công ty Cổ phần Cấp nước Vĩnh Long,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
VW3,Công ty Cổ phần VIWASEEN3,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Xây dựng,CT,2000,2300,2350,2357
VCW,Công ty Cổ phần Đầu tư Nước sạch Sông Đà,Nước & Khí đốt,"Điện, nước & xăng dầu khí đốt",Nước,CT,7000,7500,7570,7577
VXB,Công ty Cổ phần Vật liệu xây dựng Bến Tre,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
VXP,Công ty Cổ phần Thuốc Thú y Trung ương VETVACO,Hóa chất,Hóa chất,"Sản phẩm hóa dầu, Nông dược & Hóa chất khác",CT,1000,1300,1350,1357
X26,Công ty Cổ phần 26,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
WSB,Công ty Cổ phần Bia Sài Gòn - Miền Tây,Bia và đồ uống,Thực phẩm và đồ uống,Sản xuất bia,CT,3000,3500,3530,3533
X20,Công ty Cổ phần X20,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng May mặc,CT,3000,3700,3760,3763
X77,Công ty Cổ phần Thành An 77,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
EPH,Công ty Cổ phần Dịch vụ Xuất bản Giáo dục Hà Nội,Truyền thông,Truyền thông,"Sách, ấn bản & sản phẩm văn hóa",CT,5000,5500,5550,5557
DFC,Công ty Cổ phần Xích líp Đông Anh,Kim loại,Tài nguyên Cơ bản,Thép và sản phẩm thép,CT,1000,1700,1750,1757
XMC,Công ty cổ phần Đầu tư và Xây dựng Xuân Mai,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
XMD,Công ty Cổ phần Xuân Mai - Đạo Tú,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
CQT,Công ty Cổ phần Xi măng Quán Triều VVMI,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
XPH,Công ty Cổ phần Xà phòng Hà Nội,Hàng cá nhân,Hàng cá nhân & Gia dụng,Hàng cá nhân,CT,3000,3700,3760,3767
XHC,Công ty Cổ phần Xuân Hòa Việt Nam,Hàng gia dụng,Hàng cá nhân & Gia dụng,Thiết bị gia dụng,CT,3000,3700,3720,3726
YBC,Công ty Cổ phần Xi măng và Khoáng sản Yên Bái,Xây dựng và Vật liệu,Xây dựng và Vật liệu,Vật liệu xây dựng & Nội thất,CT,2000,2300,2350,2353
XMP,Công ty Cổ phần Thủy điện Xuân Minh,Sản xuất & Phân phối Điện,"Điện, nước & xăng dầu khí đốt",Sản xuất & Phân phối Điện,CT,7000,7500,7530,7535
YBM,Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái,Khai khoáng,Tài nguyên Cơ bản,Khai khoáng,CT,1000,1700,1770,1775



================================================
FILE: assets/data/vn30_symbols.csv
================================================
symbol
ACB
BCM
BID
BVH
CTG
FPT
GAS
GVR
HDB
HPG
LPB
MBB
MSN
MWG
PLX
SAB
SHB
SSB
SSI
STB
TCB
TPB
VCB
VHM
VIB
VIC
VJC
VNM
VPB
VRE



================================================
FILE: assets/images/.DS_Store
================================================
[Non-text file]


================================================
FILE: dev/cleanup.py
================================================
import os
import shutil
import fnmatch

def delete_dirs(dirs):
    for dir in dirs:
        for root, dirnames, filenames in os.walk('.'):
            for dirname in fnmatch.filter(dirnames, dir):
                dir_path = os.path.join(root, dirname)
                try:
                    shutil.rmtree(dir_path)
                    print(f"Deleted directory: {dir_path}")
                except FileNotFoundError:
                    print(f"Directory not found: {dir_path}")
                except Exception as e:
                    print(f"Error while deleting directory: {dir_path}. Error: {str(e)}")

def delete_files(files):
    for file in files:
        for root, dirnames, filenames in os.walk('.'):
            for filename in fnmatch.filter(filenames, file):
                file_path = os.path.join(root, filename)
                try:
                    os.remove(file_path)
                    print(f"Deleted file: {file_path}")
                except FileNotFoundError:
                    print(f"File not found: {file_path}")
                except Exception as e:
                    print(f"Error while deleting file: {file_path}. Error: {str(e)}")

# List of directories to delete
dirs_to_delete = ["__pycache__", "build", "*.egg-info", "dist"]

# List of files to delete
files_to_delete = ["*.tmp"]

# Delete directories
delete_dirs(dirs_to_delete)

# Delete files
delete_files(files_to_delete)



================================================
FILE: dev/finance_report_ratio_mapping_dict_vci.xlsx
================================================
[Non-text file]


================================================
FILE: dev/tests_directory_init.py
================================================
import os

def create_directory_structure(base_path, structure):
    for entry, sub_structure in structure.items():
        entry_path = os.path.join(base_path, entry)
        if sub_structure is None:
            # It's a file, create an empty file
            open(entry_path, 'a').close()
        else:
            # It's a directory, create it and its substructure
            os.makedirs(entry_path, exist_ok=True)
            init_file = os.path.join(entry_path, '__init__.py')
            open(init_file, 'a').close()  # Create an empty __init__.py file
            create_directory_structure(entry_path, sub_structure)

# Define the directory structure
directory_structure = {
    'tests': {
        'core': {
            'test_converter.py': None,
            'test_config.py': None,
            'test_utils.py': None,
        },
        'explorer': {
            'misc': {
                'test_gold_price.py': None,
                'test_exchange_rate.py': None,
            },
            'msn': {
                'test_models.py': None,
                'test_quote.py': None,
            },
            'vci': {
                'test_company.py': None,
                'test_analysis.py': None,
                'test_models.py': None,
                'test_quote.py': None,
            },
            'tcbs': {
                'test_company.py': None,
                'test_analysis.py': None,
                'test_models.py': None,
                'test_quote.py': None,
            },
        },
        'common': {
            'test_data_explorer.py': None,
        },
    }
}

# Define the base path for the project
base_path = '/Users/mrthinh/Library/CloudStorage/OneDrive-Personal/Github/vnstock'

# Create the directory structure
create_directory_structure(base_path, directory_structure)

print("Directory structure created successfully.")



================================================
FILE: docs/0_vnstock3_demo_toc.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/0_vnstock3_demo_toc.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
> Bạn có thể nhấp vào đường link cho mỗi mục demo trong phần mục lục để hình dung cách sử dụng thư viện Vnstock3 trong thực tế. Chúc bạn có một trải nghiệm thú vị và hứng khởi 😃
"""

"""
# Mục lục
"""

"""
1. Chứng khoán Việt Nam [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb)
2. Chứng khoán quốc tế: Forex, Crypto, Chỉ số [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb)
3. Dữ liệu Thị trường, hàng hoá [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb)
4. Kết nối API chính thức từ Cty chứng khoán: đang cập nhật
5. Biểu diễn dữ liệu trực quan từ Vnstock3 [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock3.ipynb)
"""



================================================
FILE: docs/1_vietnam_stock_vnstock3.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
# Mục lục
"""

"""
# I. Cài đặt
"""

"""
## Cài đặt thư viện
"""

!pip install -U vnstock

"""
1. Chứng khoán Việt Nam [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb)
2. Chứng khoán quốc tế: Forex, Crypto, Chỉ số [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb)
3. Dữ liệu Thị trường, hàng hoá [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb)
4. Biểu diễn dữ liệu trực quan từ Vnstock3 [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock3.ipynb)
"""

"""
## Nạp thư viện lần đầu
"""

"""
> Bạn có thể nạp toàn bộ các module của thư viện vào môi trường làm việc nếu chưa biết rõ mình cần gì hoặc chọn từng module riêng biệt để nạp vào khi đã quen thuộc.
"""

## Nạp Wrapper làm việc chính (UI chính của thư viện)
from vnstock import Vnstock

## Có thể gọi các class chi tiết trong thư viện thay vì sử dụng cấp cao nhất là Vnstock
from vnstock import Listing, Quote, Company, Finance, Trading, Screener 

## Bạn cũng có thể gọi các class trong theo vị trí chi tiết của nguồn dữ liệu
from vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading

# hoặc

from vnstock.explorer.tcbs import Quote, Company, Finance, Trading, Screener

"""
# II. Truy xuất dữ liệu - CK Việt Nam
"""

"""
* Khởi tạo đối tượng stock để dùng cho tất cả thao tác truy xuất dữ liệu chứng khoán về sau. Luồng công việc minh hoạ dưới đây giả định bạn bắt đầu với 1 mã chứng khoán cần phân tích, mặc định là VN30F1M. Bạn có thể thay đổi sang mã bất kỳ bằng cách nhập tham số `symbol` tại hàm chức năng thay vì khởi tạo lại đối tượng. Ví dụ, mã `VN30F1M` được gán khi tạo đối tượng, nhưng khi gọi dữ liệu giá lịch sử, bạn có thể cập nhật mã mới là `ACB` thay vì khởi tạo lại đối tượng một cách bất tiện: `stock.quote.history(symbol='ACB', start='2020-01-01', end='2024-12-31')`

* Chọn nguồn dữ liệu thuộc danh sách được hỗ trợ: VCI, TCBS cho chứng khoán trong nước, MSN cho dữ liệu chứng khoán quốc tế và sàn HOSE.
"""

from vnstock import Vnstock
stock = Vnstock().stock(symbol='ACB', source='VCI')

"""
## Listing: Liệt kê danh sách chứng khoán
"""

"""
### Danh sách tất cả mã CK niêm yết (đơn giản)
"""

# VCI là nguồn dữ liệu từ CK Vietcap bên cạnh nguồn từ TCBS
stock.listing.all_symbols()
# Output:
#        symbol                                         organ_name

#   0       YTC  Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố ...

#   1       YEG                     Công ty Cổ phần Tập đoàn Yeah1

#   2       YBM     Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái

#   3       YBC      Công ty Cổ phần Xi măng và Khoáng sản Yên Bái

#   4       XPH                    Công ty Cổ phần Xà phòng Hà Nội

#   ...     ...                                                ...

#   1704    AAS            Công ty Cổ phần Chứng khoán SmartInvest

#   1705    AAM                    Công ty Cổ Phần Thủy Sản MeKong

#   1706    AAH                           Công ty Cổ phần Hợp Nhất

#   1707    AAA                  Công ty Cổ phần Nhựa An Phát Xanh

#   1708    A32                                 Công ty Cổ phần 32

#   

#   [1709 rows x 2 columns]

"""
### Liệt kê mã CP theo sàn (đầy đủ)
"""

# Dữ liệu bao gồm tất cả các mã không kể đang niêm yết hay không
stock.listing.symbols_by_exchange()
# Output:
#        symbol exchange   type               organ_short_name  \

#   0       YTC    UPCOM  STOCK                XNK Y tế TP.HCM   

#   1       YEG      HSX  STOCK                 Tập đoàn Yeah1   

#   2       YBM      HSX  STOCK          Khoáng sản CN Yên Bái   

#   3       YBC    UPCOM  STOCK  Xi măng và Khoáng sản Yên Bái   

#   4       XPH    UPCOM  STOCK                Xà phòng Hà Nội   

#   ...     ...      ...    ...                            ...   

#   2753    AAS    UPCOM  STOCK        Chứng khoán SmartInvest   

#   2754    AAM      HSX  STOCK                Thủy sản Mekong   

#   2755    AAH    UPCOM  STOCK                  Than Hợp Nhất   

#   2756    AAA      HSX  STOCK            An Phát Bioplastics   

#   2757    A32    UPCOM  STOCK                     Công ty 32   

#   

#                                                organ_name  

#   0     Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố ...  

#   1                        Công ty Cổ phần Tập đoàn Yeah1  

#   2        Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái  

#   3         Công ty Cổ phần Xi măng và Khoáng sản Yên Bái  

#   4                       Công ty Cổ phần Xà phòng Hà Nội  

#   ...                                                 ...  

#   2753            Công ty Cổ phần Chứng khoán SmartInvest  

#   2754                    Công ty Cổ Phần Thủy Sản MeKong  

#   2755                           Công ty Cổ phần Hợp Nhất  

#   2756                  Công ty Cổ phần Nhựa An Phát Xanh  

#   2757                                 Công ty Cổ phần 32  

#   

#   [2758 rows x 5 columns]

"""
### Liệt kê mã CP theo ngành icb
"""

stock.listing.symbols_by_industries()
# Output:
#        symbol                                         organ_name  \

#   0       BMK             Công ty Cổ Phần Kỹ thuật Nhiệt Mèo Đen   

#   1       LPT  Công ty Cổ phần Thương mại và Sản xuất Lập Phư...   

#   2       ACB                Ngân hàng Thương mại Cổ phần Á Châu   

#   3       CAG                      Công ty Cổ phần Cảng An Giang   

#   4       AGR               Công ty Cổ phần Chứng khoán AGRIBANK   

#   ...     ...                                                ...   

#   1587    XMD                  Công ty Cổ phần Xuân Mai - Đạo Tú   

#   1588    CQT            Công ty Cổ phần Xi măng Quán Triều VVMI   

#   1589    XPH                    Công ty Cổ phần Xà phòng Hà Nội   

#   1590    XMP                Công ty Cổ phần Thủy điện Xuân Minh   

#   1591    XHC                  Công ty Cổ phần Xuân Hòa Việt Nam   

#   

#                          icb_name3                      icb_name2  \

#   0           Xây dựng và Vật liệu           Xây dựng và Vật liệu   

#   1     Tư vấn & Hỗ trợ Kinh doanh     Hàng & Dịch vụ Công nghiệp   

#   2                      Ngân hàng                      Ngân hàng   

#   3                        Vận tải     Hàng & Dịch vụ Công nghiệp   

#   4              Dịch vụ tài chính              Dịch vụ tài chính   

#   ...                          ...                            ...   

#   1587        Xây dựng và Vật liệu           Xây dựng và Vật liệu   

#   1588        Xây dựng và Vật liệu           Xây dựng và Vật liệu   

#   1589                Hàng cá nhân        Hàng cá nhân & Gia dụng   

#   1590   Sản xuất & Phân phối Điện  Điện, nước & xăng dầu khí đốt   

#   1591               Hàng gia dụng        Hàng cá nhân & Gia dụng   

#   

#                             icb_name4 com_type_code icb_code1 icb_code2  \

#   0      Vật liệu xây dựng & Nội thất            CT      2000      2300   

#   1                Đào tạo & Việc làm            CT      2000      2700   

#   2                         Ngân hàng            NH      8301      8300   

#   3     Kho bãi, hậu cần và bảo dưỡng            CT      2000      2700   

#   4              Môi giới chứng khoán            CK      8000      8700   

#   ...                             ...           ...       ...       ...   

#   1587   Vật liệu xây dựng & Nội thất            CT      2000      2300   

#   1588   Vật liệu xây dựng & Nội thất            CT      2000      2300   

#   1589                   Hàng cá nhân            CT      3000      3700   

#   1590      Sản xuất & Phân phối Điện            CT      7000      7500   

#   1591              Thiết bị gia dụng            CT      3000      3700   

#   

#        icb_code3 icb_code4  

#   0         2350      2353  

#   1         2790      2793  

#   2         8350      8355  

#   3         2770      2777  

#   4         8770      8777  

#   ...        ...       ...  

#   1587      2350      2353  

#   1588      2350      2353  

#   1589      3760      3767  

#   1590      7530      7535  

#   1591      3720      3726  

#   

#   [1592 rows x 10 columns]

"""
### Danh sách cổ phiếu theo nhóm
"""

# Liệt kê tất cả mã chứng khoán theo nhóm phân loại. Ví dụ HOSE, VN30, VNMidCap, VNSmallCap, VNAllShare, VN100, ETF, HNX, HNX30, HNXCon, HNXFin, HNXLCap, HNXMSCap, HNXMan, UPCOM, FU_INDEX (mã chỉ số hợp đồng tương lai), CW (chứng quyền)
stock.listing.symbols_by_group('VN30')
# Output:
#   0     ACB

#   1     BCM

#   2     BID

#   3     BVH

#   4     CTG

#   5     FPT

#   6     GAS

#   7     GVR

#   8     HDB

#   9     HPG

#   10    LPB

#   11    MBB

#   12    MSN

#   13    MWG

#   14    PLX

#   15    SAB

#   16    SHB

#   17    SSB

#   18    SSI

#   19    STB

#   20    TCB

#   21    TPB

#   22    VCB

#   23    VHM

#   24    VIB

#   25    VIC

#   26    VJC

#   27    VNM

#   28    VPB

#   29    VRE

#   Name: symbol, dtype: object

"""
### Danh sách mã ngành theo mã icb
"""

stock.listing.industries_icb()
# Output:
#                    icb_name               en_icb_name icb_code  level

#   0        Sản xuất Dầu khí       Oil & Gas Producers     0530      3

#   1                 Dầu khí                 Oil & Gas     0500      2

#   2                Hóa chất                 Chemicals     1300      2

#   3       Tài nguyên Cơ bản           Basic Resources     1700      2

#   4    Xây dựng và Vật liệu  Construction & Materials     2300      2

#   ..                    ...                       ...      ...    ...

#   150            Viễn thông        Telecommunications     6000      1

#   151    Tiện ích Cộng đồng                 Utilities     7000      1

#   152             Tài chính                Financials     8000      1

#   153             Ngân hàng                     Banks     8301      1

#   154   Công nghệ Thông tin                Technology     9000      1

#   

#   [155 rows x 4 columns]

"""
## Quote: Giá chứng khoán
"""

"""
#### Giá lịch sử
"""

"""
##### Cổ phiếu
"""

df = stock.quote.history(start='2024-01-01', end='2025-03-19', interval='1D')
df
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

# Tất cả dataframe dữ liệu sẽ được gán thuộc tính tên và loại tài sản tương ứng
print(f'Mã chứng khoán: {df.name}')
print(f'Loại tài sản: {df.category}')
# Output:
#   Mã chứng khoán: ACB

#   Loại tài sản: stock


"""
##### Hợp đồng tương lai
"""

stock.quote.history(symbol='VN30F1M', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time    open    high     low   close  volume

#   0   2024-01-02  1138.5  1141.8  1131.0  1133.5  167307

#   1   2024-01-03  1127.2  1149.8  1126.7  1148.3  173569

#   2   2024-01-04  1146.0  1171.0  1145.5  1156.5  260804

#   3   2024-01-05  1156.1  1166.1  1154.2  1166.0  199452

#   4   2024-01-08  1166.1  1173.3  1160.6  1162.0  182329

#   ..         ...     ...     ...     ...     ...     ...

#   295 2025-03-13  1390.0  1393.4  1384.3  1385.5  201319

#   296 2025-03-14  1383.5  1393.8  1382.2  1385.0  193169

#   297 2025-03-17  1387.1  1391.7  1386.1  1390.3  129550

#   298 2025-03-18  1394.0  1395.2  1385.6  1387.5  136687

#   299 2025-03-19  1385.9  1385.9  1376.7  1377.0  170296

#   

#   [300 rows x 6 columns]

stock.quote.history(symbol='VN30F2411', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#            time    open    high     low   close  volume

#   0  2024-09-20  1331.9  1338.7  1315.0  1331.5     496

#   1  2024-09-23  1332.0  1333.3  1326.6  1327.3     253

#   2  2024-09-24  1327.3  1335.8  1323.9  1335.1     254

#   3  2024-09-25  1334.8  1350.8  1334.8  1344.1     511

#   4  2024-09-26  1346.8  1366.5  1346.8  1358.2     575

#   5  2024-09-27  1359.7  1363.0  1353.1  1357.0     241

#   6  2024-09-30  1354.9  1360.3  1351.2  1357.8     324

#   7  2024-10-01  1362.3  1375.0  1359.9  1363.0     379

#   8  2024-10-02  1354.5  1362.3  1353.9  1361.3     299

#   9  2024-10-03  1362.0  1377.9  1351.6  1355.0     714

#   10 2024-10-04  1354.2  1354.6  1344.0  1345.0     616

#   11 2024-10-07  1349.9  1351.3  1335.9  1340.6     567

#   12 2024-10-08  1341.5  1350.3  1339.4  1345.0     524

#   13 2024-10-09  1347.5  1360.0  1345.2  1360.0     820

#   14 2024-10-10  1365.0  1374.8  1361.0  1366.2     836

#   15 2024-10-11  1368.5  1368.9  1357.2  1368.0     940

#   16 2024-10-14  1379.8  1379.8  1361.6  1363.5    7235

#   17 2024-10-15  1365.0  1374.1  1359.8  1361.9   19903

#   18 2024-10-16  1360.1  1365.3  1358.0  1362.9   25411

#   19 2024-10-17  1365.0  1369.5  1353.8  1369.0   55333

#   20 2024-10-18  1374.6  1377.9  1363.8  1365.9  257597

#   21 2024-10-21  1364.0  1369.9  1362.5  1363.9  165731

#   22 2024-10-22  1360.0  1363.3  1350.0  1352.2  195827

#   23 2024-10-23  1353.0  1355.4  1345.1  1354.0  210171

#   24 2024-10-24  1352.5  1354.1  1336.1  1338.0  233341

#   25 2024-10-25  1338.5  1339.8  1326.0  1327.2  226084

#   26 2024-10-28  1330.0  1332.4  1327.2  1332.0  130507

#   27 2024-10-29  1334.0  1341.0  1334.0  1339.4  164121

#   28 2024-10-30  1341.6  1342.7  1331.5  1342.0  186935

#   29 2024-10-31  1339.0  1347.8  1333.7  1343.5  202412

#   30 2024-11-01  1340.4  1340.4  1326.1  1330.4  215897

#   31 2024-11-04  1332.8  1332.8  1317.1  1318.5  213933

#   32 2024-11-05  1319.3  1324.0  1317.4  1319.0  142162

#   33 2024-11-06  1325.0  1341.8  1324.0  1341.0  214890

#   34 2024-11-07  1342.0  1343.6  1333.5  1334.7  190000

#   35 2024-11-08  1337.5  1340.3  1318.3  1324.0  220730

#   36 2024-11-11  1323.6  1324.0  1306.1  1320.1  233948

#   37 2024-11-12  1321.1  1323.5  1302.7  1310.0  246958

#   38 2024-11-13  1305.7  1313.1  1298.2  1307.3  265510

#   39 2024-11-14  1306.0  1309.9  1292.9  1292.9  251563

#   40 2024-11-15  1292.7  1292.7  1275.1  1275.6  253504

#   41 2024-11-18  1271.5  1280.3  1261.8  1273.2  245512

#   42 2024-11-19  1272.4  1274.8  1262.2  1262.3  265393

#   43 2024-11-20  1260.8  1280.0  1253.5  1270.0  322061

#   44 2024-11-21  1267.8  1283.4  1264.6  1281.3  215891

"""
##### Chỉ số
"""

stock.quote.history(symbol='VNINDEX', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time     open     high      low    close      volume

#   0   2024-01-02  1138.01  1139.71  1128.69  1131.72   842255467

#   1   2024-01-03  1131.97  1144.17  1128.32  1144.17   719932658

#   2   2024-01-04  1145.49  1160.08  1144.32  1150.72  1181354559

#   3   2024-01-05  1151.43  1155.84  1149.08  1154.68   803268328

#   4   2024-01-08  1157.54  1162.56  1155.48  1160.19   905408420

#   ..         ...      ...      ...      ...      ...         ...

#   295 2025-03-13  1336.41  1340.91  1324.87  1326.27  1066649034

#   296 2025-03-14  1325.84  1333.32  1324.30  1326.15  1019963200

#   297 2025-03-17  1330.62  1336.26  1329.05  1336.26   951867643

#   298 2025-03-18  1340.59  1341.65  1330.97  1330.97   898223931

#   299 2025-03-19  1330.46  1330.70  1320.85  1324.63   945849600

#   

#   [300 rows x 6 columns]

stock.quote.history(symbol='HNXINDEX', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time    open    high     low   close     volume

#   0   2024-01-02  230.69  232.40  229.70  229.99   59394600

#   1   2024-01-03  230.37  231.64  229.87  231.64   57900400

#   2   2024-01-04  231.63  233.66  231.63  232.56  111741500

#   3   2024-01-05  232.56  233.35  231.69  232.76   59577900

#   4   2024-01-08  232.76  234.88  232.38  233.33   82783300

#   ..         ...     ...     ...     ...     ...        ...

#   295 2025-03-13  240.16  244.77  239.46  241.31   61855000

#   296 2025-03-14  240.80  244.22  239.44  242.73   72771700

#   297 2025-03-17  242.82  246.98  242.37  246.77   56438200

#   298 2025-03-18  246.77  250.38  246.66  247.03   47516800

#   299 2025-03-19  247.01  247.97  244.16  245.28   44876800

#   

#   [300 rows x 6 columns]

stock.quote.history(symbol='UPCOMINDEX', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time    open    high    low   close    volume

#   0   2024-01-02   87.05   88.06  87.00   87.58  34702000

#   1   2024-01-03   87.62   87.92  87.26   87.80  31183200

#   2   2024-01-04   87.80   88.15  87.31   87.73  43019000

#   3   2024-01-05   87.75   88.18  87.30   87.93  38998900

#   4   2024-01-08   87.93   88.55  87.54   87.79  31658800

#   ..         ...     ...     ...    ...     ...       ...

#   295 2025-03-13   99.32   99.93  98.76   99.00  53855000

#   296 2025-03-14   99.02   99.72  98.93   99.38  57628600

#   297 2025-03-17   99.38  100.98  99.35  100.42  44966300

#   298 2025-03-18  100.76  101.75  99.99  100.30  57926300

#   299 2025-03-19  100.68  100.72  99.09   99.36  41489700

#   

#   [300 rows x 6 columns]

"""
##### Chứng quyền
"""

stock.quote.history(symbol='CFPT2314', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time  open  high   low  close  volume

#   0   2024-01-02  1.95  1.95  1.90   1.90   13300

#   1   2024-01-03  1.85  1.89  1.85   1.89   11800

#   2   2024-01-04  1.96  1.99  1.94   1.94   50800

#   3   2024-01-05  1.95  1.95  1.95   1.95     500

#   4   2024-01-08  1.93  1.99  1.93   1.97    5700

#   ..         ...   ...   ...   ...    ...     ...

#   249 2024-12-31  7.59  7.95  7.56   7.78  312200

#   250 2025-01-02  7.79  7.81  7.53   7.60   18700

#   251 2025-01-03  7.61  7.65  7.54   7.54   45600

#   252 2025-01-06  7.46  7.53  7.42   7.47  220400

#   253 2025-01-07  7.49  7.56  7.49   7.51  161300

#   

#   [254 rows x 6 columns]

"""
##### Trái phiếu niêm yết
"""

stock.quote.history(symbol='CII424002', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time    open    high     low   close  volume

#   0   2024-04-11  120.00  139.50  120.00  135.00  186701

#   1   2024-04-12  132.50  135.10  125.00  130.20  111161

#   2   2024-04-15  130.20  130.30  123.00  123.50   61607

#   3   2024-04-16  123.00  123.00  117.00  117.00   31563

#   4   2024-04-17  114.20  119.00  110.90  117.00   11721

#   ..         ...     ...     ...     ...     ...     ...

#   227 2025-03-13  125.90  125.90  125.90  125.90      10

#   228 2025-03-14  125.00  126.00  125.00  126.00    2000

#   229 2025-03-17  126.00  127.00  126.00  127.00    6014

#   230 2025-03-18  127.01  128.50  127.01  128.00    1780

#   231 2025-03-19  127.01  127.01  127.01  127.01   83350

#   

#   [232 rows x 6 columns]

"""
#### Intraday: dữ liệu khớp lệnh
"""

# Dữ liệu khớp lệnh trong ngày giao dịch realtime hoặc ngày gần nhất (ngoài giờ giao dịch)
stock.quote.intraday(symbol='ACB', page_size=10_000, show_log=False)
# Output:
#                             time  price  volume match_type         id

#   0    2025-05-06 09:15:00+07:00  24.05     300       Sell  293457579

#   1    2025-05-06 09:15:00+07:00  24.05    1500       Sell  293457611

#   2    2025-05-06 09:15:00+07:00  24.05     100       Sell  293457610

#   3    2025-05-06 09:15:00+07:00  24.05     100       Sell  293457609

#   4    2025-05-06 09:15:00+07:00  24.05     100       Sell  293457608

#   ...                        ...    ...     ...        ...        ...

#   3602 2025-05-06 14:45:00+07:00  24.00    1000       Sell  293939232

#   3603 2025-05-06 14:45:00+07:00  24.00    1000       Sell  293939231

#   3604 2025-05-06 14:45:00+07:00  24.00     100       Sell  293939230

#   3605 2025-05-06 14:45:00+07:00  24.00    3000       Sell  293939225

#   3606 2025-05-06 14:45:00+07:00  24.00     500       Sell  293939391

#   

#   [3607 rows x 5 columns]

# Bước giá và khối lượng giao dịch: realtime
stock.quote.price_depth('ACB')
# Output:
#      price acc_volume acc_buy_volume acc_sell_volume acc_undefined_volume

#   0  26200     128800         128800               0                    0

#   1  26150     732200         318600          413600                    0

#   2  26100    1240700         431600          809100                    0

#   3  26050     773500         204800          568700                    0

#   4  26000    3369900         486900         2252400               630600

#   5  25950     404000              0          404000                    0

"""
## Trading: Giao dịch
"""

"""
### Bảng giá
"""

stock.trading.price_board(['ACB'])
# Output:
#     listing                                                                 \

#      symbol ceiling  floor ref_price stock_type exchange last_trading_date   

#   0     ACB   27950  24350     26150      STOCK      HSX                     

#   

#                                   ...     bid_ask                           \

#     listed_share   type       id  ... bid_2_price bid_2_volume bid_3_price   

#   0   4466657912  STOCK  8424512  ...       25900       469600       25850   

#   

#                                                                                 \

#     bid_3_volume ask_1_price ask_1_volume ask_2_price ask_2_volume ask_3_price   

#   0       151300       26000          200       26050       734100       26100   

#   

#                   

#     ask_3_volume  

#   0       175600  

#   

#   [1 rows x 41 columns]

stock.trading.price_board(['VCB','ACB','TCB','BID']).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá
# Output:
#                                                                                     0  \

#   listing symbol                                                                  VCB   

#           ceiling                                                               70400   

#           floor                                                                 61200   

#           ref_price                                                             65800   

#           stock_type                                                            STOCK   

#           exchange                                                                HSX   

#           last_trading_date                                                             

#           listed_share                                                     8355691435   

#           type                                                                  STOCK   

#           id                                                                  8424561   

#           organ_name                Ngân hàng Thương mại Cổ phần Ngoại thương Việt...   

#           prior_close_price                                                     65800   

#           benefit                                                                       

#           trading_date                                                     2025-03-27   

#   match   match_price                                                           65500   

#           match_vol                                                             52700   

#           accumulated_volume                                                   901500   

#           accumulated_value                                                     59265   

#           avg_match_price                                                65740.432612   

#           highest                                                               65900   

#           lowest                                                                65500   

#           match_type                                                          unknown   

#           foreign_sell_volume                                                  364709   

#           foreign_buy_volume                                                   287500   

#           current_room                                                      407163890   

#           total_room                                                       1676727378   

#           total_accumulated_value                                            59265.82   

#           total_accumulated_volume                                               9015   

#           reference_price                                                       65800   

#   bid_ask bid_1_price                                                           65500   

#           bid_1_volume                                                         140600   

#           bid_2_price                                                           65400   

#           bid_2_volume                                                          20100   

#           bid_3_price                                                           65300   

#           bid_3_volume                                                          41700   

#           ask_1_price                                                           65600   

#           ask_1_volume                                                           2500   

#           ask_2_price                                                           65700   

#           ask_2_volume                                                           8400   

#           ask_3_price                                                           65800   

#           ask_3_volume                                                          26500   

#   

#                                                                       1  \

#   listing symbol                                                    ACB   

#           ceiling                                                 27950   

#           floor                                                   24350   

#           ref_price                                               26150   

#           stock_type                                              STOCK   

#           exchange                                                  HSX   

#           last_trading_date                                               

#           listed_share                                       4466657912   

#           type                                                    STOCK   

#           id                                                    8424512   

#           organ_name                Ngân hàng Thương mại Cổ phần Á Châu   

#           prior_close_price                                       26150   

#           benefit                                                         

#           trading_date                                       2025-03-27   

#   match   match_price                                             26000   

#           match_vol                                              451200   

#           accumulated_volume                                    6649100   

#           accumulated_value                                      173154   

#           avg_match_price                                  26041.719932   

#           highest                                                 26200   

#           lowest                                                  25950   

#           match_type                                            unknown   

#           foreign_sell_volume                                         0   

#           foreign_buy_volume                                          0   

#           current_room                                                0   

#           total_room                                         1339997373   

#           total_accumulated_value                            173154.735   

#           total_accumulated_volume                                66491   

#           reference_price                                         26150   

#   bid_ask bid_1_price                                             25950   

#           bid_1_volume                                           260800   

#           bid_2_price                                             25900   

#           bid_2_volume                                           469600   

#           bid_3_price                                             25850   

#           bid_3_volume                                           151300   

#           ask_1_price                                             26000   

#           ask_1_volume                                              200   

#           ask_2_price                                             26050   

#           ask_2_volume                                           734100   

#           ask_3_price                                             26100   

#           ask_3_volume                                           175600   

#   

#                                                                                   2  \

#   listing symbol                                                                TCB   

#           ceiling                                                             29950   

#           floor                                                               26050   

#           ref_price                                                           28000   

#           stock_type                                                          STOCK   

#           exchange                                                              HSX   

#           last_trading_date                                                           

#           listed_share                                                   7064851739   

#           type                                                                STOCK   

#           id                                                                8424683   

#           organ_name                Ngân hàng Thương mại Cổ phần Kỹ thương Việt Nam   

#           prior_close_price                                                   28000   

#           benefit                                                                     

#           trading_date                                                   2025-03-27   

#   match   match_price                                                         27750   

#           match_vol                                                          665000   

#           accumulated_volume                                                7518900   

#           accumulated_value                                                  210396   

#           avg_match_price                                              27982.284643   

#           highest                                                             28150   

#           lowest                                                              27750   

#           match_type                                                        unknown   

#           foreign_sell_volume                                                421488   

#           foreign_buy_volume                                                 766888   

#           current_room                                                            0   

#           total_room                                                     1590552461   

#           total_accumulated_value                                         210396.96   

#           total_accumulated_volume                                            75189   

#           reference_price                                                     28000   

#   bid_ask bid_1_price                                                         27750   

#           bid_1_volume                                                       196200   

#           bid_2_price                                                         27700   

#           bid_2_volume                                                       125500   

#           bid_3_price                                                         27650   

#           bid_3_volume                                                         5400   

#           ask_1_price                                                         27800   

#           ask_1_volume                                                       111200   

#           ask_2_price                                                         27850   

#           ask_2_volume                                                        23100   

#           ask_3_price                                                         27900   

#           ask_3_volume                                                       155200   

#   

#                                                                                     3  

#   listing symbol                                                                  BID  

#           ceiling                                                               42300  

#           floor                                                                 36800  

#           ref_price                                                             39550  

#           stock_type                                                            STOCK  

#           exchange                                                                HSX  

#           last_trading_date                                                            

#           listed_share                                                     6897515268  

#           type                                                                  STOCK  

#           id                                                                  8424583  

#           organ_name                Ngân hàng Thương mại Cổ phần Đầu tư và Phát tr...  

#           prior_close_price                                                     39550  

#           benefit                                                                      

#           trading_date                                                     2025-03-27  

#   match   match_price                                                           39100  

#           match_vol                                                            182000  

#           accumulated_volume                                                  1862400  

#           accumulated_value                                                     73069  

#           avg_match_price                                                39233.784364  

#           highest                                                               39650  

#           lowest                                                                39100  

#           match_type                                                          unknown  

#           foreign_sell_volume                                                   32778  

#           foreign_buy_volume                                                     4400  

#           current_room                                                      869040725  

#           total_room                                                       2106408575  

#           total_accumulated_value                                            73069.39  

#           total_accumulated_volume                                              18624  

#           reference_price                                                       39550  

#   bid_ask bid_1_price                                                           39100  

#           bid_1_volume                                                         100000  

#           bid_2_price                                                           39050  

#           bid_2_volume                                                          36500  

#           bid_3_price                                                           39000  

#           bid_3_volume                                                         301900  

#           ask_1_price                                                           39150  

#           ask_1_volume                                                          30000  

#           ask_2_price                                                           39200  

#           ask_2_volume                                                           5000  

#           ask_3_price                                                           39250  

#           ask_3_volume                                                          12600  

"""
## Company: Thông tin công ty
"""

"""
> Đã bổ sung nguồn dữ liệu từ VCI từ bản Vnstock3.2.0
"""

"""
### New - VCI
"""

# # Khởi tạo đối tượng
# from vnstock import Vnstock
# company = Vnstock().stock(symbol='ACB', source='VCI').company

# hoặc
from vnstock.explorer.vci import Company
company = Company('ACB')

"""
Loại bỏ đoạn mã `.head()` để xem toàn bộ dữ liệu thay vì chỉ lấy 5 dòng đầu tiên.
"""

"""
#### Hồ sơ
"""

company.overview()
# Output:
#     symbol     id  issue_share  \

#   0    ACB  67505   4466657912   

#   

#                                                history  \

#   0   - Ngày 24/04/1993: Ngân hàng Thương mại Cổ ph...   

#   

#                                        company_profile  icb_name3  icb_name2  \

#   0  Ngân hàng Thương mại Cổ phần Á Châu (ACB) được...  Ngân hàng  Ngân hàng   

#   

#      icb_name4  financial_ratio_issue_share  charter_capital  

#   0  Ngân hàng                   4466657900   44666579120000  

"""
#### Cổ đông
"""

company.shareholders()
# Output:
#             id                            share_holder   quantity  \

#   0   76868950  Vietnam Enterprise Investments Limited  212880184   

#   1   76863823         Sather Gate Investments Limited  193907186   

#   2   76861604                         Phạm Thị Thu Hà     285000   

#   3   76845328               Estes Investments Limited   83010435   

#   4   76865801                           Trần Hùng Huy  153062159   

#   ..       ...                                     ...        ...   

#   81  76858006                    Nguyễn Thị Tuyết Vân      88722   

#   82  76863346  Quỹ Đầu tư Cổ phiếu Năng động Bảo Việt      22065   

#   83  76843608                            Đinh Thị Hoa      67200   

#   84  76839576  Công ty Cổ phần Chứng khoán Thiên Việt       5285   

#   85  76853275                         Nguyễn Hồng Nga       2008   

#   

#       share_own_percent update_date  

#   0        5.480880e-02  2024-09-13  

#   1        4.990000e-02  2024-05-15  

#   2        4.990000e-02  2016-05-20  

#   3        4.990000e-02  2024-05-15  

#   4        3.940000e-02  2025-01-24  

#   ..                ...         ...  

#   81       1.730000e-05  2025-01-24  

#   82       1.327000e-05  2025-02-03  

#   83       1.200000e-05  2025-01-24  

#   84       1.500000e-06  2022-07-25  

#   85       7.000000e-07  2022-08-31  

#   

#   [86 rows x 5 columns]

"""
#### Công ty con
"""

company.subsidiaries()
# Output:
#            id sub_organ_code ownership_percent  \

#   0  21757755           ACBA                 1   

#   1  21757756           ACBL                 1   

#   2  21757757           ACBS                 1   

#   0  21757759           ACBD              None   

#   1  21757758           SGGS              None   

#   

#                                             organ_name              type  

#   0  Công Ty TNHH Quản Lý Nợ Và Khai Thác Tài Sản N...       công ty con  

#   1  Công Ty TNHH Một Thành Viên Cho Thuê Tài Chính...       công ty con  

#   2                       Công ty TNHH Chứng khoán ACB       công ty con  

#   0    CÔNG TY CỔ PHẦN DỊCH VỤ BẢO VỆ NGÂN HÀNG Á CHÂU  công ty liên kết  

#   1          Công ty Cổ phần Sài Gòn Kim hoàn ACB- SJC  công ty liên kết  

"""
#### Công ty liên kết
"""

# Phương thức này không có trong nguồn TCBS
company.affiliate()
# Output:
#            id sub_organ_code                                       organ_name  \

#   0  21757759           ACBD  CÔNG TY CỔ PHẦN DỊCH VỤ BẢO VỆ NGÂN HÀNG Á CHÂU   

#   1  21757758           SGGS        Công ty Cổ phần Sài Gòn Kim hoàn ACB- SJC   

#   

#     ownership_percent  

#   0              None  

#   1              None  

"""
#### Lãnh đạo
"""

company.officers(filter_by='working').head() # filter_by='all' hoặc 'working' hoặc 'resigned'
# Output:
#      id       officer_name                officer_position position_short_name  \

#   0   6      Trần Hùng Huy      Chủ tịch Hội đồng Quản trị       Chủ tịch HĐQT   

#   1   7      Đặng Thu Thủy    Thành viên Hội đồng Quản trị             TV HĐQT   

#   2  11      Đặng Phú Vinh                   Giám đốc khối             GĐ Khối   

#   3  13       Đỗ Minh Toàn                   Tổng Giám đốc                 TGĐ   

#   4   8  Nguyễn Thành Long  Phó Chủ tịch Hội đồng Quản trị   Phó Chủ tịch HĐQT   

#   

#     update_date  officer_own_percent   quantity  

#   0  2025-01-24               0.0394  153062159  

#   1  2025-01-24               0.0137   53350036  

#   2  2025-01-24               0.0042   16454507  

#   3  2025-01-24               0.0008    3202886  

#   4  2025-01-24               0.0004    1647067  

"""
#### Tin tức
"""

company.news().head(3)
# Output:
#           id                                         news_title news_sub_title  \

#   0  7009867  ACB:  Báo cáo kết quả giao dịch cổ phiếu của t...                  

#   1  7001147                 ACB:  Báo cáo thường niên năm 2024                  

#   2  6944486  ACB:  Công ty TNHH MTV Nhật Quân HQ đăng ký bá...                  

#   

#     friendly_sub_title                                     news_image_url  \

#   0                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   1                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   2                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   

#                                       news_source_link created_at  \

#   0  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   1  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   2  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   

#        public_date updated_at lang_code   news_id  \

#   0  1742998200000       None        vi  11505980   

#   1  1742901180000       None        vi  11504387   

#   2  1742315220000       None        vi  11497368   

#   

#                                     news_short_content  \

#   0  ACB:  Báo cáo kết quả giao dịch cổ phiếu của t...   

#   1                 ACB:  Báo cáo thường niên năm 2024   

#   2  ACB:  Thông báo giao dịch cổ phiếu của tổ chức...   

#   

#                                      news_full_content  close_price  ref_price  \

#   0  <p>Công ty TNHH MTV Nhật Quân HQ báo cáo kết q...        26150      26300   

#   1  <p>Ngân hàng Thương mại Cổ phần Á Châu công bố...        26300      26350   

#   2  <p>Công ty TNHH MTV Nhật Quân HQ thông báo gia...        26300      26200   

#   

#      floor  ceiling  price_change_pct  

#   0  24500    28100         -0.005703  

#   1  24550    28150         -0.001898  

#   2  24400    28000          0.003817  

"""
#### Sự kiện
"""

company.events().head(3)
# Output:
#            id                                        event_title  \

#   0  23057391  ACB - Trả cổ tức Cả năm năm 2022 bằng tiền 100...   

#   1  38768795  ACB - Trả cổ tức Cả năm năm 2023 bằng tiền 100...   

#   2     18129                                 Phát hành cổ phiếu   

#   

#                                        en__event_title public_date  issue_date  \

#   0  ACB - Pay cash dividend 2022 - Year at VND 100...  2023-05-25  2023-06-12   

#   1  ACB - Pay cash dividend 2023 - Year at VND 100...  2024-05-24  2024-06-13   

#   2                                                     2010-11-18  2010-11-30   

#   

#                                             source_url event_list_code  ratio  \

#   0  http://fiinpro.com/News/Detail/10793461?lang=v...             DIV    0.1   

#   1  http://fiinpro.com/News/Detail/11196089?lang=v...             DIV    0.1   

#   2                                                                ISS    NaN   

#   

#       value record_date exright_date           event_list_name  \

#   0  1000.0  2023-06-02   2023-06-01  Trả cổ tức bằng tiền mặt   

#   1  1000.0  2024-06-03   2024-05-31  Trả cổ tức bằng tiền mặt   

#   2     NaN  2010-11-30   2010-11-26        Phát hành cổ phiếu   

#   

#     en__event_list_name  

#   0       Cash Dividend  

#   1       Cash Dividend  

#   2         Share Issue  

"""
#### Báo cáo phân tích
"""

company.reports()
# Output:
#                      date                                        description  \

#   0  2025-01-22T00:00:00Z  Ngân hàng Thương Mại Cổ Phần Á Châu (ACB) đã c...   

#   1  2024-10-24T00:00:00Z  Ngân hàng TMCP Á Châu (ACB) công bố KQKD 9 thá...   

#   2  2024-09-09T00:00:00Z  - Chúng tôi tiếp tục duy trì giá mục tiêu đối ...   

#   3  2024-07-23T00:00:00Z  ACB đã công bố KQKD nửa đầu năm 2024 với thu n...   

#   4  2024-06-04T00:00:00Z  - Chúng tôi điều chỉnh tăng 8,6% giá mục tiêu ...   

#   5  2024-04-26T00:00:00Z  ACB đã công bố KQKD quý 1/2024 với TOI đạt 8,2...   

#   6  2024-04-04T00:00:00Z  Chúng tôi đã tham dự ĐHCĐ của Ngân hàng TMCP Á...   

#   7  2024-03-05T00:00:00Z  - Chúng tôi điều chỉnh tăng 7,6% giá mục tiêu ...   

#   8  2024-01-26T00:00:00Z  ACB công bố KQKD năm 2023 với TOI đạt 32,7 ngh...   

#   9  2023-11-15T00:00:00Z  - Chúng tôi điều chỉnh tăng giá mục tiêu cho N...   

#   

#                                                   link  \

#   0  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   1  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   2  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   3  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   4  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   5  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   6  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   7  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   8  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   9  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   

#                                                   name  

#   0  ACB - Tập trung vào tăng trưởng tín dụng hơn t...  

#   1  ACB – NOII thấp hơn dự kiến, ảnh hưởng tiêu cự...  

#   2  ACB [MUA +35,0%] - Tăng dự báo tăng trưởng tín...  

#   3  ACB - Tín dụng tăng trưởng mạnh, chất lượng tà...  

#   4  ACB [MUA +33,7%] - NIM tương đối đi ngang tron...  

#   5  ACB – NOII thấp, chất lượng tài sản được duy t...  

#   6  ACB - Tín dụng tăng trưởng mạnh, duy trì tỷ lệ...  

#   7  ACB [MUA +26,3%] - Tăng trưởng ổn định nhờ cho...  

#   8  ACB – Tăng trưởng tín dụng vượt kỳ vọng, lợi n...  

#   9  ACB [MUA +42,7%] - Chiến lược rủi ro thấp mang...  

"""
#### Tình hình tài chính
"""

company.ratio_summary()
# Output:
#     symbol  year_report  length_report    update_date         revenue  \

#   0    ACB         2024              5  1741199572843  50902749000000   

#   

#      revenue_growth      net_profit  net_profit_growth  ebit_margin       roe  \

#   0       -0.027586  16789768000000           0.046435            0  0.217459   

#   

#      ...  rtq4  charter_capital_ratio  rtq10  dividend  ebitda  ebit  le  de  \

#   0  ...     0               1.868549      0         0       0     0   0   0   

#   

#       ccc  rtq17  

#   0  None      0  

#   

#   [1 rows x 46 columns]

"""
#### Thống kê giao dịch
"""

company.trading_stats()
# Output:
#     symbol exchange               ev  ceiling  floor  ref_price   open  \

#   0    ACB     HOSE  116803104085000    28100  24500      26300  26300   

#   

#      match_price  close_price  price_change  ...  high_price_1y  low_price_1y  \

#   0        26150        26150          -150  ...          26800         22218   

#   

#      pct_low_change_1y  pct_high_change_1y  foreign_volume  foreign_room  \

#   0           0.170337           -0.018762               0    1339997373   

#   

#      avg_match_volume_2w  foreign_holding_room  current_holding_ratio  \

#   0              6998548            1339997373                    0.3   

#   

#      max_holding_ratio  

#   0                0.3  

#   

#   [1 rows x 24 columns]

"""
### TCBS
"""

from vnstock import Vnstock

company = Vnstock().stock(symbol='VCB', source='TCBS').company
# Output:
#   2025-03-27 22:37:18 - vnstock.common.data.data_explorer - INFO - TCBS không cung cấp thông tin danh sách. Dữ liệu tự động trả về từ VCI.


"""
#### Tổng quan
"""

company.overview()
# Output:
#     symbol exchange   industry company_type  no_shareholders  foreign_percent  \

#   0    VCB     HOSE  Ngân hàng           NH            25183            0.227   

#   

#      outstanding_share  issue_share established_year  no_employees  \

#   0             8355.7       5589.1             2008         24306   

#   

#      stock_rating  delta_in_week  delta_in_month  delta_in_year   short_name  \

#   0           2.6         -0.019           0.045         -0.016  Vietcombank   

#   

#                         website  industry_id industry_id_v2  

#   0  https://vietcombank.com.vn          289           8355  

"""
#### Hồ sơ
"""

company.profile()
# Output:
#     symbol                                       company_name  \

#   0    VCB  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...   

#   

#                                        company_profile  \

#   0   Ngân hàng Thương mại Cổ phần Ngoại thương Việ...   

#   

#                                            history_dev company_promise  \

#   0    Ngày 30/10/1962: Ngân hàng Ngoại thương Việt...            None   

#   

#                                          business_risk  \

#   0    Rủi ro địa chính trị và nguy cơ chiến tranh ...   

#   

#                                       key_developments  \

#   0    Dịch vụ tài khoản Dịch vụ huy động vốn (tiền...   

#   

#                                    business_strategies  

#   0   Ngân hàng số 1 tại Việt Nam, một trong 100 ng...  

"""
#### Cổ đông
"""

company.shareholders()
# Output:
#                     share_holder  share_own_percent

#   0  Ngân Hàng Nhà Nước Việt Nam             0.7480

#   1          Mizuho Bank Limited             0.1500

#   2                         Khác             0.0207

"""
#### Giao dịch nội bộ
"""

company.insider_deals().head(3)
# Output:
#     deal_announce_date       deal_method deal_action  deal_quantity  deal_price  \

#   0         2025-02-20    Cổ đông nội bộ         Mua        10000.0     61338.0   

#   1         2023-12-21    Cổ đông nội bộ         Mua         5000.0     54114.0   

#   2         2020-12-30  Cổ đông sáng lập         Bán        -2523.0     42927.0   

#   

#      deal_ratio  

#   0       0.068  

#   1       0.210  

#   2       0.526  

"""
#### Công ty con, liên kết
"""

company.subsidiaries().head()
# Output:
#                                       sub_company_name  sub_own_percent

#   0  Công ty TNHH Chứng khoán Ngân hàng Thương mại ...              1.0

#   1  Công Ty TNHH Một Thành Viên Kiều Hối Ngân Hàng...              1.0

#   2  Công ty TNHH MTV Cho Thuê Tài Chính Ngân Hàng ...              1.0

#   3      Công ty TNHH Tài Chính Việt Nam Tại Hồng Kông              1.0

#   4   Ngân Hàng TNHH MTV Ngoại Thương Việt Nam Tại Lào              1.0

"""
#### Ban lãnh đạo
"""

company.officers().head()
# Output:
#            officer_name              officer_position  officer_own_percent

#   3   Nguyễn Danh Lương  Thành viên Hội đồng Quản trị                  0.0

#   10     Lê Thị Kim Nga  Thành viên Hội đồng Quản trị                  0.0

#   15         Lê Thị Hoa  Thành viên Hội đồng Quản trị                  0.0

#   12   Đỗ Thị Mai Hương      Thành viên Ban kiểm soát                  0.0

#   5   Nguyễn Danh Lương   Phụ trách Công bố thông tin                  0.0

"""
#### Sự kiện
"""

company.events().head()
# Output:
#   The input looks more like a filename than markup. You may want to open this file and pass the filehandle into Beautiful Soup.

#       rsi    rs       id    price  price_change  price_change_ratio  \

#   0  73.4  58.0  2584165  66700.0        1950.0               0.030   

#   1  54.0  37.0  2583928  62542.0         334.0               0.005   

#   2  46.6  29.0  2582516  61338.0           0.0               0.000   

#   3  55.4  44.0  2581736  62208.0          67.0               0.001   

#   4  52.8  52.0  2580835  61940.0          67.0               0.001   

#   

#      price_change_ratio_1m                                       event_name  \

#   0                  0.090             VCB - Tổ chức ĐHĐCĐ thường niên 2025   

#   1                  0.006  VCB - Phát hành cổ phiếu trả cổ tức tỷ lệ 49,5%   

#   2                  0.000               VCB - Kết quả giao dịch nội bộ/CĐL   

#   3                  0.008     VCB - Thông báo đăng ký giao dịch nội bộ/CĐL   

#   4                  0.005                            VCB - BCTC Quý 4/2024   

#   

#     event_code notify_date   exer_date reg_final_date exer_right_date  \

#   0       AGME  2025-03-12  2025-04-26     2025-03-26      2025-03-25   

#   1        ISS  2025-03-06  2025-03-12     2025-03-13      2025-03-12   

#   2      DDALL  2025-02-20  2025-02-19     1753-01-01      1753-01-01   

#   3      DDALL  2025-02-07  2025-03-12     1753-01-01      1753-01-01   

#   4       KQQY  2025-01-24  2025-01-24     1753-01-01      1753-01-01   

#   

#                                             event_desc  

#   0  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...  

#   1  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...  

#   2  - Cá nhân/Tổ chức thực hiện giao dịch: Phùng N...  

#   3  - Cá nhân/Tổ chức thực hiện giao dịch: Phùng N...  

#   4                              VCB - BCTC Quý 4/2024  

"""
#### Tin tức
"""

company.news().head()
# Output:
#       rsi    rs    price  price_change  price_change_ratio  \

#   0   NaN   NaN      NaN           NaN                 NaN   

#   1   NaN   NaN      NaN           NaN                 NaN   

#   2  70.4  70.0  66500.0        -300.0              -0.004   

#   3  70.4  70.0  66500.0        -300.0              -0.004   

#   4  68.2  63.0  66000.0         500.0               0.008   

#   

#      price_change_ratio_1m        id  \

#   0                    NaN  11507583   

#   1                    NaN  11507578   

#   2                  0.084  11498692   

#   3                  0.084  11498688   

#   4                  0.077  11494381   

#   

#                                                  title source  \

#   0  VCB:  Báo cáo kết quả phát hành cổ phiếu để tr...   TCBS   

#   1  VCB:  Thông báo thay đổi số lượng cổ phiếu có ...   TCBS   

#   2  VCB:  HĐQT phê duyệt điều chỉnh giới hạn tín d...   TCBS   

#   3  VCB:  HĐQT phê duyệt giới hạn tín dụng đối với...   TCBS   

#   4  VCB:  Nghị quyết HĐQT về việc phê duyệt giới h...   TCBS   

#   

#             publish_date  

#   0  2025-03-27 15:04:00  

#   1  2025-03-27 14:56:00  

#   2  2025-03-19 15:31:00  

#   3  2025-03-19 15:30:00  

#   4  2025-03-14 17:15:00  

"""
#### Cổ tức
"""

company.dividends().head()
# Output:
#     exercise_date  cash_year  cash_dividend_percentage issue_method

#   0    2025-03-12       2025                     0.495        share

#   1    2023-07-25       2023                     0.181        share

#   2    2021-12-22       2022                     0.276        share

#   3    2021-12-22       2020                     0.120         cash

#   4    2020-12-21       2019                     0.080         cash

"""
## Finance: Báo cáo tài chính
"""

from vnstock import Vnstock
stock = Vnstock().stock(symbol='ACB', source='VCI')

"""
### Bảng cân đối kế toán
"""

stock.finance.balance_sheet(period='year', lang='vi', dropna=True)
# Output:
#        CP   Năm  TỔNG CỘNG TÀI SẢN (đồng)  Tiền và tương đương tiền (đồng)  \

#   0   ACB  2024           864005703000000                    5696449000000   

#   1   ACB  2023           718794589000000                    6909300000000   

#   2   ACB  2022           607875185000000                    8460892000000   

#   3   ACB  2021           527769944000000                    7509877000000   

#   4   ACB  2020           444530104000000                    6967918000000   

#   5   ACB  2019           383514439000000                    6437812000000   

#   6   ACB  2018           329333241000000                    6129169000000   

#   7   ACB  2017           284316123000000                    4851710000000   

#   8   ACB  2016           233680877000000                    3541388000000   

#   9   ACB  2015           201456985000000                    2806088000000   

#   10  ACB  2014           179609771000000                    2496287000000   

#   11  ACB  2013           166598989000000                    2043490000000   

#   

#       Tiền gửi tại ngân hàng nhà nước Việt Nam  \

#   0                             25219753000000   

#   1                             18504814000000   

#   2                             13657531000000   

#   3                             32349574000000   

#   4                             16616798000000   

#   5                             10420306000000   

#   6                             10683536000000   

#   7                              8314574000000   

#   8                              5119306000000   

#   9                              4608680000000   

#   10                             3357730000000   

#   11                             3065322000000   

#   

#       Tiền gửi tại các TCTD khác và cho vay các TCTD khác  \

#   0                                     117882259000000     

#   1                                     114873931000000     

#   2                                      85971313000000     

#   3                                      49818776000000     

#   4                                      31671245000000     

#   5                                      30341599000000     

#   6                                      18769776000000     

#   7                                       8941727000000     

#   8                                       8152027000000     

#   9                                      10122200000000     

#   10                                      4559007000000     

#   11                                      7215519000000     

#   

#       Chứng khoán kinh doanh  _Chứng khoán kinh doanh  \

#   0            3881151000000            4029088000000   

#   1            7177069000000            7323489000000   

#   2            1131327000000            1320941000000   

#   3           11259731000000           11325371000000   

#   4            6167917000000            6285763000000   

#   5            2985262000000            3145903000000   

#   6            1177972000000            1339157000000   

#   7            1236555000000            1239991000000   

#   8            1183306000000            1211314000000   

#   9             100457000000             103034000000   

#   10           1105122000000            1108232000000   

#   11            851161000000            1078309000000   

#   

#       Dự phòng giảm giá chứng khoán kinh doanh  \

#   0                              -147937000000   

#   1                              -146420000000   

#   2                              -189614000000   

#   3                               -65640000000   

#   4                              -117846000000   

#   5                              -160641000000   

#   6                              -161185000000   

#   7                                -3436000000   

#   8                               -28008000000   

#   9                                -2577000000   

#   10                               -3110000000   

#   11                             -227148000000   

#   

#       Các công cụ tài chính phái sinh và khoản nợ tài chính khác  ...  \

#   0                                         55992000000           ...   

#   1                                                   0           ...   

#   2                                        100072000000           ...   

#   3                                        226545000000           ...   

#   4                                         54473000000           ...   

#   5                                         87753000000           ...   

#   6                                                   0           ...   

#   7                                                   0           ...   

#   8                                         16065000000           ...   

#   9                                         47603000000           ...   

#   10                                        14403000000           ...   

#   11                                          150000000           ...   

#   

#       Tiền gửi của khách hàng  \

#   0           537304578000000   

#   1           482702731000000   

#   2           413952789000000   

#   3           379920669000000   

#   4           353195838000000   

#   5           308129391000000   

#   6           269998503000000   

#   7           241392932000000   

#   8           207051269000000   

#   9           174918997000000   

#   10          154613588000000   

#   11          138110836000000   

#   

#       _Các công cụ tài chính phái sinh và khoản nợ tài chính khác  \

#   0                                                   0             

#   1                                        117126000000             

#   2                                                   0             

#   3                                                   0             

#   4                                                   0             

#   5                                                   0             

#   6                                         38198000000             

#   7                                         10491000000             

#   8                                                   0             

#   9                                                   0             

#   10                                                  0             

#   11                                                  0             

#   

#       Vốn tài trợ, uỷ thác đầu tư của CP và các tổ chức TD khác  \

#   0                                         28008000000           

#   1                                         41534000000           

#   2                                         60188000000           

#   3                                         86066000000           

#   4                                        116705000000           

#   5                                        156147000000           

#   6                                        160093000000           

#   7                                        136466000000           

#   8                                        122697000000           

#   9                                        161678000000           

#   10                                       188155000000           

#   11                                       363345000000           

#   

#       Phát hành giấy tờ có giá  Các khoản nợ khác  VỐN CHỦ SỞ HỮU (đồng)  \

#   0            101650446000000     22014472000000         83461678000000   

#   1             52410014000000     23060473000000         70955961000000   

#   2             44304367000000     22772462000000         58438663000000   

#   3             30547883000000     17920478000000         44900909000000   

#   4             22049697000000      9844459000000         35448163000000   

#   5             20830836000000      7384134000000         27765359000000   

#   6              8290918000000      6035148000000         21017899000000   

#   7              6761000000000      4530641000000         16030847000000   

#   8              6615000000000      3594080000000         14062716000000   

#   9              3075000000000      2901457000000         12787542000000   

#   10             3078000000000      3187487000000         12397303000000   

#   11             3500000000000      2743684000000         12504202000000   

#   

#       Vốn của tổ chức tín dụng  Quỹ của tổ chức tín dụng  \

#   0             44938358000000            14789568000000   

#   1             39112283000000            11557435000000   

#   2             34046130000000             9220125000000   

#   3             27291260000000             7164297000000   

#   4             21887364000000             5741759000000   

#   5             16799171000000             4595902000000   

#   6             12220152000000             3693069000000   

#   7              9607514000000             2913780000000   

#   8              8711240000000             2590181000000   

#   9              8711240000000             2374178000000   

#   10             8711841000000             2207666000000   

#   11             9117544000000             2034952000000   

#   

#       Lãi chưa phân phối (đồng)  Vốn góp của chủ sở hữu (đồng)  

#   0              23733752000000                 44666579000000  

#   1              20286243000000                 38840504000000  

#   2              15172408000000                 33774351000000  

#   3              10445352000000                 27019481000000  

#   4               7819040000000                 21615585000000  

#   5               6370286000000                 16627373000000  

#   6               5104678000000                 12885877000000  

#   7               3509553000000                 10273239000000  

#   8               2761295000000                  9376965000000  

#   9               1702124000000                  9376965000000  

#   10              1477796000000                  9376965000000  

#   11              1351706000000                  9376965000000  

#   

#   [12 rows x 40 columns]

stock.finance.balance_sheet(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  TOTAL ASSETS (Bn. VND)  \

#   0    ACB        2024             4         864005703000000   

#   1    ACB        2024             3         777392922000000   

#   2    ACB        2024             2         769678700000000   

#   3    ACB        2024             1         727297968000000   

#   4    ACB        2023             4         718794589000000   

#   

#      Cash and cash equivalents (Bn. VND)  Balances with the SBV  \

#   0                        5696449000000         25219753000000   

#   1                        5870526000000          8392393000000   

#   2                        6594138000000         15724945000000   

#   3                        6470319000000          7851936000000   

#   4                        6909300000000         18504814000000   

#   

#      Placements with and loans to other credit institutions  \

#   0                                    117882259000000        

#   1                                     92090423000000        

#   2                                    105419092000000        

#   3                                    121950918000000        

#   4                                    114873931000000        

#   

#      Trading Securities, net  Trading Securities  \

#   0            3881151000000       4029088000000   

#   1            6965867000000       7059448000000   

#   2            6125105000000       6236053000000   

#   3            7377873000000       7469189000000   

#   4            7177069000000       7323489000000   

#   

#      Provision for diminution in value of Trading Securities  ...  \

#   0                                      -147937000000        ...   

#   1                                       -93581000000        ...   

#   2                                      -110948000000        ...   

#   3                                       -91316000000        ...   

#   4                                      -146420000000        ...   

#   

#      Funds received from Gov, international and other institutions  \

#   0                                        28008000000               

#   1                                        31641000000               

#   2                                        33175000000               

#   3                                        37321000000               

#   4                                        41534000000               

#   

#      Convertible bonds/CDs and other valuable papers issued  Other liabilities  \

#   0                                    101650446000000          22014472000000   

#   1                                     90366104000000          22478444000000   

#   2                                     66953215000000          22365462000000   

#   3                                     49011681000000          20710083000000   

#   4                                     52410014000000          23060473000000   

#   

#      OWNER'S EQUITY(Bn.VND)         Capital        Reserves  \

#   0          83461678000000  44938358000000  14789568000000   

#   1          78854261000000  44938358000000  11557435000000   

#   2          74792678000000  44938358000000  11557435000000   

#   3          74790732000000  39112283000000  11557435000000   

#   4          70955961000000  39112283000000  11557435000000   

#   

#      Foreign Currency Difference reserve  Undistributed earnings (Bn. VND)  \

#   0                                    0                    23733752000000   

#   1                         -62053000000                    22420521000000   

#   2                        -253241000000                    18550126000000   

#   3                         -70648000000                    24191662000000   

#   4                                    0                    20286243000000   

#   

#      Paid-in capital (Bn. VND)  MINORITY INTERESTS  

#   0             44666579000000                   0  

#   1             44666579000000                   0  

#   2             44666579000000                   0  

#   3             38840504000000                   0  

#   4             38840504000000                   0  

#   

#   [5 rows x 43 columns]

"""
### Báo cáo lãi lỗ
"""

stock.finance.income_statement(period='year', lang='vi', dropna=True).head()
# Output:
#       CP   Năm  Doanh thu (đồng)  Tăng trưởng doanh thu (%)  \

#   0  ACB  2024    50902749000000                  -0.027586   

#   1  ACB  2023    52346796000000                   0.286199   

#   2  ACB  2022    40698834000000                   0.207186   

#   3  ACB  2021    33713810000000                   0.058327   

#   4  ACB  2020    31855748000000                   0.124948   

#   

#      Lợi nhuận sau thuế của Cổ đông công ty mẹ (đồng)  \

#   0                                    16789768000000   

#   1                                    16044733000000   

#   2                                    13688193000000   

#   3                                     9602746000000   

#   4                                     7682823000000   

#   

#      Tăng trưởng lợi nhuận (%)  Thu nhập lãi và các khoản tương tự  \

#   0                   0.046435                      50902749000000   

#   1                   0.172159                      52346796000000   

#   2                   0.425446                      40698834000000   

#   3                   0.249898                      33713810000000   

#   4                   0.278353                      31855748000000   

#   

#      Chi phí lãi và các khoản tương tự  Thu nhập lãi thuần  \

#   0                    -23108047000000      27794702000000   

#   1                    -27387226000000      24959570000000   

#   2                    -17165305000000      23533529000000   

#   3                    -14769018000000      18944792000000   

#   4                    -17273625000000      14582123000000   

#   

#      Thu nhập từ hoạt động dịch vụ  ...  Chi phí quản lý DN  \

#   0                  5464958000000  ...     -10902603000000   

#   1                  4945751000000  ...     -10874286000000   

#   2                  5057559000000  ...     -11605045000000   

#   3                  4026460000000  ...      -8229776000000   

#   4                  2803484000000  ...      -7624268000000   

#   

#      LN từ HĐKD trước CF dự phòng  Chi phí dự phòng rủi ro tín dụng  \

#   0                22612156000000                    -1606285000000   

#   1                21872230000000                    -1804231000000   

#   2                17185022000000                      -70814000000   

#   3                15334221000000                    -3336109000000   

#   4                10537041000000                     -941153000000   

#   

#       LN trước thuế      Thuế TNDN  Chi phí thuế TNDN hiện hành  \

#   0  21005871000000 -4216103000000               -4199699000000   

#   1  20067999000000 -4023266000000               -3993022000000   

#   2  17114208000000 -3426015000000               -3445611000000   

#   3  11998112000000 -2395366000000               -2389079000000   

#   4   9595888000000 -1913065000000               -1940681000000   

#   

#      Chi phí thuế TNDN hoãn lại  Lợi nhuận thuần  Cổ đông của Công ty mẹ  \

#   0                -16404000000   16789768000000          16789768000000   

#   1                -30244000000   16044733000000          16044733000000   

#   2                 19596000000   13688193000000          13688193000000   

#   3                 -6287000000    9602746000000           9602746000000   

#   4                 27616000000    7682823000000           7682823000000   

#   

#      Lãi cơ bản trên cổ phiếu  

#   0                      3669  

#   1                      3559  

#   2                      3486  

#   3                      2799  

#   4                      2808  

#   

#   [5 rows x 30 columns]

stock.finance.income_statement(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  Revenue (Bn. VND)  Revenue YoY (%)  \

#   0    ACB        2024             4     13518376000000         0.080173   

#   1    ACB        2024             3     12922067000000        -0.007819   

#   2    ACB        2024             2     12474712000000        -0.081634   

#   3    ACB        2024             1     11987594000000        -0.093516   

#   4    ACB        2023             4     12515015000000         0.051202   

#   

#      Attribute to parent company (Bn. VND)  Attribute to parent company YoY (%)  \

#   0                          4545364000000                             0.134560   

#   1                          3870395000000                            -0.041407   

#   2                          4468590000000                             0.155915   

#   3                          3905419000000                            -0.055528   

#   4                          4006279000000                             0.395664   

#   

#      Interest and Similar Income  Interest and Similar Expenses  \

#   0               13518376000000                 -6438085000000   

#   1               12922067000000                 -6040680000000   

#   2               12474712000000                 -5363206000000   

#   3               11987594000000                 -5266076000000   

#   4               12515015000000                 -6225399000000   

#   

#      Net Interest Income  ...  General & Admin Expenses  \

#   0        7080291000000  ...            -2739350000000   

#   1        6881387000000  ...            -2933714000000   

#   2        7111506000000  ...            -2465618000000   

#   3        6721518000000  ...            -2763921000000   

#   4        6289616000000  ...            -3013248000000   

#   

#      Operating Profit before Provision  Provision for credit losses  \

#   0                      5818946000000                -147675000000   

#   1                      5202287000000                -358243000000   

#   2                      6186393000000                -588150000000   

#   3                      5404530000000                -512217000000   

#   4                      5365215000000                -321641000000   

#   

#      Profit before tax  Tax For the Year  Business income tax - current  \

#   0      5671271000000    -1125907000000                 -1086127000000   

#   1      4844044000000     -973649000000                  -971306000000   

#   2      5598243000000    -1129653000000                 -1075344000000   

#   3      4892313000000     -986894000000                 -1066922000000   

#   4      5043574000000    -1037295000000                  -975257000000   

#   

#      Business income tax - deferred  Net Profit For the Year  \

#   0                    -39780000000            4545364000000   

#   1                     -2343000000            3870395000000   

#   2                    -54309000000            4468590000000   

#   3                     80028000000            3905419000000   

#   4                    -62038000000            4006279000000   

#   

#      Attributable to parent company  EPS_basis  

#   0                   4545364000000       1017  

#   1                   3870395000000          0  

#   2                   4468590000000        779  

#   3                   3905419000000       1006  

#   4                   4006279000000       1031  

#   

#   [5 rows x 31 columns]

"""
### Báo cáo lưu chuyển tiền tệ
"""

stock.finance.cash_flow(period='year', dropna=True).head()
# Output:
#     ticker  yearReport  Profits from other activities  \

#   0    ACB        2024                  -164089000000   

#   1    ACB        2023                   -18340000000   

#   2    ACB        2022                   152049000000   

#   3    ACB        2021                   -94964000000   

#   4    ACB        2020                    67987000000   

#   

#      Operating profit before changes in working capital  \

#   0                                     16709886000000    

#   1                                     19421985000000    

#   2                                     16413910000000    

#   3                                     12326573000000    

#   4                                      9688384000000    

#   

#      Net Cash Flows from Operating Activities before BIT  Payment from reserves  \

#   0                                      8371480000000              -1249000000   

#   1                                     37137701000000              -1500000000   

#   2                                     21476002000000            -201463000000   

#   3                                     39927382000000              -1483000000   

#   4                                     10880417000000              -1156000000   

#   

#      Purchase of fixed assets  Gain on Dividend  \

#   0             -919740000000       35058000000   

#   1            -1276249000000       74955000000   

#   2             -511513000000       59599000000   

#   3             -636100000000       21979000000   

#   4             -423132000000       17573000000   

#   

#      Net Cash Flows from Investing Activities  \

#   0                             -733310000000   

#   1                            -1197256000000   

#   2                             -365878000000   

#   3                             -462403000000   

#   4                             -395503000000   

#   

#      Cash flows from financial activities  \

#   0                        -3884051000000   

#   1                        -3377435000000   

#   2                                     0   

#   3                        -2884000000000   

#   4                         -140600000000   

#   

#      Net increase/decrease in cash and cash equivalents  \

#   0                                      3752870000000    

#   1                                     32561510000000    

#   2                                     20908661000000    

#   3                                     36579496000000    

#   4                                     10343158000000    

#   

#      Cash and cash equivalents  Cash and Cash Equivalents at the end of period  \

#   0            136071738000000                                 139824608000000   

#   1            103510228000000                                 136071738000000   

#   2             82601567000000                                 103510228000000   

#   3             46022071000000                                  82601567000000   

#   4             35678913000000                                  46022071000000   

#   

#      Net cash inflows/outflows from operating activities  \

#   0                                      8370231000000     

#   1                                     37136201000000     

#   2                                     21274539000000     

#   3                                     39925899000000     

#   4                                     10879261000000     

#   

#      Proceeds from disposal of fixed assets  Investment in other entities  \

#   0                            147865000000                             0   

#   1                              4038000000                             0   

#   2                              4741000000                  -10520000000   

#   3                              3265000000                             0   

#   4                              3336000000                             0   

#   

#      Proceeds from divestment in other entities  Dividends paid  

#   0                                  3507000000  -3884051000000  

#   1                                           0  -3377435000000  

#   2                                  6451000000               0  

#   3                                           0               0  

#   4                                           0               0  

stock.finance.income_statement(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  Revenue (Bn. VND)  Revenue YoY (%)  \

#   0    ACB        2024             4     13518376000000         0.080173   

#   1    ACB        2024             3     12922067000000        -0.007819   

#   2    ACB        2024             2     12474712000000        -0.081634   

#   3    ACB        2024             1     11987594000000        -0.093516   

#   4    ACB        2023             4     12515015000000         0.051202   

#   

#      Attribute to parent company (Bn. VND)  Attribute to parent company YoY (%)  \

#   0                          4545364000000                             0.134560   

#   1                          3870395000000                            -0.041407   

#   2                          4468590000000                             0.155915   

#   3                          3905419000000                            -0.055528   

#   4                          4006279000000                             0.395664   

#   

#      Interest and Similar Income  Interest and Similar Expenses  \

#   0               13518376000000                 -6438085000000   

#   1               12922067000000                 -6040680000000   

#   2               12474712000000                 -5363206000000   

#   3               11987594000000                 -5266076000000   

#   4               12515015000000                 -6225399000000   

#   

#      Net Interest Income  ...  General & Admin Expenses  \

#   0        7080291000000  ...            -2739350000000   

#   1        6881387000000  ...            -2933714000000   

#   2        7111506000000  ...            -2465618000000   

#   3        6721518000000  ...            -2763921000000   

#   4        6289616000000  ...            -3013248000000   

#   

#      Operating Profit before Provision  Provision for credit losses  \

#   0                      5818946000000                -147675000000   

#   1                      5202287000000                -358243000000   

#   2                      6186393000000                -588150000000   

#   3                      5404530000000                -512217000000   

#   4                      5365215000000                -321641000000   

#   

#      Profit before tax  Tax For the Year  Business income tax - current  \

#   0      5671271000000    -1125907000000                 -1086127000000   

#   1      4844044000000     -973649000000                  -971306000000   

#   2      5598243000000    -1129653000000                 -1075344000000   

#   3      4892313000000     -986894000000                 -1066922000000   

#   4      5043574000000    -1037295000000                  -975257000000   

#   

#      Business income tax - deferred  Net Profit For the Year  \

#   0                    -39780000000            4545364000000   

#   1                     -2343000000            3870395000000   

#   2                    -54309000000            4468590000000   

#   3                     80028000000            3905419000000   

#   4                    -62038000000            4006279000000   

#   

#      Attributable to parent company  EPS_basis  

#   0                   4545364000000       1017  

#   1                   3870395000000          0  

#   2                   4468590000000        779  

#   3                   3905419000000       1006  

#   4                   4006279000000       1031  

#   

#   [5 rows x 31 columns]

"""
### Chỉ số tài chính
"""

stock.finance.ratio(period='year', lang='vi', dropna=True).head()
# Output:
#     Meta          Chỉ tiêu cơ cấu nguồn vốn                      \

#       CP   Năm Kỳ            TSCĐ / Vốn CSH Vốn CSH/Vốn điều lệ   

#   0  ACB  2024  5                  0.064849            1.868549   

#   1  ACB  2023  5                  0.067120            1.588569   

#   2  ACB  2022  5                  0.068129            1.308331   

#   3  ACB  2021  5                  0.083797            1.005246   

#   4  ACB  2020  5                  0.106712            0.793617   

#   

#     Chỉ tiêu khả năng sinh lợi                                         \

#        Biên lợi nhuận ròng (%)   ROE (%)   ROA (%) Tỷ suất cổ tức (%)   

#   0                   0.604064  0.217459  0.021215           0.000000   

#   1                   0.642829  0.247997  0.024188           0.038760   

#   2                   0.581646  0.264917  0.024106           0.041841   

#   3                   0.506881  0.239026  0.019753           0.000000   

#   4                   0.526866  0.243075  0.018557           0.000000   

#   

#     Chỉ tiêu thanh khoản Chỉ tiêu định giá                                      \

#        Đòn bẩy tài chính Vốn hóa (Tỷ đồng) Số CP lưu hành (Triệu CP)       P/E   

#   0            10.352125   116803104085000                4466657900  6.956803   

#   1            10.130151   100208500320000                3884050400  6.405255   

#   2            10.401935    80720698890000                3377435100  5.962443   

#   3            11.754104    59172663390000                2701948100  6.259839   

#   4            12.540286    74573768250000                2161558500  9.899843   

#   

#                                                                 

#           P/B       P/S P/Cash Flow    EPS (VND)    BVPS (VND)  

#   0  1.399482  3.485124   13.954585  3758.910661  18685.486972  

#   1  1.412263  3.060127    2.698405  4130.928116  18268.547957  

#   2  1.381289  2.803769    3.794240  4052.836722  17302.675335  

#   3  1.317850  2.511147    1.482062  3554.008310  16617.976119  

#   4  2.103741  4.106189    6.854672  3554.297975  16399.353985  

stock.finance.ratio(period='quarter', lang='en', dropna=True).head()
# Output:
#       Meta                         Chỉ tiêu cơ cấu nguồn vốn  \

#     ticker yearReport lengthReport               Debt/Equity   

#   0    ACB       2024            4                  9.352125   

#   1    ACB       2024            3                  8.858604   

#   2    ACB       2024            2                  9.290830   

#   3    ACB       2024            1                  8.724440   

#   4    ACB       2023            4                  9.130151   

#   

#                                                           \

#     Fixed Asset-To-Equity Owners' Equity/Charter Capital   

#   0              0.064849                       1.868549   

#   1              0.058881                       1.765397   

#   2              0.062380                       1.674466   

#   3              0.062450                       1.674423   

#   4              0.067120                       1.588569   

#   

#     Chỉ tiêu khả năng sinh lợi                                                  \

#          Net Profit Margin (%)   ROE (%) ROIC (%)   ROA (%) Dividend yield (%)   

#   0                   0.641974  0.217459      0.0  0.021215           0.038241   

#   1                   0.562444  0.217115      0.0  0.021717           0.040568   

#   2                   0.628361  0.228530      0.0  0.022928           0.038536   

#   3                   0.581032  0.229671      0.0  0.023211           0.041667   

#   4                   0.636967  0.247997      0.0  0.024188           0.035714   

#   

#     Chỉ tiêu thanh khoản        Chỉ tiêu định giá  \

#       Financial Leverage Market Capital (Bn. VND)   

#   0            10.352125             1.168031e+14   

#   1             9.858604             1.101031e+14   

#   2            10.290830             1.159098e+14   

#   3             9.724440             1.071998e+14   

#   4            10.130151             1.087534e+14   

#   

#                                                                                \

#     Outstanding Share (Mil. Shares)       P/E       P/B       P/S P/Cash Flow   

#   0                    4.466658e+09  6.956803  1.399482  3.485124   13.954586   

#   1                    4.466658e+09  6.775292  1.396286  3.302936  -21.381995   

#   2                    4.466658e+09  7.059978  1.549748  3.447304    7.010521   

#   3                    4.466658e+09  6.778309  1.433330  3.248989    3.143473   

#   4                    3.884050e+09  6.778138  1.532689  3.321068    2.928501   

#   

#                                 

#        EPS (VND)    BVPS (VND)  

#   0  1017.620801  18685.486922  

#   1   866.508042  17653.973632  

#   2  1000.432558  16744.662223  

#   3   874.349251  16744.226550  

#   4  1031.469376  18268.548155  

"""
## New - Bộ lọc cổ phiếu
"""

"""
Hàm này chỉ tồn tại với nguồn dữ liệu TCBS
"""

# from vnstock import Screener

screener_df = stock.screener.stock(params={"exchangeName": "HOSE,HNX,UPCOM"}, limit=1700)
screener_df
# Output:
#        ticker exchange                 industry  market_cap   roe  stock_rating  \

#   0       A32    UPCOM  Hàng cá nhân & Gia dụng         NaN   NaN           NaN   

#   1       AAA      HSX                 Hóa chất      3234.0   6.8           2.3   

#   2       AAM      HSX     Thực phẩm và đồ uống        73.0  -3.2           NaN   

#   3       AAS    UPCOM        Dịch vụ tài chính      1984.0   3.0           2.4   

#   4       AAT      HSX  Hàng cá nhân & Gia dụng       231.0  -0.9           2.3   

#   ...     ...      ...                      ...         ...   ...           ...   

#   1608    XVC    UPCOM     Xây dựng và Vật liệu         NaN   NaN           NaN   

#   1609    YBC    UPCOM     Xây dựng và Vật liệu       185.0 -84.4           NaN   

#   1610    YBM      HSX        Tài nguyên Cơ bản       206.0   7.3           NaN   

#   1611    YEG      HSX             Truyền thông      2810.0   9.0           1.9   

#   1612    YTC    UPCOM                     Y tế         NaN   NaN           NaN   

#   

#         business_operation  business_model  financial_health  alpha  ...  \

#   0                    1.7             3.5               2.6    0.1  ...   

#   1                    1.5             3.0               4.0   -0.2  ...   

#   2                    1.0             NaN               3.4   -0.1  ...   

#   3                    3.8             2.8               3.4    0.0  ...   

#   4                    1.6             2.9               3.0   -0.2  ...   

#   ...                  ...             ...               ...    ...  ...   

#   1608                 NaN             NaN               NaN    NaN  ...   

#   1609                 1.3             3.5               1.6    0.6  ...   

#   1610                 1.9             3.7               2.2    0.3  ...   

#   1611                 2.0             2.4               3.4    0.3  ...   

#   1612                 1.4             3.5               2.4    0.1  ...   

#   

#         last_quarter_revenue_growth second_quarter_revenue_growth  \

#   0                             NaN                           NaN   

#   1                            43.1                          -9.5   

#   2                            -7.0                          76.6   

#   3                           -36.8                         -37.6   

#   4                           -43.4                         -18.4   

#   ...                           ...                           ...   

#   1608                          NaN                           NaN   

#   1609                          NaN                           NaN   

#   1610                         44.2                           7.1   

#   1611                        139.9                         209.4   

#   1612                          NaN                           NaN   

#   

#         last_quarter_profit_growth  second_quarter_profit_growth  \

#   0                            NaN                           NaN   

#   1                          -25.9                         -78.0   

#   2                            NaN                           NaN   

#   3                          -71.6                         -33.2   

#   4                         -224.3                         264.1   

#   ...                          ...                           ...   

#   1608                         NaN                           NaN   

#   1609                         NaN                           NaN   

#   1610                        -7.8                         -45.9   

#   1611                       384.8                         325.6   

#   1612                         NaN                           NaN   

#   

#         pct_1y_from_peak  pct_away_from_hist_peak  pct_1y_from_bottom  \

#   0                -15.2                    -40.9                33.1   

#   1                -33.2                    -63.1                 4.2   

#   2                -27.5                    -59.2                14.5   

#   3                -12.2                    -57.2                59.3   

#   4                -39.8                    -82.7                 6.6   

#   ...                ...                      ...                 ...   

#   1608               NaN                      NaN                 NaN   

#   1609               NaN                      NaN                 NaN   

#   1610             -31.1                    -26.6                57.1   

#   1611             -36.6                    -92.1                85.0   

#   1612             -51.4                    -59.0                55.4   

#   

#         pct_off_hist_bottom        price_vs_sma100  heating_up  

#   0                   213.5  Giá nằm dưới SMA(100)        None  

#   1                   263.1  Giá nằm dưới SMA(100)        None  

#   2                    35.5  Giá nằm dưới SMA(100)        None  

#   3                   171.6  Giá nằm dưới SMA(100)        None  

#   4                     1.2  Giá nằm dưới SMA(100)        None  

#   ...                   ...                    ...         ...  

#   1608                  NaN                   None        None  

#   1609                  NaN                   None        None  

#   1610                480.4  Giá nằm trên SMA(100)        None  

#   1611                292.4  Giá nằm dưới SMA(100)        None  

#   1612                171.0  Giá nằm dưới SMA(100)        None  

#   

#   [1613 rows x 83 columns]



================================================
FILE: docs/2_international_market.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
# Mục lục
"""

"""
1. Chứng khoán Việt Nam [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb)
2. Chứng khoán quốc tế: Forex, Crypto, Chỉ số [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb)
3. Dữ liệu Thị trường, hàng hoá [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb)
4. Biểu diễn dữ liệu trực quan từ Vnstock3 [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock3.ipynb)
"""

"""
# I. Cài đặt
"""

"""
## Cài đặt thư viện
"""

!pip install -U vnstock

"""
## Nạp thư viện lần đầu
"""

"""
> Bạn có thể nạp toàn bộ các module của thư viện vào môi trường làm việc nếu chưa biết rõ mình cần gì hoặc chọn từng module riêng biệt để nạp vào khi đã quen thuộc.
"""

## Nạp toàn bộ thư viện
# from vnstock import *

## Nạp Wrapper làm việc chính (UI chính của thư viện)
from vnstock import Vnstock
# Output:
#   A NumPy version >=1.23.5 and <2.3.0 is required for this version of SciPy (detected version 1.23.4)


"""
# II. Tìm kiếm mã niêm yết được hỗ trợ bởi MSN
"""

from vnstock.explorer.msn import Listing
Listing(api_version='20250317').search_symbol_id('USDEUR')
# Output:
#      symbol symbol_id exchange_name exchange_code_mic  \

#   0  USDEUR    avyn9c         FOREX             FOREX   

#   1            arjffr                              LU   

#   2            aslrm7                              LU   

#   3            arcg4c                              LU   

#   4            at4aww                              LU   

#   5            aswj4c                              LU   

#   6            az2mzr                              LU   

#   7            aslrjc                              LU   

#   8            cen9rw                              LU   

#   9            aril27                              LU   

#   

#                          short_name                   friendly_name  \

#   0    US Dollar/Euro FX Cross Rate    US Dollar/Euro FX Cross Rate   

#   1        FS - HG Bd USD (EURh) Fa        FS - HG Bd USD (EURh) Fa   

#   2     UBS(L)ES-LT Thms USDEURh Pa     UBS(L)ES-LT Thms USDEURh Pa   

#   3     FS - US CB Sus USD(EURh) Fa     FS - US CB Sus USD(EURh) Fa   

#   4   UBS(L)ES-LT Thms(USD)EURph Fa   UBS(L)ES-LT Thms(USD)EURph Fa   

#   5      UBS L BS-GD (USD)(EURh) Pa      UBS L BS-GD (USD)(EURh) Pa   

#   6  Focused SIC-WB Bd USD(EURh)F-a  Focused SIC-WB Bd USD(EURh)F-a   

#   7     UBS(L)ES-LT Thms USDEURh Qa     UBS(L)ES-LT Thms USDEURh Qa   

#   8   UBS L KS-Gl All USD (EURh) Pa   UBS L KS-Gl All USD (EURh) Pa   

#   9    Focused Sic-HG LT Bd EURh Fa    Focused Sic-HG LT Bd EURh Fa   

#   

#                                               eng_name description  \

#   0                       US Dollar/Euro FX Cross Rate               

#   1     Focused SICAV - High Grade Bond USD (EURh) F-a               

#   2  UBS (Lux) Eq SICAV-Long Term Themes (USD)(EURh...               

#   3   Focused SICAV - US Corp Bd Sustain USD(EURh) F-a               

#   4  UBS (Lux) Eq SICAV-Lng Trm Thms (USD)(EURportf...               

#   5  UBS (Lux) Bond S - Global Dynamic (USD)(EURh) P-a               

#   6  Focused SICAV-World Bank Bond USD (EUR hdg) F-acc               

#   7  UBS (Lux) Eq SICAV-Long Term Themes (USD)(EURh...               

#   8    UBS (Lux) KSS-Global Allocation (USD) (EURh) Pa               

#   9  Focused SICAV-High Grade Long Term Bd USD(EURh)Fa               

#   

#                                             local_name locale  

#   0                       US Dollar/Euro FX Cross Rate  en-us  

#   1     Focused SICAV - High Grade Bond USD (EURh) F-a  lb-lu  

#   2  UBS (Lux) Eq SICAV-Long Term Themes (USD)(EURh...  lb-lu  

#   3   Focused SICAV - US Corp Bd Sustain USD(EURh) F-a  lb-lu  

#   4  UBS (Lux) Eq SICAV-Lng Trm Thms (USD)(EURportf...  lb-lu  

#   5  UBS (Lux) Bond S - Global Dynamic (USD)(EURh) P-a  lb-lu  

#   6  Focused SICAV-World Bank Bond USD (EUR hdg) F-acc  lb-lu  

#   7  UBS (Lux) Eq SICAV-Long Term Themes (USD)(EURh...  lb-lu  

#   8    UBS (Lux) KSS-Global Allocation (USD) (EURh) Pa  lb-lu  

#   9  Focused SICAV-High Grade Long Term Bd USD(EURh)Fa  lb-lu  

"""
# III. Truy xuất giá lịch sử: FX, Crypto, Index
"""

"""
## 3.1. Truy xuất theo mã symbol
"""

"""
### Forex
"""

from vnstock import Vnstock
fx = Vnstock().fx(symbol='JPYVND', source='MSN')
df = fx.quote.history(start='2025-01-02', end='2025-03-20', interval='1D')
df.head()
# Output:
#           time    open    high     low   close

#   0 2025-01-02  162.00  162.67  161.19  161.55

#   1 2025-01-03  161.53  162.05  161.25  161.47

#   2 2025-01-06  161.54  162.37  160.58  160.93

#   3 2025-01-07  160.93  161.15  160.02  160.44

#   4 2025-01-08  160.44  160.66  159.97  160.20

"""
### Crypto
"""

crypto = Vnstock().crypto(symbol='BTC', source='MSN')
df = crypto.quote.history(start='2023-01-01', end='2024-12-31', interval='1D')
df.head()
# Output:
#             time          open          high           low         close  \

#   151 2023-01-07  4.300877e+08  4.340605e+08  4.270210e+08  4.330381e+08   

#   152 2023-02-06  5.960223e+08  5.983517e+08  5.834928e+08  5.864025e+08   

#   153 2023-03-08  5.729315e+08  5.754629e+08  5.622777e+08  5.676040e+08   

#   154 2023-04-07  7.197362e+08  7.198168e+08  7.085866e+08  7.163876e+08   

#   155 2023-05-07  7.545702e+08  7.617551e+08  7.272398e+08  7.383686e+08   

#   

#                 volume  

#   151  368197019105432  

#   152  499769088250089  

#   153  581543476550413  

#   154  353486840619252  

#   155  406519725221136  

"""
### Index
"""

index = Vnstock().world_index(symbol='DJI', source='MSN')
df = index.quote.history(start='2023-01-01', end='2024-12-31', interval='1D')
df
# Output:
#             time      open      high       low     close     volume

#   138 2023-07-24  35230.79  35463.97  35230.79  35411.24  286173242

#   139 2023-07-25  35421.49  35527.57  35365.26  35438.07  309326664

#   140 2023-07-26  35345.99  35633.61  35306.27  35520.12  347334097

#   141 2023-07-27  35558.79  35645.35  35216.58  35282.72  352233629

#   142 2023-07-28  35443.49  35565.51  35355.15  35459.29  369000609

#   ..         ...       ...       ...       ...       ...        ...

#   498 2024-12-25  42916.48  43297.65  42871.76  43297.03  -99999902

#   499 2024-12-26  43201.85  43373.98  43115.09  43325.80  270359363

#   500 2024-12-27  43142.37  43238.85  42761.56  42992.21  376962934

#   501 2024-12-30  42863.86  42863.86  42263.51  42573.73  383300069

#   502 2024-12-31  42636.70  42779.69  42421.29  42544.22  359219218

#   

#   [365 rows x 6 columns]

"""
## 3.2. Truy xuất theo id tương ứng symbol
"""

"""
Trong trường hợp mã symbol bạn cần không có sẵn trong danh sách được hỗ trợ, bạn có thể truy xuất dữ liệu theo id của mã đó được tìm kiếm ở mục `II. Tìm kiếm mã niêm yết được hỗ trợ bởi MSN`
"""

# avyufr là symbol_id của USDEUR
from vnstock.explorer.msn.quote import *

fx = Quote(symbol_id='avyn9c')
fx.history(start='2020-01-01', end='2024-12-31')
# Output:
#              time  open  high   low  close

#   940  2023-08-09  0.91  0.91  0.91   0.91

#   941  2023-08-10  0.91  0.91   0.9   0.91

#   942  2023-08-11  0.91  0.91  0.91   0.91

#   943  2023-08-14  0.91  0.92  0.91   0.92

#   944  2023-08-15  0.92  0.92  0.91   0.92

#   ...         ...   ...   ...   ...    ...

#   1300 2024-12-25  0.96  0.96  0.96   0.96

#   1301 2024-12-26  0.96  0.96  0.96   0.96

#   1302 2024-12-27  0.96  0.96  0.96   0.96

#   1303 2024-12-30  0.96  0.96  0.96   0.96

#   1304 2024-12-31  0.96  0.97  0.96   0.97

#   

#   [365 rows x 5 columns]

# c2111 là symbol_id của BTC
crypto = Quote(symbol_id='c2111')
crypto.history(start='2023-01-01', end='2024-12-31', interval='1D')
# Output:
#             time          open          high           low         close  \

#   151 2023-01-07  4.300877e+08  4.340605e+08  4.270210e+08  4.330381e+08   

#   152 2023-02-06  5.960223e+08  5.983517e+08  5.834928e+08  5.864025e+08   

#   153 2023-03-08  5.729315e+08  5.754629e+08  5.622777e+08  5.676040e+08   

#   154 2023-04-07  7.197362e+08  7.198168e+08  7.085866e+08  7.163876e+08   

#   155 2023-05-07  7.545702e+08  7.617551e+08  7.272398e+08  7.383686e+08   

#   156 2023-06-06  6.928598e+08  6.930354e+08  6.499968e+08  6.580417e+08   

#   157 2023-07-06  7.862425e+08  7.887614e+08  7.721133e+08  7.794844e+08   

#   158 2023-08-05  7.452596e+08  7.485216e+08  7.378759e+08  7.426977e+08   

#   159 2023-09-04  6.608357e+08  6.663962e+08  6.594961e+08  6.633926e+08   

#   160 2023-10-04  7.026983e+08  7.067584e+08  6.952328e+08  7.006988e+08   

#   161 2023-11-03  9.053551e+08  9.175724e+08  8.787882e+08  8.924974e+08   

#   162 2023-12-03  9.883176e+08  1.013598e+09  9.873806e+08  1.008423e+09   

#   163 2024-01-02  1.080049e+09  1.128462e+09  1.078382e+09  1.128254e+09   

#   164 2024-02-01  1.097062e+09  1.116761e+09  1.080527e+09  1.087773e+09   

#   165 2024-03-02  1.562538e+09  1.613297e+09  1.553201e+09  1.595046e+09   

#   166 2024-04-01  1.779153e+09  1.823345e+09  1.778567e+09  1.822218e+09   

#   167 2024-05-01  1.630778e+09  1.652847e+09  1.510222e+09  1.548969e+09   

#   168 2024-05-31  1.726231e+09  1.775391e+09  1.714531e+09  1.746384e+09   

#   169 2024-06-30  1.540871e+09  1.560739e+09  1.540388e+09  1.555368e+09   

#   170 2024-07-30  1.743678e+09  1.787832e+09  1.699575e+09  1.706915e+09   

#   171 2024-08-29  1.520130e+09  1.538740e+09  1.478817e+09  1.507861e+09   

#   172 2024-09-28  1.665040e+09  1.698249e+09  1.656670e+09  1.680622e+09   

#   173 2024-10-28  1.712115e+09  1.742713e+09  1.707612e+09  1.735254e+09   

#   174 2024-11-27  2.377915e+09  2.426564e+09  2.318740e+09  2.349765e+09   

#   175 2024-12-27  2.536560e+09  2.551551e+09  2.430297e+09  2.447096e+09   

#   

#                  volume  

#   151   368197019105432  

#   152   499769088250089  

#   153   581543476550413  

#   154   353486840619252  

#   155   406519725221136  

#   156   549557060654331  

#   157   318843041131104  

#   158   307475968483752  

#   159   228947688939779  

#   160   291412613396441  

#   161   536397960012355  

#   162   396816939707007  

#   163   470717164332821  

#   164   630287847521272  

#   165  1026560781364257  

#   166   512201297368942  

#   167   966644259261429  

#   168   753825606675665  

#   169   323218417247499  

#   170  1041742537733281  

#   171  1029196930216796  

#   172   818942389564923  

#   173   427145809746064  

#   174  2341365799706704  

#   175  1202019486407426  



================================================
FILE: docs/3_commodities_vnstock3.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
# Mục lục
"""

"""
1. Chứng khoán Việt Nam [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb)
2. Chứng khoán quốc tế: Forex, Crypto, Chỉ số [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb)
3. Dữ liệu Thị trường, hàng hoá [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb)
4. Biểu diễn dữ liệu trực quan từ Vnstock3 [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock3.ipynb)
"""

"""
# I. Cài đặt
"""

"""
## Cài đặt thư viện
"""

!pip install -U vnstock

"""
## Nạp thư viện lần đầu
"""

"""
> Bạn có thể nạp toàn bộ các module của thư viện vào môi trường làm việc nếu chưa biết rõ mình cần gì hoặc chọn từng module riêng biệt để nạp vào khi đã quen thuộc.
"""

"""
# II. Dữ liệu thị trường, hàng hoá
"""

"""
## Tỉ giá ngoại tệ - VCB
"""

from vnstock.explorer.misc import *
vcb_exchange_rate(date='2024-05-25')
# Output:
#      currency_code        currency_name  buy _cash buy _transfer       sell  \

#   2            AUD    AUSTRALIAN DOLLAR  16,368.75     16,534.09  17,064.46   

#   3            CAD      CANADIAN DOLLAR  18,066.32     18,248.80  18,834.18   

#   4            CHF          SWISS FRANC  27,124.16     27,398.15  28,277.00   

#   5            CNY         CHINESE YUAN   3,443.11      3,477.89   3,589.99   

#   6            DKK         DANISH KRONE          -      3,620.50   3,759.13   

#   7            EUR                 EURO  26,809.13     27,079.92  28,279.00   

#   8            GBP    UK POUND STERLING  31,474.93     31,792.85  32,812.68   

#   9            HKD     HONG KONG DOLLAR   3,177.08      3,209.17   3,312.12   

#   10           INR         INDIAN RUPEE          -        304.81     317.00   

#   11           JPY         JAPANESE YEN     157.13        158.72     166.31   

#   12           KRW           KOREAN WON      16.06         17.84      19.46   

#   13           KWD        KUWAITI DINAR          -     82,772.18  86,080.98   

#   14           MYR    MALAYSIAN RINGGIT          -      5,341.49   5,457.97   

#   15           NOK      NORWEGIAN KRONE          -      2,336.27   2,435.45   

#   16           RUB        RUSSIAN RUBLE          -        264.41     292.71   

#   17           SAR  SAUDI ARABIAN RIYAL          -      6,768.94   7,039.53   

#   18           SEK        SWEDISH KRONA          -      2,322.28   2,420.86   

#   19           SGD     SINGAPORE DOLLAR  18,350.94     18,536.30  19,130.90   

#   20           THB            THAI BAHT     613.77        681.97     708.08   

#   21           USD            US DOLLAR  25,247.00     25,277.00  25,477.00   

#   

#             date  

#   2   2024-05-25  

#   3   2024-05-25  

#   4   2024-05-25  

#   5   2024-05-25  

#   6   2024-05-25  

#   7   2024-05-25  

#   8   2024-05-25  

#   9   2024-05-25  

#   10  2024-05-25  

#   11  2024-05-25  

#   12  2024-05-25  

#   13  2024-05-25  

#   14  2024-05-25  

#   15  2024-05-25  

#   16  2024-05-25  

#   17  2024-05-25  

#   18  2024-05-25  

#   19  2024-05-25  

#   20  2024-05-25  

#   21  2024-05-25  

"""
## Giá vàng
"""

"""
### SJC các loại - Snapshot
"""

from vnstock.explorer.misc import *

sjc_gold_price()
# Output:
#                        name       branch   buy_price  sell_price        date

#   0   Vàng SJC 1L, 10L, 1KG  Hồ Chí Minh  84400000.0  86400000.0  2025-01-14

#   1   Vàng SJC 1L, 10L, 1KG     Miền Bắc  84400000.0  86400000.0  2025-01-14

#   2   Vàng SJC 1L, 10L, 1KG      Hạ Long  84400000.0  86400000.0  2025-01-14

#   3   Vàng SJC 1L, 10L, 1KG    Hải Phòng  84400000.0  86400000.0  2025-01-14

#   4   Vàng SJC 1L, 10L, 1KG   Miền Trung  84400000.0  86400000.0  2025-01-14

#   5   Vàng SJC 1L, 10L, 1KG          Huế  84400000.0  86400000.0  2025-01-14

#   6   Vàng SJC 1L, 10L, 1KG   Quảng Ngãi  84400000.0  86400000.0  2025-01-14

#   7   Vàng SJC 1L, 10L, 1KG    Nha Trang  84400000.0  86400000.0  2025-01-14

#   8   Vàng SJC 1L, 10L, 1KG     Biên Hòa  84400000.0  86400000.0  2025-01-14

#   9   Vàng SJC 1L, 10L, 1KG     Miền Tây  84400000.0  86400000.0  2025-01-14

#   10  Vàng SJC 1L, 10L, 1KG     Bạc Liêu  84400000.0  86400000.0  2025-01-14

#   11  Vàng SJC 1L, 10L, 1KG       Cà Mau  84400000.0  86400000.0  2025-01-14

"""
### Vàng Bảo Tín Minh Châu
"""

btmc_goldprice()
# Output:
#                                                   name karat gold_content  \

#   6                          VÀNG MIẾNG SJC (Vàng SJC)   24k        999.9   

#   0             VÀNG MIẾNG VRTL (Vàng Rồng Thăng Long)   24k        999.9   

#   1        QUÀ MỪNG BẢN VỊ VÀNG (Quà Mừng Bản Vị Vàng)   24k        999.9   

#   2              NHẪN TRÒN TRƠN (Vàng Rồng Thăng Long)   24k        999.9   

#   4  TRANG SỨC BẰNG VÀNG RỒNG THĂNG LONG 999.9 (Vàn...   24k        999.9   

#   5  TRANG SỨC BẰNG VÀNG RỒNG THĂNG LONG 99.9 (Vàng...   24k         99.9   

#   3                 VÀNG NGUYÊN LIỆU (Vàng thị trường)   24k        999.9   

#   

#     buy_price sell_price world_price              time  

#   6   8440000    8640000           0  14/01/2025 09:06  

#   0   8480000    8630000           0  14/01/2025 09:06  

#   1   8480000    8630000           0  14/01/2025 09:06  

#   2   8480000    8630000           0  14/01/2025 09:06  

#   4   8430000    8620000           0  14/01/2025 09:06  

#   5   8420000    8610000           0  14/01/2025 09:06  

#   3   8390000          0           0  14/01/2025 09:06  



================================================
FILE: docs/4_funds_vnstock3.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/4_funds_vnstock3.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
## Khởi tạo đối tượng
"""

!pip install vnstock

# Gọi từ core module
from vnstock.explorer import Fund
fund = Fund()

# # Gọi từ Vnstock wrapper module - version 3.0.7
# from vnstock import Vnstock
# fund = Vnstock().fund()

"""
## Liệt kê danh sách các quỹ
"""

fund.listing().head()
# Output:
#   2025-04-22 05:29:38 - vnstock.explorer.fmarket.fund - INFO - Total number of funds currently listed on Fmarket: 54

#     short_name                                               name  \

#   0   VCBF-FIF                         QUỸ ĐẦU TƯ TRÁI PHIẾU VCBF   

#   1       PVBF                        QUỸ ĐẦU TƯ TRÁI PHIẾU PVCOM   

#   2      VNDBF                          QUỸ ĐẦU TƯ TRÁI PHIẾU VND   

#   3        VFF        QUỸ ĐẦU TƯ TRÁI PHIẾU BẢO THỊNH VINACAPITAL   

#   4       MAFF  QUỸ ĐẦU TƯ TRÁI PHIẾU LINH HOẠT MIRAE ASSET VI...   

#   

#           fund_type                                    fund_owner_name  \

#   0  Quỹ trái phiếu  CÔNG TY TNHH QUẢN LÝ QUỸ ĐẦU TƯ CHỨNG KHOÁN VI...   

#   1  Quỹ trái phiếu  CÔNG TY CỔ PHẦN QUẢN LÝ QUỸ NGÂN HÀNG TMCP ĐẠI...   

#   2  Quỹ trái phiếu  CÔNG TY TNHH MTV QUẢN LÝ QUỸ ĐẦU TƯ CHỨNG KHOÁ...   

#   3  Quỹ trái phiếu            CÔNG TY CỔ PHẦN QUẢN LÝ QUỸ VINACAPITAL   

#   4  Quỹ trái phiếu      CÔNG TY TNHH QUẢN LÝ QUỸ MIREA ASSET VIỆT NAM   

#   

#      management_fee inception_date       nav  nav_change_previous  \

#   0            0.50     2019-08-08  14678.07                -0.35   

#   1            0.50     2020-02-06  14648.27                 0.02   

#   2            1.10     2019-07-04  14818.05                 0.03   

#   3            0.95     2013-03-31  24278.85                 0.04   

#   4            0.80     2021-12-16  12687.79                -0.26   

#   

#      nav_change_last_year  nav_change_inception  ...  nav_change_3m  \

#   0                  1.47                 46.78  ...           1.43   

#   1                  0.16                 46.48  ...           1.89   

#   2                  1.89                 48.18  ...           1.68   

#   3                  1.86                 82.77  ...           1.59   

#   4                  1.43                 26.88  ...           1.25   

#   

#      nav_change_6m  nav_change_12m  nav_change_24m  nav_change_36m  \

#   0           3.11            6.07           16.34           25.83   

#   1           2.90            6.99           16.23           24.91   

#   2           3.44            7.03           16.61           24.80   

#   3           3.52            6.69           14.81           24.03   

#   4           3.02            6.41           16.55           23.76   

#   

#      nav_change_36m_annualized  nav_update_at fund_id_fmarket  fund_code  \

#   0                       7.96     2025-04-21              33    VCBFFIF   

#   1                       7.70     2025-04-21              45       PVBF   

#   2                       7.67     2025-04-21              37      VNDBF   

#   3                       7.44     2025-04-21              21        VFF   

#   4                       7.37     2025-04-21              50       MAFF   

#   

#       vsd_fee_id  

#   0  VCBFFIFN001  

#   1     PVBFN001  

#   2    VNDBFN001  

#   3      VFFN003  

#   4     MAFFN001  

#   

#   [5 rows x 21 columns]

"""
## Tìm kiếm quỹ theo tên viết tắt
"""

# Nhập 1 phần tên viết tắt để lọc
fund.filter('DC')
# Output:
#      id shortName

#   0  40     VNDCF

#   1  67      DCIP

#   2  62    HDBOND

#   3  27      DCBF

#   4  25      DCDE

#   5  28      DCDS

#   6  29      DCAF

"""
## Thông tin chi tiết quỹ
"""

"""
### Tăng trưởng NAV
"""

fund.details.nav_report('SSISCA')
# Output:
#   2025-04-22 05:29:38 - vnstock.explorer.fmarket.fund - INFO - Retrieving data for SSISCA

#               date  nav_per_unit short_name

#   0     2017-01-04      14412.31     SSISCA

#   1     2017-01-11      14527.86     SSISCA

#   2     2017-01-18      14240.04     SSISCA

#   3     2017-01-25      14547.21     SSISCA

#   4     2017-01-31      14541.96     SSISCA

#   ...          ...           ...        ...

#   1730  2025-04-15      37109.80     SSISCA

#   1731  2025-04-16      36655.23     SSISCA

#   1732  2025-04-17      36136.47     SSISCA

#   1733  2025-04-18      36316.72     SSISCA

#   1734  2025-04-21      36529.78     SSISCA

#   

#   [1735 rows x 3 columns]

"""
### Danh mục đầu tư lớn (top 10)
"""

fund.details.top_holding('SSISCA')
# Output:
#   2025-04-22 05:29:38 - vnstock.explorer.fmarket.fund - INFO - Retrieving data for SSISCA

#     stock_code                  industry  net_asset_percent type_asset  \

#   0        ACB                 Ngân hàng               7.87      STOCK   

#   1        FPT    Công nghệ và thông tin               7.18      STOCK   

#   2        CTG                 Ngân hàng               6.82      STOCK   

#   3        TCB                 Ngân hàng               5.94      STOCK   

#   4        HPG         Vật liệu xây dựng               5.27      STOCK   

#   5        VCB                 Ngân hàng               4.98      STOCK   

#   6        MBB                 Ngân hàng               4.70      STOCK   

#   7        MWG                    Bán lẻ               4.19      STOCK   

#   8        PHR  Sản xuất Nhựa - Hóa chất               3.67      STOCK   

#   9        QNS       Thực phẩm - Đồ uống               3.66      STOCK   

#   

#       update_at  fundId short_name  

#   0  2025-04-04      11     SSISCA  

#   1  2025-04-04      11     SSISCA  

#   2  2025-04-04      11     SSISCA  

#   3  2025-04-04      11     SSISCA  

#   4  2025-04-04      11     SSISCA  

#   5  2025-04-04      11     SSISCA  

#   6  2025-04-04      11     SSISCA  

#   7  2025-04-04      11     SSISCA  

#   8  2025-04-04      11     SSISCA  

#   9  2025-04-04      11     SSISCA  

"""
### Phân bổ theo ngành (Top 10)
"""

fund.details.industry_holding('SSISCA')
# Output:
#   2025-04-22 05:29:38 - vnstock.explorer.fmarket.fund - INFO - Retrieving data for SSISCA

#                         industry  net_asset_percent short_name

#   0                    Ngân hàng              35.22     SSISCA

#   1                 Bất động sản              16.32     SSISCA

#   2       Công nghệ và thông tin               7.18     SSISCA

#   3     Sản xuất Nhựa - Hóa chất               5.57     SSISCA

#   4            Vật liệu xây dựng               5.27     SSISCA

#   5                       Bán lẻ               4.19     SSISCA

#   6          Thực phẩm - Đồ uống               3.66     SSISCA

#   7                Thiết bị điện               3.38     SSISCA

#   8   Sản xuất Thiết bị, máy móc               2.95     SSISCA

#   9            Vận tải - Kho bãi               2.81     SSISCA

#   10                    Tiện ích               2.51     SSISCA

#   11            Sản xuất Phụ trợ               1.76     SSISCA

#   12                 Chứng khoán               1.25     SSISCA

#   13                 Khai khoáng               0.96     SSISCA

"""
### Phân bổ theo tài sản
"""

fund.details.asset_holding('SSISCA')
# Output:
#   2025-04-22 05:29:38 - vnstock.explorer.fmarket.fund - INFO - Retrieving data for SSISCA

#      asset_percent                asset_type short_name

#   0          93.06                  Cổ phiếu     SSISCA

#   1           6.94  Tiền và tương đương tiền     SSISCA



================================================
FILE: docs/5_visualization_data_exploration_vnstock3.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
# Mục lục
"""

"""
1. Chứng khoán Việt Nam [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock.ipynb)
2. Chứng khoán quốc tế: Forex, Crypto, Chỉ số [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb)
3. Dữ liệu Thị trường, hàng hoá [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock.ipynb)
4. Biểu diễn dữ liệu trực quan từ vnstock [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock.ipynb)
"""

"""
# I. Cài đặt
"""

"""
## Cài đặt thư viện
"""

!pip install -U vnstock

"""
## Nạp thư viện lần đầu
"""

"""
> Bạn có thể nạp toàn bộ các module của thư viện vào môi trường làm việc nếu chưa biết rõ mình cần gì hoặc chọn từng module riêng biệt để nạp vào khi đã quen thuộc.
"""

## Nạp toàn bộ thư viện
# from vnstock import *

## Nạp Wrapper làm việc chính (UI chính của thư viện)
from vnstock import Vnstock

"""
# II. Biểu diễn & khám phá dữ liệu
"""

"""
## Dữ liệu mẫu
"""

from vnstock import Vnstock
stock = Vnstock().stock(symbol='VN30F1M', source='VCI')
df = stock.quote.history(start='2020-01-01', end='2024-12-31')
# Đặt cột 'time' làm cột index
df.set_index('time', inplace=True)
df
# Output:
#   2025-01-02 06:07:40 - vnstock.common.data.data_explorer - WARNING - Thông tin niêm yết & giao dịch sẽ được truy xuất từ TCBS

#                 open    high     low   close  volume

#   time                                              

#   2020-01-02   877.5   886.3   876.5   886.3   70480

#   2020-01-03   887.1   887.9   879.5   879.5   70389

#   2020-01-06   877.5   883.5   871.6   872.0   83770

#   2020-01-07   873.9   877.8   871.6   875.0   83997

#   2020-01-08   868.0   871.0   863.4   863.7   90489

#   ...            ...     ...     ...     ...     ...

#   2024-12-25  1333.6  1355.6  1332.0  1350.1  215245

#   2024-12-26  1350.9  1351.2  1347.2  1350.7  114675

#   2024-12-27  1352.9  1357.5  1344.0  1348.5  122641

#   2024-12-30  1346.8  1347.4  1342.0  1345.2   94948

#   2024-12-31  1344.9  1352.1  1342.0  1345.5  135212

#   

#   [1235 rows x 5 columns]

stock = Vnstock().stock(symbol='TCB', source='VCI')
intraday_df = stock.quote.intraday(page_size=15000)
intraday_df
# Output:
#   2025-01-02 06:07:41 - vnstock.common.data.data_explorer - WARNING - Thông tin niêm yết & giao dịch sẽ được truy xuất từ TCBS

#                       time    price   volume match_type         id

#   2216 2024-12-31 09:15:02  24350.0    27700    ATO/ATC  262717485

#   2215 2024-12-31 09:15:42  24400.0     1000        Buy  262717981

#   2214 2024-12-31 09:15:43  24350.0      500       Sell  262717986

#   2213 2024-12-31 09:15:55  24400.0      300        Buy  262718105

#   2212 2024-12-31 09:15:58  24400.0     3000        Buy  262718157

#   ...                  ...      ...      ...        ...        ...

#   4    2024-12-31 14:29:36  24400.0      500        Buy  262930267

#   3    2024-12-31 14:29:37  24400.0     1000        Buy  262930308

#   2    2024-12-31 14:29:58  24400.0      800        Buy  262931595

#   1    2024-12-31 14:29:58  24400.0      200        Buy  262931596

#   0    2024-12-31 14:45:06  24650.0  4369000    ATO/ATC  262932780

#   

#   [2217 rows x 5 columns]

stock = Vnstock().stock(symbol='VCI', source='VCI')
income_df = stock.finance.income_statement(period='year', lang='vi', dropna=True)
income_df = income_df.sort_values('Năm', ascending=True)
income_df.set_index('Năm', inplace=True)
income_df
# Output:
#   2025-01-02 06:07:41 - vnstock.common.data.data_explorer - WARNING - Thông tin niêm yết & giao dịch sẽ được truy xuất từ TCBS

#          CP  Doanh thu (Tỷ đồng)  Tăng trưởng doanh thu (%)  \

#   Năm                                                         

#   2011  VCI         463753810568                   0.000000   

#   2013  VCI         399458747857                  -0.138641   

#   2014  VCI         616688248624                   0.543810   

#   2015  VCI         700701338901                   0.136233   

#   2016  VCI         893653059787                   0.275369   

#   2017  VCI        1536741663856                   0.719618   

#   2018  VCI        1821479495575                   0.185287   

#   2019  VCI        1540944352650                  -0.154015   

#   2020  VCI        1729591590563                   0.122423   

#   2021  VCI        3707068724492                   1.143320   

#   2022  VCI        3156242736345                  -0.148588   

#   2023  VCI        2472460543397                  -0.216644   

#   

#         Lợi nhuận sau thuế của Cổ đông công ty mẹ (Tỷ đồng)  \

#   Năm                                                         

#   2011                                        24966553737     

#   2013                                        72169919104     

#   2014                                       145272769307     

#   2015                                       237198169547     

#   2016                                       335051546171     

#   2017                                       655096164914     

#   2018                                       834621627351     

#   2019                                       693180577268     

#   2020                                       768912289421     

#   2021                                      1498718375328     

#   2022                                       868978185802     

#   2023                                       491904659394     

#   

#         Tăng trưởng lợi nhuận (%)  Doanh thu thuần  Giá vốn hàng bán  \

#   Năm                                                                  

#   2011                   0.000000     463753810568     -391934027821   

#   2013                   1.890664     399458747857     -262556133881   

#   2014                   1.012927     616688248624     -364160278791   

#   2015                   0.632778     700701338901     -213881837970   

#   2016                   0.412538     893653059787     -262284220644   

#   2017                   0.955210    1536741663856     -442507882892   

#   2018                   0.274044    1821479495575     -470178300230   

#   2019                  -0.169467    1540944352650     -462563219754   

#   2020                   0.109253    1729591590563     -522004485232   

#   2021                   0.949141    3707068724492    -1326133822522   

#   2022                  -0.420186    3156242736345    -1398531179478   

#   2023                  -0.433927    2472460543397    -1063597101525   

#   

#               Lãi gộp  Thu nhập tài chính  Chi phí tài chính  ...  \

#   Năm                                                         ...   

#   2011    71819782747        0.000000e+00       0.000000e+00  ...   

#   2013   136902613976        0.000000e+00       0.000000e+00  ...   

#   2014   252527969833        0.000000e+00       0.000000e+00  ...   

#   2015   486819500931        5.025766e+09      -1.047367e+11  ...   

#   2016   631368839143        5.398922e+09      -1.327008e+11  ...   

#   2017  1094233780964        6.271435e+09      -1.791610e+11  ...   

#   2018  1351301195345        8.024256e+09      -2.505027e+11  ...   

#   2019  1078381132896        9.926627e+09      -1.661177e+11  ...   

#   2020  1207587105331        5.858556e+09      -1.906228e+11  ...   

#   2021  2380934901970        2.561687e+10      -3.678404e+11  ...   

#   2022  1757711556867        3.554843e+10      -7.004501e+11  ...   

#   2023  1408863441872        2.369615e+10      -7.401612e+11  ...   

#   

#         Lợi nhuận khác  LN trước thuế  Chi phí thuế TNDN hiện hành  \

#   Năm                                                                

#   2011        33325000    32501527420                  -7534973683   

#   2013        82429268    90203867489                 -23010188596   

#   2014      -684811399   182828859179                 -35247540841   

#   2015      -288835880   300960284712                 -58822446462   

#   2016         6680537   415888536017                 -79615329710   

#   2017     11061826696   802977679615                -128693085155   

#   2018      8384183106  1023455908924                -192707433489   

#   2019        17597948   855007109256                -155223164412   

#   2020       621078878   951038957081                -182422798514   

#   2021      -267786912  1850585393088                -309748513618   

#   2022     43696276107  1059738713385                -250981079495   

#   2023       128411319   570138640134                 -64320454739   

#   

#         Chi phí thuế TNDN hoãn lại  Lợi nhuận thuần  Cổ đông thiểu số  \

#   Năm                                                                   

#   2011                           0      24966553737                 0   

#   2013                  4976240211      72169919104                 0   

#   2014                 -2308549031     145272769307                 0   

#   2015                 -3038958111     239098880139        1900710592   

#   2016                  1237400094     337510606401        2459060230   

#   2017                -19188429546     655096164914                 0   

#   2018                  3873151916     834621627351                 0   

#   2019                 -6603367576     693180577268                 0   

#   2020                   296130854     768912289421                 0   

#   2021                -42118504142    1498718375328                 0   

#   2022                 60220551912     868978185802                 0   

#   2023                -13913526001     491904659394                 0   

#   

#         Cổ đông của Công ty mẹ  Doanh thu bán hàng và cung cấp dịch vụ  \

#   Năm                                                                    

#   2011             24966553737                            463753810568   

#   2013             72169919104                            399458747857   

#   2014            145272769307                            616688248624   

#   2015            237198169547                            700701338901   

#   2016            335051546171                            893653059787   

#   2017            655096164914                           1536741663856   

#   2018            834621627351                           1821479495575   

#   2019            693180577268                           1540944352650   

#   2020            768912289421                           1729591590563   

#   2021           1498718375328                           3707068724492   

#   2022            868978185802                           3156242736345   

#   2023            491904659394                           2472460543397   

#   

#         Thu nhập khác  Thu nhập/Chi phí khác  

#   Năm                                         

#   2011       33325000                      0  

#   2013       98681819              -16252551  

#   2014     -644037102               40774297  

#   2015      104529819             -393365699  

#   2016      299775092             -293094555  

#   2017    11119139864              -57313168  

#   2018     8554303031             -170119925  

#   2019       17597948                      0  

#   2020      621078878                      0  

#   2021       69316632             -337103544  

#   2022    44543029091             -846752984  

#   2023      132390105               -3978786  

#   

#   [12 rows x 23 columns]

company = Vnstock().stock(symbol='VCB', source='TCBS').company
shareholders_df = company.shareholders()
# replace share_own_percent in Khác row in share_holder column by 100 - sum of other rows
shareholders_df.loc[shareholders_df['share_holder'] == 'Khác', 'share_own_percent'] = 1 - shareholders_df['share_own_percent'].sum()
shareholders_df
# Output:
#                     share_holder  share_own_percent

#   0  Ngân Hàng Nhà Nước Việt Nam             0.7480

#   1          Mizuho Bank Limited             0.1500

#   2                         Khác             0.0813

profile_df = company.profile()
profile_df
# Output:
#                                           company_name  \

#   0  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...   

#   

#                                        company_profile  \

#   0   Ngân hàng Thương mại Cổ phần Ngoại thương Việ...   

#   

#                                            history_dev company_promise  \

#   0    Ngày 30/10/1962: Ngân hàng Ngoại thương Việt...            None   

#   

#                                          business_risk  \

#   0    Rủi ro địa chính trị và nguy cơ chiến tranh ...   

#   

#                                       key_developments  \

#   0    Dịch vụ tài khoản Dịch vụ huy động vốn (tiền...   

#   

#                                    business_strategies  

#   0   Ngân hàng số 1 tại Việt Nam, một trong 100 ng...  

"""
## Biểu diễn xu hướng
"""

"""
### Time series (Line)
"""

# Vẽ biểu đồ đơn giản, sử dụng tuỳ chọn mặc định
df['close'].viz.timeseries()
# Output:
#   <Figure size 640x480 with 1 Axes>
#   (<Figure size 640x480 with 1 Axes>, <Axes: xlabel='time'>)

# Mở help cho biểu đồ timeseries để xem tất cả các tuỳ chọn
df['close'].viz.timeseries(figsize=(10, 6), 
                           title='Giá đóng cửa - Hợp đồng tương lai VN30F1M', 
                           ylabel='Giá', 
                           xlabel='Thời gian',
                           color_palette='vnstock',
                           palette_shuffle=True)
# Output:
#   <Figure size 1000x600 with 1 Axes>
#   (<Figure size 1000x600 with 1 Axes>,

#    <Axes: title={'center': 'Giá đóng cửa - Hợp đồng tương lai VN30F1M'}, xlabel='Thời gian', ylabel='Giá'>)

df.viz.help('timeseries')
# Output:
#   

#           Biểu diễn dữ liệu theo thời gian (timeseries). Dữ liệu cần có cột index là kiểu dữ liệu datetime.

#   

#           Tham số:

#               - data (pd.DataFrame hoặc pd.Series): Dữ liệu đầu vào dạng DataFrame hoặc Series.

#               - title (str): Tiêu đề của biểu đồ.

#               - title_fontsize (int): Cỡ chữ cho tiêu đề.

#               - xlabel (str): Nhãn cho trục X.

#               - ylabel (str): Nhãn cho trục Y.

#               - color_palette (str): Tên của bảng màu đã được định trước hoặc danh sách các màu tùy chỉnh. Mặc định là 'vnstock'. Các bảng màu có sẵn: 'percentage', 'amount', 'category', 'trend', 'flatui', 'vnstock', 'learn_anything'. Có thể liệt kê tất cả bảng màu với Utils.brand_palettes.keys().

#               - palette_shuffle (bool): Xáo trộn thứ tự màu sắc trong bảng màu, cho phép chọn màu ngẫu nhiên trong bảng màu để biểu diễn cho đến khi bạn ưng ý. Mặc định là False.

#               - grid (bool): Hiển thị lưới. Nhận True để hiện thị hoặc False để ẩn lưới.

#               - data_labels (bool): Hiển thị nhãn dữ liệu trên biểu đồ.

#               - data_label_format (str): Định dạng cho nhãn dữ liệu. Nhận các giá trị rút gọn như 1K, 1M, 1B, 1T tương ứng với 1 ngàn, 1 triệu, 1 tỷ, 1 nghìn tỷ.

#               - label_fontsize (int): Cỡ chữ cho nhãn trục X và Y.

#               - legend_title (str): Tiêu đề cho chú giải.

#               - show_legend (bool): Hiển thị chú giải. Nhận True để hiển thị hoặc False để ẩn chú giải.

#               - series_names (list): Danh sách tên cho các dải (series) dữ liệu trong biểu đồ. Nhận giá trị là 1 danh sách (list).

#               - font_name (str): Tên của font chữ muốn áp dụng.

#               - figsize (tuple): Kích thước của biểu đồ, ví dụ (10, 6).

#               - show_xaxis (bool): Hiển thị trục X. Nhận True để hiển thị hoặc False để ẩn trục X.

#               - show_yaxis (bool): Hiển thị trục Y. Nhận True để hiển thị hoặc False để ẩn trục Y.

#               - tick_labelsize (int): Cỡ chữ cho các nhãn trục.

#               - xtick_format (str): Định dạng cho nhãn trục X. Ví dụ định dạng số thập phân '{:.0f}'.

#               - ytick_format (str): Định dạng cho nhãn trục Y. Ví dụ định dạng phần trăm '{:.0%}'.

#               - tick_rotation (int): Góc quay cho các nhãn trục.

#               - xlim (tuple): Giới hạn cho trục X, ví dụ (0, 100).

#               - ylim (tuple): Giới hạn cho trục Y, ví dụ (0, 100).

#               - background_color (str): Màu nền cho biểu đồ.

#               - bar_edge_color (str): Màu viền cho các cột (bar) trong biểu đồ.

#           


"""
## Combo chart
"""

# Mở help cho biểu đồ combo để xem tất cả các tuỳ chọn
df.viz.combo(bar_data='volume',
             line_data='close',
             title='Giá đóng cửa và khối lượng giao dịch - Hợp đồng tương lai VN30F1M',
             left_ylabel='Volume (M)', right_ylabel='Price (K)',
             figsize=(10, 6),
             color_palette='stock',
             palette_shuffle=True)
# Output:
#   <Figure size 1000x600 with 2 Axes>
#   (<Figure size 1000x600 with 2 Axes>,

#    <Axes: title={'center': 'Giá đóng cửa và khối lượng giao dịch - Hợp đồng tương lai VN30F1M'}, ylabel='Volume (M)'>,

#    <Axes: title={'center': 'Giá đóng cửa và khối lượng giao dịch - Hợp đồng tương lai VN30F1M'}, ylabel='Price (K)'>)

"""
## Biểu diễn số lượng
"""

"""
### Table
"""

# Mở help cho table để xem tất cả các tuỳ chọn
df.reset_index().iloc[:10, :5]\
    .viz.table(figsize=(10, 10),
               title='10 dòng đầu tiên của dữ liệu',
               title_loc='center')
# Output:
#   <Figure size 1000x1000 with 1 Axes>

df.viz.help('table')
# Output:
#   

#               Plot a table using matplotlib.

#               Parameters:

#               

#               data (DataFrame): Dữ liệu cần biểu diễn

#               columns (list, optional): Các cột cần hiển thị. Mặc định là None.

#               title (str, optional): Tiêu đề của bảng. Mặc định là "".

#               title_loc (str, optional): Tiêu đề của bảng. Mặc định là "left".

#               header (bool, optional): Tùy chọn hiển thị header - hàng tiêu đề. Mặc định là True.

#               colWidths (list, optional): Chiều rộng của các cột. Mặc định là None.

#               rowLoc (str, optional): Vị trí hiển thị dữ liệu của các hàng. Mặc định là "right".

#               colLoc (str, optional): Vị trí hiển thị dữ liệu của các cột. Mặc định là "right".

#               colLabels (list, optional): Tiêu đề của các cột. Mặc định là None.

#               edges (str, optional): Cạnh của bảng. Mặc định là "horizontal".

#               orient (str, optional): Hướng của bảng. Mặc định là "horizontal".

#               figsize (tuple, optional): Kích thước của bảng. Mặc định là (5.5, 6).

#               savefig (str, optional): Địa chỉ lưu file. Mặc định là None.

#               show (bool, optional): Hiển thị bảng. Mặc định là False.

#           


"""
### Barplot
"""

# Mở help cho biểu đồ bar để xem tất cả các tuỳ chọn
income_df[['LN trước thuế', 'Lợi nhuận thuần']].div(1000_000_000)\
    .viz.bar(figsize=(10, 6), 
             title='VCI - Lợi nhuận trước thuế & lợi nhuận thuần (tỷ đồng)', 
             ylabel='Lợi nhuận (tỷ đồng)', 
             xlabel='Năm', 
             color_palette='stock',
             data_labels=False, # Hiển thị giá trị trên cột
             show_legend=True,
             rot=45) # Xoay nhãn trục x 45 độ
# Output:
#   <Figure size 1000x600 with 1 Axes>
#   (<Figure size 1000x600 with 1 Axes>,

#    <Axes: title={'center': 'VCI - Lợi nhuận trước thuế & lợi nhuận thuần (tỷ đồng)'}, xlabel='Năm', ylabel='Lợi nhuận (tỷ đồng)'>)

"""
### Heatmap
"""

df['returns'] = df['close'].pct_change() * 100

"""
Bạn có thể sử dụng các tham số cài đặt cho Heatmap do Seaborn hỗ trợ [tại đây](https://seaborn.pydata.org/generated/seaborn.heatmap.html)
"""

# Mở help cho biểu đồ heatmap để xem tất cả các tuỳ chọn
import pandas as pd
return_pivot = pd.pivot_table(df, index=df.index.year, columns=df.index.month, values='returns', aggfunc='mean')
cmap = df.viz.create_cmap('percentage') # Tạo colormap bằng 1 bảng màu có trong vnstock_ezchart
return_pivot.viz.heatmap(figsize=(10, 6),
                         title='VN30F1M - Thống kê lợi nhuận trung bình theo ngày qua các tháng trong năm (%)',
                         annot=True,
                         cmap=cmap)
# Output:
#   <Figure size 1000x600 with 2 Axes>
#   (<Figure size 1000x600 with 2 Axes>,

#    <Axes: title={'center': 'VN30F1M - Thống kê lợi nhuận trung bình theo ngày qua các tháng trong năm (%)'}, xlabel='time', ylabel='time'>)

df.viz.help('heatmap')
# Output:
#   

#           Biểu diễn dữ liệu dưới dạng biểu đồ nhiệt (heatmap).

#   

#           Tham số:

#               - data (pd.DataFrame): Dữ liệu đầu vào dạng DataFrame.

#               - title (str): Tiêu đề của biểu đồ.

#               - font_name (str): Tên của font chữ muốn áp dụng.

#               - figsize (tuple): Kích thước của biểu đồ, ví dụ (10, 6).

#               - xlim (tuple): Giới hạn cho trục X, ví dụ (0, 100).

#               - ylim (tuple): Giới hạn cho trục Y, ví dụ (0, 100).

#               - title_fontsize (int): Cỡ chữ cho tiêu đề.

#               - background_color (str): Màu nền cho biểu đồ.

#           


"""
## Biểu diễn phân phối
"""

"""
### Histogram
"""

# Mở help cho biểu đồ histogram để xem tất cả các tuỳ chọn
df['returns'].viz.hist(bins=20,
                       figsize=(10, 6),
                       title='VN30F1M - Phân phối lợi nhuận ngày (%)',
                       xlabel='Lợi nhuận (%)',
                       ylabel='Tần suất',
                       color_palette='stock')
# Output:
#   <Figure size 1000x600 with 1 Axes>
#   (<Figure size 1000x600 with 1 Axes>,

#    <Axes: title={'center': 'VN30F1M - Phân phối lợi nhuận ngày (%)'}, xlabel='Lợi nhuận (%)', ylabel='Tần suất'>)

"""
### Boxplot
"""

# Mở help cho biểu đồ boxplot để xem tất cả các tuỳ chọn
df.volume.div(1000_000)\
    .viz.boxplot(
        title='Phân phối khối lượng giao dịch của VN30F1M', 
        xlabel='', 
        ylabel='KLGD (Triệu CP)', 
        color_palette='stock', 
        palette_shuffle=True,
        figsize=(10, 6))
# Output:
#   No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.

#   <Figure size 1000x600 with 1 Axes>
#   (<Figure size 1000x600 with 1 Axes>,

#    <Axes: title={'center': 'Phân phối khối lượng giao dịch của VN30F1M'}, ylabel='KLGD (Triệu CP)'>)

"""
### Wordcloud
"""

profile_df.viz.wordcloud(figsize=(10, 6), 
                         title='VCB - Mô tả công ty',
                         max_words=50,
                         color_palette='stock')
# Output:
#   <Figure size 1000x600 with 1 Axes>

profile_df
# Output:
#                                           company_name  \

#   0  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...   

#   

#                                        company_profile  \

#   0   Ngân hàng Thương mại Cổ phần Ngoại thương Việ...   

#   

#                                            history_dev company_promise  \

#   0    Ngày 30/10/1962: Ngân hàng Ngoại thương Việt...            None   

#   

#                                          business_risk  \

#   0    Rủi ro địa chính trị và nguy cơ chiến tranh ...   

#   

#                                       key_developments  \

#   0    Dịch vụ tài khoản Dịch vụ huy động vốn (tiền...   

#   

#                                    business_strategies  

#   0   Ngân hàng số 1 tại Việt Nam, một trong 100 ng...  

"""
## Biểu diễn tỉ lệ
"""

"""
### Pie chart
"""

shareholders_df.viz.pie(title='Cổ đông lớn VNM',
                                             labels='share_holder',
                                             values='share_own_percent',
                                             figsize=(10, 6),
                                             ylabel='',
                                             color_palette='stock')
# Output:
#   <Figure size 1000x600 with 1 Axes>
#   (<Figure size 1000x600 with 1 Axes>,

#    <Axes: title={'center': 'Cổ đông lớn VNM'}>)

df.viz.help('pie')
# Output:
#   

#           Biểu diễn dữ liệu dưới dạng biểu đồ tròn (pie chart).

#   

#           Tham số:

#               - data (pd.DataFrame hoặc pd.Series): Dữ liệu đầu vào dạng DataFrame hoặc Series.

#               - labels (list): Nhãn cho từng phần của biểu đồ tròn.

#               - title (str): Tiêu đề của biểu đồ.

#               - color_palette (str): Tên của bảng màu đã được định trước hoặc danh sách các màu tùy chỉnh. Mặc định là 'vnstock'. Các bảng màu có sẵn: 'percentage', 'amount', 'category', 'trend', 'flatui', 'vnstock', 'learn_anything'. Có thể liệt kê tất cả bảng màu với Utils.brand_palettes.keys().

#               - palette_shuffle (bool): Xáo trộn thứ tự màu sắc trong bảng màu, cho phép chọn màu ngẫu nhiên trong bảng màu để biểu diễn cho đến khi bạn ưng ý. Mặc định là False.

#               - legend_title (str): Tiêu đề cho chú giải.

#               - series_names (list): Danh sách tên cho các dải (series) dữ liệu trong biểu đồ. Nhận giá trị là 1 danh sách (list).

#               - figsize (tuple): Kích thước của biểu đồ, ví dụ (10, 6).

#               - font_name (str): Tên của font chữ muốn áp dụng.

#               - show_legend (bool): Hiển thị chú giải. Nhận True để hiển thị hoặc False để ẩn chú giải.

#               - title_fontsize (int): Cỡ chữ cho tiêu đề.

#               - legend_fontsize (int): Cỡ chữ cho chú giải.

#           


"""
### Treemap
"""

shareholders_df.viz.treemap(title='Cổ đông lớn VNM',
                            labels='share_holder',
                            values='share_own_percent',
                            figsize=(10, 6),
                            color_palette='stock')
# Output:
#   (<Figure size 1000x600 with 1 Axes>, <Axes: >)
#   <Figure size 1000x600 with 1 Axes>

df.viz.help('treemap')
# Output:
#   

#           Vẽ biểu đồ treemap.

#           Tham số:

#               - values (series): Dải dữ liệu cần vẽ dạng List hoặc Pandas Series

#               - labels (list): Nhãn cho từng phần của biểu đồ treemap

#               - title (str): Tiêu đề của biểu đồ

#               - color_palette (str): Tên của bảng màu đã được định trước hoặc danh sách các màu tùy chỉnh. Mặc định là 'vnstock'. Các bảng màu có sẵn: 'percentage', 'amount', 'category', 'trend', 'flatui', 'vnstock', 'learn_anything'. Có thể liệt kê tất cả bảng màu với Utils.brand_palettes.keys().

#               - palette_shuffle (bool): Xáo trộn thứ tự màu sắc trong bảng màu, cho phép chọn màu ngẫu nhiên trong bảng màu để biểu diễn cho đến khi bạn ưng ý. Mặc định là False.

#               - figsize (tuple): Kích thước của biểu đồ, ví dụ (10, 6).

#               - title_fontsize (int): Cỡ chữ cho tiêu đề.

#               - fontsize: Kích thước chữ bên trong biểu đồ. Mặc định là 10

#               - color: Màu chữ, mặc định là 'white'.

#           


"""
## Biểu diễn tương quan
"""

"""
### Scatter plot
"""

df.viz.scatter(x='close', y='volume',
               title='VN30F1M - Tương quan giá đóng cửa và khối lượng giao dịch',
               xlabel='Giá đóng cửa',
               ylabel='Khối lượng giao dịch',
               figsize=(10, 6),
               color_palette='stock')
# Output:
#   No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.

#   <Figure size 1000x600 with 1 Axes>
#   (<Figure size 1000x600 with 1 Axes>,

#    <Axes: title={'center': 'VN30F1M - Tương quan giá đóng cửa và khối lượng giao dịch'}, xlabel='Giá đóng cửa', ylabel='Khối lượng giao dịch'>)

"""
### Pairplot
"""

df.viz.pairplot()
# Output:
#   <seaborn.axisgrid.PairGrid at 0x15130f160>
#   <Figure size 1500x1500 with 42 Axes>



================================================
FILE: docs/.DS_Store
================================================
[Non-text file]


================================================
FILE: docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/tcbs/1_vietnam_stock_vnstock3_tcbs.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
# Mục lục
"""

"""
1. Chứng khoán Việt Nam [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb)
2. Chứng khoán quốc tế: Forex, Crypto, Chỉ số [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb)
3. Dữ liệu Thị trường, hàng hoá [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb)
4. Biểu diễn dữ liệu trực quan từ Vnstock3 [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock3.ipynb)
"""

"""
# I. Cài đặt
"""

"""
## Cài đặt thư viện
"""

%cd "/workspaces/vnstock"
# Output:
#   /workspaces/vnstock


!pip install -U vnstock

"""
## Nạp thư viện lần đầu
"""

"""
> Bạn có thể nạp toàn bộ các module của thư viện vào môi trường làm việc nếu chưa biết rõ mình cần gì hoặc chọn từng module riêng biệt để nạp vào khi đã quen thuộc.
"""

## Nạp toàn bộ thư viện
# from vnstock import *

## Nạp Wrapper làm việc chính (UI chính của thư viện)
from vnstock import Vnstock

"""
# II. Truy xuất dữ liệu - CK Việt Nam
"""

"""
* Khởi tạo đối tượng stock để dùng cho tất cả thao tác truy xuất dữ liệu chứng khoán về sau. Luồng công việc minh hoạ dưới đây giả định bạn bắt đầu với 1 mã chứng khoán cần phân tích, mặc định là VN30F1M. Bạn có thể thay đổi sang mã bất kỳ bằng cách nhập tham số `symbol` tại hàm chức năng thay vì khởi tạo lại đối tượng. Ví dụ, mã `VN30F1M` được gán khi tạo đối tượng, nhưng khi gọi dữ liệu giá lịch sử, bạn có thể cập nhật mã mới là `ACB` thay vì khởi tạo lại đối tượng một cách bất tiện: `stock.quote.history(symbol='ACB', start='2020-01-01', end='2024-12-31')`

* Chọn nguồn dữ liệu thuộc danh sách được hỗ trợ: VCI, TCBS cho chứng khoán trong nước, MSN cho dữ liệu chứng khoán quốc tế và sàn HOSE.
"""

from vnstock import Vnstock
stock = Vnstock().stock(symbol='ACB', source='TCBS')
# Output:
#   2025-05-07 04:07:46 - vnstock.common.data.data_explorer - INFO - TCBS không cung cấp thông tin danh sách. Dữ liệu tự động trả về từ VCI.


"""
## Listing: Liệt kê danh sách chứng khoán
"""

"""
Bạn có thể sử dụng tính năng liệt kê danh sách niêm yết các mã chứng khoán từ nguồn VCI do nguồn TCBS không có sẵn dữ liệu tương ứng. Chi tiết: [tại đây](https://vnstocks.com/docs/huong-dan/thong-tin-niem-yet)
"""

"""
## Quote: Giá chứng khoán
"""

"""
#### Giá lịch sử
"""

"""
##### Cổ phiếu
"""

df = stock.quote.history(start='2024-01-01', end='2024-06-21', interval='1D')
df
# Output:
#             time   open   high    low  close    volume

#   0   2023-06-22  18.27  18.40  18.19  18.19   7976555

#   1   2023-06-23  18.23  18.40  18.14  18.40  11435894

#   2   2023-06-26  18.65  18.90  18.48  18.69  11788268

#   3   2023-06-27  18.94  18.94  18.65  18.65   5623455

#   4   2023-06-28  18.65  18.82  18.56  18.73   8233359

#   ..         ...    ...    ...    ...    ...       ...

#   245 2024-06-17  24.60  24.60  24.25  24.55   6375848

#   246 2024-06-18  24.70  24.70  24.40  24.55   5729760

#   247 2024-06-19  24.55  24.70  24.25  24.65   7618993

#   248 2024-06-20  24.55  24.85  24.40  24.80  10178313

#   249 2024-06-21  24.85  24.85  24.50  24.55   5126289

#   

#   [250 rows x 6 columns]

# Tất cả dataframe dữ liệu sẽ được gán thuộc tính tên và loại tài sản tương ứng
print(f'Mã chứng khoán: {df.name}')
print(f'Loại tài sản: {df.category}')
# Output:
#   Mã chứng khoán: ACB

#   Loại tài sản: stock


"""
##### Hợp đồng tương lai
"""

stock.quote.history(symbol='VN30F1M', start='2024-01-02', end='2024-11-01', interval='1D')
# Output:
#             time    open    high     low   close  volume

#   0   2023-11-02  1057.5  1087.0  1054.9  1087.0  304457

#   1   2023-11-03  1092.1  1094.7  1084.7  1087.0  283751

#   2   2023-11-06  1095.9  1106.0  1095.5  1106.0  245465

#   3   2023-11-07  1102.2  1102.8  1094.1  1095.4  225214

#   4   2023-11-08  1094.7  1136.6  1086.5  1134.0  338840

#   ..         ...     ...     ...     ...     ...     ...

#   245 2024-10-28  1330.0  1332.3  1327.2  1332.0  130396

#   246 2024-10-29  1334.0  1341.0  1334.0  1339.4  163921

#   247 2024-10-30  1341.6  1342.7  1331.5  1342.0  186935

#   248 2024-10-31  1339.0  1347.8  1333.7  1343.5  202412

#   249 2024-11-01  1340.4  1340.4  1326.6  1330.4  215622

#   

#   [250 rows x 6 columns]

stock.quote.history(symbol='VN30F2505', start='2025-03-01', end='2025-03-27', interval='1D')
# Output:
#             time    open    high     low   close  volume

#   0   2024-03-27  1286.0  1289.4  1279.6  1288.0  194509

#   1   2024-03-28  1295.6  1306.9  1294.5  1306.9  196706

#   2   2024-03-29  1306.2  1307.3  1295.3  1298.1  188233

#   3   2024-04-01  1293.0  1299.4  1283.2  1290.4  223772

#   4   2024-04-02  1284.7  1291.9  1274.3  1290.0  270424

#   ..         ...     ...     ...     ...     ...     ...

#   245 2025-03-21  1375.0  1376.4  1370.2  1373.9  140468

#   246 2025-03-24  1376.0  1390.0  1367.7  1390.0  205880

#   247 2025-03-25  1391.2  1392.3  1384.2  1386.7  163716

#   248 2025-03-26  1387.9  1393.2  1376.0  1376.9  209392

#   249 2025-03-27  1375.0  1380.1  1373.9  1374.8  170409

#   

#   [250 rows x 6 columns]

"""
##### Chỉ số
"""

stock.quote.history(symbol='VNINDEX', start='2024-01-02', end='2024-11-01', interval='1D')
# Output:
#             time     open     high      low    close     volume

#   0   2023-11-02  1048.62  1075.47  1045.14  1075.47  667009654

#   1   2023-11-03  1081.35  1082.23  1071.11  1076.78  649923945

#   2   2023-11-06  1082.21  1089.66  1081.01  1089.66  508936305

#   3   2023-11-07  1086.68  1089.89  1079.42  1080.29  480141780

#   4   2023-11-08  1079.14  1113.43  1075.80  1113.43  800215243

#   ..         ...      ...      ...      ...      ...        ...

#   245 2024-10-28  1252.76  1255.18  1250.94  1254.77  368249767

#   246 2024-10-29  1258.03  1262.38  1257.43  1261.78  454099020

#   247 2024-10-30  1263.57  1264.84  1255.07  1258.63  429794790

#   248 2024-10-31  1260.23  1267.88  1255.55  1264.48  409737985

#   249 2024-11-01  1262.39  1264.67  1254.33  1254.89  497670931

#   

#   [250 rows x 6 columns]

stock.quote.history(symbol='HNXINDEX', start='2024-01-02', end='2024-11-01', interval='1D')
# Output:
#             time    open    high     low   close     volume

#   0   2023-11-02  209.83  218.38  208.06  217.97  116214718

#   1   2023-11-03  217.97  219.44  216.42  217.75   91410974

#   2   2023-11-06  217.77  219.59  215.54  219.59   76203308

#   3   2023-11-07  217.73  221.57  217.73  218.29   88848102

#   4   2023-11-08  218.36  227.03  216.63  227.03  124639016

#   ..         ...     ...     ...     ...     ...        ...

#   245 2024-10-28  223.94  225.21  222.73  224.59   35431585

#   246 2024-10-29  224.59  226.06  224.25  225.56   37164309

#   247 2024-10-30  225.22  226.57  224.63  225.88   40564851

#   248 2024-10-31  225.99  226.81  224.62  226.36   36067438

#   249 2024-11-01  226.35  226.39  224.56  225.41   38306566

#   

#   [250 rows x 6 columns]

stock.quote.history(symbol='UPCOMINDEX', start='2024-01-02', end='2024-11-01', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2023-11-02  81.70  83.97  81.69  83.97  45099960

#   1   2023-11-03  83.97  84.33  83.64  84.16  39278480

#   2   2023-11-06  84.17  85.05  84.17  85.05  27605093

#   3   2023-11-07  85.06  85.18  84.34  84.61  31644159

#   4   2023-11-08  84.58  86.17  84.23  86.17  50719988

#   ..         ...    ...    ...    ...    ...       ...

#   245 2024-10-28  91.83  92.15  91.82  92.15  20380568

#   246 2024-10-29  92.15  92.40  91.93  92.32  22619774

#   247 2024-10-30  92.33  92.82  92.07  92.46  26581490

#   248 2024-10-31  92.47  92.56  92.05  92.38  30400557

#   249 2024-11-01  92.39  92.51  91.63  91.96  38320035

#   

#   [250 rows x 6 columns]

"""
##### Chứng quyền
"""

stock.quote.history(symbol='CFPT2314', start='2024-01-02', end='2024-11-01', interval='1D')
# Output:
#             time  open  high   low  close  volume

#   0   2023-11-02  1.76  1.82  1.76   1.82   44300

#   1   2023-11-03  1.92  1.92  1.84   1.88   28000

#   2   2023-11-06  1.88  1.89  1.86   1.87   44300

#   3   2023-11-07  1.86  1.86  1.86   1.86     800

#   4   2023-11-08  1.87  1.98  1.85   1.98  169300

#   ..         ...   ...   ...   ...    ...     ...

#   245 2024-10-28  5.70  5.83  5.70   5.76  246500

#   246 2024-10-29  5.77  5.88  5.77   5.82   61800

#   247 2024-10-30  5.87  5.93  5.87   5.90   48700

#   248 2024-10-31  6.06  6.06  5.88   5.93  626800

#   249 2024-11-01  5.75  5.82  5.65   5.77  302400

#   

#   [250 rows x 6 columns]

"""
#### Intraday: dữ liệu khớp lệnh
"""

# Dữ liệu khớp lệnh trong ngày giao dịch realtime hoặc ngày gần nhất (ngoài giờ giao dịch)
stock.quote.intraday(symbol='ACB', page_size=1000, show_log=False)
# Output:
#                            time    price  volume match_type

#   0   2025-05-07 09:15:00+07:00  24200.0     500        Buy

#   1   2025-05-07 09:15:00+07:00  24200.0     100        Buy

#   2   2025-05-07 09:15:00+07:00  24200.0     200        Buy

#   3   2025-05-07 09:15:00+07:00  24200.0     100        Buy

#   4   2025-05-07 09:15:00+07:00  24200.0    1000        Buy

#   ..                        ...      ...     ...        ...

#   995 2025-05-07 11:06:58+07:00  24000.0    3800       Sell

#   996 2025-05-07 11:07:08+07:00  24000.0    3000       Sell

#   997 2025-05-07 11:07:12+07:00  24050.0    3400        Buy

#   998 2025-05-07 11:07:49+07:00  24000.0    2000       Sell

#   999 2025-05-07 11:07:50+07:00  24050.0     100        Buy

#   

#   [1000 rows x 4 columns]

"""
## Trading: Giao dịch
"""

"""
### Bảng giá
"""

stock.trading.price_board(['ACB, FPT, VNM'])
# Output:
#     Mã CP      Giá  KLGD ròng(CM)  %KLGD ròng (CM)  Phiên +/-   \

#   0   ACB  24000.0      -104400.0            -36.5        -1.0   

#   1   FPT      NaN            NaN              NaN         NaN   

#   2   VNM      NaN            NaN              NaN         NaN   

#   

#      % thay đổi giá 3D  % thay đổi giá 1M  % thay đổi giá 3M  % thay đổi giá 1Y  \

#   0               -0.2                0.8               -5.5                3.9   

#   1                NaN                NaN                NaN                NaN   

#   2                NaN                NaN                NaN                NaN   

#   

#      Đỉnh 1M  ...  P/B       ROE  TCRating  Khối lượng Dư bán  \

#   0  24850.0  ...  1.2  0.204646       3.0           464500.0   

#   1      NaN  ...  NaN       NaN       NaN                NaN   

#   2      NaN  ...  NaN       NaN       NaN                NaN   

#   

#      Khối lượng Dư mua  TCBS định giá  Khớp nhiều nhất  Đ.góp VNINDEX  \

#   0          2464200.0            0.0          24050.0            0.0   

#   1                NaN            NaN              NaN            NaN   

#   2                NaN            NaN              NaN            NaN   

#   

#      %Giá - %VNI (1M)  %Giá - %VNI (1Y)  

#   0              -1.7               2.2  

#   1               NaN               NaN  

#   2               NaN               NaN  

#   

#   [3 rows x 28 columns]

stock.trading.price_board(['VCB','ACB','TCB','BID']).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá
# Output:
#                             0         1         2         3

#   Mã CP                   VCB       ACB       TCB       BID

#   Giá                 57100.0   24000.0   26700.0   34750.0

#   KLGD ròng(CM)             0   -104400   -146900         0

#   %KLGD ròng (CM)         0.0     -36.5     -33.5       0.0

#   Phiên +/-                -3        -1         5         2

#   % thay đổi giá 3D      -0.5      -0.2       2.1       1.2

#   % thay đổi giá 1M      -5.0       0.8       4.5      -2.9

#   % thay đổi giá 3M      -8.0      -5.5       8.7     -11.7

#   % thay đổi giá 1Y      -7.9       3.9      14.9     -14.0

#   Đỉnh 1M               60000     24850     26850     37000

#   Đỉnh 3M               67300     26650     28000     41400

#   Đỉnh 1Y               67300     26650     28000     41816

#   Đáy 1M                52500     21800     23600     32450

#   Đáy 3M                52500     21800     23600     32450

#   Đáy 1Y                52500     21800     20850     32450

#   %Đỉnh 1Y              -15.3      -9.9      -4.1     -16.4

#   %Đáy 1Y                 8.6      10.1      28.8       7.7

#   P/E                    14.0       6.5       8.9       9.8

#   P/B                     2.3       1.2       1.2       1.6

#   ROE                0.179449  0.204646  0.147637  0.183364

#   TCRating                2.4       3.0       3.5       2.4

#   Khối lượng Dư bán     66900    464500    446100    130700

#   Khối lượng Dư mua    232100   2464200    508500     89500

#   TCBS định giá             0         0         0         0

#   Khớp nhiều nhất       57300     24050     26850     34700

#   Đ.góp VNINDEX           0.4       0.0     -0.25     -0.42

#   %Giá - %VNI (1M)       -7.6      -1.7       1.9      -5.5

#   %Giá - %VNI (1Y)       -9.6       2.2      13.2     -15.8

"""
## Company: Thông tin công ty
"""

from vnstock import Vnstock

company = Vnstock().stock(symbol='VCB', source='TCBS').company
# Output:
#   2025-05-07 04:07:51 - vnstock.common.data.data_explorer - INFO - TCBS không cung cấp thông tin danh sách. Dữ liệu tự động trả về từ VCI.


"""
Xem thông tin mô tả trên website [tại đây](https://vnstocks.com/docs/huong-dan/bao-cao-tai-chinh#dữ-liệu-báo-cáo-từ-tcbs)
"""

"""
### Tổng quan
"""

# Bỏ .T để xoay dòng thành cột
company.overview().T
# Output:
#                                               0

#   symbol                                    VCB

#   exchange                                 HOSE

#   industry                                Banks

#   company_type                               NH

#   no_shareholders                         25183

#   foreign_percent                         0.224

#   outstanding_share                      8355.7

#   issue_share                            8355.7

#   established_year                         2008

#   no_employees                            24306

#   stock_rating                              2.4

#   delta_in_week                          -0.036

#   delta_in_month                         -0.076

#   delta_in_year                          -0.096

#   short_name                        Vietcombank

#   website            https://vietcombank.com.vn

#   industry_id                               289

#   industry_id_v2                           8355

"""
### Hồ sơ
"""

# Bỏ .T để xoay dòng thành cột
company.profile().T
# Output:
#                                                                        0

#   symbol                                                             VCB

#   company_name         Joint Stock Commercial Bank For Foreign Trade ...

#   company_profile       Joint Stock Commercial Bank For Foreign Trade...

#   history_dev            October 30, 1962: Bank for Foreign Trade of ...

#   company_promise                                                   None

#   business_risk         Risks related to geopolitical instability and...

#   key_developments       Account service Mobilizing capital service; ...

#   business_strategies      As the leading bank in Vietnam, one of the...

"""
### Cổ đông
"""

company.shareholders()
# Output:
#                   share_holder  share_own_percent

#   0  The State Bank Of Vietnam             0.7480

#   1          Mizuho Bank, Ltd.             0.1500

#   2                      Other             0.0207

"""
### Giao dịch nội bộ
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
company.insider_deals().head()
# Output:
#     deal_announce_date       deal_method deal_action  deal_quantity  deal_price  \

#   0         2025-04-14    Cổ đông nội bộ         Mua            0.0     59300.0   

#   1         2025-02-20    Cổ đông nội bộ         Mua        10000.0     61338.0   

#   2         2023-12-21    Cổ đông nội bộ         Mua         5000.0     54114.0   

#   3         2020-12-30  Cổ đông sáng lập         Bán        -2523.0     42927.0   

#   4         2020-12-23    Cổ đông nội bộ         Bán       -15000.0     42751.0   

#   

#      deal_ratio  

#   0      -0.039  

#   1      -0.071  

#   2       0.053  

#   3       0.328  

#   4       0.333  

"""
### Công ty con, liên kết
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
company.subsidiaries().head()
# Output:
#                                       sub_company_name  sub_own_percent

#   0  Vietnam Foreign Trade Joint Stock Bank Securit...              1.0

#   1  Money Transfer Company Limited Joint Stock Com...              1.0

#   2             Vietcombank Financial Leasing Co., Ltd              1.0

#   3    Vietnam Finance Company In Hong Kong - Vinafico              1.0

#   4      Foreign Trade Of Vietnam Bank Limited In Laos              1.0

"""
### Ban lãnh đạo
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
company.officers().head()
# Output:
#            officer_name             officer_position  officer_own_percent

#   6   Nguyen Danh Luong                    Spokesman                  0.0

#   14      Le Hoang Tung                    Spokesman                  0.0

#   12   Do Thi Mai Huong  Member of Supervisors Board                  0.0

#   4   Nguyen Danh Luong   Member of Management Board                  0.0

#   10     Le Thi Kim Nga   Member of Management Board                  0.0

"""
### Sự kiện
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
company.events().head()
# Output:
#       rsi    rs       id    price  price_change  price_change_ratio  \

#   0  39.6  32.0  2590699  57300.0        -200.0              -0.003   

#   1  39.6  32.0  2590719  57300.0        -200.0              -0.003   

#   2  41.8  44.0  2590066  57500.0        -700.0              -0.012   

#   3  44.4  51.0  2588704  59300.0        -500.0              -0.008   

#   4  50.8  52.0  2586617      NaN           NaN                 NaN   

#   

#      price_change_ratio_1m                                         event_name  \

#   0                 -0.105           VCB - Financial Statement Quarter 1/2025   

#   1                 -0.105  VCB - Financial Statement Quarter 1/2025 (hold...   

#   2                 -0.131         VCB- Lists additional 2,766,583,832 shares   

#   3                 -0.102             VCB - Notification Insider Transaction   

#   4                    NaN          VCB - Audited Financial Statement FY 2024   

#   

#     event_code notify_date   exer_date reg_final_date exer_right_date  \

#   0       KQQY  2025-04-29  2025-04-29     1753-01-01      1753-01-01   

#   1       KQQY  2025-04-29  2025-04-29     1753-01-01      1753-01-01   

#   2        AIS  2025-04-25  2025-04-23     1753-01-01      1753-01-01   

#   3      DDALL  2025-04-14  2025-05-16     1753-01-01      1753-01-01   

#   4       KQCT  2025-03-29  2025-03-29     1753-01-01      1753-01-01   

#   

#                                             event_desc  

#   0           VCB - Financial Statement Quarter 1/2025  

#   1  VCB - Financial Statement Quarter 1/2025 (hold...  

#   2  Joint Stock Commercial Bank For Foreign Trade ...  

#   3  - Name of person/ corporation that conducts th...  

#   4          VCB - Audited Financial Statement FY 2024  

"""
### Tin tức
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
company.news().head()
# Output:
#       rsi    rs    price  price_change  price_change_ratio  \

#   0  39.6  29.0  57500.0           0.0                 0.0   

#   1  39.6  29.0  57500.0           0.0                 0.0   

#   2  39.6  29.0      NaN           NaN                 NaN   

#   3  39.6  29.0      NaN           NaN                 NaN   

#   4  39.6  29.0      NaN           NaN                 NaN   

#   

#      price_change_ratio_1m        id  \

#   0                 -0.113  11557398   

#   1                 -0.113  11557327   

#   2                    NaN  11555885   

#   3                    NaN  11555867   

#   4                    NaN  11556081   

#   

#                                                  title source  \

#   0  VCB: Nghị quyết và Biên bản họp ĐHĐCĐ thường n...   TCBS   

#   1            VCB: Thông báo thay đổi nhân sự công ty   TCBS   

#   2  Chủ tịch Nguyễn Thanh Tùng: Chính sách thuế củ...   TCBS   

#   3  ĐHĐCĐ Vietcombank (VCB) 2025: Thông qua kế hoạ...   TCBS   

#   4  VCB: Thông báo cập nhật, bổ sung tài liệu họp ...   TCBS   

#   

#             publish_date  

#   0  2025-04-28 14:15:00  

#   1  2025-04-28 10:41:00  

#   2  2025-04-26 15:08:00  

#   3  2025-04-26 14:38:00  

#   4  2025-04-26 10:54:00  

"""
### Cổ tức
"""

company.dividends()
# Output:
#      exercise_date  cash_year  cash_dividend_percentage issue_method

#   0     2025-03-12       2025                     0.495        share

#   1     2023-07-25       2023                     0.181        share

#   2     2021-12-22       2022                     0.276        share

#   3     2021-12-22       2020                     0.120         cash

#   4     2020-12-21       2019                     0.080         cash

#   5     2019-12-30       2018                     0.080         cash

#   6     2018-10-05       2017                     0.080         cash

#   7     2017-09-28       2016                     0.080         cash

#   8     2016-09-09       2015                     0.100         cash

#   9     2015-06-26       2014                     0.100         cash

#   10    2014-06-18       2013                     0.120         cash

#   11    2013-02-26       2012                     0.120         cash

#   12    2012-02-24       2011                     0.120         cash

#   13    2011-07-18       2011                     0.120        share

#   14    2010-03-10       2009                     0.120         cash

"""
## Finance: Báo cáo tài chính
"""

from vnstock import Vnstock
stock = Vnstock().stock(symbol='VCI', source='TCBS')
# Output:
#   2025-05-07 04:07:52 - vnstock.common.data.data_explorer - INFO - TCBS không cung cấp thông tin danh sách. Dữ liệu tự động trả về từ VCI.


"""
### Bảng cân đối kế toán
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.balance_sheet(period='year').head()
# Output:
#           short_asset  cash  short_invest  short_receivable  inventory  \

#   period                                                                 

#   2024          26492  4744         21073               507          0   

#   2023          17174   788         15097              1094          0   

#   2022          14158  3424         10562               120          0   

#   2021          16569  1132         14998               285          0   

#   2020           8312   643          6698               222          0   

#   

#           long_asset  fixed_asset  asset   debt  short_debt  long_debt  equity  \

#   period                                                                         

#   2024           100           37  26592  13648       12574          0   12944   

#   2023            81           23  17255   9884        8979          0    7371   

#   2022            85           23  14243   7747        6326          0    6495   

#   2021            67           13  16636  10094        6363          0    6542   

#   2020            70           14   8382   3861        2696          0    4521   

#   

#           capital  other_debt  un_distributed_income  minor_share_holder_profit  \

#   period                                                                          

#   2024       7181          78                      0                          0   

#   2023       4375          16                      0                          0   

#   2022       4355         317                      0                          0   

#   2021       3330          12                      0                          0   

#   2020       1656          28                      0                          0   

#   

#           payable  

#   period           

#   2024      13648  

#   2023       9884  

#   2022       7747  

#   2021      10094  

#   2020       3861  

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.balance_sheet(period='quarter').head()
# Output:
#           quarter  year  short_asset  cash  short_invest  short_receivable  \

#   period                                                                     

#   2025-Q1       1  2025        23621  2302         19710              1257   

#   2024-Q4       4  2024        26492  4744         21073               507   

#   2024-Q3       3  2024        20322  2544         17409               236   

#   2024-Q2       2  2024        23010  3903         17775               931   

#   2024-Q1       1  2024        19458  1041         17454               703   

#   

#            inventory  long_asset  fixed_asset  asset   debt  short_debt  \

#   period                                                                  

#   2025-Q1          0         107           43  23728  11148       10311   

#   2024-Q4          0         100           37  26592  13648       12574   

#   2024-Q3          0          93           29  20415  11773       10833   

#   2024-Q2          0          95           32  23105  14247       12392   

#   2024-Q1          0          86           22  19545  11367       10240   

#   

#            long_debt  equity  capital  other_debt  un_distributed_income  \

#   period                                                                   

#   2025-Q1          0   12580     7181          33                    0.0   

#   2024-Q4          0   12944     7181          78                    0.0   

#   2024-Q3          0    8642     5745          12                    0.0   

#   2024-Q2          0    8859     4419          11                    0.0   

#   2024-Q1          0    8177     4375          19                    0.0   

#   

#            minor_share_holder_profit  payable  

#   period                                       

#   2025-Q1                          0    11148  

#   2024-Q4                          0    13648  

#   2024-Q3                          0    11773  

#   2024-Q2                          0    14247  

#   2024-Q1                          0    11367  

"""
### Báo cáo kết quả kinh doanh
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.income_statement(period='year').head()
# Output:
#           revenue  year_revenue_growth  cost_of_good_sold  gross_profit  \

#   period                                                                  

#   2024       3696                0.495              -1717          1978   

#   2023       2472               -0.217              -1064          1409   

#   2022       3156               -0.149              -1399          1758   

#   2021       3707                1.143              -1326          2381   

#   2020       1730                0.122               -522          1208   

#   

#           operation_expense  operation_profit  year_operation_profit_growth  \

#   period                                                                      

#   2024                 -145              1833                         0.425   

#   2023                 -122              1286                        -0.235   

#   2022                  -77              1681                        -0.234   

#   2021                 -188              2193                         0.932   

#   2020                  -72              1135                         0.123   

#   

#           interest_expense  pre_tax_profit  post_tax_profit  \

#   period                                                      

#   2024                -764            1089              911   

#   2023                -563             570              492   

#   2022                -477            1060              869   

#   2021                -331            1851             1499   

#   2020                -174             951              769   

#   

#           share_holder_income  year_share_holder_income_growth  ebitda  

#   period                                                                

#   2024                    911                            0.851  1844.0  

#   2023                    492                           -0.434  1296.0  

#   2022                    869                           -0.420  1691.0  

#   2021                   1499                            0.949  2201.0  

#   2020                    769                            0.109  1146.0  

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.income_statement(period='quarter').head()
# Output:
#           quarter  year  revenue  year_revenue_growth  quarter_revenue_growth  \

#   period                                                                        

#   2025-Q1       1  2025      851                0.055                  -0.148   

#   2024-Q4       4  2024      999                0.240                   0.025   

#   2024-Q3       3  2024      974                0.461                   0.064   

#   2024-Q2       2  2024      916                0.829                   0.136   

#   2024-Q1       1  2024      806                0.615                   0.001   

#   

#            cost_of_good_sold  gross_profit  operation_expense  operation_profit  \

#   period                                                                          

#   2025-Q1               -314           537                -23               514   

#   2024-Q4               -520           479                -32               447   

#   2024-Q3               -468           506                -48               458   

#   2024-Q2               -359           557                -34               522   

#   2024-Q1               -370           436                -30               406   

#   

#            year_operation_profit_growth  quarter_operation_profit_growth  \

#   period                                                                   

#   2025-Q1                         0.267                            0.152   

#   2024-Q4                         0.320                           -0.026   

#   2024-Q3                         0.235                           -0.122   

#   2024-Q2                         0.540                            0.286   

#   2024-Q1                         0.709                            0.200   

#   

#            interest_expense  pre_tax_profit  post_tax_profit  \

#   period                                                       

#   2025-Q1              -172             355              295   

#   2024-Q4              -197             253              218   

#   2024-Q3              -199             265              215   

#   2024-Q2              -189             344              279   

#   2024-Q1              -179             228              198   

#   

#            share_holder_income  year_share_holder_income_growth  \

#   period                                                          

#   2025-Q1                  295                            0.491   

#   2024-Q4                  218                            0.776   

#   2024-Q3                  215                            0.203   

#   2024-Q2                  279                            1.388   

#   2024-Q1                  198                            1.707   

#   

#            quarter_share_holder_income_growth  ebitda  

#   period                                               

#   2025-Q1                               0.350   518.0  

#   2024-Q4                               0.014   450.0  

#   2024-Q3                              -0.229   461.0  

#   2024-Q2                               0.412   525.0  

#   2024-Q1                               0.608   408.0  

"""
### Báo cáo lưu chuyển tiền tệ
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.cash_flow(period='year').head()
# Output:
#           invest_cost  from_invest  from_financial  from_sale  free_cash_flow

#   period                                                                     

#   2024            -31          -31            7371      -3384           809.0

#   2023             -8           -8            1728      -4356           526.0

#   2022            -22          -22           -1428       3742           981.0

#   2021             -6           -6            4246      -3750          1401.0

#   2020            -14          -13             433       -572           975.0

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.income_statement(period='quarter').head()
# Output:
#           quarter  year  revenue  year_revenue_growth  quarter_revenue_growth  \

#   period                                                                        

#   2025-Q1       1  2025      851                0.055                  -0.148   

#   2024-Q4       4  2024      999                0.240                   0.025   

#   2024-Q3       3  2024      974                0.461                   0.064   

#   2024-Q2       2  2024      916                0.829                   0.136   

#   2024-Q1       1  2024      806                0.615                   0.001   

#   

#            cost_of_good_sold  gross_profit  operation_expense  operation_profit  \

#   period                                                                          

#   2025-Q1               -314           537                -23               514   

#   2024-Q4               -520           479                -32               447   

#   2024-Q3               -468           506                -48               458   

#   2024-Q2               -359           557                -34               522   

#   2024-Q1               -370           436                -30               406   

#   

#            year_operation_profit_growth  quarter_operation_profit_growth  \

#   period                                                                   

#   2025-Q1                         0.267                            0.152   

#   2024-Q4                         0.320                           -0.026   

#   2024-Q3                         0.235                           -0.122   

#   2024-Q2                         0.540                            0.286   

#   2024-Q1                         0.709                            0.200   

#   

#            interest_expense  pre_tax_profit  post_tax_profit  \

#   period                                                       

#   2025-Q1              -172             355              295   

#   2024-Q4              -197             253              218   

#   2024-Q3              -199             265              215   

#   2024-Q2              -189             344              279   

#   2024-Q1              -179             228              198   

#   

#            share_holder_income  year_share_holder_income_growth  \

#   period                                                          

#   2025-Q1                  295                            0.491   

#   2024-Q4                  218                            0.776   

#   2024-Q3                  215                            0.203   

#   2024-Q2                  279                            1.388   

#   2024-Q1                  198                            1.707   

#   

#            quarter_share_holder_income_growth  ebitda  

#   period                                               

#   2025-Q1                               0.350   518.0  

#   2024-Q4                               0.014   450.0  

#   2024-Q3                              -0.229   461.0  

#   2024-Q2                               0.412   525.0  

#   2024-Q1                               0.608   408.0  

"""
### Chỉ số tài chính
"""

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.ratio(period='year', dropna=True).head()
# Output:
#   2025-05-07 04:07:53 - vnstock.common.data.data_explorer - INFO - Tham số dropna không được hỗ trợ cho nguồn dữ liệu TCBS

#           price_to_earning  price_to_book  value_before_ebitda  dividend    roe  \

#   period                                                                          

#   2024                26.0            1.8                 18.9     0.020  0.090   

#   2023                47.2            3.2                 21.3       NaN  0.071   

#   2022                14.4            1.9                 10.9     0.069  0.133   

#   2021                15.6            3.6                  8.4       NaN  0.271   

#   2020                12.1            2.1                 10.2       NaN  0.179   

#   

#             roa  days_receivable  days_payable  earning_per_share  \

#   period                                                            

#   2024    0.042           1045.0            21               1268   

#   2023    0.031           1061.0            30                685   

#   2022    0.056            788.0            79               1210   

#   2021    0.120            568.0            95               3425   

#   2020    0.098            914.0            39               1765   

#   

#           book_value_per_share  ...  cash_on_capitalize  \

#   period                        ...                       

#   2024                   18025  ...               0.178   

#   2023                   10264  ...               0.038   

#   2022                    9045  ...               0.249   

#   2021                   14952  ...               0.078   

#   2020                   10382  ...               0.062   

#   

#           revenue_on_work_capital  capex_on_fixed_asset  revenue_on_asset  \

#   period                                                                    

#   2024                        0.3                -0.840               0.1   

#   2023                        0.3                -0.337               0.1   

#   2022                        0.5                -0.952               0.2   

#   2021                        0.6                -0.489               0.2   

#   2020                        0.4                -0.961               0.2   

#   

#           post_tax_on_pre_tax  ebit_on_revenue  pre_tax_on_ebit  \

#   period                                                          

#   2024                    0.8            0.496              0.6   

#   2023                    0.9            0.520              0.4   

#   2022                    0.8            0.533              0.6   

#   2021                    0.8            0.592              0.8   

#   2020                    0.8            0.656              0.8   

#   

#           payable_on_equity  ebitda_on_stock_change  book_value_per_share_change  

#   period                                                                          

#   2024                  1.1                   0.075                        0.756  

#   2023                  1.3                  -0.325                        0.135  

#   2022                  1.2                  -0.502                       -0.395  

#   2021                  1.5                   0.271                        0.440  

#   2020                  0.9                   0.111                       -0.147  

#   

#   [5 rows x 35 columns]

# Bỏ .head() để hiển thị toàn bộ dữ liệu
stock.finance.ratio(period='quarter').head()
# Output:
#            quarter  year  price_to_earning  price_to_book  value_before_ebitda  \

#   period                                                                         

#   2025-Q1        1  2025              26.4            2.1                 17.7   

#   2024-Q4        4  2024              26.0            1.8                 18.9   

#   2024-Q3        3  2024              32.1            3.0                 18.1   

#   2024-Q2        2  2024              32.2            2.8                 17.7   

#   2024-Q1        1  2024              47.4            3.6                 20.6   

#   

#              roe    roa  days_receivable  days_payable  earning_per_share  ...  \

#   period                                                                   ...   

#   2025-Q1  0.097  0.047           1054.0            24               1403  ...   

#   2024-Q4  0.090  0.042           1045.0            21               1268  ...   

#   2024-Q3  0.102  0.044            874.0             9               1135  ...   

#   2024-Q2  0.096  0.041            982.0           120               1084  ...   

#   2024-Q1  0.082  0.036           1035.0            54                858  ...   

#   

#            cash_on_capitalize  revenue_on_work_capital  capex_on_fixed_asset  \

#   period                                                                       

#   2025-Q1               0.087                      0.3                -1.092   

#   2024-Q4               0.178                      0.3                -1.031   

#   2024-Q3               0.110                      0.4                -0.952   

#   2024-Q2               0.188                      0.4                -0.935   

#   2024-Q1               0.050                      0.4                -0.615   

#   

#            revenue_on_asset  post_tax_on_pre_tax  ebit_on_revenue  \

#   period                                                            

#   2025-Q1               0.2                  0.8            0.605   

#   2024-Q4               0.2                  0.9            0.447   

#   2024-Q3               0.2                  0.8            0.470   

#   2024-Q2               0.2                  0.8            0.570   

#   2024-Q1               0.2                  0.9            0.504   

#   

#            pre_tax_on_ebit  payable_on_equity  ebitda_on_stock_change  \

#   period                                                                

#   2025-Q1              0.7                0.9                   0.059   

#   2024-Q4              0.6                1.1                  -0.069   

#   2024-Q3              0.6                1.4                  -0.085   

#   2024-Q2              0.7                1.6                   0.117   

#   2024-Q1              0.6                1.4                   0.130   

#   

#            book_value_per_share_change  

#   period                                

#   2025-Q1                       -0.028  

#   2024-Q4                        0.498  

#   2024-Q3                       -0.024  

#   2024-Q2                        0.083  

#   2024-Q1                        0.109  

#   

#   [5 rows x 36 columns]



================================================
FILE: docs/vci/vci_functions_demo.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/vci/vci_functions_demo.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
# Mục lục
"""

"""
# I. Cài đặt
"""

"""
## Cài đặt thư viện
"""

!pip install -U vnstock

"""
## Nạp thư viện lần đầu
"""

"""
> Bạn có thể nạp toàn bộ các module của thư viện vào môi trường làm việc nếu chưa biết rõ mình cần gì hoặc chọn từng module riêng biệt để nạp vào khi đã quen thuộc.
"""

from vnstock.explorer.vci import Listing, Quote, Company, Finance, Trading

"""
# II. Truy xuất dữ liệu - CK Việt Nam
"""

"""
## Listing: Liệt kê danh sách chứng khoán
"""

listing = Listing()

"""
### Danh sách tất cả mã CK niêm yết (đơn giản)
"""

# VCI là nguồn dữ liệu từ CK Vietcap bên cạnh nguồn từ TCBS
listing.all_symbols()
# Output:
#        symbol                                         organ_name

#   0       YTC  Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố ...

#   1       YEG                     Công ty Cổ phần Tập đoàn Yeah1

#   2       YBM     Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái

#   3       YBC      Công ty Cổ phần Xi măng và Khoáng sản Yên Bái

#   4       XPH                    Công ty Cổ phần Xà phòng Hà Nội

#   ...     ...                                                ...

#   1704    AAS            Công ty Cổ phần Chứng khoán SmartInvest

#   1705    AAM                    Công ty Cổ Phần Thủy Sản MeKong

#   1706    AAH                           Công ty Cổ phần Hợp Nhất

#   1707    AAA                  Công ty Cổ phần Nhựa An Phát Xanh

#   1708    A32                                 Công ty Cổ phần 32

#   

#   [1709 rows x 2 columns]

# Xuất dữ liệu ra file csv
listing.all_symbols().to_csv('assets/data/all_symbols.csv', index=False)

"""
### Liệt kê mã CP theo sàn (đầy đủ)
"""

# Dữ liệu bao gồm tất cả các mã không kể đang niêm yết hay không
listing.symbols_by_exchange()
# Output:
#        symbol exchange   type               organ_short_name  \

#   0       YTC    UPCOM  STOCK                XNK Y tế TP.HCM   

#   1       YEG      HSX  STOCK                 Tập đoàn Yeah1   

#   2       YBM      HSX  STOCK          Khoáng sản CN Yên Bái   

#   3       YBC    UPCOM  STOCK  Xi măng và Khoáng sản Yên Bái   

#   4       XPH    UPCOM  STOCK                Xà phòng Hà Nội   

#   ...     ...      ...    ...                            ...   

#   2753    AAS    UPCOM  STOCK        Chứng khoán SmartInvest   

#   2754    AAM      HSX  STOCK                Thủy sản Mekong   

#   2755    AAH    UPCOM  STOCK                  Than Hợp Nhất   

#   2756    AAA      HSX  STOCK            An Phát Bioplastics   

#   2757    A32    UPCOM  STOCK                     Công ty 32   

#   

#                                                organ_name  

#   0     Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố ...  

#   1                        Công ty Cổ phần Tập đoàn Yeah1  

#   2        Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái  

#   3         Công ty Cổ phần Xi măng và Khoáng sản Yên Bái  

#   4                       Công ty Cổ phần Xà phòng Hà Nội  

#   ...                                                 ...  

#   2753            Công ty Cổ phần Chứng khoán SmartInvest  

#   2754                    Công ty Cổ Phần Thủy Sản MeKong  

#   2755                           Công ty Cổ phần Hợp Nhất  

#   2756                  Công ty Cổ phần Nhựa An Phát Xanh  

#   2757                                 Công ty Cổ phần 32  

#   

#   [2758 rows x 5 columns]

# Xuất dữ liệu ra file csv
listing.symbols_by_exchange().to_csv('assets/data/symbols_by_exchange.csv', index=False)

"""
### Liệt kê mã CP theo ngành icb
"""

listing.symbols_by_industries()
# Output:
#        symbol                                         organ_name  \

#   0       BMK             Công ty Cổ Phần Kỹ thuật Nhiệt Mèo Đen   

#   1       LPT  Công ty Cổ phần Thương mại và Sản xuất Lập Phư...   

#   2       ACB                Ngân hàng Thương mại Cổ phần Á Châu   

#   3       CAG                      Công ty Cổ phần Cảng An Giang   

#   4       AGR               Công ty Cổ phần Chứng khoán AGRIBANK   

#   ...     ...                                                ...   

#   1587    XPH                    Công ty Cổ phần Xà phòng Hà Nội   

#   1588    XHC                  Công ty Cổ phần Xuân Hòa Việt Nam   

#   1589    YBC      Công ty Cổ phần Xi măng và Khoáng sản Yên Bái   

#   1590    XMP                Công ty Cổ phần Thủy điện Xuân Minh   

#   1591    YBM     Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái   

#   

#                          icb_name3                      icb_name2  \

#   0           Xây dựng và Vật liệu           Xây dựng và Vật liệu   

#   1     Tư vấn & Hỗ trợ Kinh doanh     Hàng & Dịch vụ Công nghiệp   

#   2                      Ngân hàng                      Ngân hàng   

#   3                        Vận tải     Hàng & Dịch vụ Công nghiệp   

#   4              Dịch vụ tài chính              Dịch vụ tài chính   

#   ...                          ...                            ...   

#   1587                Hàng cá nhân        Hàng cá nhân & Gia dụng   

#   1588               Hàng gia dụng        Hàng cá nhân & Gia dụng   

#   1589        Xây dựng và Vật liệu           Xây dựng và Vật liệu   

#   1590   Sản xuất & Phân phối Điện  Điện, nước & xăng dầu khí đốt   

#   1591                 Khai khoáng              Tài nguyên Cơ bản   

#   

#                             icb_name4 com_type_code icb_code1 icb_code2  \

#   0      Vật liệu xây dựng & Nội thất            CT      2000      2300   

#   1                Đào tạo & Việc làm            CT      2000      2700   

#   2                         Ngân hàng            NH      8301      8300   

#   3     Kho bãi, hậu cần và bảo dưỡng            CT      2000      2700   

#   4              Môi giới chứng khoán            CK      8000      8700   

#   ...                             ...           ...       ...       ...   

#   1587                   Hàng cá nhân            CT      3000      3700   

#   1588              Thiết bị gia dụng            CT      3000      3700   

#   1589   Vật liệu xây dựng & Nội thất            CT      2000      2300   

#   1590      Sản xuất & Phân phối Điện            CT      7000      7500   

#   1591                    Khai khoáng            CT      1000      1700   

#   

#        icb_code3 icb_code4  

#   0         2350      2353  

#   1         2790      2793  

#   2         8350      8355  

#   3         2770      2777  

#   4         8770      8777  

#   ...        ...       ...  

#   1587      3760      3767  

#   1588      3720      3726  

#   1589      2350      2353  

#   1590      7530      7535  

#   1591      1770      1775  

#   

#   [1592 rows x 10 columns]

# Xuất dữ liệu ra file csv
listing.symbols_by_industries().to_csv('assets/data/symbols_by_industries.csv', index=False)

"""
### Danh sách cổ phiếu theo nhóm
"""

# Liệt kê tất cả mã chứng khoán theo nhóm phân loại. Ví dụ HOSE, VN30, VNMidCap, VNSmallCap, VNAllShare, VN100, ETF, HNX, HNX30, HNXCon, HNXFin, HNXLCap, HNXMSCap, HNXMan, UPCOM, FU_INDEX (mã chỉ số hợp đồng tương lai), CW (chứng quyền)
listing.symbols_by_group('VN30')
# Output:
#   0     ACB

#   1     BCM

#   2     BID

#   3     BVH

#   4     CTG

#   5     FPT

#   6     GAS

#   7     GVR

#   8     HDB

#   9     HPG

#   10    LPB

#   11    MBB

#   12    MSN

#   13    MWG

#   14    PLX

#   15    SAB

#   16    SHB

#   17    SSB

#   18    SSI

#   19    STB

#   20    TCB

#   21    TPB

#   22    VCB

#   23    VHM

#   24    VIB

#   25    VIC

#   26    VJC

#   27    VNM

#   28    VPB

#   29    VRE

#   Name: symbol, dtype: object

# Xuất dữ liệu ra file csv
listing.symbols_by_group('VN30').to_csv('assets/data/vn30_symbols.csv', index=False)

"""
### Danh sách mã ngành theo mã icb
"""

listing.industries_icb()
# Output:
#                                      icb_name  \

#   0                          Sản xuất Dầu khí   

#   1    Thiết bị, Dịch vụ và Phân phối Dầu khí   

#   2                                  Hóa chất   

#   3                        Lâm nghiệp và Giấy   

#   4                                  Kim loại   

#   ..                                      ...   

#   150                              Viễn thông   

#   151                      Tiện ích Cộng đồng   

#   152                               Tài chính   

#   153                               Ngân hàng   

#   154                     Công nghệ Thông tin   

#   

#                                   en_icb_name icb_code  level  

#   0                       Oil & Gas Producers     0530      3  

#   1    Oil Equipment, Services & Distribution     0570      3  

#   2                                 Chemicals     1350      3  

#   3                          Forestry & Paper     1730      3  

#   4                Industrial Metals & Mining     1750      3  

#   ..                                      ...      ...    ...  

#   150                      Telecommunications     6000      1  

#   151                               Utilities     7000      1  

#   152                              Financials     8000      1  

#   153                                   Banks     8301      1  

#   154                              Technology     9000      1  

#   

#   [155 rows x 4 columns]

# Xuất dữ liệu ra file csv
listing.industries_icb().to_csv('assets/data/industries_icb.csv', index=False)

"""
## Quote: Giá chứng khoán
"""

"""
> Không giống như khi sử dụng nhóm hàm tổng hợp `Vnstock` như cổng giao tiếp với phần mềm, bạn cần định nghĩa thông tin `symbol` tại lớp `Quote` khi nạp chương trình và không thể sử dụng tham số `symbol` trong các hàm thành phần. Để truy vấn các mã chứng khoán khác nhau, bạn cần khai báo tại `Quote`
"""

# # Lấy thông tin chi tiết của một mã cổ phiếu, ETF
quote = Quote(symbol='FPT')

# Lấy thông tin mã HĐTL
quote = Quote(symbol='VN30F1M')
# hoặc
# quote = Quote(symbol='VN30F2506')

# Lấy thông tin mã chỉ số
quote = Quote(symbol='VNINDEX')

# Lấy thông tin mã chứng quyền (CW)
quote = Quote(symbol='CFPT2314')

# Thông tin trái phiếu niêm yết
quote = Quote(symbol='CII424002')

"""
#### Giá lịch sử
"""

df = quote.history(start='2024-01-01', end='2025-03-19', interval='1D')
df
# Output:
#             time    open    high     low   close  volume

#   0   2024-04-11  120.00  139.50  120.00  135.00  186701

#   1   2024-04-12  132.50  135.10  125.00  130.20  111161

#   2   2024-04-15  130.20  130.30  123.00  123.50   61607

#   3   2024-04-16  123.00  123.00  117.00  117.00   31563

#   4   2024-04-17  114.20  119.00  110.90  117.00   11721

#   ..         ...     ...     ...     ...     ...     ...

#   227 2025-03-13  125.90  125.90  125.90  125.90      10

#   228 2025-03-14  125.00  126.00  125.00  126.00    2000

#   229 2025-03-17  126.00  127.00  126.00  127.00    6014

#   230 2025-03-18  127.01  128.50  127.01  128.00    1780

#   231 2025-03-19  127.01  127.01  127.01  127.01   83350

#   

#   [232 rows x 6 columns]

# Tất cả dataframe dữ liệu sẽ được gán thuộc tính tên và loại tài sản tương ứng
print(f'Mã chứng khoán: {df.name}')
print(f'Loại tài sản: {df.category}')
# Output:
#   Mã chứng khoán: VN30F2506

#   Loại tài sản: derivative


"""
#### Intraday: dữ liệu khớp lệnh
"""

# Dữ liệu khớp lệnh trong ngày giao dịch realtime hoặc ngày gần nhất (ngoài giờ giao dịch)
quote.intraday(page_size=10_000, show_log=False)
# Output:
#                             time     price  volume match_type         id

#   0    2025-04-04 10:32:34+07:00  108800.0     200        Buy  285392781

#   1    2025-04-04 10:32:34+07:00  108800.0     500        Buy  285392782

#   2    2025-04-04 10:32:39+07:00  108800.0     200        Buy  285392931

#   3    2025-04-04 10:32:40+07:00  108800.0     400        Buy  285392993

#   4    2025-04-04 10:32:41+07:00  108800.0     200        Buy  285393010

#   ...                        ...       ...     ...        ...        ...

#   9995 2025-04-04 14:29:57+07:00  113900.0     100        Buy  285744581

#   9996 2025-04-04 14:29:58+07:00  113900.0     100        Buy  285744625

#   9997 2025-04-04 14:29:58+07:00  113900.0     200        Buy  285744721

#   9998 2025-04-04 14:29:59+07:00  113900.0     100        Buy  285744754

#   9999 2025-04-04 14:45:01+07:00  113000.0  520100        ATC  285746170

#   

#   [10000 rows x 5 columns]

# Bước giá và khối lượng giao dịch: realtime
quote.price_depth()
# Output:
#        price acc_volume acc_buy_volume acc_sell_volume acc_undefined_volume

#   0   113900        500            500               0                    0

#   1   113800      11700           8600            3100                    0

#   2   113700       8600           5400            3200                    0

#   3   113600      58800           5800           53000                    0

#   4   113500     245200         204400           40800                    0

#   ..     ...        ...            ...             ...                  ...

#   79  106000     767800         299700          468100                    0

#   80  105900     124800          59300           65500                    0

#   81  105800     118100          82900           35200                    0

#   82  105700     375200         178300          196900                    0

#   83  105600    7282900        4692600          772900              1817400

#   

#   [84 rows x 5 columns]

"""
## Trading: Giao dịch
"""

from vnstock.explorer.vci import Trading
trading = Trading()

"""
### Bảng giá
"""

trading.price_board(['ACB'])
# Output:
#     listing                                                                 \

#      symbol ceiling  floor ref_price stock_type exchange last_trading_date   

#   0     ACB   25800  22500     24150      STOCK      HSX                     

#   

#                                   ...     bid_ask                           \

#     listed_share   type       id  ... bid_2_price bid_2_volume bid_3_price   

#   0   4466657912  STOCK  8424512  ...       23700        16700       23650   

#   

#                                                                                 \

#     bid_3_volume ask_1_price ask_1_volume ask_2_price ask_2_volume ask_3_price   

#   0         3600       23800       178100       23850       248200       23900   

#   

#                   

#     ask_3_volume  

#   0       263500  

#   

#   [1 rows x 41 columns]

trading.price_board(['VCB','ACB','TCB','BID'], flatten_columns=True, drop_levels=[0]).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá
# Output:
#                                                                             0  \

#   symbol                                                                  VCB   

#   ceiling                                                               64500   

#   floor                                                                 56100   

#   ref_price                                                             60300   

#   stock_type                                                            STOCK   

#   exchange                                                                HSX   

#   last_trading_date                                                             

#   listed_share                                                     8355691435   

#   type                                                                  STOCK   

#   id                                                                  8424561   

#   organ_name                Ngân hàng Thương mại Cổ phần Ngoại thương Việt...   

#   prior_close_price                                                     60300   

#   benefit                                                                       

#   trading_date                                                     2025-04-04   

#   match_price                                                           60000   

#   match_vol                                                            156700   

#   accumulated_volume                                                 11887700   

#   accumulated_value                                                    686170   

#   avg_match_price                                                57721.005745   

#   highest                                                               60000   

#   lowest                                                                56200   

#   match_type                                                          unknown   

#   foreign_sell_volume                                                 9370459   

#   foreign_buy_volume                                                  2631500   

#   current_room                                                      405888864   

#   total_room                                                       1676727378   

#   total_accumulated_value                                           686170.69   

#   total_accumulated_volume                                             118877   

#   reference_price                                                       60300   

#   bid_1_price                                                           59900   

#   bid_1_volume                                                            100   

#   bid_2_price                                                           59500   

#   bid_2_volume                                                            700   

#   bid_3_price                                                           59400   

#   bid_3_volume                                                            500   

#   ask_1_price                                                           60000   

#   ask_1_volume                                                        1391700   

#   ask_2_price                                                           60100   

#   ask_2_volume                                                            100   

#   ask_3_price                                                           60200   

#   ask_3_volume                                                            200   

#   

#                                                               1  \

#   symbol                                                    ACB   

#   ceiling                                                 25800   

#   floor                                                   22500   

#   ref_price                                               24150   

#   stock_type                                              STOCK   

#   exchange                                                  HSX   

#   last_trading_date                                               

#   listed_share                                       4466657912   

#   type                                                    STOCK   

#   id                                                    8424512   

#   organ_name                Ngân hàng Thương mại Cổ phần Á Châu   

#   prior_close_price                                       24150   

#   benefit                                                         

#   trading_date                                       2025-04-04   

#   match_price                                             23800   

#   match_vol                                             1499900   

#   accumulated_volume                                   72249400   

#   accumulated_value                                     1656708   

#   avg_match_price                                  22930.404958   

#   highest                                                 23800   

#   lowest                                                  22500   

#   match_type                                            unknown   

#   foreign_sell_volume                                  20683732   

#   foreign_buy_volume                                      67000   

#   current_room                                                0   

#   total_room                                         1339997373   

#   total_accumulated_value                            1656708.02   

#   total_accumulated_volume                               722494   

#   reference_price                                         24150   

#   bid_1_price                                             23750   

#   bid_1_volume                                             5900   

#   bid_2_price                                             23700   

#   bid_2_volume                                            16700   

#   bid_3_price                                             23650   

#   bid_3_volume                                             3600   

#   ask_1_price                                             23800   

#   ask_1_volume                                           178100   

#   ask_2_price                                             23850   

#   ask_2_volume                                           248200   

#   ask_3_price                                             23900   

#   ask_3_volume                                           263500   

#   

#                                                                           2  \

#   symbol                                                                TCB   

#   ceiling                                                             27750   

#   floor                                                               24150   

#   ref_price                                                           25950   

#   stock_type                                                          STOCK   

#   exchange                                                              HSX   

#   last_trading_date                                                           

#   listed_share                                                   7064851739   

#   type                                                                STOCK   

#   id                                                                8424683   

#   organ_name                Ngân hàng Thương mại Cổ phần Kỹ thương Việt Nam   

#   prior_close_price                                                   25950   

#   benefit                                                                     

#   trading_date                                                   2025-04-04   

#   match_price                                                         25700   

#   match_vol                                                         1008700   

#   accumulated_volume                                               56795800   

#   accumulated_value                                                 1413050   

#   avg_match_price                                              24879.480525   

#   highest                                                             25750   

#   lowest                                                              24150   

#   match_type                                                        unknown   

#   foreign_sell_volume                                              13418345   

#   foreign_buy_volume                                                5702200   

#   current_room                                                            0   

#   total_room                                                     1590552461   

#   total_accumulated_value                                        1413050.65   

#   total_accumulated_volume                                           567958   

#   reference_price                                                     25950   

#   bid_1_price                                                         25700   

#   bid_1_volume                                                       159600   

#   bid_2_price                                                         25650   

#   bid_2_volume                                                       105400   

#   bid_3_price                                                         25600   

#   bid_3_volume                                                        77200   

#   ask_1_price                                                         25750   

#   ask_1_volume                                                        51400   

#   ask_2_price                                                         25800   

#   ask_2_volume                                                       714100   

#   ask_3_price                                                         25850   

#   ask_3_volume                                                        16000   

#   

#                                                                             3  

#   symbol                                                                  BID  

#   ceiling                                                               38500  

#   floor                                                                 33500  

#   ref_price                                                             36000  

#   stock_type                                                            STOCK  

#   exchange                                                                HSX  

#   last_trading_date                                                            

#   listed_share                                                     6897515268  

#   type                                                                  STOCK  

#   id                                                                  8424583  

#   organ_name                Ngân hàng Thương mại Cổ phần Đầu tư và Phát tr...  

#   prior_close_price                                                     36000  

#   benefit                                                                      

#   trading_date                                                     2025-04-04  

#   match_price                                                           36000  

#   match_vol                                                            284200  

#   accumulated_volume                                                  6883200  

#   accumulated_value                                                    236970  

#   avg_match_price                                                34427.301255  

#   highest                                                               36000  

#   lowest                                                                33550  

#   match_type                                                          unknown  

#   foreign_sell_volume                                                 1053838  

#   foreign_buy_volume                                                   873889  

#   current_room                                                      868431244  

#   total_room                                                       2106408575  

#   total_accumulated_value                                          236970.725  

#   total_accumulated_volume                                              68832  

#   reference_price                                                       36000  

#   bid_1_price                                                           35950  

#   bid_1_volume                                                            200  

#   bid_2_price                                                           35500  

#   bid_2_volume                                                          16900  

#   bid_3_price                                                           35450  

#   bid_3_volume                                                          42500  

#   ask_1_price                                                           36000  

#   ask_1_volume                                                          90600  

#   ask_2_price                                                           36050  

#   ask_2_volume                                                           1000  

#   ask_3_price                                                           36150  

#   ask_3_volume                                                          12000  

"""
## Company: Thông tin công ty
"""

# # Khởi tạo đối tượng
# from vnstock import Vnstock
# company = Vnstock().stock(symbol='ACB', source='VCI').company

# hoặc
from vnstock.explorer.vci import Company
company = Company('ACB')

"""
Loại bỏ đoạn mã `.head()` để xem toàn bộ dữ liệu thay vì chỉ lấy 5 dòng đầu tiên.
"""

"""
#### Hồ sơ
"""

company.overview()
# Output:
#     symbol     id  issue_share  \

#   0    ACB  67505   4466657912   

#   

#                                                history  \

#   0   - Ngày 24/04/1993: Ngân hàng Thương mại Cổ ph...   

#   

#                                        company_profile  icb_name3  icb_name2  \

#   0  Ngân hàng Thương mại Cổ phần Á Châu (ACB) được...  Ngân hàng  Ngân hàng   

#   

#      icb_name4  financial_ratio_issue_share  charter_capital  

#   0  Ngân hàng                   4466657900   44666579120000  

"""
#### Cổ đông
"""

company.shareholders()
# Output:
#             id                            share_holder   quantity  \

#   0   76868950  Vietnam Enterprise Investments Limited  212880184   

#   1   76863823         Sather Gate Investments Limited  193907186   

#   2   76861604                         Phạm Thị Thu Hà     285000   

#   3   76845328               Estes Investments Limited   83010435   

#   4   76865801                           Trần Hùng Huy  153062159   

#   ..       ...                                     ...        ...   

#   81  76858006                    Nguyễn Thị Tuyết Vân      88722   

#   82  76863346  Quỹ Đầu tư Cổ phiếu Năng động Bảo Việt      22065   

#   83  76843608                            Đinh Thị Hoa      67200   

#   84  76839576  Công ty Cổ phần Chứng khoán Thiên Việt       5285   

#   85  76853275                         Nguyễn Hồng Nga       2008   

#   

#       share_own_percent update_date  

#   0        5.480880e-02  2024-09-13  

#   1        4.990000e-02  2024-05-15  

#   2        4.990000e-02  2016-05-20  

#   3        4.990000e-02  2024-05-15  

#   4        3.940000e-02  2025-01-24  

#   ..                ...         ...  

#   81       1.730000e-05  2025-01-24  

#   82       1.327000e-05  2025-02-03  

#   83       1.200000e-05  2025-01-24  

#   84       1.500000e-06  2022-07-25  

#   85       7.000000e-07  2022-08-31  

#   

#   [86 rows x 5 columns]

"""
#### Công ty con
"""

company.subsidiaries()
# Output:
#            id sub_organ_code ownership_percent  \

#   0  21757755           ACBA                 1   

#   1  21757756           ACBL                 1   

#   2  21757757           ACBS                 1   

#   0  21757759           ACBD              None   

#   1  21757758           SGGS              None   

#   

#                                             organ_name              type  

#   0  Công Ty TNHH Quản Lý Nợ Và Khai Thác Tài Sản N...       công ty con  

#   1  Công Ty TNHH Một Thành Viên Cho Thuê Tài Chính...       công ty con  

#   2                       Công ty TNHH Chứng khoán ACB       công ty con  

#   0    CÔNG TY CỔ PHẦN DỊCH VỤ BẢO VỆ NGÂN HÀNG Á CHÂU  công ty liên kết  

#   1          Công ty Cổ phần Sài Gòn Kim hoàn ACB- SJC  công ty liên kết  

"""
#### Công ty liên kết
"""

# Phương thức này không có trong nguồn TCBS
company.affiliate()
# Output:
#            id sub_organ_code                                       organ_name  \

#   0  21757759           ACBD  CÔNG TY CỔ PHẦN DỊCH VỤ BẢO VỆ NGÂN HÀNG Á CHÂU   

#   1  21757758           SGGS        Công ty Cổ phần Sài Gòn Kim hoàn ACB- SJC   

#   

#     ownership_percent  

#   0              None  

#   1              None  

"""
#### Lãnh đạo
"""

company.officers(filter_by='working').head() # filter_by='all' hoặc 'working' hoặc 'resigned'
# Output:
#      id       officer_name                officer_position position_short_name  \

#   0   6      Trần Hùng Huy      Chủ tịch Hội đồng Quản trị       Chủ tịch HĐQT   

#   1   7      Đặng Thu Thủy    Thành viên Hội đồng Quản trị             TV HĐQT   

#   2  11      Đặng Phú Vinh                   Giám đốc khối             GĐ Khối   

#   3  13       Đỗ Minh Toàn                   Tổng Giám đốc                 TGĐ   

#   4   8  Nguyễn Thành Long  Phó Chủ tịch Hội đồng Quản trị   Phó Chủ tịch HĐQT   

#   

#     update_date  officer_own_percent   quantity  

#   0  2025-01-24               0.0394  153062159  

#   1  2025-01-24               0.0137   53350036  

#   2  2025-01-24               0.0042   16454507  

#   3  2025-01-24               0.0008    3202886  

#   4  2025-01-24               0.0004    1647067  

"""
#### Tin tức
"""

company.news().head(3)
# Output:
#           id                                         news_title news_sub_title  \

#   0  7009867  ACB:  Báo cáo kết quả giao dịch cổ phiếu của t...                  

#   1  7001147                 ACB:  Báo cáo thường niên năm 2024                  

#   2  6944486  ACB:  Công ty TNHH MTV Nhật Quân HQ đăng ký bá...                  

#   

#     friendly_sub_title                                     news_image_url  \

#   0                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   1                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   2                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   

#                                       news_source_link created_at  \

#   0  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   1  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   2  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   

#        public_date updated_at lang_code   news_id  \

#   0  1742998200000       None        vi  11505980   

#   1  1742901180000       None        vi  11504387   

#   2  1742315220000       None        vi  11497368   

#   

#                                     news_short_content  \

#   0  ACB:  Báo cáo kết quả giao dịch cổ phiếu của t...   

#   1                 ACB:  Báo cáo thường niên năm 2024   

#   2  ACB:  Thông báo giao dịch cổ phiếu của tổ chức...   

#   

#                                      news_full_content  close_price  ref_price  \

#   0  <p>Công ty TNHH MTV Nhật Quân HQ báo cáo kết q...        26150      26300   

#   1  <p>Ngân hàng Thương mại Cổ phần Á Châu công bố...        26300      26350   

#   2  <p>Công ty TNHH MTV Nhật Quân HQ thông báo gia...        26300      26200   

#   

#      floor  ceiling  price_change_pct  

#   0  24500    28100         -0.005703  

#   1  24550    28150         -0.001898  

#   2  24400    28000          0.003817  

"""
#### Sự kiện
"""

company.events().head(3)
# Output:
#            id                                        event_title  \

#   0  23057391  ACB - Trả cổ tức Cả năm năm 2022 bằng tiền 100...   

#   1  38768795  ACB - Trả cổ tức Cả năm năm 2023 bằng tiền 100...   

#   2     18129                                 Phát hành cổ phiếu   

#   

#                                        en__event_title public_date  issue_date  \

#   0  ACB - Pay cash dividend 2022 - Year at VND 100...  2023-05-25  2023-06-12   

#   1  ACB - Pay cash dividend 2023 - Year at VND 100...  2024-05-24  2024-06-13   

#   2                                                     2010-11-18  2010-11-30   

#   

#                                             source_url event_list_code  ratio  \

#   0  http://fiinpro.com/News/Detail/10793461?lang=v...             DIV    0.1   

#   1  http://fiinpro.com/News/Detail/11196089?lang=v...             DIV    0.1   

#   2                                                                ISS    NaN   

#   

#       value record_date exright_date           event_list_name  \

#   0  1000.0  2023-06-02   2023-06-01  Trả cổ tức bằng tiền mặt   

#   1  1000.0  2024-06-03   2024-05-31  Trả cổ tức bằng tiền mặt   

#   2     NaN  2010-11-30   2010-11-26        Phát hành cổ phiếu   

#   

#     en__event_list_name  

#   0       Cash Dividend  

#   1       Cash Dividend  

#   2         Share Issue  

"""
#### Báo cáo phân tích
"""

company.reports()
# Output:
#                      date                                        description  \

#   0  2025-01-22T00:00:00Z  Ngân hàng Thương Mại Cổ Phần Á Châu (ACB) đã c...   

#   1  2024-10-24T00:00:00Z  Ngân hàng TMCP Á Châu (ACB) công bố KQKD 9 thá...   

#   2  2024-09-09T00:00:00Z  - Chúng tôi tiếp tục duy trì giá mục tiêu đối ...   

#   3  2024-07-23T00:00:00Z  ACB đã công bố KQKD nửa đầu năm 2024 với thu n...   

#   4  2024-06-04T00:00:00Z  - Chúng tôi điều chỉnh tăng 8,6% giá mục tiêu ...   

#   5  2024-04-26T00:00:00Z  ACB đã công bố KQKD quý 1/2024 với TOI đạt 8,2...   

#   6  2024-04-04T00:00:00Z  Chúng tôi đã tham dự ĐHCĐ của Ngân hàng TMCP Á...   

#   7  2024-03-05T00:00:00Z  - Chúng tôi điều chỉnh tăng 7,6% giá mục tiêu ...   

#   8  2024-01-26T00:00:00Z  ACB công bố KQKD năm 2023 với TOI đạt 32,7 ngh...   

#   9  2023-11-15T00:00:00Z  - Chúng tôi điều chỉnh tăng giá mục tiêu cho N...   

#   

#                                                   link  \

#   0  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   1  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   2  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   3  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   4  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   5  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   6  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   7  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   8  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   9  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   

#                                                   name  

#   0  ACB - Tập trung vào tăng trưởng tín dụng hơn t...  

#   1  ACB – NOII thấp hơn dự kiến, ảnh hưởng tiêu cự...  

#   2  ACB [MUA +35,0%] - Tăng dự báo tăng trưởng tín...  

#   3  ACB - Tín dụng tăng trưởng mạnh, chất lượng tà...  

#   4  ACB [MUA +33,7%] - NIM tương đối đi ngang tron...  

#   5  ACB – NOII thấp, chất lượng tài sản được duy t...  

#   6  ACB - Tín dụng tăng trưởng mạnh, duy trì tỷ lệ...  

#   7  ACB [MUA +26,3%] - Tăng trưởng ổn định nhờ cho...  

#   8  ACB – Tăng trưởng tín dụng vượt kỳ vọng, lợi n...  

#   9  ACB [MUA +42,7%] - Chiến lược rủi ro thấp mang...  

"""
#### Tình hình tài chính
"""

company.ratio_summary()
# Output:
#     symbol  year_report  length_report    update_date         revenue  \

#   0    ACB         2024              5  1741199572843  50902749000000   

#   

#      revenue_growth      net_profit  net_profit_growth  ebit_margin       roe  \

#   0       -0.027586  16789768000000           0.046435            0  0.217459   

#   

#      ...  rtq4  charter_capital_ratio  rtq10  dividend  ebitda  ebit  le  de  \

#   0  ...     0               1.868549      0         0       0     0   0   0   

#   

#       ccc  rtq17  

#   0  None      0  

#   

#   [1 rows x 46 columns]

"""
#### Thống kê giao dịch
"""

company.trading_stats()
# Output:
#     symbol exchange               ev  ceiling  floor  ref_price   open  \

#   0    ACB     HOSE  116803104085000    28100  24500      26300  26300   

#   

#      match_price  close_price  price_change  ...  high_price_1y  low_price_1y  \

#   0        26150        26150          -150  ...          26800         22218   

#   

#      pct_low_change_1y  pct_high_change_1y  foreign_volume  foreign_room  \

#   0           0.170337           -0.018762               0    1339997373   

#   

#      avg_match_volume_2w  foreign_holding_room  current_holding_ratio  \

#   0              6998548            1339997373                    0.3   

#   

#      max_holding_ratio  

#   0                0.3  

#   

#   [1 rows x 24 columns]

"""
### TCBS
"""

from vnstock import Vnstock

company = Vnstock().stock(symbol='VCB', source='TCBS').company
# Output:
#   2025-03-27 22:37:18 - vnstock.common.data.data_explorer - INFO - TCBS không cung cấp thông tin danh sách. Dữ liệu tự động trả về từ VCI.


"""
#### Tổng quan
"""

company.overview()
# Output:
#     symbol exchange   industry company_type  no_shareholders  foreign_percent  \

#   0    VCB     HOSE  Ngân hàng           NH            25183            0.227   

#   

#      outstanding_share  issue_share established_year  no_employees  \

#   0             8355.7       5589.1             2008         24306   

#   

#      stock_rating  delta_in_week  delta_in_month  delta_in_year   short_name  \

#   0           2.6         -0.019           0.045         -0.016  Vietcombank   

#   

#                         website  industry_id industry_id_v2  

#   0  https://vietcombank.com.vn          289           8355  

"""
#### Hồ sơ
"""

company.profile()
# Output:
#     symbol                                       company_name  \

#   0    VCB  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...   

#   

#                                        company_profile  \

#   0   Ngân hàng Thương mại Cổ phần Ngoại thương Việ...   

#   

#                                            history_dev company_promise  \

#   0    Ngày 30/10/1962: Ngân hàng Ngoại thương Việt...            None   

#   

#                                          business_risk  \

#   0    Rủi ro địa chính trị và nguy cơ chiến tranh ...   

#   

#                                       key_developments  \

#   0    Dịch vụ tài khoản Dịch vụ huy động vốn (tiền...   

#   

#                                    business_strategies  

#   0   Ngân hàng số 1 tại Việt Nam, một trong 100 ng...  

"""
#### Cổ đông
"""

company.shareholders()
# Output:
#                     share_holder  share_own_percent

#   0  Ngân Hàng Nhà Nước Việt Nam             0.7480

#   1          Mizuho Bank Limited             0.1500

#   2                         Khác             0.0207

"""
#### Giao dịch nội bộ
"""

company.insider_deals().head(3)
# Output:
#     deal_announce_date       deal_method deal_action  deal_quantity  deal_price  \

#   0         2025-02-20    Cổ đông nội bộ         Mua        10000.0     61338.0   

#   1         2023-12-21    Cổ đông nội bộ         Mua         5000.0     54114.0   

#   2         2020-12-30  Cổ đông sáng lập         Bán        -2523.0     42927.0   

#   

#      deal_ratio  

#   0       0.068  

#   1       0.210  

#   2       0.526  

"""
#### Công ty con, liên kết
"""

company.subsidiaries().head()
# Output:
#                                       sub_company_name  sub_own_percent

#   0  Công ty TNHH Chứng khoán Ngân hàng Thương mại ...              1.0

#   1  Công Ty TNHH Một Thành Viên Kiều Hối Ngân Hàng...              1.0

#   2  Công ty TNHH MTV Cho Thuê Tài Chính Ngân Hàng ...              1.0

#   3      Công ty TNHH Tài Chính Việt Nam Tại Hồng Kông              1.0

#   4   Ngân Hàng TNHH MTV Ngoại Thương Việt Nam Tại Lào              1.0

"""
#### Ban lãnh đạo
"""

company.officers().head()
# Output:
#            officer_name              officer_position  officer_own_percent

#   3   Nguyễn Danh Lương  Thành viên Hội đồng Quản trị                  0.0

#   10     Lê Thị Kim Nga  Thành viên Hội đồng Quản trị                  0.0

#   15         Lê Thị Hoa  Thành viên Hội đồng Quản trị                  0.0

#   12   Đỗ Thị Mai Hương      Thành viên Ban kiểm soát                  0.0

#   5   Nguyễn Danh Lương   Phụ trách Công bố thông tin                  0.0

"""
#### Sự kiện
"""

company.events().head()
# Output:
#   The input looks more like a filename than markup. You may want to open this file and pass the filehandle into Beautiful Soup.

#       rsi    rs       id    price  price_change  price_change_ratio  \

#   0  73.4  58.0  2584165  66700.0        1950.0               0.030   

#   1  54.0  37.0  2583928  62542.0         334.0               0.005   

#   2  46.6  29.0  2582516  61338.0           0.0               0.000   

#   3  55.4  44.0  2581736  62208.0          67.0               0.001   

#   4  52.8  52.0  2580835  61940.0          67.0               0.001   

#   

#      price_change_ratio_1m                                       event_name  \

#   0                  0.090             VCB - Tổ chức ĐHĐCĐ thường niên 2025   

#   1                  0.006  VCB - Phát hành cổ phiếu trả cổ tức tỷ lệ 49,5%   

#   2                  0.000               VCB - Kết quả giao dịch nội bộ/CĐL   

#   3                  0.008     VCB - Thông báo đăng ký giao dịch nội bộ/CĐL   

#   4                  0.005                            VCB - BCTC Quý 4/2024   

#   

#     event_code notify_date   exer_date reg_final_date exer_right_date  \

#   0       AGME  2025-03-12  2025-04-26     2025-03-26      2025-03-25   

#   1        ISS  2025-03-06  2025-03-12     2025-03-13      2025-03-12   

#   2      DDALL  2025-02-20  2025-02-19     1753-01-01      1753-01-01   

#   3      DDALL  2025-02-07  2025-03-12     1753-01-01      1753-01-01   

#   4       KQQY  2025-01-24  2025-01-24     1753-01-01      1753-01-01   

#   

#                                             event_desc  

#   0  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...  

#   1  Ngân hàng Thương mại Cổ phần Ngoại thương Việt...  

#   2  - Cá nhân/Tổ chức thực hiện giao dịch: Phùng N...  

#   3  - Cá nhân/Tổ chức thực hiện giao dịch: Phùng N...  

#   4                              VCB - BCTC Quý 4/2024  

"""
#### Tin tức
"""

company.news().head()
# Output:
#       rsi    rs    price  price_change  price_change_ratio  \

#   0   NaN   NaN      NaN           NaN                 NaN   

#   1   NaN   NaN      NaN           NaN                 NaN   

#   2  70.4  70.0  66500.0        -300.0              -0.004   

#   3  70.4  70.0  66500.0        -300.0              -0.004   

#   4  68.2  63.0  66000.0         500.0               0.008   

#   

#      price_change_ratio_1m        id  \

#   0                    NaN  11507583   

#   1                    NaN  11507578   

#   2                  0.084  11498692   

#   3                  0.084  11498688   

#   4                  0.077  11494381   

#   

#                                                  title source  \

#   0  VCB:  Báo cáo kết quả phát hành cổ phiếu để tr...   TCBS   

#   1  VCB:  Thông báo thay đổi số lượng cổ phiếu có ...   TCBS   

#   2  VCB:  HĐQT phê duyệt điều chỉnh giới hạn tín d...   TCBS   

#   3  VCB:  HĐQT phê duyệt giới hạn tín dụng đối với...   TCBS   

#   4  VCB:  Nghị quyết HĐQT về việc phê duyệt giới h...   TCBS   

#   

#             publish_date  

#   0  2025-03-27 15:04:00  

#   1  2025-03-27 14:56:00  

#   2  2025-03-19 15:31:00  

#   3  2025-03-19 15:30:00  

#   4  2025-03-14 17:15:00  

"""
#### Cổ tức
"""

company.dividends().head()
# Output:
#     exercise_date  cash_year  cash_dividend_percentage issue_method

#   0    2025-03-12       2025                     0.495        share

#   1    2023-07-25       2023                     0.181        share

#   2    2021-12-22       2022                     0.276        share

#   3    2021-12-22       2020                     0.120         cash

#   4    2020-12-21       2019                     0.080         cash

"""
## Finance: Báo cáo tài chính
"""

from vnstock.explorer.vci import Finance
fin =  Finance(symbol='VCI')

"""
### Bảng cân đối kế toán
"""

fin.balance_sheet(period='year', lang='vi', dropna=True)
# Output:
#        CP   Năm  TÀI SẢN NGẮN HẠN (đồng)  Tiền và tương đương tiền (đồng)  \

#   0   VCI  2024           26491835561026                    4743771932745   

#   1   VCI  2023           17174448616966                     787897819240   

#   2   VCI  2022           14157693071824                    3423501614803   

#   3   VCI  2021           16568965942558                    1131748599533   

#   4   VCI  2020            8312170798945                     642512983590   

#   5   VCI  2019            7173102515011                     794511762602   

#   6   VCI  2018            6430493843962                    1144361568890   

#   7   VCI  2017            6342806740944                     486703202803   

#   8   VCI  2016            3075625891871                     545670784533   

#   9   VCI  2015            2423478575254                     158181741192   

#   10  VCI  2014            2707101348631                     618777857754   

#   11  VCI  2013            2090711345801                     312645301464   

#   12  VCI  2011            1795452129469                     111616718751   

#   

#       Giá trị thuần đầu tư ngắn hạn (đồng)  Các khoản phải thu ngắn hạn (đồng)  \

#   0                         21072524575199                        506858248065   

#   1                         15097165308797                       1094491429414   

#   2                         10562264962864                        120085485886   

#   3                         14998113044339                        285206345277   

#   4                          6697916243107                        221798617565   

#   5                          5817229478552                        747087592357   

#   6                          5252959790479                         30487868695   

#   7                          5709256554482                         28256236703   

#   8                          2481417250820                         44869461531   

#   9                          2092718191471                         78849205458   

#   10                         1939716412996                        141064801745   

#   11                         1659030664666                        117641213076   

#   12                         1059922610501                        614818783909   

#   

#       Hàng tồn kho ròng  Tài sản lưu động khác  TÀI SẢN DÀI HẠN (đồng)  \

#   0                   0           168680805017            100288918214   

#   1                   0           194894059515             80686039559   

#   2                   0            51841008271             85058244998   

#   3                   0           153897953409             67299004559   

#   4                   0            97527648804             70234326495   

#   5                   0           165433739031             69857713462   

#   6                   0             2684615898             79502079245   

#   7                   0           118590746956             59205004260   

#   8                   0             7607339062             34921874969   

#   9                   0            92517941380             39867670505   

#   10           14179400             7528096736             63219168401   

#   11           16677400             1377489195             41576018914   

#   12           12320284             9081696024            622201775573   

#   

#       Tài sản cố định (đồng)  ...  Hàng tồn kho, ròng (đồng)  \

#   0              37268698440  ...                          0   

#   1              23425609453  ...                          0   

#   2              23496558588  ...                          0   

#   3              13155825424  ...                          0   

#   4              14384201512  ...                          0   

#   5               9907318916  ...                          0   

#   6              18226354386  ...                          0   

#   7              25326131092  ...                          0   

#   8               9489824544  ...                          0   

#   9              14899441202  ...                          0   

#   10             18390029859  ...                   14179400   

#   11             11027268785  ...                   16677400   

#   12              7612776214  ...                   12320284   

#   

#       Tài sản lưu động khác (đồng)  Cổ phiếu phổ thông (đồng)  \

#   0                   135374861200               7.180995e+12   

#   1                   147257185100               4.375000e+12   

#   2                    46136989800               4.354999e+12   

#   3                   150714917648               3.330000e+12   

#   4                    91333803000               1.656000e+12   

#   5                   164204396000               1.644000e+12   

#   6                              0               1.629999e+12   

#   7                   116156411000               1.200000e+12   

#   8                     1335936000               1.032000e+12   

#   9                    87885991500               5.000000e+11   

#   10                    3095401526               5.000000e+11   

#   11                      87777500               0.000000e+00   

#   12                    6609715987               3.780000e+11   

#   

#       Vốn góp của chủ sở hữu (đồng)  Vay và nợ thuê tài chính dài hạn (đồng)  \

#   0                   7180994800000                                        0   

#   1                   4375000000000                                        0   

#   2                   4354999010000                                        0   

#   3                   3330000000000                                        0   

#   4                   1656000000000                                        0   

#   5                   1644000000000                                        0   

#   6                   1629998900000                                        0   

#   7                   1200000000000                                        0   

#   8                   1032000000000                                        0   

#   9                    500000000000                                        0   

#   10                   500000000000                                        0   

#   11                   398400000000                                        0   

#   12                   378000000000                             500000000000   

#   

#       Người mua trả tiền trước ngắn hạn (đồng)  \

#   0                                 2743133560   

#   1                                  378319774   

#   2                                  221000000   

#   3                                52551076244   

#   4                                 7971369863   

#   5                                  210000000   

#   6                               126324890101   

#   7                               462392057000   

#   8                               571264678998   

#   9                               799974087998   

#   10                              840646942003   

#   11                              470366997300   

#   12                              121749992655   

#   

#       Vay và nợ thuê tài chính ngắn hạn (đồng)  Trả trước dài hạn (đồng)  \

#   0                             12573864000000                6238956911   

#   1                              8979275000000                7943878800   

#   2                              6326207142857               13290531600   

#   3                              6362680000000               10702485700   

#   4                              2696130000000               12950546970   

#   5                              1450980000000               17085900679   

#   6                               984860000000               25494063880   

#   7                              1434460418662                2171535344   

#   8                               627508000000                4433448206   

#   9                               535500000000                9817929938   

#   10                              266511750000               14560154043   

#   11                              648400000000               16231644217   

#   12                              582426780000                         0   

#   

#       Tài sản dài hạn khác (đồng)  LỢI ÍCH CỦA CỔ ĐÔNG THIỂU SỐ  

#   0                             0                  0.000000e+00  

#   1                             0                  0.000000e+00  

#   2                             0                  0.000000e+00  

#   3                             0                  0.000000e+00  

#   4                             0                  0.000000e+00  

#   5                             0                  0.000000e+00  

#   6                             0                  0.000000e+00  

#   7                             0                  0.000000e+00  

#   8                             0                  7.721605e+10  

#   9                             0                  7.475699e+10  

#   10                  14160000000                  7.604128e+10  

#   11                            0                  0.000000e+00  

#   12                 594640525000                  0.000000e+00  

#   

#   [13 rows x 32 columns]

fin.balance_sheet(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  CURRENT ASSETS (Bn. VND)  \

#   0    VCI        2024             4            26491835561026   

#   1    VCI        2024             3            20322217963459   

#   2    VCI        2024             2            23009916452730   

#   3    VCI        2024             1            19458498860847   

#   4    VCI        2023             4            17174448616966   

#   

#      Cash and cash equivalents (Bn. VND)  Short-term investments (Bn. VND)  \

#   0                        4743771932745                    21072524575199   

#   1                        2543516547760                    17408880681428   

#   2                        3903157759657                    17775135464006   

#   3                        1040594399692                    17454154906730   

#   4                         787897819240                    15097165308797   

#   

#      Accounts receivable (Bn. VND)  Net Inventories  Other current assets  \

#   0                   506858248065                0          168680805017   

#   1                   235746508338                0          134074225933   

#   2                   931122579216                0          400500649851   

#   3                   702530886335                0          261218668090   

#   4                  1094491429414                0          194894059515   

#   

#      LONG-TERM ASSETS (Bn. VND)  ...  Other current assets (Bn. VND)  \

#   0                100288918214  ...                    135374861200   

#   1                 92945134178  ...                    122374861200   

#   2                 95455335905  ...                    372374861200   

#   3                 86105265555  ...                    227872273100   

#   4                 80686039559  ...                    147257185100   

#   

#      Common shares (Bn. VND)  Paid-in capital (Bn. VND)  \

#   0             7.180995e+12              7180994800000   

#   1             5.744695e+12              5744694800000   

#   2             4.419000e+12              4419000000000   

#   3             4.375000e+12              4375000000000   

#   4             4.375000e+12              4375000000000   

#   

#      Long-term borrowings (Bn. VND)  Advances from customers (Bn. VND)  \

#   0                               0                         2743133560   

#   1                               0                         4431803623   

#   2                               0                         1753351687   

#   3                               0                         1083817322   

#   4                               0                          378319774   

#   

#      Short-term borrowings (Bn. VND)  Long-term prepayments (Bn. VND)  \

#   0                   12573864000000                       6238956911   

#   1                   10832654000000                       7503462322   

#   2                   12392104000000                       8879984392   

#   3                   10239557000000                       9017164629   

#   4                    8979275000000                       7943878800   

#   

#      Other long-term assets (Bn. VND)  Goodwill  MINORITY INTERESTS  

#   0                                 0         0                 0.0  

#   1                                 0         0                 0.0  

#   2                                 0         0                 0.0  

#   3                                 0         0                 0.0  

#   4                                 0         0                 0.0  

#   

#   [5 rows x 36 columns]

"""
### Báo cáo lãi lỗ
"""

fin.income_statement(period='year', lang='vi', dropna=True).head()
# Output:
#       CP   Năm  Doanh thu (đồng)  Tăng trưởng doanh thu (%)  \

#   0  VCI  2024     3695525335470                   0.494675   

#   1  VCI  2023     2472460543397                  -0.216644   

#   2  VCI  2022     3156242736345                  -0.148588   

#   3  VCI  2021     3707068724492                   1.143320   

#   4  VCI  2020     1729591590563                   0.122423   

#   

#      Lợi nhuận sau thuế của Cổ đông công ty mẹ (đồng)  \

#   0                                      910692113293   

#   1                                      491904659394   

#   2                                      868978185802   

#   3                                     1498718375328   

#   4                                      768912289421   

#   

#      Tăng trưởng lợi nhuận (%)  Doanh thu thuần  Giá vốn hàng bán  \

#   0                   0.851359    3695525335470    -1717402022529   

#   1                  -0.433927    2472460543397    -1063597101525   

#   2                  -0.420186    3156242736345    -1398531179478   

#   3                   0.949141    3707068724492    -1326133822522   

#   4                   0.109253    1729591590563     -522004485232   

#   

#            Lãi gộp  Thu nhập tài chính  ...  Lợi nhuận khác  LN trước thuế  \

#   0  1978123312941        5.063321e+10  ...      2785303975  1089337104906   

#   1  1408863441872        2.369615e+10  ...       128411319   570138640134   

#   2  1757711556867        3.554843e+10  ...     43696276107  1059738713385   

#   3  2380934901970        2.561687e+10  ...      -267786912  1850585393088   

#   4  1207587105331        5.858556e+09  ...       621078878   951038957081   

#   

#      Chi phí thuế TNDN hiện hành  Chi phí thuế TNDN hoãn lại  Lợi nhuận thuần  \

#   0                -178605980097                   -39011516     910692113293   

#   1                 -64320454739                -13913526001     491904659394   

#   2                -250981079495                 60220551912     868978185802   

#   3                -309748513618                -42118504142    1498718375328   

#   4                -182422798514                   296130854     768912289421   

#   

#      Cổ đông thiểu số  Cổ đông của Công ty mẹ  \

#   0                 0            910692113293   

#   1                 0            491904659394   

#   2                 0            868978185802   

#   3                 0           1498718375328   

#   4                 0            768912289421   

#   

#      Doanh thu bán hàng và cung cấp dịch vụ  Thu nhập khác  \

#   0                           3695525335470     3094145678   

#   1                           2472460543397      132390105   

#   2                           3156242736345    44543029091   

#   3                           3707068724492       69316632   

#   4                           1729591590563      621078878   

#   

#      Thu nhập/Chi phí khác  

#   0             -308841703  

#   1               -3978786  

#   2             -846752984  

#   3             -337103544  

#   4                      0  

#   

#   [5 rows x 24 columns]

fin.income_statement(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  Revenue (Bn. VND)  Revenue YoY (%)  \

#   0    VCI        2024             4       998995850627         0.239917   

#   1    VCI        2024             3       974360554621         0.461496   

#   2    VCI        2024             2       915851554761         0.828529   

#   3    VCI        2024             1       806317375461         0.615187   

#   4    VCI        2023             4       805695933425         0.011994   

#   

#      Attribute to parent company (Bn. VND)  Attribute to parent company YoY (%)  \

#   0                           218376745828                             0.776135   

#   1                           215352225175                             0.203064   

#   2                           279206679897                             1.388492   

#   3                           197756462393                             1.706977   

#   4                           122950502675                             3.324213   

#   

#         Net Sales  Cost of Sales  Gross Profit  ...  Net other income/expenses  \

#   0  998995850627  -519893652425  479102198202  ...                   21194452   

#   1  974360554621  -468140246243  506220308378  ...                          0   

#   2  915851554761  -359336052126  556515502635  ...                 2826585413   

#   3  806317375461  -370032071735  436285303726  ...                  -62475890   

#   4  805695933425  -419422487555  386273445870  ...                   13012123   

#   

#      Profit before tax  Business income tax - current  \

#   0       253335115979                   -35884665831   

#   1       264695399242                   -40189361297   

#   2       343766121537                   -64821621464   

#   3       227540468148                   -37710331505   

#   4       149131831394                    -7570702516   

#   

#      Business income tax - deferred  Net Profit For the Year  Minority Interest  \

#   0                       926295680             218376745828                  0   

#   1                     -9153812770             215352225175                  0   

#   2                       262179824             279206679897                  0   

#   3                      7926325750             197756462393                  0   

#   4                    -18610626203             122950502675                  0   

#   

#      Attributable to parent company         Sales  Other income  \

#   0                    218376745828  998995850627      23636364   

#   1                    215352225175  974360554621             0   

#   2                    279206679897  915851554761    2837985204   

#   3                    197756462393  806317375461     232524110   

#   4                    122950502675  805695933425      16990909   

#   

#      Other Income/Expenses  

#   0               -2441912  

#   1                      0  

#   2              -11399791  

#   3             -295000000  

#   4               -3978786  

#   

#   [5 rows x 25 columns]

"""
### Báo cáo lưu chuyển tiền tệ
"""

fin.cash_flow(period='year', dropna=True).head()
# Output:
#     ticker  yearReport  Net Profit/Loss before tax  \

#   0    VCI        2024               1089337104906   

#   1    VCI        2023                570138640134   

#   2    VCI        2022               1059738713385   

#   3    VCI        2021               1850585393088   

#   4    VCI        2020                951038957081   

#   

#      Depreciation and Amortisation  Provision for credit losses  \

#   0                    10751194638                   4516800000   

#   1                     9679599271                  11292000000   

#   2                     9647191174                            0   

#   3                     7496942452                   -214202387   

#   4                    10634646105                    -35400000   

#   

#      Unrealized foreign exchange gain/loss  \

#   0                                      0   

#   1                                      0   

#   2                                      0   

#   3                                      0   

#   4                                      0   

#   

#      Profit/Loss from investing activities  Interest Expense  \

#   0                                      0      764124674808   

#   1                                      0      562553033255   

#   2                              154602984      477360036322   

#   3                                      0      330776772616   

#   4                             -500000000      173513458172   

#   

#      Interest income and dividends  \

#   0                  -8.608679e+10   

#   1                  -1.032191e+11   

#   2                  -5.948490e+10   

#   3                  -4.785212e+10   

#   4                  -2.094800e+10   

#   

#      Operating profit before changes in working capital  ...  \

#   0                                     -5169139240487   ...   

#   1                                     -5407321967895   ...   

#   2                                      2006811362129   ...   

#   3                                     -5732733292320   ...   

#   4                                     -1673271187005   ...   

#   

#      Payments for share repurchases  Proceeds from borrowings  \

#   0                               0            28212221000000   

#   1                               0            20322010000000   

#   2                               0            15126047142857   

#   3                               0            16591566600000   

#   4                      -852000000             7065840000000   

#   

#      Repayment of borrowings  Dividends paid  \

#   0          -24737632000000   -177803580300   

#   1          -18096042142857   -522119971000   

#   2          -16579490000000               0   

#   3          -11629266600000   -730123222800   

#   4           -6233940000000   -411641446500   

#   

#      Cash flows from financial activities  \

#   0                         7371225419700   

#   1                         1727849074143   

#   2                        -1428442857143   

#   3                         4245676777200   

#   4                          432858721500   

#   

#      Net increase/decrease in cash and cash equivalents  \

#   0                                      3955874113505    

#   1                                     -2635603795563    

#   2                                      2291753015270    

#   3                                       489235615943    

#   4                                      -151998779012    

#   

#      Cash and cash equivalents  Cash and Cash Equivalents at the end of period  \

#   0               787897819240                                   4743771932745   

#   1              3423501614803                                    787897819240   

#   2              1131748599533                                   3423501614803   

#   3               642512983590                                   1131748599533   

#   4               794511762602                                    642512983590   

#   

#      _Increase/Decrease in receivables  _Increase/Decrease in payables  

#   0                                  0                     65609975849  

#   1                                  0                      3923102445  

#   2                                  0                   -119194100124  

#   3                         5939376000                     88803338332  

#   4                        57321090000                   -265045502541  

#   

#   [5 rows x 38 columns]

fin.income_statement(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  Revenue (Bn. VND)  Revenue YoY (%)  \

#   0    VCI        2024             4       998995850627         0.239917   

#   1    VCI        2024             3       974360554621         0.461496   

#   2    VCI        2024             2       915851554761         0.828529   

#   3    VCI        2024             1       806317375461         0.615187   

#   4    VCI        2023             4       805695933425         0.011994   

#   

#      Attribute to parent company (Bn. VND)  Attribute to parent company YoY (%)  \

#   0                           218376745828                             0.776135   

#   1                           215352225175                             0.203064   

#   2                           279206679897                             1.388492   

#   3                           197756462393                             1.706977   

#   4                           122950502675                             3.324213   

#   

#         Net Sales  Cost of Sales  Gross Profit  ...  Net other income/expenses  \

#   0  998995850627  -519893652425  479102198202  ...                   21194452   

#   1  974360554621  -468140246243  506220308378  ...                          0   

#   2  915851554761  -359336052126  556515502635  ...                 2826585413   

#   3  806317375461  -370032071735  436285303726  ...                  -62475890   

#   4  805695933425  -419422487555  386273445870  ...                   13012123   

#   

#      Profit before tax  Business income tax - current  \

#   0       253335115979                   -35884665831   

#   1       264695399242                   -40189361297   

#   2       343766121537                   -64821621464   

#   3       227540468148                   -37710331505   

#   4       149131831394                    -7570702516   

#   

#      Business income tax - deferred  Net Profit For the Year  Minority Interest  \

#   0                       926295680             218376745828                  0   

#   1                     -9153812770             215352225175                  0   

#   2                       262179824             279206679897                  0   

#   3                      7926325750             197756462393                  0   

#   4                    -18610626203             122950502675                  0   

#   

#      Attributable to parent company         Sales  Other income  \

#   0                    218376745828  998995850627      23636364   

#   1                    215352225175  974360554621             0   

#   2                    279206679897  915851554761    2837985204   

#   3                    197756462393  806317375461     232524110   

#   4                    122950502675  805695933425      16990909   

#   

#      Other Income/Expenses  

#   0               -2441912  

#   1                      0  

#   2              -11399791  

#   3             -295000000  

#   4               -3978786  

#   

#   [5 rows x 25 columns]

"""
### Chỉ số tài chính
"""

fin.ratio(period='year', lang='vi', flatten_columns=True, drop_levels=[0], dropna=True).head()
# Output:
#       CP   Năm  Kỳ  (Vay NH+DH)/VCSH   Nợ/VCSH  TSCĐ / Vốn CSH  \

#   0  VCI  2024   5          0.971382  1.054349        0.002879   

#   1  VCI  2023   5          1.218152  1.340876        0.003178   

#   2  VCI  2022   5          0.973942  1.192721        0.003617   

#   3  VCI  2021   5          0.972610  1.543047        0.002011   

#   4  VCI  2020   5          0.596293  0.853905        0.003181   

#   

#      Vốn CSH/Vốn điều lệ  Vòng quay tài sản  Vòng quay TSCĐ  \

#   0             1.802578           0.168564      121.775022   

#   1             1.026491           0.156992      105.385605   

#   2             0.904536           0.204426      172.225781   

#   3             0.910997           0.296344      269.213152   

#   4             0.629646           0.221383      142.402909   

#   

#      Số ngày thu tiền bình quân  ...  Đòn bẩy tài chính       P/B  \

#   0                         0.0  ...           2.054349  2.052615   

#   1                         0.0  ...           2.340876  1.970499   

#   2                         0.0  ...           2.192721  2.866248   

#   3                         0.0  ...           2.543047  1.183493   

#   4                         0.0  ...           1.853905  2.666309   

#   

#      Vốn hóa (đồng)  Số CP lưu hành (Triệu CP)        P/E       P/S  \

#   0  26569680760000                  718099480  29.175262  7.189690   

#   1  14525000000000                  437500000  29.528080  5.874715   

#   2  18617620767750                  435499901  21.424727  5.898666   

#   3   7742250000000                  333000000   5.165914  2.088510   

#   4  12055680000000                  165600000  15.678875  6.970247   

#   

#      P/Cash Flow    EPS (VND)    BVPS (VND)  EV/EBITDA  

#   0    -7.851447  1268.197706  18025.783068  18.653217  

#   1    -3.334822  1124.353507  16848.524590  17.525975  

#   2     4.975461  1995.357941  14914.970490  12.729467  

#   3    -2.064593  4500.655782  19645.234971   5.895364  

#   4   -21.093469  4643.190154  27303.662559  12.313747  

#   

#   [5 rows x 37 columns]

fin.ratio(period='quarter', lang='en', flatten_columns=True, drop_levels=[0], dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  (ST+LT borrowings)/Equity  Debt/Equity  \

#   0    VCI        2024             4                   0.971382     1.054349   

#   1    VCI        2024             3                   1.253482     1.362305   

#   2    VCI        2024             2                   1.398891     1.608265   

#   3    VCI        2024             1                   1.252192     1.390102   

#   4    VCI        2023             4                   1.218152     1.340876   

#   

#      Fixed Asset-To-Equity  Owners' Equity/Charter Capital  Asset Turnover  \

#   0               0.002879                        1.802578        0.168564   

#   1               0.003381                        1.203462        0.174413   

#   2               0.003615                        1.233606        0.166335   

#   3               0.002676                        1.138743        0.162937   

#   4               0.003178                        1.026491        0.156992   

#   

#      Fixed Asset Turnover  Days Sales Outstanding  ...  Financial Leverage  \

#   0            121.775022                     0.0  ...            2.054349   

#   1            131.475148                     0.0  ...            2.362305   

#   2            129.528632                     0.0  ...            2.608265   

#   3            130.111085                     0.0  ...            2.390102   

#   4            105.385605                     0.0  ...            2.340876   

#   

#           P/B  Market Capital (Bn. VND)  Outstanding Share (Mil. Shares)  \

#   0  2.052615            26569680760000                        718099480   

#   1  1.806066            22871468438000                        718099480   

#   2  2.379972            21083029916000                        574469480   

#   3  2.571899            21167010000000                        441900000   

#   4  3.092259            22793750000000                        437500000   

#   

#            P/E       P/S  P/Cash Flow   EPS (VND)    BVPS (VND)  EV/EBITDA  

#   0  24.055917  7.189690    -6.473764  304.103752  18025.783068  18.902133  

#   1  23.303298  6.530553   -17.723150  299.891911  17635.011093  17.958349  

#   2  26.866048  6.599683    -4.975656  486.025263  15420.349585  17.950658  

#   3  33.973894  7.615216    -4.399652  447.514058  18624.368974  20.739556  

#   4  46.238494  9.219055    -5.222052  281.029720  16848.524590  22.946233  

#   

#   [5 rows x 37 columns]



================================================
FILE: docs/wrapper/1_vietnam_stock_vnstock3.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
<a target="_blank" href="https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/wrapper/1_vietnam_stock_vnstock3.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>
"""

"""
# Mục lục
"""

"""
# I. Cài đặt
"""

"""
## Cài đặt thư viện
"""

!pip install -U vnstock

"""
1. Chứng khoán Việt Nam [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/1_vietnam_stock_vnstock3.ipynb)
2. Chứng khoán quốc tế: Forex, Crypto, Chỉ số [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/2_international_market.ipynb)
3. Dữ liệu Thị trường, hàng hoá [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/3_commodities_vnstock3.ipynb)
4. Biểu diễn dữ liệu trực quan từ Vnstock3 [tại đây](https://colab.research.google.com/github/thinh-vu/vnstock/blob/main/docs/5_visualization_data_exploration_vnstock3.ipynb)
"""

"""
## Nạp thư viện lần đầu
"""

"""
> Bạn có thể nạp toàn bộ các module của thư viện vào môi trường làm việc nếu chưa biết rõ mình cần gì hoặc chọn từng module riêng biệt để nạp vào khi đã quen thuộc.
"""

"""
# II. Truy xuất dữ liệu - CK Việt Nam
"""

"""
* Chọn nguồn dữ liệu thuộc danh sách được hỗ trợ: VCI, TCBS cho chứng khoán trong nước, MSN cho dữ liệu chứng khoán quốc tế và sàn HOSE.
"""

from vnstock import Listing
listing = Listing(source='vci')

"""
## Listing: Liệt kê danh sách chứng khoán
"""

"""
### Danh sách tất cả mã CK niêm yết (đơn giản)
"""

# VCI là nguồn dữ liệu từ CK Vietcap bên cạnh nguồn từ TCBS
listing.all_symbols()
# Output:
#        symbol                                         organ_name

#   0       YTC  Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố ...

#   1       YEG                     Công ty Cổ phần Tập đoàn Yeah1

#   2       YBM     Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái

#   3       YBC      Công ty Cổ phần Xi măng và Khoáng sản Yên Bái

#   4       XPH                    Công ty Cổ phần Xà phòng Hà Nội

#   ...     ...                                                ...

#   1704    AAS            Công ty Cổ phần Chứng khoán SmartInvest

#   1705    AAM                    Công ty Cổ Phần Thủy Sản MeKong

#   1706    AAH                           Công ty Cổ phần Hợp Nhất

#   1707    AAA                  Công ty Cổ phần Nhựa An Phát Xanh

#   1708    A32                                 Công ty Cổ phần 32

#   

#   [1709 rows x 2 columns]

"""
### Liệt kê mã CP theo sàn (đầy đủ)
"""

# Dữ liệu bao gồm tất cả các mã không kể đang niêm yết hay không
listing.symbols_by_exchange()
# Output:
#        symbol exchange   type               organ_short_name  \

#   0       YTC    UPCOM  STOCK                XNK Y tế TP.HCM   

#   1       YEG      HSX  STOCK                 Tập đoàn Yeah1   

#   2       YBM      HSX  STOCK          Khoáng sản CN Yên Bái   

#   3       YBC    UPCOM  STOCK  Xi măng và Khoáng sản Yên Bái   

#   4       XPH    UPCOM  STOCK                Xà phòng Hà Nội   

#   ...     ...      ...    ...                            ...   

#   2814    AAS    UPCOM  STOCK        Chứng khoán SmartInvest   

#   2815    AAM      HSX  STOCK                Thủy sản Mekong   

#   2816    AAH    UPCOM  STOCK                  Than Hợp Nhất   

#   2817    AAA      HSX  STOCK            An Phát Bioplastics   

#   2818    A32    UPCOM  STOCK                     Công ty 32   

#   

#                                                organ_name  

#   0     Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố ...  

#   1                        Công ty Cổ phần Tập đoàn Yeah1  

#   2        Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái  

#   3         Công ty Cổ phần Xi măng và Khoáng sản Yên Bái  

#   4                       Công ty Cổ phần Xà phòng Hà Nội  

#   ...                                                 ...  

#   2814            Công ty Cổ phần Chứng khoán SmartInvest  

#   2815                    Công ty Cổ Phần Thủy Sản MeKong  

#   2816                           Công ty Cổ phần Hợp Nhất  

#   2817                  Công ty Cổ phần Nhựa An Phát Xanh  

#   2818                                 Công ty Cổ phần 32  

#   

#   [2819 rows x 5 columns]

"""
### Liệt kê mã CP theo ngành icb
"""

listing.symbols_by_industries()
# Output:
#        symbol                                         organ_name  \

#   0       BMK             Công ty Cổ Phần Kỹ thuật Nhiệt Mèo Đen   

#   1       AAA                  Công ty Cổ phần Nhựa An Phát Xanh   

#   2       LPT  Công ty Cổ phần Thương mại và Sản xuất Lập Phư...   

#   3       ABR              Công ty Cổ phần Đầu tư Nhãn Hiệu Việt   

#   4       ACB                Ngân hàng Thương mại Cổ phần Á Châu   

#   ...     ...                                                ...   

#   1587    XMP                Công ty Cổ phần Thủy điện Xuân Minh   

#   1588    YBC      Công ty Cổ phần Xi măng và Khoáng sản Yên Bái   

#   1589    YBM     Công ty Cổ phần Khoáng sản Công nghiệp Yên Bái   

#   1590    YEG                     Công ty Cổ phần Tập đoàn Yeah1   

#   1591    YTC  Công ty Cổ phần Xuất nhập khẩu Y tế Thành phố ...   

#   

#                          icb_name3                      icb_name2  \

#   0           Xây dựng và Vật liệu           Xây dựng và Vật liệu   

#   1                       Hóa chất                       Hóa chất   

#   2     Tư vấn & Hỗ trợ Kinh doanh     Hàng & Dịch vụ Công nghiệp   

#   3     Tư vấn & Hỗ trợ Kinh doanh     Hàng & Dịch vụ Công nghiệp   

#   4                      Ngân hàng                      Ngân hàng   

#   ...                          ...                            ...   

#   1587   Sản xuất & Phân phối Điện  Điện, nước & xăng dầu khí đốt   

#   1588        Xây dựng và Vật liệu           Xây dựng và Vật liệu   

#   1589                 Khai khoáng              Tài nguyên Cơ bản   

#   1590                Truyền thông                   Truyền thông   

#   1591    Thiết bị và Dịch vụ Y tế                           Y tế   

#   

#                            icb_name4 com_type_code icb_code1 icb_code2  \

#   0     Vật liệu xây dựng & Nội thất            CT      2000      2300   

#   1               Nhựa, cao su & sợi            CT      1000      1300   

#   2               Đào tạo & Việc làm            CT      2000      2700   

#   3               Tư vấn & Hỗ trợ KD            CT      2000      2700   

#   4                        Ngân hàng            NH      8301      8300   

#   ...                            ...           ...       ...       ...   

#   1587     Sản xuất & Phân phối Điện            CT      7000      7500   

#   1588  Vật liệu xây dựng & Nội thất            CT      2000      2300   

#   1589                   Khai khoáng            CT      1000      1700   

#   1590       Giải trí & Truyền thông            CT      5000      5500   

#   1591                  Dụng cụ y tế            CT      4000      4500   

#   

#        icb_code3 icb_code4  

#   0         2350      2353  

#   1         1350      1353  

#   2         2790      2793  

#   3         2790      2791  

#   4         8350      8355  

#   ...        ...       ...  

#   1587      7530      7535  

#   1588      2350      2353  

#   1589      1770      1775  

#   1590      5550      5553  

#   1591      4530      4537  

#   

#   [1592 rows x 10 columns]

"""
### Danh sách cổ phiếu theo nhóm
"""

# Liệt kê tất cả mã chứng khoán theo nhóm phân loại. Ví dụ HOSE, VN30, VNMidCap, VNSmallCap, VNAllShare, VN100, ETF, HNX, HNX30, HNXCon, HNXFin, HNXLCap, HNXMSCap, HNXMan, UPCOM, FU_INDEX (mã chỉ số hợp đồng tương lai), CW (chứng quyền)
listing.symbols_by_group('VN30')
# Output:
#   0     ACB

#   1     BCM

#   2     BID

#   3     BVH

#   4     CTG

#   5     FPT

#   6     GAS

#   7     GVR

#   8     HDB

#   9     HPG

#   10    LPB

#   11    MBB

#   12    MSN

#   13    MWG

#   14    PLX

#   15    SAB

#   16    SHB

#   17    SSB

#   18    SSI

#   19    STB

#   20    TCB

#   21    TPB

#   22    VCB

#   23    VHM

#   24    VIB

#   25    VIC

#   26    VJC

#   27    VNM

#   28    VPB

#   29    VRE

#   Name: symbol, dtype: object

"""
### Danh sách mã ngành theo mã icb
"""

listing.industries_icb()
# Output:
#                                      icb_name  \

#   0                          Sản xuất Dầu khí   

#   1    Thiết bị, Dịch vụ và Phân phối Dầu khí   

#   2                                  Hóa chất   

#   3                        Lâm nghiệp và Giấy   

#   4                                  Kim loại   

#   ..                                      ...   

#   150                              Viễn thông   

#   151                      Tiện ích Cộng đồng   

#   152                               Tài chính   

#   153                               Ngân hàng   

#   154                     Công nghệ Thông tin   

#   

#                                   en_icb_name icb_code  level  

#   0                       Oil & Gas Producers     0530      3  

#   1    Oil Equipment, Services & Distribution     0570      3  

#   2                                 Chemicals     1350      3  

#   3                          Forestry & Paper     1730      3  

#   4                Industrial Metals & Mining     1750      3  

#   ..                                      ...      ...    ...  

#   150                      Telecommunications     6000      1  

#   151                               Utilities     7000      1  

#   152                              Financials     8000      1  

#   153                                   Banks     8301      1  

#   154                              Technology     9000      1  

#   

#   [155 rows x 4 columns]

"""
## Quote: Giá chứng khoán
"""

from vnstock import Quote
quote = Quote(source='vci', symbol='ACB')

"""
#### Giá lịch sử
"""

"""
##### Cổ phiếu
"""

df = quote.history(start='2024-01-01', end='2025-03-19', interval='1D')
df
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

# Tất cả dataframe dữ liệu sẽ được gán thuộc tính tên và loại tài sản tương ứng
print(f'Mã chứng khoán: {df.name}')
print(f'Loại tài sản: {df.category}')
# Output:
#   Mã chứng khoán: ACB

#   Loại tài sản: stock


"""
##### Hợp đồng tương lai
"""

quote.history(symbol='VN30F1M', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

quote.history(symbol='VN30F2411', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

"""
##### Chỉ số
"""

quote.history(symbol='VNINDEX', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

quote.history(symbol='HNXINDEX', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

quote.history(symbol='UPCOMINDEX', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

"""
##### Chứng quyền
"""

quote.history(symbol='CFPT2314', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

"""
##### Trái phiếu niêm yết
"""

quote.history(symbol='CII424002', start='2024-01-02', end='2025-03-19', interval='1D')
# Output:
#             time   open   high    low  close    volume

#   0   2024-01-02  20.12  20.79  20.12  20.54  13896933

#   1   2024-01-03  20.58  21.00  20.37  21.00   9817807

#   2   2024-01-04  21.17  21.55  21.08  21.25  23605373

#   3   2024-01-05  21.25  21.38  21.04  21.38   9282598

#   4   2024-01-08  21.59  21.63  21.17  21.29  12398885

#   ..         ...    ...    ...    ...    ...       ...

#   295 2025-03-13  26.35  26.45  26.10  26.10   8885500

#   296 2025-03-14  26.20  26.20  25.90  26.00  11548600

#   297 2025-03-17  26.10  26.25  26.00  26.20   5664400

#   298 2025-03-18  26.30  26.55  26.25  26.30   6008500

#   299 2025-03-19  26.30  26.30  26.05  26.20   7913600

#   

#   [300 rows x 6 columns]

"""
#### Intraday: dữ liệu khớp lệnh
"""

# Dữ liệu khớp lệnh trong ngày giao dịch realtime hoặc ngày gần nhất (ngoài giờ giao dịch)
quote.intraday(symbol='ACB', page_size=10_000, show_log=False)
# Output:
#                             time    price  volume match_type         id

#   0    2025-04-21 09:15:02+07:00  24350.0  126900        ATO  290094501

#   1    2025-04-21 09:15:03+07:00  24450.0     200        Buy  290094785

#   2    2025-04-21 09:15:17+07:00  24400.0     100        Buy  290095319

#   3    2025-04-21 09:15:28+07:00  24350.0    5000       Sell  290095713

#   4    2025-04-21 09:15:28+07:00  24350.0     500       Sell  290095712

#   ...                        ...      ...     ...        ...        ...

#   3598 2025-04-21 14:29:44+07:00  24150.0     200       Sell  290500245

#   3599 2025-04-21 14:29:44+07:00  24150.0    7600       Sell  290500246

#   3600 2025-04-21 14:29:45+07:00  24200.0    1400        Buy  290500325

#   3601 2025-04-21 14:29:45+07:00  24200.0     100        Buy  290500324

#   3602 2025-04-21 14:45:02+07:00  24100.0  462500        ATC  290501644

#   

#   [3603 rows x 5 columns]

# Bước giá và khối lượng giao dịch: realtime
quote.price_depth('ACB')
# Output:
#      price acc_volume acc_buy_volume acc_sell_volume acc_undefined_volume

#   0  24500      53800          53800               0                    0

#   1  24450     391600         130000          261600                    0

#   2  24400     398000          23600          374400                    0

#   3  24350     422500          45400          250200               126900

#   4  24300     591500         314300          277200                    0

#   5  24250    2112900        1435700          677200                    0

#   6  24200    1964800         476500         1488300                    0

#   7  24150     836900           5400          831500                    0

#   8  24100     474000              0           11500               462500

"""
## Trading: Giao dịch
"""

from vnstock import Trading
trading = Trading(symbol='ACB', source='vci')

"""
### Bảng giá
"""

trading.price_board(['ACB'])
# Output:
#     listing                                                                 \

#      symbol ceiling  floor ref_price stock_type exchange last_trading_date   

#   0     ACB   26200  22800     24500      STOCK      HSX                     

#   

#                                   ...     bid_ask                           \

#     listed_share   type       id  ... bid_2_price bid_2_volume bid_3_price   

#   0   4466657912  STOCK  8424512  ...       24050       196100       24000   

#   

#                                                                                 \

#     bid_3_volume ask_1_price ask_1_volume ask_2_price ask_2_volume ask_3_price   

#   0       875200       24150          200       24200        48900       24250   

#   

#                   

#     ask_3_volume  

#   0       245500  

#   

#   [1 rows x 41 columns]

trading.price_board(['VCB','ACB','TCB','BID']).T # Bỏ .T để xoay trở lại đúng kiểu hiển thị bảng giá
# Output:
#                                                                                     0  \

#   listing symbol                                                                  VCB   

#           ceiling                                                               62100   

#           floor                                                                 54100   

#           ref_price                                                             58100   

#           stock_type                                                            STOCK   

#           exchange                                                                HSX   

#           last_trading_date                                                             

#           listed_share                                                     8355691435   

#           type                                                                  STOCK   

#           id                                                                  8424561   

#           organ_name                Ngân hàng Thương mại Cổ phần Ngoại thương Việt...   

#           prior_close_price                                                     58100   

#           benefit                                                                       

#           trading_date                                                     2025-04-21   

#   match   match_price                                                           58200   

#           match_vol                                                             44600   

#           accumulated_volume                                                  1290500   

#           accumulated_value                                                     75319   

#           avg_match_price                                                58364.199923   

#           highest                                                               58900   

#           lowest                                                                58100   

#           match_type                                                          unknown   

#           foreign_sell_volume                                                  330700   

#           foreign_buy_volume                                                   188226   

#           current_room                                                      627114505   

#           total_room                                                       2506702528   

#           total_accumulated_value                                            75319.54   

#           total_accumulated_volume                                              12905   

#           reference_price                                                       58100   

#   bid_ask bid_1_price                                                           58200   

#           bid_1_volume                                                          47600   

#           bid_2_price                                                           58100   

#           bid_2_volume                                                         145900   

#           bid_3_price                                                           58000   

#           bid_3_volume                                                         116000   

#           ask_1_price                                                           58300   

#           ask_1_volume                                                           7900   

#           ask_2_price                                                           58400   

#           ask_2_volume                                                          18800   

#           ask_3_price                                                           58500   

#           ask_3_volume                                                          16900   

#   

#                                                                       1  \

#   listing symbol                                                    ACB   

#           ceiling                                                 26200   

#           floor                                                   22800   

#           ref_price                                               24500   

#           stock_type                                              STOCK   

#           exchange                                                  HSX   

#           last_trading_date                                               

#           listed_share                                       4466657912   

#           type                                                    STOCK   

#           id                                                    8424512   

#           organ_name                Ngân hàng Thương mại Cổ phần Á Châu   

#           prior_close_price                                       24500   

#           benefit                                                         

#           trading_date                                       2025-04-21   

#   match   match_price                                             24100   

#           match_vol                                              462500   

#           accumulated_volume                                    7246000   

#           accumulated_value                                      175685   

#           avg_match_price                                  24245.790781   

#           highest                                                 24500   

#           lowest                                                  24100   

#           match_type                                            unknown   

#           foreign_sell_volume                                    209300   

#           foreign_buy_volume                                      83600   

#           current_room                                                0   

#           total_room                                         1339997373   

#           total_accumulated_value                            175685.765   

#           total_accumulated_volume                                72460   

#           reference_price                                         24500   

#   bid_ask bid_1_price                                             24100   

#           bid_1_volume                                           624600   

#           bid_2_price                                             24050   

#           bid_2_volume                                           196100   

#           bid_3_price                                             24000   

#           bid_3_volume                                           875200   

#           ask_1_price                                             24150   

#           ask_1_volume                                              200   

#           ask_2_price                                             24200   

#           ask_2_volume                                            48900   

#           ask_3_price                                             24250   

#           ask_3_volume                                           245500   

#   

#                                                                                   2  \

#   listing symbol                                                                TCB   

#           ceiling                                                             27800   

#           floor                                                               24200   

#           ref_price                                                           26000   

#           stock_type                                                          STOCK   

#           exchange                                                              HSX   

#           last_trading_date                                                           

#           listed_share                                                   7064851739   

#           type                                                                STOCK   

#           id                                                                8424683   

#           organ_name                Ngân hàng Thương mại Cổ phần Kỹ thương Việt Nam   

#           prior_close_price                                                   26000   

#           benefit                                                                     

#           trading_date                                                   2025-04-21   

#   match   match_price                                                         25750   

#           match_vol                                                          472600   

#           accumulated_volume                                               12192200   

#           accumulated_value                                                  315465   

#           avg_match_price                                              25874.329489   

#           highest                                                             26300   

#           lowest                                                              25600   

#           match_type                                                        unknown   

#           foreign_sell_volume                                                 17700   

#           foreign_buy_volume                                                 145300   

#           current_room                                                            0   

#           total_room                                                     1590552461   

#           total_accumulated_value                                        315465.715   

#           total_accumulated_volume                                           121922   

#           reference_price                                                     26000   

#   bid_ask bid_1_price                                                         25750   

#           bid_1_volume                                                         8400   

#           bid_2_price                                                         25700   

#           bid_2_volume                                                       160200   

#           bid_3_price                                                         25650   

#           bid_3_volume                                                       275000   

#           ask_1_price                                                         25800   

#           ask_1_volume                                                        14600   

#           ask_2_price                                                         25850   

#           ask_2_volume                                                        76900   

#           ask_3_price                                                         25900   

#           ask_3_volume                                                        11600   

#   

#                                                                                     3  

#   listing symbol                                                                  BID  

#           ceiling                                                               38450  

#           floor                                                                 33450  

#           ref_price                                                             35950  

#           stock_type                                                            STOCK  

#           exchange                                                                HSX  

#           last_trading_date                                                            

#           listed_share                                                     6897515268  

#           type                                                                  STOCK  

#           id                                                                  8424583  

#           organ_name                Ngân hàng Thương mại Cổ phần Đầu tư và Phát tr...  

#           prior_close_price                                                     35950  

#           benefit                                                                      

#           trading_date                                                     2025-04-21  

#   match   match_price                                                           35250  

#           match_vol                                                             62700  

#           accumulated_volume                                                  2105600  

#           accumulated_value                                                     74447  

#           avg_match_price                                                35356.667933  

#           highest                                                               36000  

#           lowest                                                                35100  

#           match_type                                                          unknown  

#           foreign_sell_volume                                                  166600  

#           foreign_buy_volume                                                   138400  

#           current_room                                                      871833200  

#           total_room                                                       2106408575  

#           total_accumulated_value                                            74447.37  

#           total_accumulated_volume                                              21056  

#           reference_price                                                       35950  

#   bid_ask bid_1_price                                                           35250  

#           bid_1_volume                                                          11200  

#           bid_2_price                                                           35200  

#           bid_2_volume                                                           6700  

#           bid_3_price                                                           35150  

#           bid_3_volume                                                          47200  

#           ask_1_price                                                           35300  

#           ask_1_volume                                                           3000  

#           ask_2_price                                                           35350  

#           ask_2_volume                                                           1000  

#           ask_3_price                                                           35400  

#           ask_3_volume                                                           1000  

"""
## Company: Thông tin công ty
"""

"""
### New - VCI
"""

from vnstock import Company
company = Company(symbol='ACB', source='vci')

"""
Loại bỏ đoạn mã `.head()` để xem toàn bộ dữ liệu thay vì chỉ lấy 5 dòng đầu tiên.
"""

"""
#### Hồ sơ
"""

company.overview()
# Output:
#     symbol     id  issue_share  \

#   0    ACB  67505   4466657912   

#   

#                                                history  \

#   0   - Ngày 24/04/1993: Ngân hàng Thương mại Cổ ph...   

#   

#                                        company_profile  icb_name3  icb_name2  \

#   0  Ngân hàng Thương mại Cổ phần Á Châu (ACB) được...  Ngân hàng  Ngân hàng   

#   

#      icb_name4  financial_ratio_issue_share  charter_capital  

#   0  Ngân hàng                   4466657900   44666579120000  

"""
#### Cổ đông
"""

company.shareholders()
# Output:
#             id                            share_holder   quantity  \

#   0   78530729  Vietnam Enterprise Investments Limited  212880184   

#   1   78525594         Sather Gate Investments Limited  193907186   

#   2   78507068               Estes Investments Limited   83010435   

#   3   78523363                         Phạm Thị Thu Hà     285000   

#   4   78527575                           Trần Hùng Huy  153062159   

#   ..       ...                                     ...        ...   

#   82  78519760                    Nguyễn Thị Tuyết Vân      88722   

#   83  78525117  Quỹ Đầu tư Cổ phiếu Năng động Bảo Việt      22065   

#   84  78505343                            Đinh Thị Hoa      67200   

#   85  78501300  Công ty Cổ phần Chứng khoán Thiên Việt       5285   

#   86  78515024                         Nguyễn Hồng Nga       2008   

#   

#       share_own_percent update_date  

#   0        5.480880e-02  2024-09-13  

#   1        4.990000e-02  2024-05-15  

#   2        4.990000e-02  2024-05-15  

#   3        4.990000e-02  2016-05-20  

#   4        3.940000e-02  2025-01-24  

#   ..                ...         ...  

#   82       1.730000e-05  2025-01-24  

#   83       1.327000e-05  2025-02-03  

#   84       1.200000e-05  2025-01-24  

#   85       1.500000e-06  2022-07-25  

#   86       7.000000e-07  2022-08-31  

#   

#   [87 rows x 5 columns]

"""
#### Công ty con
"""

company.subsidiaries()
# Output:
#            id sub_organ_code ownership_percent  \

#   0  22236054           ACBA                 1   

#   1  22236055           ACBL                 1   

#   2  22236056           ACBS                 1   

#   0  22236058           ACBD              None   

#   1  22236057           SGGS              None   

#   

#                                             organ_name              type  

#   0  Công Ty TNHH Quản Lý Nợ Và Khai Thác Tài Sản N...       công ty con  

#   1  Công Ty TNHH Một Thành Viên Cho Thuê Tài Chính...       công ty con  

#   2                       Công ty TNHH Chứng khoán ACB       công ty con  

#   0    CÔNG TY CỔ PHẦN DỊCH VỤ BẢO VỆ NGÂN HÀNG Á CHÂU  công ty liên kết  

#   1          Công ty Cổ phần Sài Gòn Kim hoàn ACB- SJC  công ty liên kết  

"""
#### Công ty liên kết
"""

# Phương thức này không có trong nguồn TCBS
company.affiliate()
# Output:
#            id sub_organ_code                                       organ_name  \

#   0  22236058           ACBD  CÔNG TY CỔ PHẦN DỊCH VỤ BẢO VỆ NGÂN HÀNG Á CHÂU   

#   1  22236057           SGGS        Công ty Cổ phần Sài Gòn Kim hoàn ACB- SJC   

#   

#     ownership_percent  

#   0              None  

#   1              None  

"""
#### Lãnh đạo
"""

company.officers(filter_by='working').head() # filter_by='all' hoặc 'working' hoặc 'resigned'
# Output:
#      id       officer_name                officer_position position_short_name  \

#   0   6      Trần Hùng Huy      Chủ tịch Hội đồng Quản trị       Chủ tịch HĐQT   

#   1   7      Đặng Thu Thủy    Thành viên Hội đồng Quản trị             TV HĐQT   

#   2  11      Đặng Phú Vinh                   Giám đốc khối             GĐ Khối   

#   3  13       Đỗ Minh Toàn                   Tổng Giám đốc                 TGĐ   

#   4   8  Nguyễn Thành Long  Phó Chủ tịch Hội đồng Quản trị   Phó Chủ tịch HĐQT   

#   

#     update_date  officer_own_percent   quantity  

#   0  2025-01-24               0.0394  153062159  

#   1  2025-01-24               0.0137   53350036  

#   2  2025-01-24               0.0042   16454507  

#   3  2025-01-24               0.0008    3202886  

#   4  2025-01-24               0.0004    1647067  

"""
#### Tin tức
"""

company.news().head(3)
# Output:
#           id                                         news_title news_sub_title  \

#   0  7278188  ACB: Thông báo nhận được quyết định về việc nộ...                  

#   1  7217148      ACB:  Nghị quyết HĐQT số 1971 ngày 14/04/2025                  

#   2  7180533  ACB:  Báo cáo kết quả giao dịch cổ phiếu của t...                  

#   

#     friendly_sub_title                                     news_image_url  \

#   0                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   1                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   2                     https://cdn.fiingroup.vn/medialib/127889/I/202...   

#   

#                                       news_source_link created_at  \

#   0  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   1  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   2  https://www.hsx.vn/Modules/Cms/Web/LoadArticle...       None   

#   

#        public_date updated_at lang_code   news_id  \

#   0  1745249700000       None        vi  11548334   

#   1  1744734240000       None        vi  11542085   

#   2  1744302900000       None        vi  11527549   

#   

#                                     news_short_content  \

#   0                                                      

#   1      ACB:  Nghị quyết HĐQT số 1971 ngày 14/04/2025   

#   2  ACB:  Báo cáo kết quả giao dịch cổ phiếu của t...   

#   

#                                      news_full_content  close_price  ref_price  \

#   0  <p>Ngân hàng Thương mại Cổ phần Á Châu thông b...        24100      24500   

#   1  <p> Ngân hàng Thương mại Cổ phần Á Châu thông ...        24100      24800   

#   2  <p>Công ty Cổ phần Vì ngày mai cho em báo cáo ...        23300      21800   

#   

#      floor  ceiling  price_change_pct  

#   0  22800    26200         -0.016327  

#   1  23100    26500         -0.028226  

#   2  20300    23300          0.068807  

"""
#### Sự kiện
"""

company.events().head(3)
# Output:
#            id                                  event_title  \

#   0     18135                     Trả cổ tức bằng tiền mặt   

#   1  40234158  ACB - Niêm yết bổ sung 582,607,554 cổ phiếu   

#   2     18134                                Niêm yết thêm   

#   

#                               en__event_title public_date  issue_date  \

#   0                                            2013-05-10  2013-06-04   

#   1  ACB- Lists additional 582,607,554 shares  2024-06-28  2024-06-27   

#   2                                            2013-04-04  2013-04-12   

#   

#                                             source_url event_list_code  ratio  \

#   0                                                                DIV    NaN   

#   1  http://fiinpro.com/News/Detail/11231512?lang=v...             AIS    0.0   

#   2                                                                AIS    NaN   

#   

#      value record_date exright_date           event_list_name  \

#   0    NaN  2013-05-21   2013-05-17  Trả cổ tức bằng tiền mặt   

#   1    0.0  1753-01-01   1753-01-01             Niêm yết thêm   

#   2    NaN  1753-01-01   1753-01-01             Niêm yết thêm   

#   

#     en__event_list_name  

#   0       Cash Dividend  

#   1  Additional Listing  

#   2  Additional Listing  

"""
#### Báo cáo phân tích
"""

company.reports()
# Output:
#                      date                                        description  \

#   0  2025-04-08T00:00:00Z  Chúng tôi đã tham dự ĐHCĐ của Ngân hàng TMCP Á...   

#   1  2025-01-22T00:00:00Z  Ngân hàng Thương Mại Cổ Phần Á Châu (ACB) đã c...   

#   2  2024-10-24T00:00:00Z  Ngân hàng TMCP Á Châu (ACB) công bố KQKD 9 thá...   

#   3  2024-09-09T00:00:00Z  - Chúng tôi tiếp tục duy trì giá mục tiêu đối ...   

#   4  2024-07-23T00:00:00Z  ACB đã công bố KQKD nửa đầu năm 2024 với thu n...   

#   5  2024-06-04T00:00:00Z  - Chúng tôi điều chỉnh tăng 8,6% giá mục tiêu ...   

#   6  2024-04-26T00:00:00Z  ACB đã công bố KQKD quý 1/2024 với TOI đạt 8,2...   

#   7  2024-04-04T00:00:00Z  Chúng tôi đã tham dự ĐHCĐ của Ngân hàng TMCP Á...   

#   8  2024-03-05T00:00:00Z  - Chúng tôi điều chỉnh tăng 7,6% giá mục tiêu ...   

#   9  2024-01-26T00:00:00Z  ACB công bố KQKD năm 2023 với TOI đạt 32,7 ngh...   

#   

#                                                   link  \

#   0  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   1  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   2  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   3  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   4  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   5  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   6  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   7  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   8  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   9  https://www.vietcap.com.vn/trung-tam-phan-tich...   

#   

#                                                   name  

#   0  ACB - Tăng trưởng tín dụng được kỳ vọng sẽ nằm...  

#   1  ACB - Tập trung vào tăng trưởng tín dụng hơn t...  

#   2  ACB – NOII thấp hơn dự kiến, ảnh hưởng tiêu cự...  

#   3  ACB [MUA +35,0%] - Tăng dự báo tăng trưởng tín...  

#   4  ACB - Tín dụng tăng trưởng mạnh, chất lượng tà...  

#   5  ACB [MUA +33,7%] - NIM tương đối đi ngang tron...  

#   6  ACB – NOII thấp, chất lượng tài sản được duy t...  

#   7  ACB - Tín dụng tăng trưởng mạnh, duy trì tỷ lệ...  

#   8  ACB [MUA +26,3%] - Tăng trưởng ổn định nhờ cho...  

#   9  ACB – Tăng trưởng tín dụng vượt kỳ vọng, lợi n...  

"""
#### Tình hình tài chính
"""

company.ratio_summary()
# Output:
#     symbol  year_report  length_report    update_date         revenue  \

#   0    ACB         2024              5  1741199572843  50902749000000   

#   

#      revenue_growth      net_profit  net_profit_growth  ebit_margin       roe  \

#   0       -0.027586  16789768000000           0.046435            0  0.217459   

#   

#      ...  rtq4  charter_capital_ratio  rtq10  dividend  ebitda  ebit  le  de  \

#   0  ...     0               1.868549      0         0       0     0   0   0   

#   

#       ccc  rtq17  

#   0  None      0  

#   

#   [1 rows x 46 columns]

"""
#### Thống kê giao dịch
"""

company.trading_stats()
# Output:
#     symbol exchange               ev  ceiling  floor  ref_price   open  \

#   0    ACB     HOSE  107646455390000    26200  22800      24500  24350   

#   

#      match_price  close_price  price_change  ...  high_price_1y  low_price_1y  \

#   0        24100        24100          -400  ...          26800         20750   

#   

#      pct_low_change_1y  pct_high_change_1y  foreign_volume  foreign_room  \

#   0           0.105505           -0.095685          192900    1339997373   

#   

#      avg_match_volume_2w  foreign_holding_room  current_holding_ratio  \

#   0             19112255            1338886973               0.299751   

#   

#      max_holding_ratio  

#   0                0.3  

#   

#   [1 rows x 24 columns]

"""
### TCBS
"""

from vnstock import Company
company = Company(symbol='ACB', source='tcbs')

"""
#### Tổng quan
"""

company.overview()
# Output:
#     symbol exchange   industry company_type  no_shareholders  foreign_percent  \

#   0    ACB     HOSE  Ngân hàng           NH            76457              0.3   

#   

#      outstanding_share  issue_share established_year  no_employees  \

#   0             4466.7       4466.7             2006         13290   

#   

#      stock_rating  delta_in_week  delta_in_month  delta_in_year short_name  \

#   0           3.1         -0.001           0.006          0.051        ACB   

#   

#                     website  industry_id industry_id_v2  

#   0  https://www.acb.com.vn          289           8355  

"""
#### Hồ sơ
"""

company.profile()
# Output:
#     symbol                         company_name  \

#   0    ACB  Ngân hàng Thương mại Cổ phần Á Châu   

#   

#                                        company_profile  \

#   0   Ngân hàng Thương mại Cổ phần Á Châu (ACB) đượ...   

#   

#                                            history_dev  \

#   0    Ngày 24/04/1993: Ngân hàng Thương mại Cổ phầ...   

#   

#                                        company_promise  \

#   0   Chuyển đổi số trong lĩnh vực tài chính - ngân...   

#   

#                                          business_risk  \

#   0    Bất ổn vĩ mô: Kinh tế Việt Nam được đánh giá...   

#   

#                                       key_developments  \

#   0    Huy động vốn (nhận tiền gửi của khách hàng) ...   

#   

#                                    business_strategies  

#   0    Áp dụng công nghệ tiên tiến hiện đại trong c...  

"""
#### Cổ đông
"""

company.shareholders()
# Output:
#                  share_holder  share_own_percent

#   0             Trần Hùng Huy             0.0394

#   1             Đặng Thu Thủy             0.0137

#   2  Nguyễn Thiên Hương Jenny             0.0134

#   3               Đặng Thu Hà             0.0119

#   4    Nguyễn Đức Hiếu Johnny             0.0107

#   5             Đặng Phú Vinh             0.0042

#   6           Phạm Trung Cang             0.0017

#   7                  Lê Vũ Kỳ             0.0015

#   8         Nguyễn Thị Tố Lưu             0.0013

#   9                      Khác             0.2591

"""
#### Giao dịch nội bộ
"""

company.insider_deals().head(3)
# Output:
#     deal_announce_date       deal_method deal_action  deal_quantity  deal_price  \

#   0         2025-04-10       Cổ đông lớn         Mua        47100.0     23300.0   

#   1         2025-03-26       Cổ đông lớn         Bán       -29756.0     26150.0   

#   2         2024-07-02  Cổ đông sáng lập         Mua      6000000.0     24050.0   

#   

#      deal_ratio  

#   0       0.034  

#   1      -0.078  

#   2       0.002  

"""
#### Công ty con, liên kết
"""

company.subsidiaries().head()
# Output:
#                                       sub_company_name  sub_own_percent

#   0                       Công ty TNHH Chứng khoán ACB              1.0

#   1  Công Ty TNHH Một Thành Viên Cho Thuê Tài Chính...              1.0

#   2                   Công ty TNHH MTV Quản Lý Quỹ ACB              1.0

#   3  Công Ty TNHH Quản Lý Nợ Và Khai Thác Tài Sản N...              1.0

#   4  Ngân Hàng Thương Mại Cổ Phần Á Châu - Chi Nhán...              1.0

"""
#### Ban lãnh đạo
"""

company.officers().head()
# Output:
#                  officer_name              officer_position  officer_own_percent

#   0             Trần Hùng Huy                          None               0.0394

#   2             Đặng Thu Thủy  Thành viên Hội đồng Quản trị               0.0137

#   1  Nguyễn Thiên Hương Jenny                          None               0.0134

#   4               Đặng Thu Hà                          None               0.0119

#   3    Nguyễn Đức Hiếu Johnny                          None               0.0107

"""
#### Sự kiện
"""

company.events().head()
# Output:
#   The input looks more like a filename than markup. You may want to open this file and pass the filehandle into Beautiful Soup.

#       rsi    rs       id  price  price_change  price_change_ratio  \

#   0  11.4  48.0  2588520  23300          1500               0.069   

#   1  47.4  49.0  2586445  25950           -50              -0.002   

#   2  56.3  60.0  2586032  26150          -150              -0.006   

#   3  55.7  54.0  2585049  26300           100               0.004   

#   4  63.8  52.0  2583898  26150             0               0.000   

#   

#      price_change_ratio_1m                                    event_name  \

#   0                 -0.119            ACB - Kết quả giao dịch nội bộ/CĐL   

#   1                 -0.002  ACB - Thông báo đăng ký giao dịch nội bộ/CĐL   

#   2                  0.008            ACB - Kết quả giao dịch nội bộ/CĐL   

#   3                  0.021  ACB - Thông báo đăng ký giao dịch nội bộ/CĐL   

#   4                  0.030      ACB - BCTC Riêng lẻ kiểm toán Quý 4/2024   

#   

#     event_code notify_date   exer_date reg_final_date exer_right_date  \

#   0      DDINS  2025-04-10  2025-04-03     1753-01-01      1753-01-01   

#   1      DDINS  2025-03-28  2025-04-30     1753-01-01      1753-01-01   

#   2      DDINS  2025-03-26  2025-03-25     1753-01-01      1753-01-01   

#   3      DDINS  2025-03-18  2025-04-19     1753-01-01      1753-01-01   

#   4       KQQY  2025-03-05  2025-03-05     1753-01-01      1753-01-01   

#   

#                                             event_desc  

#   0  - Cá nhân/Tổ chức thực hiện giao dịch: Công ty...  

#   1  - Cá nhân/Tổ chức thực hiện giao dịch: Công ty...  

#   2  - Cá nhân/Tổ chức thực hiện giao dịch: Công Ty...  

#   3  - Cá nhân/Tổ chức thực hiện giao dịch: Công Ty...  

#   4           ACB - BCTC Riêng lẻ kiểm toán Quý 4/2024  

"""
#### Tin tức
"""

company.news().head()
# Output:
#       rsi    rs  price  price_change  price_change_ratio  price_change_ratio_1m  \

#   0  46.5  60.0  24100          -400              -0.016                 -0.077   

#   1  47.8  62.0  24100          -700              -0.028                 -0.080   

#   2  11.4  48.0  23300          1500               0.069                 -0.119   

#   3  12.3  47.0  21800          -350              -0.016                 -0.176   

#   4  12.3  47.0  21800          -350              -0.016                 -0.176   

#   

#            id                                              title source  \

#   0  11548334  ACB: Thông báo nhận được quyết định về việc nộ...   TCBS   

#   1  11542085      ACB:  Nghị quyết HĐQT số 1971 ngày 14/04/2025   TCBS   

#   2  11527549  ACB:  Báo cáo kết quả giao dịch cổ phiếu của t...   TCBS   

#   3  11525657  ACB:  Nghị quyết và Biên bản họp ĐHĐCĐ thường ...   TCBS   

#   4  11525603  ACB:  Nghị quyết HĐQT về việc ký kết hợp đồng ...   TCBS   

#   

#             publish_date  

#   0  2025-04-21 15:35:00  

#   1  2025-04-15 16:24:00  

#   2  2025-04-10 16:35:00  

#   3  2025-04-09 18:14:00  

#   4  2025-04-09 17:30:00  

"""
#### Cổ tức
"""

company.dividends().head()
# Output:
#     exercise_date  cash_year  cash_dividend_percentage issue_method

#   0    2024-05-31       2023                      0.10         cash

#   1    2024-05-31       2024                      0.15        share

#   2    2023-06-01       2022                      0.10         cash

#   3    2023-06-01       2023                      0.15        share

#   4    2022-06-02       2022                      0.25        share

"""
## Finance: Báo cáo tài chính
"""

from vnstock import Finance
finance = Finance(symbol='ACB', source='vci')

"""
### Bảng cân đối kế toán
"""

finance.balance_sheet(period='year', lang='vi', dropna=True)
# Output:
#        CP   Năm  TỔNG CỘNG TÀI SẢN (đồng)  Tiền và tương đương tiền (đồng)  \

#   0   ACB  2024           864005703000000                    5696449000000   

#   1   ACB  2023           718794589000000                    6909300000000   

#   2   ACB  2022           607875185000000                    8460892000000   

#   3   ACB  2021           527769944000000                    7509877000000   

#   4   ACB  2020           444530104000000                    6967918000000   

#   5   ACB  2019           383514439000000                    6437812000000   

#   6   ACB  2018           329333241000000                    6129169000000   

#   7   ACB  2017           284316123000000                    4851710000000   

#   8   ACB  2016           233680877000000                    3541388000000   

#   9   ACB  2015           201456985000000                    2806088000000   

#   10  ACB  2014           179609771000000                    2496287000000   

#   11  ACB  2013           166598989000000                    2043490000000   

#   12  ACB  2011           281019319000000                    8709990000000   

#   13  ACB  2010           205102950000000                   10884762000000   

#   

#       Tiền gửi tại ngân hàng nhà nước Việt Nam  \

#   0                             25219753000000   

#   1                             18504814000000   

#   2                             13657531000000   

#   3                             32349574000000   

#   4                             16616798000000   

#   5                             10420306000000   

#   6                             10683536000000   

#   7                              8314574000000   

#   8                              5119306000000   

#   9                              4608680000000   

#   10                             3357730000000   

#   11                             3065322000000   

#   12                             5075817000000   

#   13                             2914353000000   

#   

#       Tiền gửi tại các TCTD khác và cho vay các TCTD khác  \

#   0                                     117882259000000     

#   1                                     114873931000000     

#   2                                      85971313000000     

#   3                                      49818776000000     

#   4                                      31671245000000     

#   5                                      30341599000000     

#   6                                      18769776000000     

#   7                                       8941727000000     

#   8                                       8152027000000     

#   9                                      10122200000000     

#   10                                      4559007000000     

#   11                                      7215519000000     

#   12                                     81274021000000     

#   13                                     33961250000000     

#   

#       Chứng khoán kinh doanh  _Chứng khoán kinh doanh  \

#   0            3881151000000            4029088000000   

#   1            7177069000000            7323489000000   

#   2            1131327000000            1320941000000   

#   3           11259731000000           11325371000000   

#   4            6167917000000            6285763000000   

#   5            2985262000000            3145903000000   

#   6            1177972000000            1339157000000   

#   7            1236555000000            1239991000000   

#   8            1183306000000            1211314000000   

#   9             100457000000             103034000000   

#   10           1105122000000            1108232000000   

#   11            851161000000            1078309000000   

#   12            850459000000            1048787000000   

#   13            978355000000            1167950000000   

#   

#       Dự phòng giảm giá chứng khoán kinh doanh  \

#   0                              -147937000000   

#   1                              -146420000000   

#   2                              -189614000000   

#   3                               -65640000000   

#   4                              -117846000000   

#   5                              -160641000000   

#   6                              -161185000000   

#   7                                -3436000000   

#   8                               -28008000000   

#   9                                -2577000000   

#   10                               -3110000000   

#   11                             -227148000000   

#   12                             -198328000000   

#   13                             -189595000000   

#   

#       Các công cụ tài chính phái sinh và khoản nợ tài chính khác  ...  \

#   0                                         55992000000           ...   

#   1                                                   0           ...   

#   2                                        100072000000           ...   

#   3                                        226545000000           ...   

#   4                                         54473000000           ...   

#   5                                         87753000000           ...   

#   6                                                   0           ...   

#   7                                                   0           ...   

#   8                                         16065000000           ...   

#   9                                         47603000000           ...   

#   10                                        14403000000           ...   

#   11                                          150000000           ...   

#   12                                      1016447000000           ...   

#   13                                        78172000000           ...   

#   

#       Tiền gửi của khách hàng  \

#   0           537304578000000   

#   1           482702731000000   

#   2           413952789000000   

#   3           379920669000000   

#   4           353195838000000   

#   5           308129391000000   

#   6           269998503000000   

#   7           241392932000000   

#   8           207051269000000   

#   9           174918997000000   

#   10          154613588000000   

#   11          138110836000000   

#   12          142218091000000   

#   13          106936611000000   

#   

#       _Các công cụ tài chính phái sinh và khoản nợ tài chính khác  \

#   0                                                   0             

#   1                                        117126000000             

#   2                                                   0             

#   3                                                   0             

#   4                                                   0             

#   5                                                   0             

#   6                                         38198000000             

#   7                                         10491000000             

#   8                                                   0             

#   9                                                   0             

#   10                                                  0             

#   11                                                  0             

#   12                                                  0             

#   13                                                  0             

#   

#       Vốn tài trợ, uỷ thác đầu tư của CP và các tổ chức TD khác  \

#   0                                         28008000000           

#   1                                         41534000000           

#   2                                         60188000000           

#   3                                         86066000000           

#   4                                        116705000000           

#   5                                        156147000000           

#   6                                        160093000000           

#   7                                        136466000000           

#   8                                        122697000000           

#   9                                        161678000000           

#   10                                       188155000000           

#   11                                       363345000000           

#   12                                       332318000000           

#   13                                       379768000000           

#   

#       Phát hành giấy tờ có giá  Các khoản nợ khác  VỐN CHỦ SỞ HỮU (đồng)  \

#   0            101650446000000     22014472000000         83461678000000   

#   1             52410014000000     23060473000000         70955961000000   

#   2             44304367000000     22772462000000         58438663000000   

#   3             30547883000000     17920478000000         44900909000000   

#   4             22049697000000      9844459000000         35448163000000   

#   5             20830836000000      7384134000000         27765359000000   

#   6              8290918000000      6035148000000         21017899000000   

#   7              6761000000000      4530641000000         16030847000000   

#   8              6615000000000      3594080000000         14062716000000   

#   9              3075000000000      2901457000000         12787542000000   

#   10             3078000000000      3187487000000         12397303000000   

#   11             3500000000000      2743684000000         12504202000000   

#   12            50708499000000     34556973000000         11959092000000   

#   13            38234151000000     10594023000000         11376757000000   

#   

#       Vốn của tổ chức tín dụng  Quỹ của tổ chức tín dụng  \

#   0             44938358000000            14789568000000   

#   1             39112283000000            11557435000000   

#   2             34046130000000             9220125000000   

#   3             27291260000000             7164297000000   

#   4             21887364000000             5741759000000   

#   5             16799171000000             4595902000000   

#   6             12220152000000             3693069000000   

#   7              9607514000000             2913780000000   

#   8              8711240000000             2590181000000   

#   9              8711240000000             2374178000000   

#   10             8711841000000             2207666000000   

#   11             9117544000000             2034952000000   

#   12             9376965000000             1753237000000   

#   13             9376965000000             1209552000000   

#   

#       Lãi chưa phân phối (đồng)  Vốn góp của chủ sở hữu (đồng)  

#   0              23733752000000                 44666579000000  

#   1              20286243000000                 38840504000000  

#   2              15172408000000                 33774351000000  

#   3              10445352000000                 27019481000000  

#   4               7819040000000                 21615585000000  

#   5               6370286000000                 16627373000000  

#   6               5104678000000                 12885877000000  

#   7               3509553000000                 10273239000000  

#   8               2761295000000                  9376965000000  

#   9               1702124000000                  9376965000000  

#   10              1477796000000                  9376965000000  

#   11              1351706000000                  9376965000000  

#   12               828890000000                  9376965000000  

#   13               790240000000                  9376965000000  

#   

#   [14 rows x 40 columns]

finance.balance_sheet(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  TOTAL ASSETS (Bn. VND)  \

#   0    ACB        2024             4         864005703000000   

#   1    ACB        2024             3         777392922000000   

#   2    ACB        2024             2         769678700000000   

#   3    ACB        2024             1         727297968000000   

#   4    ACB        2023             4         718794589000000   

#   

#      Cash and cash equivalents (Bn. VND)  Balances with the SBV  \

#   0                        5696449000000         25219753000000   

#   1                        5870526000000          8392393000000   

#   2                        6594138000000         15724945000000   

#   3                        6470319000000          7851936000000   

#   4                        6909300000000         18504814000000   

#   

#      Placements with and loans to other credit institutions  \

#   0                                    117882259000000        

#   1                                     92090423000000        

#   2                                    105419092000000        

#   3                                    121950918000000        

#   4                                    114873931000000        

#   

#      Trading Securities, net  Trading Securities  \

#   0            3881151000000       4029088000000   

#   1            6965867000000       7059448000000   

#   2            6125105000000       6236053000000   

#   3            7377873000000       7469189000000   

#   4            7177069000000       7323489000000   

#   

#      Provision for diminution in value of Trading Securities  ...  \

#   0                                      -147937000000        ...   

#   1                                       -93581000000        ...   

#   2                                      -110948000000        ...   

#   3                                       -91316000000        ...   

#   4                                      -146420000000        ...   

#   

#      Funds received from Gov, international and other institutions  \

#   0                                        28008000000               

#   1                                        31641000000               

#   2                                        33175000000               

#   3                                        37321000000               

#   4                                        41534000000               

#   

#      Convertible bonds/CDs and other valuable papers issued  Other liabilities  \

#   0                                    101650446000000          22014472000000   

#   1                                     90366104000000          22478444000000   

#   2                                     66953215000000          22365462000000   

#   3                                     49011681000000          20710083000000   

#   4                                     52410014000000          23060473000000   

#   

#      OWNER'S EQUITY(Bn.VND)         Capital        Reserves  \

#   0          83461678000000  44938358000000  14789568000000   

#   1          78854261000000  44938358000000  11557435000000   

#   2          74792678000000  44938358000000  11557435000000   

#   3          74790732000000  39112283000000  11557435000000   

#   4          70955961000000  39112283000000  11557435000000   

#   

#      Foreign Currency Difference reserve  Undistributed earnings (Bn. VND)  \

#   0                                    0                    23733752000000   

#   1                         -62053000000                    22420521000000   

#   2                        -253241000000                    18550126000000   

#   3                         -70648000000                    24191662000000   

#   4                                    0                    20286243000000   

#   

#      Paid-in capital (Bn. VND)  MINORITY INTERESTS  

#   0             44666579000000                   0  

#   1             44666579000000                   0  

#   2             44666579000000                   0  

#   3             38840504000000                   0  

#   4             38840504000000                   0  

#   

#   [5 rows x 43 columns]

"""
### Báo cáo lãi lỗ
"""

finance.income_statement(period='year', lang='vi', dropna=True).head()
# Output:
#       CP   Năm  Doanh thu (đồng)  Tăng trưởng doanh thu (%)  \

#   0  ACB  2024    50902749000000                  -0.027586   

#   1  ACB  2023    52346796000000                   0.286199   

#   2  ACB  2022    40698834000000                   0.207186   

#   3  ACB  2021    33713810000000                   0.058327   

#   4  ACB  2020    31855748000000                   0.124948   

#   

#      Lợi nhuận sau thuế của Cổ đông công ty mẹ (đồng)  \

#   0                                    16789768000000   

#   1                                    16044733000000   

#   2                                    13688193000000   

#   3                                     9602746000000   

#   4                                     7682823000000   

#   

#      Tăng trưởng lợi nhuận (%)  Thu nhập lãi và các khoản tương tự  \

#   0                   0.046435                      50902749000000   

#   1                   0.172159                      52346796000000   

#   2                   0.425446                      40698834000000   

#   3                   0.249898                      33713810000000   

#   4                   0.278353                      31855748000000   

#   

#      Chi phí lãi và các khoản tương tự  Thu nhập lãi thuần  \

#   0                    -23108047000000      27794702000000   

#   1                    -27387226000000      24959570000000   

#   2                    -17165305000000      23533529000000   

#   3                    -14769018000000      18944792000000   

#   4                    -17273625000000      14582123000000   

#   

#      Thu nhập từ hoạt động dịch vụ  ...  Chi phí quản lý DN  \

#   0                  5464958000000  ...     -10902603000000   

#   1                  4945751000000  ...     -10874286000000   

#   2                  5057559000000  ...     -11605045000000   

#   3                  4026460000000  ...      -8229776000000   

#   4                  2803484000000  ...      -7624268000000   

#   

#      LN từ HĐKD trước CF dự phòng  Chi phí dự phòng rủi ro tín dụng  \

#   0                22612156000000                    -1606285000000   

#   1                21872230000000                    -1804231000000   

#   2                17185022000000                      -70814000000   

#   3                15334221000000                    -3336109000000   

#   4                10537041000000                     -941153000000   

#   

#       LN trước thuế      Thuế TNDN  Chi phí thuế TNDN hiện hành  \

#   0  21005871000000 -4216103000000               -4199699000000   

#   1  20067999000000 -4023266000000               -3993022000000   

#   2  17114208000000 -3426015000000               -3445611000000   

#   3  11998112000000 -2395366000000               -2389079000000   

#   4   9595888000000 -1913065000000               -1940681000000   

#   

#      Chi phí thuế TNDN hoãn lại  Lợi nhuận thuần  Cổ đông của Công ty mẹ  \

#   0                -16404000000   16789768000000          16789768000000   

#   1                -30244000000   16044733000000          16044733000000   

#   2                 19596000000   13688193000000          13688193000000   

#   3                 -6287000000    9602746000000           9602746000000   

#   4                 27616000000    7682823000000           7682823000000   

#   

#      Lãi cơ bản trên cổ phiếu  

#   0                      3669  

#   1                      3559  

#   2                      3486  

#   3                      2799  

#   4                      2808  

#   

#   [5 rows x 30 columns]

finance.income_statement(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  Revenue (Bn. VND)  Revenue YoY (%)  \

#   0    ACB        2024             4     13518376000000         0.080173   

#   1    ACB        2024             3     12922067000000        -0.007819   

#   2    ACB        2024             2     12474712000000        -0.081634   

#   3    ACB        2024             1     11987594000000        -0.093516   

#   4    ACB        2023             4     12515015000000         0.051202   

#   

#      Attribute to parent company (Bn. VND)  Attribute to parent company YoY (%)  \

#   0                          4545364000000                             0.134560   

#   1                          3870395000000                            -0.041407   

#   2                          4468590000000                             0.155915   

#   3                          3905419000000                            -0.055528   

#   4                          4006279000000                             0.395664   

#   

#      Interest and Similar Income  Interest and Similar Expenses  \

#   0               13518376000000                 -6438085000000   

#   1               12922067000000                 -6040680000000   

#   2               12474712000000                 -5363206000000   

#   3               11987594000000                 -5266076000000   

#   4               12515015000000                 -6225399000000   

#   

#      Net Interest Income  ...  General & Admin Expenses  \

#   0        7080291000000  ...            -2739350000000   

#   1        6881387000000  ...            -2933714000000   

#   2        7111506000000  ...            -2465618000000   

#   3        6721518000000  ...            -2763921000000   

#   4        6289616000000  ...            -3013248000000   

#   

#      Operating Profit before Provision  Provision for credit losses  \

#   0                      5818946000000                -147675000000   

#   1                      5202287000000                -358243000000   

#   2                      6186393000000                -588150000000   

#   3                      5404530000000                -512217000000   

#   4                      5365215000000                -321641000000   

#   

#      Profit before tax  Tax For the Year  Business income tax - current  \

#   0      5671271000000    -1125907000000                 -1086127000000   

#   1      4844044000000     -973649000000                  -971306000000   

#   2      5598243000000    -1129653000000                 -1075344000000   

#   3      4892313000000     -986894000000                 -1066922000000   

#   4      5043574000000    -1037295000000                  -975257000000   

#   

#      Business income tax - deferred  Net Profit For the Year  \

#   0                    -39780000000            4545364000000   

#   1                     -2343000000            3870395000000   

#   2                    -54309000000            4468590000000   

#   3                     80028000000            3905419000000   

#   4                    -62038000000            4006279000000   

#   

#      Attributable to parent company  EPS_basis  

#   0                   4545364000000       1017  

#   1                   3870395000000          0  

#   2                   4468590000000        779  

#   3                   3905419000000       1006  

#   4                   4006279000000       1031  

#   

#   [5 rows x 31 columns]

"""
### Báo cáo lưu chuyển tiền tệ
"""

finance.cash_flow(period='year', dropna=True).head()
# Output:
#     ticker  yearReport  Profits from other activities  \

#   0    ACB        2024                  -164089000000   

#   1    ACB        2023                   -18340000000   

#   2    ACB        2022                   152049000000   

#   3    ACB        2021                   -94964000000   

#   4    ACB        2020                    67987000000   

#   

#      Operating profit before changes in working capital  \

#   0                                     16709886000000    

#   1                                     19421985000000    

#   2                                     16413910000000    

#   3                                     12326573000000    

#   4                                      9688384000000    

#   

#      Net Cash Flows from Operating Activities before BIT  Payment from reserves  \

#   0                                      8371480000000              -1249000000   

#   1                                     37137701000000              -1500000000   

#   2                                     21476002000000            -201463000000   

#   3                                     39927382000000              -1483000000   

#   4                                     10880417000000              -1156000000   

#   

#      Purchase of fixed assets  Gain on Dividend  \

#   0             -919740000000       35058000000   

#   1            -1276249000000       74955000000   

#   2             -511513000000       59599000000   

#   3             -636100000000       21979000000   

#   4             -423132000000       17573000000   

#   

#      Net Cash Flows from Investing Activities  Increase in charter captial  \

#   0                             -733310000000                            0   

#   1                            -1197256000000                            0   

#   2                             -365878000000                            0   

#   3                             -462403000000                            0   

#   4                             -395503000000                            0   

#   

#      Cash flows from financial activities  \

#   0                        -3884051000000   

#   1                        -3377435000000   

#   2                                     0   

#   3                        -2884000000000   

#   4                         -140600000000   

#   

#      Net increase/decrease in cash and cash equivalents  \

#   0                                      3752870000000    

#   1                                     32561510000000    

#   2                                     20908661000000    

#   3                                     36579496000000    

#   4                                     10343158000000    

#   

#      Cash and cash equivalents  Foreign exchange differences Adjustment  \

#   0            136071738000000                                        0   

#   1            103510228000000                                        0   

#   2             82601567000000                                        0   

#   3             46022071000000                                        0   

#   4             35678913000000                                        0   

#   

#      Cash and Cash Equivalents at the end of period  \

#   0                                 139824608000000   

#   1                                 136071738000000   

#   2                                 103510228000000   

#   3                                  82601567000000   

#   4                                  46022071000000   

#   

#      Net cash inflows/outflows from operating activities  \

#   0                                      8370231000000     

#   1                                     37136201000000     

#   2                                     21274539000000     

#   3                                     39925899000000     

#   4                                     10879261000000     

#   

#      Proceeds from disposal of fixed assets  Investment in other entities  \

#   0                            147865000000                             0   

#   1                              4038000000                             0   

#   2                              4741000000                  -10520000000   

#   3                              3265000000                             0   

#   4                              3336000000                             0   

#   

#      Proceeds from divestment in other entities  Dividends paid  

#   0                                  3507000000  -3884051000000  

#   1                                           0  -3377435000000  

#   2                                  6451000000               0  

#   3                                           0               0  

#   4                                           0               0  

finance.income_statement(period='quarter', lang='en', dropna=True).head()
# Output:
#     ticker  yearReport  lengthReport  Revenue (Bn. VND)  Revenue YoY (%)  \

#   0    ACB        2024             4     13518376000000         0.080173   

#   1    ACB        2024             3     12922067000000        -0.007819   

#   2    ACB        2024             2     12474712000000        -0.081634   

#   3    ACB        2024             1     11987594000000        -0.093516   

#   4    ACB        2023             4     12515015000000         0.051202   

#   

#      Attribute to parent company (Bn. VND)  Attribute to parent company YoY (%)  \

#   0                          4545364000000                             0.134560   

#   1                          3870395000000                            -0.041407   

#   2                          4468590000000                             0.155915   

#   3                          3905419000000                            -0.055528   

#   4                          4006279000000                             0.395664   

#   

#      Interest and Similar Income  Interest and Similar Expenses  \

#   0               13518376000000                 -6438085000000   

#   1               12922067000000                 -6040680000000   

#   2               12474712000000                 -5363206000000   

#   3               11987594000000                 -5266076000000   

#   4               12515015000000                 -6225399000000   

#   

#      Net Interest Income  ...  General & Admin Expenses  \

#   0        7080291000000  ...            -2739350000000   

#   1        6881387000000  ...            -2933714000000   

#   2        7111506000000  ...            -2465618000000   

#   3        6721518000000  ...            -2763921000000   

#   4        6289616000000  ...            -3013248000000   

#   

#      Operating Profit before Provision  Provision for credit losses  \

#   0                      5818946000000                -147675000000   

#   1                      5202287000000                -358243000000   

#   2                      6186393000000                -588150000000   

#   3                      5404530000000                -512217000000   

#   4                      5365215000000                -321641000000   

#   

#      Profit before tax  Tax For the Year  Business income tax - current  \

#   0      5671271000000    -1125907000000                 -1086127000000   

#   1      4844044000000     -973649000000                  -971306000000   

#   2      5598243000000    -1129653000000                 -1075344000000   

#   3      4892313000000     -986894000000                 -1066922000000   

#   4      5043574000000    -1037295000000                  -975257000000   

#   

#      Business income tax - deferred  Net Profit For the Year  \

#   0                    -39780000000            4545364000000   

#   1                     -2343000000            3870395000000   

#   2                    -54309000000            4468590000000   

#   3                     80028000000            3905419000000   

#   4                    -62038000000            4006279000000   

#   

#      Attributable to parent company  EPS_basis  

#   0                   4545364000000       1017  

#   1                   3870395000000          0  

#   2                   4468590000000        779  

#   3                   3905419000000       1006  

#   4                   4006279000000       1031  

#   

#   [5 rows x 31 columns]

"""
### Chỉ số tài chính
"""

finance.ratio(period='year', lang='vi', dropna=True).head()
# Output:
#     Meta          Chỉ tiêu cơ cấu nguồn vốn                      \

#       CP   Năm Kỳ            TSCĐ / Vốn CSH Vốn CSH/Vốn điều lệ   

#   0  ACB  2024  5                  0.064849            1.868549   

#   1  ACB  2023  5                  0.067120            1.588569   

#   2  ACB  2022  5                  0.068129            1.308331   

#   3  ACB  2021  5                  0.083797            1.005246   

#   4  ACB  2020  5                  0.106712            0.793617   

#   

#     Chỉ tiêu khả năng sinh lợi                                         \

#        Biên lợi nhuận ròng (%)   ROE (%)   ROA (%) Tỷ suất cổ tức (%)   

#   0                   0.604064  0.217459  0.021215           0.000000   

#   1                   0.642829  0.247997  0.024188           0.038760   

#   2                   0.581646  0.264917  0.024106           0.041841   

#   3                   0.506881  0.239026  0.019753           0.000000   

#   4                   0.526866  0.243075  0.018557           0.000000   

#   

#     Chỉ tiêu thanh khoản Chỉ tiêu định giá                                      \

#        Đòn bẩy tài chính Vốn hóa (Tỷ đồng) Số CP lưu hành (Triệu CP)       P/E   

#   0            10.352125   107646455390000                4466657900  6.449847   

#   1            10.130151   100208500320000                3884050400  6.405255   

#   2            10.401935    80720698890000                3377435100  5.962443   

#   3            11.754104    59172663390000                2701948100  6.259839   

#   4            12.540286    74573768250000                2161558500  9.899843   

#   

#                                                                 

#           P/B       P/S P/Cash Flow    EPS (VND)    BVPS (VND)  

#   0  1.289771  3.211912   12.860631  3758.910661  18685.486972  

#   1  1.412263  3.060127    2.698405  4130.928116  18268.547957  

#   2  1.381289  2.803769    3.794240  4052.836722  17302.675335  

#   3  1.317850  2.511147    1.482062  3554.008310  16617.976119  

#   4  2.103741  4.106189    6.854672  3554.297975  16399.353985  

finance.ratio(period='quarter', lang='en', dropna=True).head()
# Output:
#       Meta                         Chỉ tiêu cơ cấu nguồn vốn  \

#     ticker yearReport lengthReport               Debt/Equity   

#   0    ACB       2024            4                  9.352125   

#   1    ACB       2024            3                  8.858604   

#   2    ACB       2024            2                  9.290830   

#   3    ACB       2024            1                  8.724440   

#   4    ACB       2023            4                  9.130151   

#   

#                                                           \

#     Fixed Asset-To-Equity Owners' Equity/Charter Capital   

#   0              0.064849                       1.868549   

#   1              0.058881                       1.765397   

#   2              0.062380                       1.674466   

#   3              0.062450                       1.674423   

#   4              0.067120                       1.588569   

#   

#     Chỉ tiêu khả năng sinh lợi                                                  \

#          Net Profit Margin (%)   ROE (%) ROIC (%)   ROA (%) Dividend yield (%)   

#   0                   0.641974  0.217459      0.0  0.021215           0.041494   

#   1                   0.562444  0.217115      0.0  0.021717           0.040568   

#   2                   0.628361  0.228530      0.0  0.022928           0.038536   

#   3                   0.581032  0.229671      0.0  0.023211           0.041667   

#   4                   0.636967  0.247997      0.0  0.024188           0.035714   

#   

#     Chỉ tiêu thanh khoản        Chỉ tiêu định giá  \

#       Financial Leverage Market Capital (Bn. VND)   

#   0            10.352125             1.076465e+14   

#   1             9.858604             1.101031e+14   

#   2            10.290830             1.159098e+14   

#   3             9.724440             1.071998e+14   

#   4            10.130151             1.087534e+14   

#   

#                                                                                \

#     Outstanding Share (Mil. Shares)       P/E       P/B       P/S P/Cash Flow   

#   0                    4.466658e+09  6.411432  1.289771  3.211912   12.860632   

#   1                    4.466658e+09  6.775292  1.396286  3.302936  -21.381995   

#   2                    4.466658e+09  7.059978  1.549748  3.447304    7.010521   

#   3                    4.466658e+09  6.778309  1.433330  3.248989    3.143473   

#   4                    3.884050e+09  6.778138  1.532689  3.321068    2.928501   

#   

#                                 

#        EPS (VND)    BVPS (VND)  

#   0  1017.620801  18685.486922  

#   1   866.508042  17653.973632  

#   2  1000.432558  16744.662223  

#   3   874.349251  16744.226550  

#   4  1031.469376  18268.548155  

"""
## New - Bộ lọc cổ phiếu
"""

"""
Hàm này chỉ tồn tại với nguồn dữ liệu TCBS
"""

from vnstock import Screener

screener = Screener(source="tcbs")
screener_df = screener.stock(params={"exchangeName": "HOSE,HNX,UPCOM"}, limit=1700)
screener_df
# Output:
#        ticker exchange                 industry  market_cap   roe  stock_rating  \

#   0       A32    UPCOM  Hàng cá nhân & Gia dụng         NaN   NaN           NaN   

#   1       AAA      HSX                 Hóa chất      2638.0   6.9           2.4   

#   2       AAM      HSX     Thực phẩm và đồ uống        73.0  -1.5           NaN   

#   3       AAS    UPCOM        Dịch vụ tài chính      1673.0   2.6           2.2   

#   4       AAT      HSX  Hàng cá nhân & Gia dụng       205.0  -0.9           2.3   

#   ...     ...      ...                      ...         ...   ...           ...   

#   1608    XVC    UPCOM     Xây dựng và Vật liệu         NaN   NaN           NaN   

#   1609    YBC    UPCOM     Xây dựng và Vật liệu       153.0 -84.4           NaN   

#   1610    YBM      HSX        Tài nguyên Cơ bản       222.0   7.3           NaN   

#   1611    YEG      HSX             Truyền thông      2215.0   8.9           2.1   

#   1612    YTC    UPCOM                     Y tế         NaN   NaN           NaN   

#   

#         business_operation  business_model  financial_health  alpha  ...  \

#   0                    1.7             3.5               2.6    0.1  ...   

#   1                    1.5             3.0               4.0   -0.2  ...   

#   2                    1.0             NaN               4.2    0.0  ...   

#   3                    3.8             2.8               2.6    0.0  ...   

#   4                    1.2             2.9               3.0   -0.1  ...   

#   ...                  ...             ...               ...    ...  ...   

#   1608                 NaN             NaN               NaN    NaN  ...   

#   1609                 2.5             3.5               1.6    0.7  ...   

#   1610                 2.1             3.7               2.2    0.2  ...   

#   1611                 1.6             2.4               3.4    0.2  ...   

#   1612                 1.4             3.5               2.4    0.3  ...   

#   

#         last_quarter_revenue_growth second_quarter_revenue_growth  \

#   0                             NaN                           NaN   

#   1                            43.1                          -9.5   

#   2                            57.3                          -7.0   

#   3                           -17.4                         -36.8   

#   4                           -43.4                         -18.4   

#   ...                           ...                           ...   

#   1608                          NaN                           NaN   

#   1609                          NaN                           NaN   

#   1610                         44.2                           7.1   

#   1611                        152.0                         209.4   

#   1612                          NaN                           NaN   

#   

#         last_quarter_profit_growth  second_quarter_profit_growth  \

#   0                            NaN                           NaN   

#   1                          -18.8                         -78.0   

#   2                            NaN                           NaN   

#   3                          -21.5                         -71.6   

#   4                         -224.3                         264.1   

#   ...                          ...                           ...   

#   1608                         NaN                           NaN   

#   1609                         NaN                           NaN   

#   1610                        -7.8                         -45.9   

#   1611                       376.1                         325.6   

#   1612                         NaN                           NaN   

#   

#         pct_1y_from_peak  pct_away_from_hist_peak  pct_1y_from_bottom  \

#   0                  NaN                      NaN                 NaN   

#   1                -45.2                    -69.7                 7.8   

#   2                  NaN                      NaN                 NaN   

#   3                -23.4                    -64.2                33.3   

#   4                -43.7                    -84.5                19.8   

#   ...                ...                      ...                 ...   

#   1608               NaN                      NaN                 NaN   

#   1609               NaN                      NaN                 NaN   

#   1610             -23.5                    -18.4                70.9   

#   1611             -49.0                    -93.7                43.8   

#   1612               NaN                      NaN                 NaN   

#   

#         pct_off_hist_bottom        price_vs_sma100  heating_up  

#   0                     NaN                   None        None  

#   1                   197.5  Giá nằm dưới SMA(100)        None  

#   2                     NaN                   None        None  

#   3                   127.4  Giá nằm dưới SMA(100)        None  

#   4                    11.5  Giá nằm dưới SMA(100)        None  

#   ...                   ...                    ...         ...  

#   1608                  NaN                   None        None  

#   1609                  NaN                   None        None  

#   1610                544.8  Giá nằm trên SMA(100)        None  

#   1611                215.8  Giá nằm dưới SMA(100)        None  

#   1612                  NaN                   None        None  

#   

#   [1613 rows x 83 columns]



================================================
FILE: packages/oneclick_setup_linux
================================================
[Non-text file]


================================================
FILE: packages/oneclick_setup_macos
================================================
[Non-text file]


================================================
FILE: tests/plan.md
================================================
## Test Plan for `vnstock` Explorer Modules

### 1. Introduction

This document outlines the test plan for the `explorer/` directory of the `vnstock` Python package. It defines objectives, scope, testing phases, structure, execution strategy, and CI integration.

### 2. Objectives

* **1\_smoke (Phase 1)**: Verify all public explorer APIs import, instantiate, and return a `pandas.DataFrame` without errors.
* **2\_functional (Phase 2)**: Validate parsing logic, column names, dtypes, and business rules against representative fixtures.
* **3\_edge (Phase 3)**: Cover empty responses, malformed payloads, HTTP errors, timeouts, and boundary conditions.
* **4\_scenarios (Phase 4)**: Simulate real usage by combining multiple classes and methods, mixing data sources, and end-to-end scenario workflows.
* **5\_performance (Phase 5)**: Benchmark parsing speed, memory usage, and built-in rate-limit handling for large-batch operations.
* **6\_regression (Phase 6)**: Prevent recurrence of specific, previously fixed bugs with dedicated test cases.
* Achieve at least **90% code coverage** on the `explorer/` directory.
* Generate test results and coverage reports under `tests/report/` for CI consumption.

### 3. Scope Scope

**In scope:**

* All modules under `vnstock/explorer/`:

  * `fmarket/const.py`, `fmarket/fund.py`
  * `misc/exchange_rate.py`, `misc/gold_price.py`
  * `msn/const.py`, `msn/helper.py`, `msn/listing.py`, `msn/models.py`, `msn/quote.py`
  * `tcbs/quote.py`, `tcbs/screener.py`, `tcbs/trading.py`
  * `vci/analysis.py`, `vci/company.py`, `vci/const.py`, `vci/financial.py`, `vci/listing.py`, `vci/models.py`, `vci/quote.py`, `vci/trading.py`

**Out of scope:**

* Core utilities outside the explorer directory.
* Live API integration beyond Phase 4 tests.

### 4. Test Phases & Directory Structure

```
tests/
├── fixtures/                   # Sample API payloads for Phase 2+3
│   ├── fmarket_fund.json
│   ├── exchange_rate.json
│   ├── gold_price.json
│   └── ...
├── report/                     # Test results & coverage outputs
│   ├── junit-results.xml
│   ├── coverage.xml
│   └── coverage_html/
└── test_explorer/
    ├── 1_smoke/                # Phase 1: Smoke tests
    │   └── test_smoke.py
    ├── 2_functional/           # Phase 2: Functional correctness
    │   ├── test_fmarket_fund.py
    │   ├── test_misc_exchange_rate.py
    │   ├── test_misc_gold_price.py
    │   ├── test_msn_listing.py
    │   ├── test_msn_quote.py
    │   ├── test_tcbs_quote.py
    │   ├── test_tcbs_screener.py
    │   ├── test_tcbs_trading.py
    │   ├── test_vci_listing.py
    │   ├── test_vci_quote.py
    │   └── ...
    ├── 3_edge/                 # Phase 3: Edge-case & error handling
    │   ├── test_empty_payloads.py
    │   ├── test_malformed_json.py
    │   └── test_http_error_codes.py
    ├── 4_integration/          # Phase 4: Live/staging integration tests
    │   ├── test_live_msn_listing.py
    │   └── ...
    ├── 5_performance/          # Phase 5: Performance benchmarks
    │   └── test_parsing_speed.py
    └── 6_regression/           # Phase 6: Regression tests for fixed bugs
        ├── test_bug_1234_fix.py
        └── ...
```

### 5. Phase Descriptions

* **Phase 1: Smoke Tests**

  * **Objective:** Quickly catch broken imports, missing signatures, or runtime errors.
  * **Implementation:** Parametrized pytest in `1_smoke/test_smoke.py` that monkeypatches HTTP calls to return minimal responses and asserts a `DataFrame` is returned.

* **Phase 2: Functional Tests**

  * **Objective:** Verify correct data extraction, column names, dtypes, and business logic.
  * **Implementation:** Module-specific tests under `2_functional/` using fixtures in `fixtures/` and monkeypatched HTTP clients.

* **Phase 3: Edge-Case Tests**

  * **Objective:** Ensure modules handle empty responses, malformed data, timeouts, and non-200 HTTP codes gracefully.
  * **Implementation:** Dedicated tests in `3_edge/` feeding edge-case fixtures and asserting appropriate fallback or exceptions.

* **Phase 4: Scenario Combination Tests**

  * **Objective:** Simulate real usage by combining multiple classes and methods, mixing data sources, and exercising overlapping functionality (e.g., initializing different explorer classes in sequence, chaining methods, or mixing responses from multiple sources).
  * **Implementation:** Tests in `4_integration/` (renamed to reflect scenario tests) that:

    * Instantiate several explorer classes in one test.
    * Monkeypatch different fixtures per class to verify isolation and composition.
    * Use parametrization to run cross-class workflows (e.g., fetch listing then quote then trading history for same symbol).

* **Phase 5: Performance & Rate-Limit Tests**

  * **Objective:** Detect regressions in parsing speed, memory usage, and built-in rate-limit handling when processing large batches (hundreds to thousands of symbols).
  * **Implementation:** Tests in `5_performance/` that use `pytest-benchmark` or manual timing to:

    * Request intraday or history data for 100+ symbols in parallel or sequentially.
    * Assert average per-request latency stays below threshold.
    * Simulate rate-limit responses (e.g., HTTP 429) and verify package backoff or retry behavior.

* **Phase 6: Regression Tests**

  * **Objective:** Prevent recurrence of specific, previously fixed bugs.
  * **Implementation:** One-off test files in `6_regression/` that replicate bug conditions and assert correct behavior.

### 6. Test Execution & Reporting Test Execution & Reporting

* **Run all tests:**

  ```bash
  pytest --maxfail=1 --disable-warnings -q
  ```
* **JUnit report:**

  ```bash
  pytest --junitxml=tests/report/junit-results.xml
  ```
* **Coverage reports:**

  ```bash
  pytest --cov=vnstock/explorer \
         --cov-report=html:tests/report/coverage_html \
         --cov-report=xml:tests/report/coverage.xml
  ```

### 7. Continuous Integration

1. **Install dependencies** including `pytest`, `pytest-cov`, `pytest-benchmark`.
2. **Run Phases**: You can split jobs by folder (e.g., smoke first), or run all together.
3. **Fail fast** on smoke failures or coverage below threshold.
4. **Publish** badges and archive reports.

### 8. Execute the tests

#### Install package from source

```bash
python3.10 -m pip install .
```

#### 1. Smoke Tests

```bash
python3.10 -m pytest tests/test_explorer/1_smoke --maxfail=1 -q
```

#### 2. Functional Tests

```bash
python3.10 -m pytest tests/test_explorer/2_functional --maxfail=1 -q
```


================================================
FILE: tests/archived/README.md
================================================
## Running the Script with Arguments
To run the entire test_quote.py file:

```sh
python3 run_tests.py tests.common.test_data_explorer
```
To run a specific test case within test_quote.py:

```sh
python3 run_tests.py tests.common.test_data_explorer.TestVnstock.test_vnstock_init_invalid_source
```
This custom script provides flexibility to run specific tests efficiently without modifying the script each time.

## Real examples

- Fmarket fund testing: `python3.10 -m unittest tests.explorer.fmarket.test_fund`


================================================
FILE: tests/archived/__init__.py
================================================



================================================
FILE: tests/archived/config.py
================================================
import pandas as pd
from datetime import datetime
import logging

# Define logger and set logging template
logger = logging.getLogger(__name__)
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

class TestData:
    start_date: str
    end_date: str

    def __init__(self, start_date: str = '2019-01-02', end_date: str = None):
        self.start_date = start_date
        self.end_date = end_date if end_date else datetime.now().strftime('%Y-%m-%d')
        
        self.stocks = [
            'ACB', 'BCM', 'BID', 'BVH', 'CTG', 'FPT', 'GAS', 'GVR', 'HDB', 'HPG',
            'MBB', 'MSN', 'MWG', 'PLX', 'POW', 'SAB', 'SHB', 'SSB', 'SSI', 'STB',
            'TCB', 'TPB', 'VCB', 'VHM', 'VIB', 'VIC', 'VJC', 'VNM', 'VPB', 'VRE'
        ]
        
        self.indices = ['VNINDEX', 'HNXINDEX', 'UPCOMINDEX']
        
        self.group_codes = [
            'HOSE', 'VN30', 'VNMidCap', 'VNSmallCap', 'VNAllShare', 'VN100', 'ETF',
            'HNX', 'HNX30', 'HNXCon', 'HNXFin', 'HNXLCap', 'HNXMSCap', 'HNXMan', 'UPCOM', 'FU_INDEX'
        ]
        
        self.etfs = [
            "E1VFVN30", "FUEBFVND", "FUEDCMID", "FUEFCV50", "FUEIP100", "FUEKIV30",
            "FUEKIVFS", "FUEKIVND", "FUEMAV30", "FUEMAVND", "FUESSV30", "FUESSV50",
            "FUESSVFL", "FUEVFVND", "FUEVN100"
        ]
        
        self.cw = [
            'CACB2304', 'CACB2305', 'CACB2306', 'CACB2307', 'CACB2401', 'CFPT2310',
            'CFPT2313', 'CFPT2314', 'CFPT2316', 'CFPT2317', 'CFPT2318', 'CHDB2306',
            'CHPG2315', 'CHPG2316', 'CHPG2319', 'CHPG2322', 'CHPG2329', 'CHPG2331',
            'CHPG2332', 'CHPG2333'
        ]
        
        self.futures = [
            'VN30F2406', 'VN30F2407', 'VN30F2409', 'VN30F2412'
        ]


================================================
FILE: tests/archived/common/__init__.py
================================================



================================================
FILE: tests/archived/common/test_data_explorer.py
================================================
import unittest
from unittest.mock import patch, MagicMock
import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import logging

from vnstock.common.data.data_explorer import (
    StockComponents, MSNComponents, Quote, Listing, 
    Trading, Company, Finance, Screener, Fund
)

# Configure logging
VERBOSE_TESTING = False  # Set to True for detailed debug output
if not VERBOSE_TESTING:
    logging.getLogger('vnstock').setLevel(logging.ERROR)

class BaseTestCase(unittest.TestCase):
    """Base class with helper methods for all test cases"""
    
    def _create_price_mock_data(self, rows=30, base_price=1000, volatility=100):
        """Create consistent mock data for price history tests"""
        return pd.DataFrame({
            'time': pd.date_range(start='2023-01-01', periods=rows),
            'open': np.random.rand(rows) * volatility + base_price,
            'high': np.random.rand(rows) * volatility + base_price + 10,
            'low': np.random.rand(rows) * volatility + base_price - 10,
            'close': np.random.rand(rows) * volatility + base_price,
            'volume': np.random.randint(100000, 1000000, rows)
        })

    def _setup_history_mock(self, mock_import, rows=30, base_price=1000):
        """Set up a mock for history calls"""
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        mock_data = self._create_price_mock_data(rows, base_price)
        mock_module.Quote.return_value.history = MagicMock(return_value=mock_data)
        return mock_module, mock_data

class TestVnstockDataSources(BaseTestCase):
    """Test for data sources initialization and validation"""
    
    def test_invalid_source(self):
        """Test that invalid data sources raise appropriate errors"""
        with self.assertRaises(ValueError):
            StockComponents(symbol='ACB', source='INVALID')
        
        with self.assertRaises(ValueError):
            MSNComponents(symbol='EURUSD', source='INVALID')

class TestStockData(BaseTestCase):
    """Tests for stock data retrieval from multiple sources"""
    
    def setUp(self):
        self.vci_stock = StockComponents(symbol='ACB', source='VCI')
        self.tcbs_stock = StockComponents(symbol='ACB', source='TCBS')
        
    def test_stock_initialization(self):
        """Test proper initialization of stock components with different sources"""
        self.assertEqual(self.vci_stock.symbol, 'ACB')
        self.assertEqual(self.vci_stock.source, 'VCI')
        self.assertEqual(self.tcbs_stock.symbol, 'ACB')
        self.assertEqual(self.tcbs_stock.source, 'TCBS')
        
        # Verify all expected components are initialized
        for stock in [self.vci_stock, self.tcbs_stock]:
            self.assertIsNotNone(stock.quote)
            self.assertIsNotNone(stock.listing)
            self.assertIsNotNone(stock.trading)
            self.assertIsNotNone(stock.company)
            self.assertIsNotNone(stock.finance)
    
    def test_stock_update_symbol(self):
        """Test updating symbol updates all sub-components"""
        self.vci_stock.update_symbol('VCB')
        self.assertEqual(self.vci_stock.symbol, 'VCB')
        self.assertEqual(self.vci_stock.quote.symbol, 'VCB')
        self.assertEqual(self.vci_stock.company.symbol, 'VCB')
        self.assertEqual(self.vci_stock.finance.symbol, 'VCB')
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_stock_history(self, mock_import):
        """Test stock price history retrieval"""
        # Setup mock data
        mock_module, mock_data = self._setup_history_mock(mock_import)
        
        # Test with different parameters
        result = self.vci_stock.quote.history(
            start='2025-01-02', 
            end='2025-03-20'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        
        # Check that the row count matches expected
        expected_rows = len(mock_data)
        actual_rows = len(result)
        self.assertEqual(actual_rows, expected_rows, 
                         f"Expected {expected_rows} rows but got {actual_rows}")
        
        # Check expected columns
        expected_columns = ['time', 'open', 'high', 'low', 'close', 'volume']
        for col in expected_columns:
            self.assertIn(col, result.columns, f"Missing column: {col}")
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_company_info(self, mock_import):
        """Test company information retrieval"""
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        mock_module.Company.return_value.overview.return_value = {
            'name': 'Asia Commercial Joint Stock Bank',
            'industry': 'Banking'
        }
        
        result = self.tcbs_stock.company.overview()
        self.assertIsInstance(result, dict)
        self.assertEqual(result['name'], 'Asia Commercial Joint Stock Bank')

class TestDelistedSymbolsData(BaseTestCase):
    """Tests for handling delisted symbols data"""
    
    def setUp(self):
        # Initialize with delisted symbols
        self.vfmvf4 = StockComponents(symbol='VFMVF4', source='VCI')
        self.vis = StockComponents(symbol='VIS', source='VCI')
        self.vtp = StockComponents(symbol='VTP', source='VCI')
    
    def test_delisted_symbol_initialization(self):
        """Test initialization with delisted symbols doesn't fail"""
        self.assertEqual(self.vfmvf4.symbol, 'VFMVF4')
        self.assertEqual(self.vis.symbol, 'VIS')
        self.assertEqual(self.vtp.symbol, 'VTP')
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_delisted_historical_data(self, mock_import):
        """Test retrieving historical data for delisted symbols before delisting"""
        # Setup mock data
        mock_module, mock_data = self._setup_history_mock(mock_import, rows=30, base_price=20)
        
        # Test with VFMVF4
        result = self.vfmvf4.quote.history(
            start='2010-01-01', 
            end='2010-01-30'
        )
        
        # For delisted symbols, we just verify the data structure, not exact content
        self.assertIsInstance(result, pd.DataFrame)
        
        # Check expected columns
        expected_columns = ['time', 'open', 'high', 'low', 'close', 'volume']
        for col in expected_columns:
            self.assertIn(col, result.columns, f"Missing column: {col}")
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_empty_recent_data(self, mock_import):
        """Test retrieving recent data for delisted symbols returns empty dataset"""
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        
        # Empty DataFrame for recent data for delisted symbol
        empty_data = pd.DataFrame(columns=['time', 'open', 'high', 'low', 'close', 'volume'])
        mock_module.Quote.return_value.history.return_value = empty_data
        
        result = self.vis.quote.history(
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(len(result), 0)
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_api_error_handling(self, mock_import):
        """Test error handling for delisted symbols when API returns error"""
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        
        # Simulate API error for delisted symbol
        error_message = "Symbol VTP not found or has been delisted"
        mock_module.Quote.return_value.history.side_effect = ValueError(error_message)
        
        with self.assertRaises(ValueError) as context:
            self.vtp.quote.history(
                start='2023-01-01', 
                end='2023-01-30'
            )
        
        self.assertEqual(str(context.exception), error_message)

class TestFuturesData(BaseTestCase):
    """Tests for futures data retrieval"""
    
    def setUp(self):
        # Initialize with VN30F1M (current month VN30 futures)
        self.futures = StockComponents(symbol='VN30F1M', source='VCI')
    
    def test_futures_initialization(self):
        """Test proper initialization of futures components"""
        self.assertEqual(self.futures.symbol, 'VN30F1M')
        self.assertEqual(self.futures.source, 'VCI')
        self.assertIsNotNone(self.futures.quote)
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_futures_history(self, mock_import):
        """Test futures price history retrieval"""
        # Setup mock
        mock_module, mock_data = self._setup_history_mock(
            mock_import, rows=30, base_price=1200
        )
        
        # Test VN30F1M
        result = self.futures.quote.history(
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        
        # Check that the row count matches expected
        expected_rows = len(mock_data)
        actual_rows = len(result)
        self.assertEqual(actual_rows, expected_rows, 
                         f"Expected {expected_rows} rows but got {actual_rows}")
        
        # Test other future contracts
        contracts = ['VN30F2504', 'VN30F2403']
        for contract in contracts:
            result = self.futures.quote.history(
                symbol=contract,
                start='2023-01-01', 
                end='2023-01-30'
            )
            self.assertIsInstance(result, pd.DataFrame)

class TestIndexData(BaseTestCase):
    """Tests for market index data retrieval"""
    
    def setUp(self):
        self.vci_index = StockComponents(symbol='VNINDEX', source='VCI')
        self.msn_index = MSNComponents(symbol='DJI', source='MSN')
    
    def test_index_initialization(self):
        """Test proper initialization of index components"""
        self.assertEqual(self.vci_index.symbol, 'VNINDEX')
        self.assertEqual(self.vci_index.source, 'VCI')
        self.assertEqual(self.msn_index.symbol, 'DJI')
        self.assertEqual(self.msn_index.source, 'MSN')
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_local_index_history(self, mock_import):
        """Test local market index history retrieval"""
        try:
            # Setup mock
            mock_module, mock_data = self._setup_history_mock(
                mock_import, rows=30, base_price=1000
            )
            
            # Test VNINDEX
            result = self.vci_index.quote.history(
                start='2023-01-01', 
                end='2023-01-30'
            )
            
            self.assertIsInstance(result, pd.DataFrame)
            
            # Check that the row count matches expected
            expected_rows = len(mock_data)
            actual_rows = len(result)
            self.assertEqual(actual_rows, expected_rows, 
                             f"Expected {expected_rows} rows but got {actual_rows}")
            
            # Test other indices
            indices = ['HNXINDEX', 'UPCOMINDEX']
            for index in indices:
                result = self.vci_index.quote.history(
                    symbol=index,
                    start='2023-01-01', 
                    end='2023-01-30'
                )
                self.assertIsInstance(result, pd.DataFrame)
                
        except Exception as e:
            self.fail(f"Test raised unexpected exception: {e}")
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_global_index_history(self, mock_import):
        """Test global market index history retrieval"""
        # Setup mock
        mock_module, mock_data = self._setup_history_mock(
            mock_import, rows=30, base_price=35000
        )
        
        # Test DJI (Dow Jones)
        result = self.msn_index.quote.history(
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(len(result), len(mock_data))

class TestForexData(BaseTestCase):
    """Tests for forex data retrieval from MSN"""
    
    def setUp(self):
        self.forex = MSNComponents(symbol='EURUSD', source='MSN')
    
    def test_forex_initialization(self):
        """Test proper initialization of forex components"""
        self.assertEqual(self.forex.symbol, 'EURUSD')
        self.assertEqual(self.forex.source, 'MSN')
        self.assertIsNotNone(self.forex.quote)
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_forex_history(self, mock_import):
        """Test forex rate history retrieval"""
        # Setup mock
        mock_module, mock_data = self._setup_history_mock(
            mock_import, rows=30, base_price=1.1, volatility=0.05
        )
        
        # Test EURUSD
        result = self.forex.quote.history(
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(len(result), len(mock_data))
        
        # Test JPYVND
        result = self.forex.quote.history(
            symbol='JPYVND',
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)

class TestCryptoData(BaseTestCase):
    """Tests for cryptocurrency data retrieval from MSN"""
    
    def setUp(self):
        self.crypto = MSNComponents(symbol='BTC', source='MSN')
    
    def test_crypto_initialization(self):
        """Test proper initialization of crypto components"""
        self.assertEqual(self.crypto.symbol, 'BTC')
        self.assertEqual(self.crypto.source, 'MSN')
        self.assertIsNotNone(self.crypto.quote)
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_crypto_history(self, mock_import):
        """Test cryptocurrency price history retrieval"""
        # Setup mock
        mock_module, mock_data = self._setup_history_mock(
            mock_import, rows=30, base_price=30000, volatility=1000
        )
        
        # Test BTC
        result = self.crypto.quote.history(
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(len(result), len(mock_data))

class TestCoveredWarrantData(BaseTestCase):
    """Tests for covered warrant data retrieval"""
    
    def setUp(self):
        self.cw = StockComponents(symbol='CFPT2314', source='VCI')
    
    def test_cw_initialization(self):
        """Test proper initialization of covered warrant components"""
        self.assertEqual(self.cw.symbol, 'CFPT2314')
        self.assertEqual(self.cw.source, 'VCI')
        self.assertIsNotNone(self.cw.quote)
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_cw_history(self, mock_import):
        """Test covered warrant price history retrieval"""
        # Setup mock
        mock_module, mock_data = self._setup_history_mock(
            mock_import, rows=30, base_price=500, volatility=100
        )
        
        result = self.cw.quote.history(
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(len(result), len(mock_data))

class TestBondData(BaseTestCase):
    """Tests for bond data retrieval"""
    
    def setUp(self):
        self.bond = StockComponents(symbol='CII424002', source='VCI')
    
    def test_bond_initialization(self):
        """Test proper initialization of bond components"""
        self.assertEqual(self.bond.symbol, 'CII424002')
        self.assertEqual(self.bond.source, 'VCI')
        self.assertIsNotNone(self.bond.quote)
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_bond_history(self, mock_import):
        """Test bond price history retrieval"""
        # Setup mock with stable prices typical for bonds
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        mock_data = pd.DataFrame({
            'time': pd.date_range(start='2023-01-01', periods=30),
            'open': np.ones(30) * 100000,
            'high': np.ones(30) * 100000,
            'low': np.ones(30) * 100000,
            'close': np.ones(30) * 100000,
            'volume': np.random.randint(100, 1000, 30)
        })
        mock_module.Quote.return_value.history.return_value = mock_data
        
        result = self.bond.quote.history(
            start='2023-01-01', 
            end='2023-01-30'
        )
        
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(len(result), len(mock_data))

class TestErrorHandling(BaseTestCase):
    """Tests for error handling and edge cases"""
    
    def setUp(self):
        self.stock = StockComponents(symbol='ACB', source='VCI')
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_nonexistent_symbol(self, mock_import):
        """Test behavior with nonexistent symbols"""
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        mock_module.Quote.return_value.history.side_effect = ValueError("Symbol not found")
        
        with self.assertRaises(ValueError):
            self.stock.quote.history(symbol='NONEXISTENT')
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_invalid_date_range(self, mock_import):
        """Test behavior with invalid date ranges"""
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        mock_module.Quote.return_value.history.side_effect = ValueError("End date must be after start date")
        
        with self.assertRaises(ValueError):
            self.stock.quote.history(start='2023-01-30', end='2023-01-01')
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_future_date(self, mock_import):
        """Test behavior with future dates"""
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        
        # Set a future date
        future_date = (datetime.now() + timedelta(days=30)).strftime('%Y-%m-%d')
        
        # Empty data for future dates
        mock_data = pd.DataFrame(columns=['time', 'open', 'high', 'low', 'close', 'volume'])
        mock_module.Quote.return_value.history.return_value = mock_data
        
        result = self.stock.quote.history(
            start='2023-01-01', 
            end=future_date
        )
        
        # Should return an empty DataFrame for future dates
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(len(result), 0)

class TestDataIntegrity(BaseTestCase):
    """Tests for data integrity and consistency"""
    
    @patch('vnstock.common.data.data_explorer.importlib.import_module')
    def test_stock_data_schema(self, mock_import):
        """Test stock data has the expected schema"""
        stock = StockComponents(symbol='ACB', source='VCI')
        
        mock_module = MagicMock()
        mock_import.return_value = mock_module
        
        # Create mock data with exact column names
        mock_data = pd.DataFrame({
            'time': pd.date_range(start='2023-01-01', periods=5),
            'open': [25000, 25100, 25200, 25300, 25400],
            'high': [25500, 25600, 25700, 25800, 25900],
            'low': [24800, 24900, 25000, 25100, 25200],
            'close': [25200, 25300, 25400, 25500, 25600],
            'volume': [1000000, 1100000, 1200000, 1300000, 1400000]
        })
        mock_module.Quote.return_value.history.return_value = mock_data
        
        result = stock.quote.history(start='2023-01-01', end='2023-01-05')
        
        # Check column presence one by one
        expected_columns = ['time', 'open', 'high', 'low', 'close', 'volume']
        for col in expected_columns:
            self.assertIn(col, result.columns, f"Column '{col}' is missing from result")
        
        # Verify data types
        self.assertIsInstance(result['time'][0], pd.Timestamp)
        self.assertTrue(np.issubdtype(result['open'].dtype, np.number))
        
        # Verify high >= low
        self.assertTrue(all(result['high'] >= result['low']))
        
        # Verify high >= open and high >= close
        self.assertTrue(all(result['high'] >= result['open']))
        self.assertTrue(all(result['high'] >= result['close']))
        
        # Verify low <= open and low <= close
        self.assertTrue(all(result['low'] <= result['open']))
        self.assertTrue(all(result['low'] <= result['close']))

if __name__ == '__main__':
    # Run with coverage
    import sys
    import coverage
    
    # Setup coverage
    cov = coverage.Coverage(
        source=['vnstock.common.data.data_explorer'],
        omit=['*/tests/*', '*/site-packages/*']
    )
    cov.start()
    
    # Run all tests or specific test classes
    if len(sys.argv) > 1:
        # Run specific test classes if provided
        test_classes = []
        for arg in sys.argv[1:]:
            if arg.startswith('Test'):
                test_classes.append(globals()[arg])
        
        for test_class in test_classes:
            unittest.TextTestRunner(verbosity=2).run(
                unittest.TestLoader().loadTestsFromTestCase(test_class)
            )
    else:
        # Run all tests
        test_suite = unittest.TestLoader().loadTestsFromModule(sys.modules[__name__])
        unittest.TextTestRunner(verbosity=2).run(test_suite)
    
    # Generate coverage report
    cov.stop()
    cov.save()
    
    print("\nCoverage Summary:")
    cov.report()
    
    print("\nGenerating HTML coverage report in htmlcov directory...")
    cov.html_report(directory='htmlcov')
    
    print("\nCompleted test run with coverage analysis")
    
    # Exit with non-zero code if tests failed
    sys.exit(not unittest.TextTestRunner().run(test_suite).wasSuccessful())



================================================
FILE: tests/archived/core/__init__.py
================================================



================================================
FILE: tests/archived/core/test_config.py
================================================



================================================
FILE: tests/archived/core/test_converter.py
================================================



================================================
FILE: tests/archived/core/test_utils.py
================================================



================================================
FILE: tests/archived/core/utils/test_quote_headers.py
================================================
import pytest
from vnstock.explorer.vci.quote import Quote
from vnstock.core.utils.browser_profiles import USER_AGENTS
from vnstock.core.utils.user_agent import HEADERS_MAPPING_SOURCE


def test_quote_with_default_headers():
    q = Quote("VCB", random_agent=False)
    headers = q.headers

    assert headers["User-Agent"] == USER_AGENTS["chrome"]["windows"]
    assert headers["Referer"] == HEADERS_MAPPING_SOURCE["VCI"]["Referer"]
    assert headers["Origin"] == HEADERS_MAPPING_SOURCE["VCI"]["Origin"]
    assert "Accept" in headers


def test_quote_with_random_agent():
    q1 = Quote("VCB", random_agent=True)
    q2 = Quote("VCB", random_agent=True)
    assert "User-Agent" in q1.headers
    assert "User-Agent" in q2.headers
    assert q1.headers["User-Agent"] != ""  # At least valid
    assert q2.headers["User-Agent"] != ""

# How to run
# python3.10 -m pytest tests/core/utils/test_quote_headers.py -v



================================================
FILE: tests/archived/core/utils/test_user_agent.py
================================================
# tests/test_user_agent.py

import pytest
from vnstock.core.utils.user_agent import get_headers, HEADERS_MAPPING_SOURCE
from vnstock.core.utils.browser_profiles import USER_AGENTS

def test_default_headers_structure():
    headers = get_headers("VND", random_agent=False, browser="chrome", platform="windows")
    assert isinstance(headers, dict)
    assert "User-Agent" in headers
    assert "Accept" in headers
    assert "Referer" in headers
    assert headers["Referer"] == HEADERS_MAPPING_SOURCE["VND"]["Referer"]
    assert headers["Origin"] == HEADERS_MAPPING_SOURCE["VND"]["Origin"]

def test_random_headers_generation():
    # Run multiple times to ensure randomness is handled without error
    for _ in range(5):
        headers = get_headers("SSI", random_agent=True)
        assert "User-Agent" in headers
        assert headers["Referer"] == HEADERS_MAPPING_SOURCE["SSI"]["Referer"]

def test_explicit_browser_platform_combo():
    ua_pairs = [
        ("safari", "macos"),
        ("safari", "ios"),
        ("chrome", "windows"),
        ("chrome", "android"),
        ("firefox", "windows"),
        ("firefox", "android"),
    ]
    for browser, platform in ua_pairs:
        headers = get_headers("VCI", random_agent=False, browser=browser, platform=platform)
        assert "User-Agent" in headers
        expected = USER_AGENTS.get(browser, {}).get(platform)
        if expected:
            assert headers["User-Agent"] == expected

def test_invalid_browser_platform_fallback():
    headers = get_headers("TCBS", random_agent=False, browser="invalid", platform="none")
    # Fallback to chrome/windows
    assert headers["User-Agent"] == USER_AGENTS["chrome"]["windows"]

def test_data_source_not_found():
    headers = get_headers("UNKNOWN_SOURCE", random_agent=False)
    assert "User-Agent" in headers
    assert "Referer" not in headers
    assert "Origin" not in headers


# python3.10 -m pytest tests/core/utils/test_user_agent.py -v


================================================
FILE: tests/archived/explorer/__init__.py
================================================



================================================
FILE: tests/archived/explorer/fmarket/__init__.py
================================================



================================================
FILE: tests/archived/explorer/fmarket/test_fund.py
================================================
import unittest
from unittest.mock import patch, MagicMock
import pandas as pd
from vnstock.explorer.fmarket.fund import Fund, convert_unix_to_datetime

class TestFund(unittest.TestCase):

    def setUp(self):
        self.fund = Fund(random_agent=True)
        self.short_names = [
            'SSISCA', 'VESAF', 'BVPF', 'VEOF', 'VCBF-TBF', 'VCBF-BCF', 'VFF', 'PVBF', 'VNDBF',
            'VCBF-FIF', 'VCAMBF', 'VIBF', 'ABBF', 'DCBF', 'SSIBF', 'DCDS', 'MAGEF', 'MBBOND',
            'BVBF', 'MBVF', 'DCIP', 'VNDAF', 'DFIX', 'MAFBAL', 'DCDE', 'MAFEQI', 'BVFED', 'DCAF',
            'VMEEF', 'VLGF', 'VCBF-MGF', 'UVEEF', 'PHVSF', 'TBLF', 'HDBOND', 'VCAM-NH VABF',
            'MAFF', 'LHBF', 'ASBF', 'NTPPF', 'VNDCF', 'VLBF', 'PBIF', 'VDEF', 'TCGF', 'UVDIF',
            'MDI', 'LHCDF', 'VCAMDF'
        ]

    @patch('vnstock.explorer.fmarket.fund.requests.post')
    def test_listing_success(self, mock_post):
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            "data": {
                "total": 10,
                "rows": [
                    {
                        "shortName": "SSISCA", 
                        "name": "QUỸ ĐẦU TƯ LỢI THẾ CẠNH TRANH BỀN VỮNG SSI", 
                        "dataFundAssetType.name": "Quỹ cổ phiếu", 
                        "owner.name": "CÔNG TY TNHH QUẢN LÝ QUỸ SSI", 
                        "managementFee": 1.75, 
                        "firstIssueAt": 1411603200000,
                        "nav": 40055.9, 
                        "productNavChange.navToPrevious": 0.46, 
                        "productNavChange.navToLastYear": 31.01, 
                        "productNavChange.navToBeginning": 177.93, 
                        "productNavChange.navTo1Months": 2.6, 
                        "productNavChange.navTo3Months": 13.61, 
                        "productNavChange.navTo6Months": 27.83, 
                        "productNavChange.navTo12Months": 41.96, 
                        "productNavChange.navTo24Months": 44.61, 
                        "productNavChange.annualizedReturn36Months": 11.69, 
                        "id": 11, 
                        "code": "SSISCA", 
                        "vsdFeeId": "SSISCAN001",
                        "productNavChange.updateAt": 1688880000000
                    }
                ]
            }
        }
        mock_post.return_value = mock_response

        result = self.fund.listing()
        self.assertIsInstance(result, pd.DataFrame)
        self.assertIn('short_name', result.columns)
        self.assertEqual(result.iloc[0]['short_name'], 'SSISCA')

        expected_result = pd.DataFrame([{
            'short_name': 'SSISCA',
            'name': 'QUỸ ĐẦU TƯ LỢI THẾ CẠNH TRANH BỀN VỮNG SSI',
            'fund_type': 'Quỹ cổ phiếu',
            'fund_owner_name': 'CÔNG TY TNHH QUẢN LÝ QUỸ SSI',
            'management_fee': 1.75,
            'inception_date': '2014-09-25',
            'nav': 40055.9,
            'nav_change_previous': 0.46,
            'nav_change_last_year': 31.01,
            'nav_change_inception': 177.93,
            'nav_change_1m': 2.6,
            'nav_change_3m': 13.61,
            'nav_change_6m': 27.83,
            'nav_change_12m': 41.96,
            'nav_change_24m': 44.61,
            'nav_change_36m': 39.34,
            'nav_change_36m_annualized': 11.69,
            'nav_update_at': '2024-07-09',
            'fund_id_fmarket': 11,
            'fund_code': 'SSISCA',
            'vsd_fee_id': 'SSISCAN001'
        }])
        pd.testing.assert_frame_equal(result, expected_result)

    @patch('vnstock.explorer.fmarket.fund.requests.post')
    def test_filter_success(self, mock_post):
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            "data": {
                "rows": [
                    {"id": 23, "shortName": "SSISCA"}
                ]
            }
        }
        mock_post.return_value = mock_response

        result = self.fund.filter(symbol='SSISCA')
        self.assertIsInstance(result, pd.DataFrame)
        self.assertEqual(result.iloc[0]['shortName'], 'SSISCA')

    @patch('vnstock.explorer.fmarket.fund.requests.post')
    def test_filter_no_results(self, mock_post):
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            "data": {
                "rows": []
            }
        }
        mock_post.return_value = mock_response

        with self.assertRaises(ValueError):
            self.fund.filter(symbol='INVALID')

    @patch('vnstock.explorer.fmarket.fund.requests.get')
    @patch('vnstock.explorer.fmarket.fund.Fund.filter')
    def test_top_holding_success(self, mock_filter, mock_get):
        mock_filter.return_value = pd.DataFrame([{"id": 23}])

        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            "data": {
                "productTopHoldingList": [
                    {"stockCode": "FPT", "industry": "Công nghệ và thông tin", "netAssetPercent": 17.1, "type": "STOCK", "updateAt": 1688784000000},
                    {"stockCode": "MWG", "industry": "Bán lẻ", "netAssetPercent": 6.65, "type": "STOCK", "updateAt": 1688784000000},
                    # More data as needed
                ],
                "productTopHoldingBondList": []
            }
        }
        mock_get.return_value = mock_response

        result = self.fund.details.top_holding(symbol='SSISCA')
        self.assertIsInstance(result, pd.DataFrame)
        self.assertIn('stock_code', result.columns)
        self.assertEqual(result.iloc[0]['stock_code'], 'FPT')

        expected_result = pd.DataFrame([
            {"stock_code": "FPT", "industry": "Công nghệ và thông tin", "net_asset_percent": 17.1, "type_asset": "STOCK", "update_at": "2024-07-05", "fundId": 23, "short_name": "SSISCA"},
            {"stock_code": "MWG", "industry": "Bán lẻ", "net_asset_percent": 6.65, "type_asset": "STOCK", "update_at": "2024-07-05", "fundId": 23, "short_name": "SSISCA"}
        ])
        pd.testing.assert_frame_equal(result, expected_result)

    @patch('vnstock.explorer.fmarket.fund.requests.get')
    @patch('vnstock.explorer.fmarket.fund.Fund.filter')
    def test_top_holding_missing_columns(self, mock_filter, mock_get):
        mock_filter.return_value = pd.DataFrame([{"id": 23}])

        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            "data": {
                "productTopHoldingList": [
                    {"updateAt": 1688784000000, "netAssetPercent": 0.1, "type": "STOCK"}
                ],
                "productTopHoldingBondList": []
            }
        }
        mock_get.return_value = mock_response

        result = self.fund.details.top_holding(symbol='SSISCA')
        self.assertIsInstance(result, pd.DataFrame)
        self.assertIn('update_at', result.columns)
        self.assertNotIn('stock_code', result.columns)  # stock_code is missing in mock data

    def test_dynamic_fund_short_names(self):
        for short_name in self.short_names:
            with patch('vnstock.explorer.fmarket.fund.requests.post') as mock_post:
                mock_response = MagicMock()
                mock_response.status_code = 200
                mock_response.json.return_value = {
                    "data": {
                        "total": 10,
                        "rows": [
                            {
                                "shortName": short_name,
                                "name": "Dynamic Fund Name",
                                "dataFundAssetType.name": "Dynamic Fund Type",
                                "owner.name": "Dynamic Fund Owner",
                                "managementFee": 1.5,
                                "firstIssueAt": 1411603200000,
                                "nav": 10000.0,
                                "productNavChange.navToPrevious": 0.1,
                                "productNavChange.navToLastYear": 10.0,
                                "productNavChange.navToBeginning": 50.0,
                                "productNavChange.navTo1Months": 1.0,
                                "productNavChange.navTo3Months": 5.0,
                                "productNavChange.navTo6Months": 7.5,
                                "productNavChange.navTo12Months": 12.0,
                                "productNavChange.navTo24Months": 20.0,
                                "productNavChange.annualizedReturn36Months": 8.0,
                                "id": 1,
                                "code": short_name,
                                "vsdFeeId": "DynamicVSD001",
                                "productNavChange.updateAt": 1688880000000
                            }
                        ]
                    }
                }
                mock_post.return_value = mock_response

                result = self.fund.listing()
                self.assertIsInstance(result, pd.DataFrame)
                self.assertIn('short_name', result.columns)
                self.assertEqual(result.iloc[0]['short_name'], short_name)

if __name__ == '__main__':
    unittest.main()



================================================
FILE: tests/archived/explorer/misc/__init__.py
================================================



================================================
FILE: tests/archived/explorer/misc/test_exchange_rate.py
================================================



================================================
FILE: tests/archived/explorer/misc/test_gold_price.py
================================================



================================================
FILE: tests/archived/explorer/msn/__init__.py
================================================



================================================
FILE: tests/archived/explorer/msn/test_quote.py
================================================



================================================
FILE: tests/archived/explorer/tcbs/__init__.py
================================================



================================================
FILE: tests/archived/explorer/tcbs/test_analysis.py
================================================



================================================
FILE: tests/archived/explorer/tcbs/test_company.py
================================================



================================================
FILE: tests/archived/explorer/tcbs/test_quote.py
================================================
import unittest
import pandas as pd
import pytest
from unittest.mock import patch, MagicMock, call
from datetime import datetime, timedelta
import json
import sys
import os

# Add project root to Python path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../')))

from vnstock.explorer.tcbs.quote import Quote
from vnstock.explorer.tcbs.const import _INTERVAL_MAP, _INDEX_MAPPING

class TestQuoteInitialization(unittest.TestCase):
    """Test cases for the initialization of the Quote class."""
    
    def test_init_with_stock_symbol(self):
        """Test initialization with a stock symbol."""
        quote = Quote("ACV", show_log=False)
        self.assertEqual(quote.symbol, "ACV")
        self.assertEqual(quote.asset_type, "stock")
        
    def test_init_with_index_symbols(self):
        """Test initialization with index symbols."""
        # Test with uppercase, lowercase, and mapped values
        index_mapping = {'VNINDEX': 'VNINDEX', 'HNXINDEX': 'HNXIndex', 'UPCOMINDEX': 'HNXUpcomIndex'}
        
        for key, value in index_mapping.items():
            # Test with key as input
            quote = Quote(key, show_log=False)
            self.assertEqual(quote.symbol, value)
            self.assertEqual(quote.asset_type, "index")
            
            # Test with lowercase key
            quote = Quote(key.lower(), show_log=False)
            self.assertEqual(quote.symbol, value)
            self.assertEqual(quote.asset_type, "index")
    
    def test_init_with_derivative_symbols(self):
        """Test initialization with derivative symbols."""
        for symbol in ["VN30F1M", "VN30F2504"]:
            with patch('vnstock.core.utils.parser.get_asset_type', return_value="derivative"):
                quote = Quote(symbol, show_log=False)
                self.assertEqual(quote.symbol, symbol)
                self.assertEqual(quote.asset_type, "derivative")
    
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_init_with_coverwarrant_symbol(self, mock_get_asset_type):
        """Test initialization with a coverwarrant symbol."""
        mock_get_asset_type.return_value = "coverwarrant"
        
        quote = Quote("CFPT2314", show_log=False)
        self.assertEqual(quote.symbol, "CFPT2314")
        self.assertEqual(quote.asset_type, "coverwarrant")
    
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_init_with_bond_symbol(self, mock_get_asset_type):
        """Test initialization with a bond symbol."""
        mock_get_asset_type.return_value = "bond"
        
        quote = Quote("CII424002", show_log=False)
        self.assertEqual(quote.symbol, "CII424002")
        self.assertEqual(quote.asset_type, "bond")
    
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_init_with_delisted_symbols(self, mock_get_asset_type):
        """Test initialization with delisted symbols."""
        mock_get_asset_type.return_value = "stock"
        
        # Test delisted stock
        quote = Quote("ENF", show_log=False)
        self.assertEqual(quote.symbol, "ENF")
        self.assertEqual(quote.asset_type, "stock")
        
        # Test delisted ETF
        quote = Quote("VFMVF4", show_log=False)
        self.assertEqual(quote.symbol, "VFMVF4")
        self.assertEqual(quote.asset_type, "stock")

class TestQuoteInputValidation(unittest.TestCase):
    """Test cases for input validation in the Quote class."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    def test_valid_interval(self):
        """Test all valid interval inputs from _INTERVAL_MAP."""
        for interval in _INTERVAL_MAP.keys():
            ticker = self.quote._input_validation("2023-01-01", "2023-01-10", interval)
            self.assertEqual(ticker.interval, interval)
    
    @patch('vnstock.core.utils.validation.validate_interval')
    def test_invalid_interval(self, mock_validate):
        """Test invalid interval inputs."""
        mock_validate.side_effect = ValueError("Invalid interval")
        
        with self.assertRaises(ValueError):
            self.quote._input_validation("2023-01-01", "2023-01-10", "invalid_interval")

class TestQuoteHistory(unittest.TestCase):
    """Test cases for the history method."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    @patch('requests.get')
    @patch('vnstock.core.utils.validation.validate_date_range')
    def test_history_with_valid_inputs(self, mock_validate_date_range, mock_get):
        """Test history method with valid inputs."""
        # Setup mocks
        mock_validate_date_range.return_value = ("2023-01-01", "2023-01-10")
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {'data': [{"data": "sample_data"}]}
        mock_get.return_value = mock_response
        
        # Mock data transformation
        with patch.object(self.quote, '_as_df') as mock_as_df:
            mock_df = pd.DataFrame({"date": ["2023-01-01"], "close": [100.0]})
            mock_as_df.return_value = mock_df
            
            # Test with different symbols and asset types
            symbol_asset_pairs = [
                ("ACV", "stock"),
                ("QNS", "stock"),
                ("VNINDEX", "index"),
                ("VN30F1M", "derivative"),
                ("CFPT2314", "coverwarrant"),
                ("CII424002", "bond")
            ]
            
            for symbol, asset_type in symbol_asset_pairs:
                with patch('vnstock.core.utils.parser.get_asset_type', return_value=asset_type):
                    quote = Quote(symbol, show_log=False)
                    result = quote.history("2023-01-01", "2023-01-10", interval="1D")
                    self.assertTrue(isinstance(result, pd.DataFrame))
    
    @patch('requests.get')
    def test_history_with_all_intervals(self, mock_get):
        """Test history method with all valid intervals from _INTERVAL_MAP."""
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {'data': [{"data": "sample_data"}]}
        mock_get.return_value = mock_response
        
        with patch.object(self.quote, '_as_df') as mock_as_df:
            mock_df = pd.DataFrame({"date": ["2023-01-01"], "close": [100.0]})
            mock_as_df.return_value = mock_df
            
            for interval in _INTERVAL_MAP.keys():
                result = self.quote.history("2023-01-01", "2023-01-10", interval=interval)
                self.assertTrue(isinstance(result, pd.DataFrame))
    
    @patch('requests.get')
    def test_history_json_output(self, mock_get):
        """Test history method with JSON output."""
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {'data': [{"data": "sample_data"}]}
        mock_get.return_value = mock_response
        
        mock_df = pd.DataFrame({"date": ["2023-01-01"], "close": [100.0]})
        json_output = '[{"date":"2023-01-01","close":100.0}]'
        
        with patch.object(self.quote, '_as_df', return_value=mock_df):
            with patch.object(pd.DataFrame, 'to_json', return_value=json_output):
                result = self.quote.history("2023-01-01", "2023-01-10", to_df=False)
                self.assertEqual(result, json_output)
    
    @patch('requests.get')
    def test_history_with_count_back(self, mock_get):
        """Test history method with count_back parameter."""
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {'data': [{"data": "sample_data"}]}
        mock_get.return_value = mock_response
        
        mock_df = pd.DataFrame({
            "date": ["2023-01-01", "2023-01-02", "2023-01-03"], 
            "close": [100.0, 101.0, 102.0]
        })
        
        with patch.object(self.quote, '_as_df', return_value=mock_df):
            result = self.quote.history("2023-01-01", "2023-01-10", count_back=2)
            # Verify URL contains the countBack parameter
            self.assertTrue("countBack=2" in mock_get.call_args[0][0])
    
    @patch('requests.get')
    def test_history_with_error_response(self, mock_get):
        """Test history method with error response."""
        mock_response = MagicMock()
        mock_response.status_code = 404
        mock_response.reason = "Not Found"
        mock_get.return_value = mock_response
        
        with self.assertRaises(ConnectionError):
            self.quote.history("2023-01-01", "2023-01-10")
    
    @patch('vnstock.explorer.tcbs.quote.Quote._long_history')
    def test_history_with_long_date_range(self, mock_long_history):
        """Test history method with date range > 365 days."""
        mock_df = pd.DataFrame({"date": ["2023-01-01"], "close": [100.0]})
        mock_long_history.return_value = mock_df
        
        # Test with date range > 365 days
        start = "2022-01-01"
        end = "2023-01-10"  # More than 365 days later
        
        result = self.quote.history(start, end)
        self.assertTrue(isinstance(result, pd.DataFrame))
        mock_long_history.assert_called_once()
    
    def test_history_with_invalid_date_range(self):
        """Test history method with invalid date range."""
        with self.assertRaises(ValueError):
            self.quote.history("2023-01-10", "2023-01-01")  # End before start

class TestQuoteLongHistory(unittest.TestCase):
    """Test cases for the _long_history method."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    @patch('vnstock.explorer.tcbs.quote.Quote.history')
    def test_long_history_single_chunk(self, mock_history):
        """Test _long_history method with a single year chunk."""
        mock_df = pd.DataFrame({
            "time": ["2023-01-01", "2023-02-01", "2023-03-01"],
            "close": [100.0, 101.0, 102.0]
        })
        mock_history.return_value = mock_df
        
        result = self.quote._long_history("2023-01-01", "2023-03-01", show_log=False)
        self.assertTrue(isinstance(result, pd.DataFrame))
        self.assertEqual(len(result), 3)
        mock_history.assert_called_once()
    
    @patch('vnstock.explorer.tcbs.quote.Quote.history')
    def test_long_history_multiple_chunks(self, mock_history):
        """Test _long_history method with multiple year chunks."""
        # Create a different DataFrame for each call
        mock_df1 = pd.DataFrame({
            "time": ["2022-01-01", "2022-06-01"],
            "close": [100.0, 101.0]
        })
        mock_df2 = pd.DataFrame({
            "time": ["2023-01-01", "2023-06-01"],
            "close": [102.0, 103.0]
        })
        
        mock_history.side_effect = [mock_df1, mock_df2]
        
        result = self.quote._long_history("2022-01-01", "2023-06-01", show_log=False)
        self.assertTrue(isinstance(result, pd.DataFrame))
        self.assertEqual(len(result), 4)  # Combined length of both DataFrames
        self.assertEqual(mock_history.call_count, 2)
    
    @patch('vnstock.explorer.tcbs.quote.Quote.history')
    def test_long_history_error_handling(self, mock_history):
        """Test _long_history method with error in one chunk."""
        # First call raises exception, second call succeeds
        mock_df = pd.DataFrame({
            "time": ["2023-01-01", "2023-06-01"],
            "close": [102.0, 103.0]
        })
        mock_history.side_effect = [Exception("Data not found"), mock_df]
        
        result = self.quote._long_history("2022-01-01", "2023-06-01", show_log=False)
        self.assertTrue(isinstance(result, pd.DataFrame))
        self.assertEqual(len(result), 2)  # Only second DataFrame is returned
        self.assertEqual(mock_history.call_count, 2)
    
    @patch('vnstock.explorer.tcbs.quote.Quote.history')
    def test_long_history_no_data(self, mock_history):
        """Test _long_history method with no data for all chunks."""
        mock_history.side_effect = Exception("Data not found")
        
        with self.assertRaises(ValueError):
            self.quote._long_history("2022-01-01", "2023-06-01", show_log=False)

class TestQuoteIntraday(unittest.TestCase):
    """Test cases for the intraday method."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.data_transform.intraday_to_df')
    def test_intraday_with_valid_inputs(self, mock_intraday_to_df, mock_send_request):
        """Test intraday method with valid inputs."""
        # Setup mocks
        mock_send_request.return_value = {"data": [{"data": "sample_data"}]}
        mock_df = pd.DataFrame({"time": ["14:30:00"], "price": [100.0]})
        mock_intraday_to_df.return_value = mock_df
        
        # Test with different asset types
        symbol_asset_pairs = [
            ("ACV", "stock"),
            ("QNS", "stock"),
            ("VNINDEX", "index"),
            ("VN30F1M", "derivative"),
            ("CFPT2314", "coverwarrant"),
            ("CII424002", "bond")
        ]
        
        for symbol, asset_type in symbol_asset_pairs:
            with patch('vnstock.core.utils.parser.get_asset_type', return_value=asset_type):
                quote = Quote(symbol, show_log=False)
                result = quote.intraday()
                self.assertTrue(isinstance(result, pd.DataFrame))
    
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.data_transform.intraday_to_df')
    def test_intraday_json_output(self, mock_intraday_to_df, mock_send_request):
        """Test intraday method with JSON output."""
        mock_send_request.return_value = {"data": [{"data": "sample_data"}]}
        mock_df = pd.DataFrame({"time": ["14:30:00"], "price": [100.0]})
        mock_intraday_to_df.return_value = mock_df
        json_output = '[{"time":"14:30:00","price":100.0}]'
        
        with patch.object(pd.DataFrame, 'to_json', return_value=json_output):
            result = self.quote.intraday(to_df=False)
            self.assertEqual(result, json_output)
    
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.data_transform.intraday_to_df')
    def test_intraday_with_pagination(self, mock_intraday_to_df, mock_send_request):
        """Test intraday method with pagination."""
        # Setup mocks for multiple pages
        mock_send_request.side_effect = [
            {"data": [{"id": 1}]},
            {"data": [{"id": 2}]}
        ]
        
        # Combined data from both pages
        mock_df = pd.DataFrame({"time": ["14:30:00", "14:31:00"], "price": [100.0, 101.0]})
        mock_intraday_to_df.return_value = mock_df
        
        # Test with page_size requiring multiple requests
        result = self.quote.intraday(page_size=101)  # Requires 2 requests (100 + 1)
        
        # Verify both pages were requested
        self.assertEqual(mock_send_request.call_count, 2)
        
        # Verify parameters for first page
        first_call_params = mock_send_request.call_args_list[0][1]['params']
        self.assertEqual(first_call_params['page'], 0)
        self.assertEqual(first_call_params['size'], 100)
        
        # Verify parameters for second page
        second_call_params = mock_send_request.call_args_list[1][1]['params']
        self.assertEqual(second_call_params['page'], 1)
        self.assertEqual(second_call_params['size'], 1)
    
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.data_transform.intraday_to_df')
    def test_intraday_with_custom_page(self, mock_intraday_to_df, mock_send_request):
        """Test intraday method with custom page parameter."""
        mock_send_request.return_value = {"data": [{"data": "sample_data"}]}
        mock_df = pd.DataFrame({"time": ["14:30:00"], "price": [100.0]})
        mock_intraday_to_df.return_value = mock_df
        
        result = self.quote.intraday(page=2)
        
        # Verify page parameter was passed correctly
        call_params = mock_send_request.call_args[1]['params']
        self.assertEqual(call_params['page'], 2)

class TestQuoteAsDf(unittest.TestCase):
    """Test cases for the _as_df method."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    @patch('vnstock.core.utils.data_transform.ohlc_to_df')
    def test_as_df_conversion(self, mock_ohlc_to_df):
        """Test _as_df method for converting data to DataFrame."""
        mock_df = pd.DataFrame({
            "time": ["2023-01-01"],
            "open": [100.0],
            "high": [105.0],
            "low": [98.0],
            "close": [102.0],
            "volume": [1000000]
        })
        mock_ohlc_to_df.return_value = mock_df
        
        test_data = {"sample": "data"}
        result = self.quote._as_df(test_data, "stock")
        
        # Verify data_transform.ohlc_to_df was called with correct parameters
        mock_ohlc_to_df.assert_called_once_with(
            data=test_data,
            column_map=self.quote._OHLC_MAP,
            dtype_map=self.quote._OHLC_DTYPE,
            asset_type="stock",
            symbol=self.quote.symbol,
            source=self.quote.data_source,
            interval="1D"
        )
        
        self.assertEqual(result, mock_df)

def run_tests_with_coverage():
    """Run tests with coverage measurement."""
    import coverage
    
    # Start coverage measurement
    cov = coverage.Coverage(source=["vnstock.explorer.tcbs.quote"])
    cov.start()
    
    try:
        # Create and run test suite
        test_suite = unittest.TestSuite()
        test_suite.addTest(unittest.makeSuite(TestQuoteInitialization))
        test_suite.addTest(unittest.makeSuite(TestQuoteInputValidation))
        test_suite.addTest(unittest.makeSuite(TestQuoteHistory))
        test_suite.addTest(unittest.makeSuite(TestQuoteLongHistory))
        test_suite.addTest(unittest.makeSuite(TestQuoteIntraday))
        test_suite.addTest(unittest.makeSuite(TestQuoteAsDf))
        
        test_runner = unittest.TextTestRunner(verbosity=2)
        test_result = test_runner.run(test_suite)
        
        return test_result.wasSuccessful()
    finally:
        # Ensure coverage is properly stopped
        cov.stop()
        cov.save()
        
        # Print coverage report
        print("\nCoverage Report:")
        cov.report()
        
        # Generate HTML report
        cov.html_report(directory='htmlcov')
        print("HTML coverage report generated in 'htmlcov' directory.")

if __name__ == '__main__':
    success = run_tests_with_coverage()
    sys.exit(not success)

# python3.10 -m pytest tests/explorer/tcbs/test_quote.py -v --cov=vnstock.explorer.tcbs.quote


================================================
FILE: tests/archived/explorer/vci/__init__.py
================================================



================================================
FILE: tests/archived/explorer/vci/test_analysis.py
================================================



================================================
FILE: tests/archived/explorer/vci/test_company.py
================================================



================================================
FILE: tests/archived/explorer/vci/test_quote.py
================================================
import unittest
import pandas as pd
import pytest
from unittest.mock import patch, MagicMock
from datetime import datetime
import json
import sys
import os

# Add project root to Python path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../')))

from vnstock.explorer.vci.quote import Quote
from vnstock.explorer.vci.const import _INTERVAL_MAP, _INDEX_MAPPING

class TestQuoteInitialization(unittest.TestCase):
    """Test cases for the initialization of the Quote class."""
    
    def test_init_with_stock_symbol(self):
        """Test initialization with a stock symbol."""
        quote = Quote("ACV", show_log=False)
        self.assertEqual(quote.symbol, "ACV")
        self.assertEqual(quote.asset_type, "stock")
        
    def test_init_with_index_symbols(self):
        """Test initialization with index symbols."""
        # Test with uppercase, lowercase, and mapped values
        index_mapping = {'VNINDEX': 'VNINDEX', 'HNXINDEX': 'HNXIndex', 'UPCOMINDEX': 'HNXUpcomIndex'}
        
        for key, value in index_mapping.items():
            # Test with key as input
            quote = Quote(key, show_log=False)
            self.assertEqual(quote.symbol, value)
            self.assertEqual(quote.asset_type, "index")
            
            # Test with lowercase key
            quote = Quote(key.lower(), show_log=False)
            self.assertEqual(quote.symbol, value)
            self.assertEqual(quote.asset_type, "index")
    
    def test_init_with_derivative_symbols(self):
        """Test initialization with derivative symbols."""
        for symbol in ["VN30F1M", "VN30F2504"]:
            quote = Quote(symbol, show_log=False)
            self.assertEqual(quote.symbol, symbol)
            self.assertEqual(quote.asset_type, "derivative")
    
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_init_with_coverwarrant_symbol(self, mock_get_asset_type):
        """Test initialization with a coverwarrant symbol."""
        # Mock the asset type detection
        mock_get_asset_type.return_value = "coverwarrant"
        
        quote = Quote("CFPT2314", show_log=False)
        self.assertEqual(quote.symbol, "CFPT2314")
        self.assertEqual(quote.asset_type, "coverwarrant")
    
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_init_with_bond_symbol(self, mock_get_asset_type):
        """Test initialization with a bond symbol."""
        # Mock the asset type detection
        mock_get_asset_type.return_value = "bond"
        
        quote = Quote("CII424002", show_log=False)
        self.assertEqual(quote.symbol, "CII424002")
        self.assertEqual(quote.asset_type, "bond")
    
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_init_with_delisted_symbols(self, mock_get_asset_type):
        """Test initialization with delisted symbols."""
        # Mock the asset type detection for stock
        mock_get_asset_type.return_value = "stock"
        
        # Test delisted stock
        quote = Quote("ENF", show_log=False)
        self.assertEqual(quote.symbol, "ENF")
        self.assertEqual(quote.asset_type, "stock")
        
        # Test delisted ETF
        quote = Quote("VFMVF4", show_log=False)
        self.assertEqual(quote.symbol, "VFMVF4")
        self.assertEqual(quote.asset_type, "stock")

class TestQuoteInputValidation(unittest.TestCase):
    """Test cases for input validation in the Quote class."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    def test_valid_interval(self):
        """Test all valid interval inputs from _INTERVAL_MAP."""
        for interval in _INTERVAL_MAP.keys():
            ticker = self.quote._input_validation("2023-01-01", "2023-01-10", interval)
            self.assertEqual(ticker.interval, interval)
    
    @patch('vnstock.core.utils.validation.validate_interval')
    def test_invalid_interval(self, mock_validate):
        """Test invalid interval inputs."""
        mock_validate.side_effect = ValueError("Invalid interval")
        
        with self.assertRaises(ValueError):
            self.quote._input_validation("2023-01-01", "2023-01-10", "invalid_interval")

class TestQuoteHistory(unittest.TestCase):
    """Test cases for the history method."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.validation.convert_to_timestamps')
    @patch('vnstock.core.utils.validation.validate_date_range')
    @patch('vnstock.core.utils.data_transform.ohlc_to_df')
    def test_history_with_valid_inputs(self, mock_ohlc_to_df, mock_validate_date_range, 
                                       mock_convert_timestamps, mock_send_request):
        """Test history method with valid inputs."""
        # Setup mocks
        mock_validate_date_range.return_value = ("2023-01-01", "2023-01-10")
        mock_convert_timestamps.return_value = (1672531200000, 1673308800000)
        mock_send_request.return_value = [{"data": "sample_data"}]
        mock_df = pd.DataFrame({"date": ["2023-01-01"], "close": [100.0]})
        mock_ohlc_to_df.return_value = mock_df
        
        # Test with different symbols and asset types
        symbol_asset_pairs = [
            ("ACV", "stock"),
            ("QNS", "stock"),
            ("VNINDEX", "index"),
            ("VN30F1M", "derivative"),
            ("CFPT2314", "coverwarrant"),
            ("CII424002", "bond")
        ]
        
        for symbol, asset_type in symbol_asset_pairs:
            with patch('vnstock.core.utils.parser.get_asset_type', return_value=asset_type):
                quote = Quote(symbol, show_log=False)
                result = quote.history("2023-01-01", "2023-01-10", interval="1D")
                self.assertTrue(isinstance(result, pd.DataFrame))
    
    @patch('vnstock.core.utils.api_client.send_request')
    def test_history_with_all_intervals(self, mock_send_request):
        """Test history method with all valid intervals from _INTERVAL_MAP."""
        mock_df = pd.DataFrame({"date": ["2023-01-01"], "close": [100.0]})
        mock_send_request.return_value = [{"data": "sample_data"}]
        
        with patch('vnstock.core.utils.data_transform.ohlc_to_df', return_value=mock_df):
            for interval in _INTERVAL_MAP.keys():
                result = self.quote.history("2023-01-01", "2023-01-10", interval=interval)
                self.assertTrue(isinstance(result, pd.DataFrame))
    
    @patch('vnstock.core.utils.api_client.send_request')
    def test_history_json_output(self, mock_send_request):
        """Test history method with JSON output."""
        mock_df = pd.DataFrame({"date": ["2023-01-01"], "close": [100.0]})
        mock_send_request.return_value = [{"data": "sample_data"}]
        json_output = '[{"date":"2023-01-01","close":100.0}]'
        
        with patch('vnstock.core.utils.data_transform.ohlc_to_df', return_value=mock_df):
            with patch.object(pd.DataFrame, 'to_json', return_value=json_output):
                result = self.quote.history("2023-01-01", "2023-01-10", to_df=False)
                self.assertEqual(result, json_output)
    
    @patch('vnstock.core.utils.api_client.send_request')
    def test_history_with_count_back(self, mock_send_request):
        """Test history method with count_back parameter."""
        mock_df = pd.DataFrame({
            "date": ["2023-01-01", "2023-01-02", "2023-01-03"], 
            "close": [100.0, 101.0, 102.0]
        })
        mock_send_request.return_value = [{"data": "sample_data"}]
        
        with patch('vnstock.core.utils.data_transform.ohlc_to_df', return_value=mock_df):
            result = self.quote.history("2023-01-01", "2023-01-10", count_back=2)
            self.assertEqual(len(result), 2)
    
    @patch('vnstock.core.utils.api_client.send_request')
    def test_history_with_empty_data(self, mock_send_request):
        """Test history method with empty data response."""
        mock_send_request.return_value = None
        
        with self.assertRaises(ValueError):
            self.quote.history("2023-01-01", "2023-01-10")

class TestQuoteIntraday(unittest.TestCase):
    """Test cases for the intraday method."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.data_transform.intraday_to_df')
    def test_intraday_with_valid_inputs(self, mock_intraday_to_df, mock_send_request, mock_all_future_indices):
        """Test intraday method with valid inputs."""
        # Setup mocks
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        mock_send_request.return_value = {"data": "sample_data"}
        mock_df = pd.DataFrame({"time": ["14:30:00"], "price": [100.0]})
        mock_intraday_to_df.return_value = mock_df
        
        # Test with different asset types
        symbol_asset_pairs = [
            ("ACV", "stock"),
            ("QNS", "stock"),
            ("VNINDEX", "index"),
            ("VN30F1M", "derivative"),
            ("CFPT2314", "coverwarrant"),
            ("CII424002", "bond")
        ]
        
        for symbol, asset_type in symbol_asset_pairs:
            with patch('vnstock.core.utils.parser.get_asset_type', return_value=asset_type):
                quote = Quote(symbol, show_log=False)
                # Skip derivatives that aren't in the support list
                if asset_type == "derivative" and symbol not in ["VN30F1M", "VN30F2504"]:
                    continue
                result = quote.intraday()
                self.assertTrue(isinstance(result, pd.DataFrame))
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.data_transform.intraday_to_df')
    def test_intraday_json_output(self, mock_intraday_to_df, mock_send_request, mock_all_future_indices):
        """Test intraday method with JSON output."""
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        mock_df = pd.DataFrame({"time": ["14:30:00"], "price": [100.0]})
        mock_send_request.return_value = {"data": "sample_data"}
        mock_intraday_to_df.return_value = mock_df
        json_output = '[{"time":"14:30:00","price":100.0}]'
        
        with patch.object(pd.DataFrame, 'to_json', return_value=json_output):
            result = self.quote.intraday(to_df=False)
            self.assertEqual(result, json_output)
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_intraday_with_derivative_not_in_support_list(self, mock_get_asset_type, mock_all_future_indices):
        """Test intraday method with unsupported derivative symbol."""
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        mock_get_asset_type.return_value = "derivative"
        
        quote = Quote("UNSUPPORTED", show_log=False)
        
        with self.assertRaises(ValueError):
            quote.intraday()
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    @patch('vnstock.core.utils.api_client.send_request')
    @patch('vnstock.core.utils.data_transform.intraday_to_df')
    def test_intraday_with_last_time(self, mock_intraday_to_df, mock_send_request, mock_all_future_indices):
        """Test intraday method with last_time parameter."""
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        mock_df = pd.DataFrame({"time": ["14:30:00"], "price": [100.0]})
        mock_send_request.return_value = {"data": "sample_data"}
        mock_intraday_to_df.return_value = mock_df
        
        result = self.quote.intraday(last_time="2023-01-01 14:30:00")
        self.assertTrue(isinstance(result, pd.DataFrame))
        
        # Verify request parameter
        expected_time = int(datetime.strptime("2023-01-01 14:30:00", "%Y-%m-%d %H:%M:%S").timestamp())
        self.assertEqual(mock_send_request.call_args[1]['payload']['truncTime'], expected_time)
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    def test_intraday_with_invalid_last_time(self, mock_all_future_indices):
        """Test intraday method with invalid last_time format."""
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        
        with self.assertRaises(ValueError):
            self.quote.intraday(last_time="invalid_format")

class TestQuotePriceDepth(unittest.TestCase):
    """Test cases for the price_depth method."""
    
    def setUp(self):
        self.quote = Quote("ACV", show_log=False)
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    @patch('vnstock.core.utils.api_client.send_request')
    def test_price_depth_with_valid_inputs(self, mock_send_request, mock_all_future_indices):
        """Test price_depth method with valid inputs."""
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        sample_data = [{"price": 100.0, "volume": 1000}]
        mock_send_request.return_value = sample_data
        
        # Test with different asset types
        symbol_asset_pairs = [
            ("ACV", "stock"),
            ("QNS", "stock"),
            ("VNINDEX", "index"),
            ("VN30F1M", "derivative"),
            ("CFPT2314", "coverwarrant"),
            ("CII424002", "bond")
        ]
        
        with patch.object(pd.DataFrame, 'rename'):
            for symbol, asset_type in symbol_asset_pairs:
                with patch('vnstock.core.utils.parser.get_asset_type', return_value=asset_type):
                    quote = Quote(symbol, show_log=False)
                    # Skip derivatives that aren't in the support list
                    if asset_type == "derivative" and symbol not in ["VN30F1M", "VN30F2504"]:
                        continue
                    result = quote.price_depth()
                    self.assertTrue(isinstance(result, pd.DataFrame))
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    @patch('vnstock.core.utils.api_client.send_request')
    def test_price_depth_json_output(self, mock_send_request, mock_all_future_indices):
        """Test price_depth method with JSON output."""
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        sample_data = [{"price": 100.0, "volume": 1000}]
        mock_send_request.return_value = sample_data
        json_output = '[{"price":100.0,"volume":1000}]'
        
        with patch.object(pd.DataFrame, 'rename'):
            with patch.object(pd.DataFrame, 'to_json', return_value=json_output):
                result = self.quote.price_depth(to_df=False)
                self.assertEqual(result, json_output)
    
    @patch('vnstock.explorer.vci.listing.Listing.all_future_indices')
    @patch('vnstock.core.utils.parser.get_asset_type')
    def test_price_depth_with_derivative_not_in_support_list(self, mock_get_asset_type, mock_all_future_indices):
        """Test price_depth method with unsupported derivative symbol."""
        mock_all_future_indices.return_value = pd.Series(["VN30F1M", "VN30F2504"])
        mock_get_asset_type.return_value = "derivative"
        
        quote = Quote("UNSUPPORTED", show_log=False)
        
        with self.assertRaises(ValueError):
            quote.price_depth()

class TestQuote(unittest.TestCase):
    def setUp(self):
        self.symbol = 'VIC'
        self.quote = Quote(self.symbol)

    def test_init_with_default_headers(self):
        """Test khởi tạo Quote với headers mặc định"""
        self.assertEqual(self.quote.symbol, self.symbol.upper())
        self.assertEqual(self.quote.data_source, 'VCI')
        self.assertIn('User-Agent', self.quote.headers)
        self.assertIn('Referer', self.quote.headers)
        self.assertIn('Origin', self.quote.headers)
        self.assertEqual(
            self.quote.headers['Referer'], 
            'https://trading.vietcap.com.vn/'
        )
        self.assertEqual(
            self.quote.headers['Origin'], 
            'https://trading.vietcap.com.vn/'
        )

    def test_init_with_random_agent(self):
        """Test khởi tạo Quote với random_agent=True"""
        quote = Quote(self.symbol, random_agent=True)
        self.assertIn('User-Agent', quote.headers)
        # Kiểm tra User-Agent có chứa thông tin browser
        browsers = ['chrome', 'safari', 'firefox', 'coccoc', 'brave', 'vivaldi']
        self.assertTrue(
            any(browser in quote.headers['User-Agent'].lower() 
                for browser in browsers)
        )

    @patch('vnstock.core.utils.user_agent.get_headers')
    def test_init_with_custom_headers(self, mock_get_headers):
        """Test khởi tạo Quote với custom headers"""
        custom_headers = {
            'User-Agent': 'Custom Agent',
            'Referer': 'https://custom.com',
            'Origin': 'https://custom.com'
        }
        mock_get_headers.return_value = custom_headers
        
        quote = Quote(self.symbol)
        self.assertEqual(quote.headers, custom_headers)

    def test_init_with_show_log_false(self):
        """Test khởi tạo Quote với show_log=False"""
        quote = Quote(self.symbol, show_log=False)
        self.assertFalse(quote.show_log)

    def test_init_with_index_symbol(self):
        """Test khởi tạo Quote với mã index"""
        index_symbol = 'VNINDEX'
        quote = Quote(index_symbol)
        self.assertEqual(quote.symbol, 'VNINDEX')

def run_tests_with_coverage():
    """Run tests with coverage measurement."""
    import coverage
    
    # Start coverage measurement properly
    cov = coverage.Coverage(source=["vnstock.explorer.vci.quote"])
    cov.start()
    
    try:
        # Create and run test suite
        test_suite = unittest.TestSuite()
        test_suite.addTest(unittest.makeSuite(TestQuoteInitialization))
        test_suite.addTest(unittest.makeSuite(TestQuoteInputValidation))
        test_suite.addTest(unittest.makeSuite(TestQuoteHistory))
        test_suite.addTest(unittest.makeSuite(TestQuoteIntraday))
        test_suite.addTest(unittest.makeSuite(TestQuotePriceDepth))
        test_suite.addTest(unittest.makeSuite(TestQuote))
        
        test_runner = unittest.TextTestRunner(verbosity=2)
        test_result = test_runner.run(test_suite)
        
        return test_result.wasSuccessful()
    finally:
        # Ensure coverage is properly stopped
        cov.stop()
        cov.save()
        
        # Print coverage report
        print("\nCoverage Report:")
        cov.report()
        
        # Generate HTML report
        cov.html_report(directory='htmlcov')
        print("HTML coverage report generated in 'htmlcov' directory.")

if __name__ == '__main__':
    success = run_tests_with_coverage()
    sys.exit(not success)


# python3.10 -m pytest tests/explorer/vci/test_quote.py -v --cov=vnstock.explorer.vci.quote



================================================
FILE: tests/test_explorer/1_smoke/test_smoke_fmarket.py
================================================
# pytest tests/test_explorer/1_smoke/test_smoke_fmarket.py --maxfail=1 -q

import pytest
import pandas as pd
from datetime import datetime

from vnstock.explorer.fmarket.fund import Fund, convert_unix_to_datetime

# A stub empty DataFrame
EMPTY_DF = pd.DataFrame()

@pytest.fixture(autouse=True)
def patch_fmarket(monkeypatch):
    # 1) Stub Fund.listing so __init__ can fetch `['short_name']`
    monkeypatch.setattr(
        Fund,
        "listing",
        lambda self, fund_type="": pd.DataFrame({"short_name": []})
    )
    # 2) Stub Fund.filter so FundDetails._get_fund_details never KeyErrors
    monkeypatch.setattr(
        Fund,
        "filter",
        lambda self, symbol="": pd.DataFrame({"id": [], "shortName": []})
    )
    # 3) Stub all FundDetails methods to return a DataFrame
    for method in ("top_holding", "industry_holding", "nav_report", "asset_holding"):
        monkeypatch.setattr(
            Fund.FundDetails,
            method,
            lambda self, *a, **k: EMPTY_DF
        )
    yield

def test_fund_constructor_and_listing():
    f = Fund(random_agent=False)
    # Should have attributes and a stubbed DataFrame
    assert isinstance(f, Fund)
    df = f.listing()
    assert isinstance(df, pd.DataFrame)

@pytest.mark.parametrize("method", ["top_holding", "industry_holding", "nav_report", "asset_holding"])
def test_funddetails_methods_return_dataframe(method):
    f = Fund(random_agent=False)
    detail = f.details
    # Call each stubbed method by name
    df = getattr(detail, method)(symbol="XXXX")
    assert isinstance(df, pd.DataFrame)

def test_convert_unix_to_datetime():
    # Prepare a DataFrame with two timestamps: invalid (-1) and valid (e.g. Feb 1 2020)
    ms = [-1, 1580515200000]
    df_in = pd.DataFrame({"ts": ms})
    out = convert_unix_to_datetime(df_in, ["ts"])
    # Both values should exist as strings; invalid one maps to NaN->None->kept as NaN, valid one to '2020-02-01'
    assert out["ts"].dtype == object
    assert "2020-02-01" in out["ts"].values



================================================
FILE: tests/test_explorer/1_smoke/test_smoke_misc.py
================================================
import warnings
# Silence the openpyxl “no default style” warning
warnings.filterwarnings(
    "ignore",
    message="Workbook contains no default style, apply openpyxl's default"
)

import pytest
import pandas as pd

from vnstock.explorer.misc.exchange_rate import vcb_exchange_rate
from vnstock.explorer.misc.gold_price    import sjc_gold_price, btmc_goldprice

EMPTY_DF = pd.DataFrame()

@pytest.fixture(autouse=True)
def patch_misc(monkeypatch):
    # Stub out each misc function to always return an empty DataFrame
    monkeypatch.setattr(
        "vnstock.explorer.misc.exchange_rate.vcb_exchange_rate",
        lambda date='': EMPTY_DF
    )
    monkeypatch.setattr(
        "vnstock.explorer.misc.gold_price.sjc_gold_price",
        lambda date=None: EMPTY_DF
    )
    monkeypatch.setattr(
        "vnstock.explorer.misc.gold_price.btmc_goldprice",
        lambda url=None: EMPTY_DF
    )
    yield

def test_vcb_exchange_rate_returns_dataframe():
    df = vcb_exchange_rate(date="2025-05-07")
    assert isinstance(df, pd.DataFrame)

def test_sjc_gold_price_returns_dataframe():
    df = sjc_gold_price(date="2025-05-07")
    assert isinstance(df, pd.DataFrame)

def test_btmc_goldprice_returns_dataframe():
    df = btmc_goldprice()
    assert isinstance(df, pd.DataFrame)



================================================
FILE: tests/test_explorer/1_smoke/test_smoke_msn.py
================================================
# pytest tests/test_explorer/1_smoke/test_smoke_msn.py --maxfail=1 -q

import pytest
import pandas as pd

from vnstock.explorer.msn.const   import _CURRENCY_ID_MAP, _CRYPTO_ID_MAP, _GLOBAL_INDICES
from vnstock.explorer.msn.helper  import get_asset_type
from vnstock.explorer.msn.listing import Listing
from vnstock.explorer.msn.models  import TickerModel
from vnstock.explorer.msn.quote   import Quote

# A simple DataFrame stub
EMPTY_DF = pd.DataFrame()

@pytest.fixture(autouse=True)
def patch_msn(monkeypatch):
    # Stub out msn_apikey wherever it's imported
    stub_key = lambda *a, **k: "DUMMY_KEY"
    monkeypatch.setattr("vnstock.explorer.msn.helper.msn_apikey", stub_key)
    monkeypatch.setattr("vnstock.explorer.msn.listing.msn_apikey", stub_key)
    monkeypatch.setattr("vnstock.explorer.msn.quote.msn_apikey", stub_key)

    # Stub Listing.search_symbol_id and Quote._input_validation paths
    monkeypatch.setattr(Listing, "search_symbol_id", lambda self, *a, **k: EMPTY_DF)
    # We leave Quote._input_validation intact (it doesn't call msn_apikey)
    yield

def test_listing_search_symbol_id_returns_dataframe():
    lst = Listing(api_version="20250101", random_agent=False)
    df = lst.search_symbol_id(query="ABC", locale=None, limit=5, to_df=True)
    assert isinstance(df, pd.DataFrame)
    assert df.empty

@pytest.mark.parametrize("symbol_id,expected", [
    (next(iter(_CURRENCY_ID_MAP.values())), "currency"),
    (next(iter(_CRYPTO_ID_MAP.values())),   "crypto"),
    (next(iter(_GLOBAL_INDICES.values())),  "index"),
    ("UNKNOWN_ID",                          "Unknown"),
])
def test_get_asset_type(symbol_id, expected):
    assert get_asset_type(symbol_id) == expected

def test_quote_input_validation():
    # Quote.__init__ will use our stubbed msn_apikey -> no KeyError
    q = Quote(symbol_id="abcd", api_version="20250101", random_agent=False)
    tm = q._input_validation(start="2025-01-01", end="2025-05-01", interval="1D")
    assert isinstance(tm, TickerModel)
    assert tm.symbol == "abcd"
    assert tm.start  == "2025-01-01"
    assert tm.end    == "2025-05-01"



================================================
FILE: tests/test_explorer/1_smoke/test_smoke_tcbs.py
================================================
# pytest tests/test_explorer/1_smoke/test_smoke_tcbs.py --maxfail=1 -q

import pytest
import pandas as pd

from vnstock.explorer.tcbs.company import Company
from vnstock.explorer.tcbs.financial import Finance
from vnstock.explorer.tcbs.models import TickerModel
from vnstock.explorer.tcbs.quote import Quote
from vnstock.explorer.tcbs.screener import Screener
from vnstock.explorer.tcbs.trading import Trading

# Dummy HTTP response for requests.get (if ever used)
class DummyGetResp:
    status_code = 200
    def json(self):
        return {"data": []}

@pytest.fixture(autouse=True)
def patch_external_calls(monkeypatch):
    # Patch client.send_request (used by Company, Finance, Screener, Trading)
    monkeypatch.setattr(
        "vnstock.core.utils.client.send_request",
        lambda *args, **kwargs: {
            # include both keys for screener and trading
            "searchData": {"pageContent": []},
            "data": []
        }
    )
    # Patch requests.get for Quote.history/intraday
    monkeypatch.setattr("requests.get", lambda *a, **k: DummyGetResp())
    yield

def test_company_instantiation():
    c = Company(symbol="AAA", random_agent=False, to_df=True, show_log=False)
    assert isinstance(c, Company)

def test_finance_balance_sheet_returns_df():
    f = Finance(symbol="AAA", report_type="balance_sheet", period="year", get_all=False, show_log=False)
    # Should return an (empty) DataFrame without error
    df = f.balance_sheet(period="year", to_df=True, show_log=False)
    assert isinstance(df, pd.DataFrame)

def test_ticker_model_validation():
    tm = TickerModel(symbol="AAA", start="2025-01-01", end=None, interval="1D")
    assert tm.symbol == "AAA"
    assert tm.interval == "1D"

def test_quote_instantiation():
    q = Quote(symbol="AAA", random_agent=False, show_log=False)
    assert q.symbol == "AAA"

def test_screener_stock_returns_df():
    sc = Screener(random_agent=False, show_log=False)
    df = sc.stock(params={"exchangeName": "HOSE"}, limit=5, id=None, lang="vi")
    assert isinstance(df, pd.DataFrame)

def test_trading_price_board_returns_df():
    t = Trading(symbol="AAA", random_agent=False, show_log=False)
    df = t.price_board(symbol_ls=["AAA"], std_columns=True, to_df=True, show_log=False)
    assert isinstance(df, pd.DataFrame)



================================================
FILE: tests/test_explorer/1_smoke/test_smoke_vci.py
================================================
# pytest tests/test_explorer/1_smoke/test_smoke_vci.py --maxfail=1 -q

import pytest
import pandas as pd

from vnstock.explorer.vci.quote import Quote
from vnstock.explorer.vci.company import Company
from vnstock.explorer.vci.financial import Finance
from vnstock.explorer.vci.listing import Listing
from vnstock.explorer.vci.trading import Trading
from vnstock.explorer.vci.models import TickerModel

# Dummy HTTP client response for Trading.price_board
class DummyPostResp:
    status_code = 200
    def json(self):
        return {}

@pytest.fixture(autouse=True)
def patch_vci(monkeypatch):
    # 1) Patch Company._fetch_data to include a valid icbName4
    monkeypatch.setattr(
        "vnstock.explorer.vci.company.Company._fetch_data",
        lambda self, *a, **k: {"CompanyListingInfo": {"icbName4": "Bán lẻ phức hợp"}}
    )
    # 2) Patch client.send_request (used by Listing & Finance) to return {"data": {}}
    monkeypatch.setattr(
        "vnstock.core.utils.client.send_request",
        lambda *a, **k: {"data": {}}
    )
    # 3) Patch HTTP POST for Trading.price_board
    monkeypatch.setattr("requests.post", lambda *a, **k: DummyPostResp())
    yield

def test_company_constructor():
    c = Company(symbol="AAA", random_agent=False, to_df=True, show_log=False)
    assert isinstance(c, Company)

def test_finance_constructor():
    f = Finance(symbol="AAA", period="quarter", get_all=True, show_log=False)
    assert isinstance(f, Finance)

def test_ticker_model_fields():
    tm = TickerModel(symbol="AAA", start="2025-01-01", end=None, interval="1D")
    assert tm.symbol == "AAA"
    assert tm.start == "2025-01-01"

def test_listing_all_symbols_returns_df():
    lst = Listing(random_agent=False, show_log=False)
    df = lst.all_symbols(show_log=False, to_df=True)
    assert isinstance(df, pd.DataFrame)

def test_quote_constructor_only():
    q = Quote(symbol="AAA", random_agent=False, show_log=False)
    assert q.symbol == "AAA"

def test_trading_constructor_only():
    t = Trading(symbol="AAA", random_agent=False, show_log=False)
    assert t.symbol == "AAA"



================================================
FILE: tests/test_explorer/2_functional/test_vci_listing.py
================================================
import pytest
import pandas as pd
from vnstock.explorer.vci.listing import Listing

# Shared minimal payload for the “stock‐list” methods
STOCK_PAYLOAD = [
    {"id": "1", "symbol": "AAA", "organ_name": "Test A", "type": "STOCK"},
    {"id": "2", "symbol": "BBB", "organ_name": "Test B", "type": "STOCK"},
]

# Payload for ICB classification
ICB_PAYLOAD = [
    {"icb_name": "Foo", "en_icb_name": "FooEN", "icb_code": 100, "level": 3}
]

@pytest.mark.parametrize("method, expected_cols, payload", [
    ("symbols_by_exchange",   ["symbol", "type", "organ_name"], STOCK_PAYLOAD),
    ("symbols_by_group",      ["symbol", "type", "organ_name"], STOCK_PAYLOAD),
    ("symbols_by_industries", ["symbol", "type", "organ_name"], STOCK_PAYLOAD),
    ("all_government_bonds",  ["symbol", "type", "organ_name"], STOCK_PAYLOAD),
    ("all_covered_warrant",   ["symbol", "type", "organ_name"], STOCK_PAYLOAD),
    ("all_bonds",             ["symbol", "type", "organ_name"], STOCK_PAYLOAD),
    ("industries_icb",        ["icb_name", "en_icb_name", "icb_code", "level"], ICB_PAYLOAD),
])
def test_vci_listing_methods_return_dataframe(method, expected_cols, payload, monkeypatch):
    """
    Phase 2 functional smoke tests for VCI Listing.
    Ensure each method returns a non-empty DataFrame with the expected columns.
    """
    # Stub out the internal send_request to return our synthetic payload
    monkeypatch.setattr(
        "vnstock.explorer.vci.listing.send_request",
        lambda *args, **kwargs: payload
    )

    lst = Listing(random_agent=False, show_log=False)
    fn  = getattr(lst, method)

    # Most methods accept show_log & to_df; industries_icb returns a DataFrame directly
    if method == "industries_icb":
        df = fn()
    else:
        df = fn(show_log=False, to_df=True)

    # 1) Must be a DataFrame
    assert isinstance(df, pd.DataFrame), f"{method} did not return a DataFrame"

    # 2) Non-empty
    assert not df.empty, f"{method} returned an empty DataFrame"

    # 3) If payload had an 'id', ensure it's dropped
    if "id" in payload[0]:
        assert "id" not in df.columns

    # 4) Exact columns match
    assert list(df.columns) == expected_cols, f"{method} columns {list(df.columns)} != expected {expected_cols}"

    # 5) First-row values line up with payload
    for col in expected_cols:
        assert df.iloc[0][col] == payload[0][col]



================================================
FILE: vnstock/__init__.py
================================================
import vnai
from .common.vnstock import Vnstock
from .common.plot import chart_wrapper
from .api.quote import Quote
from .api.company import Company
from .api.financial import Finance
from .api.listing import Listing
from .api.trading import Trading
from .api.screener import Screener
from .explorer.fmarket import Fund
__all__ = ["Vnstock", "Quote", "Listing", "Company", "Finance", "Trading", "Screener", "Fund"]

vnai.setup()


================================================
FILE: vnstock/base.py
================================================
import inspect
import importlib
import pkgutil
from abc import ABC
from functools import wraps
from tenacity import retry, stop_after_attempt, wait_exponential
from vnstock.config import Config


def dynamic_method(func):
    """
    Decorator for adapter methods:
    - Ensures the loaded provider supports this method
    - Filters kwargs to only those the provider’s signature accepts
    """
    method_name = func.__name__

    @wraps(func)
    def wrapper(self, *args, **kwargs):
        if not hasattr(self._provider, method_name):
            raise NotImplementedError(
                f"Source '{self.source}' does not support '{method_name}'"
            )
        provider_method = getattr(self._provider, method_name)
        sig = inspect.signature(provider_method)
        filtered = {k: v for k, v in kwargs.items() if k in sig.parameters}
        return provider_method(*args, **filtered)

    return wrapper


class BaseAdapter(ABC):
    """
    Base adapter that dynamically discovers the correct explorer subpackage,
    imports the provider's module, and instantiates its class with only
    the acceptable constructor parameters.
    """

    _module_name: str  # e.g. "quote", "company", etc.

    def __init__(self, source: str, symbol: str = None, **kwargs):
        # Preserve original for error messages
        self.source = source
        self.symbol = symbol

        # Discover all subpackages under vnstock.explorer
        import vnstock.explorer as expkg
        available = {info.name for info in pkgutil.iter_modules(expkg.__path__)}
        # Case-insensitive match of requested source
        matches = {name for name in available if name.lower() == source.lower()}
        if not matches:
            raise ValueError(
                f"No data-source '{source}' found. Available: {sorted(available)}"
            )
        real_source = matches.pop()

        # Build module path and import
        module_path = f"{expkg.__name__}.{real_source}.{self._module_name}"
        try:
            mod = importlib.import_module(module_path)
        except ImportError as e:
            raise ValueError(
                f"Source '{real_source}' does not provide '{self._module_name}.'"
            ) from e

        # Get the implementation class
        try:
            impl_cls = getattr(mod, self.__class__.__name__)
        except AttributeError as e:
            raise ValueError(
                f"Module '{module_path}' has no class '{self.__class__.__name__}'"
            ) from e

        # Inspect constructor signature and filter kwargs
        sig = inspect.signature(impl_cls.__init__)
        init_kwargs = {}
        # Only pass symbol if accepted
        if symbol is not None and 'symbol' in sig.parameters:
            init_kwargs['symbol'] = symbol
        # Pass only recognized provider kwargs
        for key, val in kwargs.items():
            if key in sig.parameters:
                init_kwargs[key] = val

        # Instantiate the provider
        self._provider = impl_cls(**init_kwargs)

    def __getattr__(self, name):
        # Delegate attribute access to the provider
        return getattr(self._provider, name)

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    def history(self, *args, **kwargs):
        # Generic retry wrapper for any .history() calls
        return self._provider.history(*args, **kwargs)



================================================
FILE: vnstock/config.py
================================================
# vnstock/config.py

import logging

class Config:
    # -------------------------------------------------------------------------
    # HTTP request settings
    # -------------------------------------------------------------------------
    # Default timeout (in seconds) for any network request
    REQUEST_TIMEOUT: int = 30

    # Number of retry attempts on transient failures
    RETRIES: int = 3

    # Tenacity backoff strategy parameters
    BACKOFF_MULTIPLIER: float = 1.0
    BACKOFF_MIN: float = 2    # minimum wait between retries (seconds)
    BACKOFF_MAX: float = 10   # maximum wait between retries (seconds)

    # -------------------------------------------------------------------------
    # Caching
    # -------------------------------------------------------------------------
    # Max entries for LRU‑cached methods
    CACHE_SIZE: int = 128

    # -------------------------------------------------------------------------
    # Logging
    # -------------------------------------------------------------------------
    # Default logging level for all vnstock modules
    LOG_LEVEL: int = logging.DEBUG

    @classmethod
    def apply_logging_config(cls):
        """
        Call once at startup to configure vnstock logging.
        """
        logging.getLogger("vnstock").setLevel(cls.LOG_LEVEL)



================================================
FILE: vnstock/api/__init__.py
================================================



================================================
FILE: vnstock/api/company.py
================================================
# vnstock/api/company.py

from typing import Any
from tenacity import retry, stop_after_attempt, wait_exponential
from vnstock.config import Config
from vnstock.base import BaseAdapter, dynamic_method

class Company(BaseAdapter):
    _module_name = "company"
    """
    Adapter for company-related data:
      - overview
      - shareholders
      - officers
      - subsidiaries
      - affiliate
      - news
      - events

    Usage:
        c = Company(source="vci", symbol="VCI", random_agent=False, show_log=True)
        df_ov = c.overview()
        df_sh = c.shareholders()
        df_of = c.officers(filter_by="all")
        df_sub = c.subsidiaries(filter_by="subsidiary")
        df_aff = c.affiliate()
        df_news = c.news()
        df_evt = c.events()
    """
    def __init__(
        self,
        source: str = "vci",
        symbol: str = None,
        random_agent: bool = False,
        show_log: bool = False
    ):
        # Validate the source to only accept vci or tcbs
        if source.lower() not in ["vci", "tcbs"]:
            raise ValueError("Lớp Company chỉ nhận giá trị tham số source là 'VCI' hoặc 'TCBS'.")
        # BaseAdapter will discover vnstock.explorer.<real_source>.company
        # and pass only the kwargs its __init__ accepts (random_agent, show_log).
        super().__init__(
            source=source,
            symbol=symbol,
            random_agent=random_agent,
            show_log=show_log
        )


    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def overview(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve company overview data."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def shareholders(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve company shareholders data."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def officers(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve company officers data.
        Supports kwargs like filter_by='working'|'resigned'|'all'.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def subsidiaries(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve company subsidiaries data.
        Supports kwargs like filter_by='all'|'subsidiary'.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def affiliate(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve company affiliate data."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def news(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve company news."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def events(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve company events."""
        pass



================================================
FILE: vnstock/api/financial.py
================================================
# vnstock/api/financial.py

from typing import Any
from tenacity import retry, stop_after_attempt, wait_exponential
from vnstock.config import Config
from vnstock.base import BaseAdapter, dynamic_method

class Finance(BaseAdapter):
    _module_name = "financial"
    """
    Adapter for financial reports:
      - balance_sheet
      - income_statement
      - cash_flow
      - ratio

    Usage:
        f = Finance(source="vci", symbol="VCI", period="quarter", get_all=True, show_log=True)
        df_bs = f.balance_sheet(period="annual", lang="en", dropna=True)
        df_is = f.income_statement(lang="vi")
        df_cf = f.cash_flow()
        df_rat = f.ratio(flatten_columns=True, separator="_")
    """

    def __init__(
        self,
        source: str,
        symbol: str,
        period: str = "quarter",
        get_all: bool = True,
        show_log: bool = False
    ):
        # Validate the source to only accept vci or tcbs
        if source.lower() not in ["vci", "tcbs"]:
            raise ValueError("Lớp Finance chỉ nhận giá trị tham số source là 'VCI' hoặc 'TCBS'.")
        # Validate the period to accept only year or quarter
        if period.lower() not in ["year", "quarter"]:
            raise ValueError("Lớp Finance chỉ nhận giá trị tham số period là 'year' hoặc 'quarter'.")
        # Forward all to the provider’s constructor (symbol, period, get_all, show_log)
        super().__init__(
            source=source,
            symbol=symbol,
            period=period,
            get_all=get_all,
            show_log=show_log
        )

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def balance_sheet(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve balance sheet data.
        Forwards supported kwargs (e.g., period, lang, dropna, show_log).
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def income_statement(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve income statement data.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def cash_flow(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve cash flow statement data.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def ratio(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve financial ratios.
        Supports provider kwargs like flatten_columns, separator, drop_levels, etc.
        """
        pass



================================================
FILE: vnstock/api/listing.py
================================================
# vnstock/api/listing.py

from typing import Any
from tenacity import retry, stop_after_attempt, wait_exponential
from vnstock.config import Config
from vnstock.base import BaseAdapter, dynamic_method

class Listing(BaseAdapter):
    _module_name = "listing"
    """
    Adapter for listing data:
      - all_symbols
      - symbols_by_industries
      - symbols_by_exchange
      - industries_icb
      - symbols_by_group
      - all_future_indices
      - all_government_bonds
      - all_covered_warrant
      - all_bonds

    Usage:
        lst = Listing(source="vci", random_agent=False, show_log=True)
        df = lst.all_symbols(to_df=True)
        df2 = lst.symbols_by_exchange(lang="en")
        idx = lst.industries_icb()
        group = lst.symbols_by_group(group="VN30")
        fu = lst.all_future_indices()
    """
    def __init__(
        self,
        source: str = "vci",
        random_agent: bool = False,
        show_log: bool = False
    ):
        # Validate the source to only accept vci or msn
        if source.lower() not in ["vci", "msn"]:
            raise ValueError("Lớp Listing chỉ nhận giá trị tham số source là 'VCI' hoặc 'MSN'.")
        # BaseAdapter will discover vnstock.explorer.<real_source>.listing
        # and pass only the kwargs its __init__ accepts (random_agent, show_log).
        super().__init__(
            source=source,
            random_agent=random_agent,
            show_log=show_log
        )

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def all_symbols(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve all symbols (filtered to STOCK)."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def symbols_by_industries(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve symbols grouped by ICB industries."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def symbols_by_exchange(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve symbols by exchange/board."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def industries_icb(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve ICB code hierarchy and mapping."""
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def symbols_by_group(self, *args: Any, **kwargs: Any) -> Any:
        """Retrieve symbols by predefined group (VN30, HNX30, CW, etc.)."""
        pass

    # shortcuts that delegate to symbols_by_group
    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    def all_future_indices(self, **kwargs: Any) -> Any:
        """Retrieve all futures indices (group='FU_INDEX')."""
        return self.symbols_by_group(group="FU_INDEX", **kwargs)

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    def all_government_bonds(self, **kwargs: Any) -> Any:
        """Retrieve all government bonds (group='FU_BOND')."""
        return self.symbols_by_group(group="FU_BOND", **kwargs)

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    def all_covered_warrant(self, **kwargs: Any) -> Any:
        """Retrieve all covered warrants (group='CW')."""
        return self.symbols_by_group(group="CW", **kwargs)

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    def all_bonds(self, **kwargs: Any) -> Any:
        """Retrieve all bonds (group='BOND')."""
        return self.symbols_by_group(group="BOND", **kwargs)



================================================
FILE: vnstock/api/quote.py
================================================
"""
vnstock/api/quote.py

Unified Quote adapter with dynamic method detection and parameter filtering.
"""

from typing import Any
from tenacity import retry, stop_after_attempt, wait_exponential
from vnstock.config import Config
from vnstock.base import BaseAdapter, dynamic_method


class Quote(BaseAdapter):
    _module_name = "quote"
    """
    Adapter for historical and intraday quote data.

    Usage:
        q = Quote(source="vci", symbol="VCI", random_agent=False, show_log=True)
        df = q.history(start="2024-01-01", end="2024-04-18", interval="1D")
        df2 = q.intraday(page_size=100)
        depth = q.price_depth()
    """
    def __init__(
        self,
        source: str = "vci",
        symbol: str = "",
        random_agent: bool = False,
        show_log: bool = False
    ):
        # Validate the source to only accept vci or tcbs or msn
        if source.lower() not in ["vci", "tcbs", "msn"]:
            raise ValueError("Lớp Quote chỉ nhận giá trị tham số source là 'VCI' hoặc 'TCBS' hoặc 'MSN'.")
        # BaseAdapter will discover vnstock.explorer.<real_source>.quote
        # and pass only the kwargs its __init__ accepts (symbol, random_agent, show_log).
        super().__init__(
            source=source,
            symbol=symbol,
            random_agent=random_agent,
            show_log=show_log
        )

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def history(self, *args: Any, **kwargs: Any) -> Any:
        """
        Load historical OHLC data for the symbol.

        Forwards only supported kwargs to provider.history().
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def intraday(self, *args: Any, **kwargs: Any) -> Any:
        """
        Load intraday trade data for the symbol.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def price_depth(self, *args: Any, **kwargs: Any) -> Any:
        """
        Load price depth (order book) data for the symbol.
        """
        pass



================================================
FILE: vnstock/api/screener.py
================================================
import pandas as pd
from vnstock.explorer.tcbs.screener import Screener as TCBS_Screener

class Screener:
    """
    API adapter for the TCBS stock screener.
    Supports only the 'tcbs' data source.
    """
    SUPPORTED_SOURCES = ["tcbs"]

    def __init__(self, source: str = "tcbs", random_agent: bool = False, show_log: bool = False):
        """
        Initialize the Screener adapter.

        Args:
            source: Data source identifier, must be 'tcbs'.
            random_agent: Whether to use a random User-Agent in HTTP headers.
            show_log: Whether to enable debug logging.
        """
        src = source.lower()
        if src not in self.SUPPORTED_SOURCES:
            raise ValueError(f"Unsupported source: {source}. Only 'tcbs' is supported.")
        self.source = src
        self.client = TCBS_Screener(random_agent=random_agent, show_log=show_log)

    def stock(
        self,
        params: dict = None,
        limit: int = 50,
        id: str = None,
        lang: str = "vi"
    ) -> pd.DataFrame:
        """
        Run a stock screen with given filters.

        Args:
            params: Filter parameters, e.g. {"exchangeName": "HOSE,HNX,UPCOM"}.
            limit: Number of results to return.
            id: Optional screener ID.
            lang: Language code for multi-language fields ('vi' or 'en').

        Returns:
            pd.DataFrame: Screened stock data.
        """
        # Default to all exchanges if no params provided
        if params is None:
            params = {"exchangeName": "HOSE,HNX,UPCOM"}
        # Delegate to underlying TCBS Screener
        return self.client.stock(params=params, limit=limit, id=id, lang=lang)



================================================
FILE: vnstock/api/trading.py
================================================
"""
vnstock/api/trading.py

Unified Trading adapter with dynamic method detection and parameter filtering.
"""

import inspect
from typing import Any
from tenacity import retry, stop_after_attempt, wait_exponential
from vnstock.config import Config
from vnstock.base import BaseAdapter, dynamic_method


class Trading(BaseAdapter):
    _module_name = "trading"
    """
    Adapter for trading data: trading_stats, side_stats, price_board.

    Usage:
        t = Trading(source="vci", symbol="VCI", random_agent=False, show_log=True)
        df = t.trading_stats(start="2024-01-01", end="2024-12-31", limit=1000)
        bids, asks = t.side_stats(dropna=True)
        board = t.price_board(symbols_list=["VCI", "VCB"], **kwargs)
    """
    def __init__(
        self,
        source: str = "vci",
        symbol: str = "",
        random_agent: bool = False,
        show_log: bool = False
    ):
        # Validate to accept vci, tcbs as source
        if source.lower() not in ["vci", "tcbs"]:
            raise ValueError("Lớp Trading chỉ nhận giá trị tham số source là 'VCI' hoặc 'TCBS'.")
        super().__init__(
            source=source,
            symbol=symbol,
            random_agent=random_agent,
            show_log=show_log
        )

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def trading_stats(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve trading statistics for the given symbol.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def side_stats(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve bid/ask side statistics for the given symbol.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def price_board(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve the price board (order book) for a list of symbols.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )

    @dynamic_method
    def price_history(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve the price history for a list of symbols.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
        
    @dynamic_method
    def foreign_trade(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve foreign trade data for the given symbol.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def prop_trade(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve property trade data for the given symbol.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def insider_deal(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve insider deal data for the given symbol.
        """
        pass

    @retry(
        stop=stop_after_attempt(Config.RETRIES),
        wait=wait_exponential(
            multiplier=Config.BACKOFF_MULTIPLIER,
            min=Config.BACKOFF_MIN,
            max=Config.BACKOFF_MAX
        )
    )
    @dynamic_method
    def order_stats(self, *args: Any, **kwargs: Any) -> Any:
        """
        Retrieve order statistics for the given symbol.
        """
        pass
            



================================================
FILE: vnstock/botbuilder/__init__.py
================================================



================================================
FILE: vnstock/botbuilder/noti.py
================================================
import requests
import json
from typing import Union, Dict
from vnstock.core.utils.env import get_path_delimiter

class Messenger:
    def __init__(self, platform:str, channel:Union[str, None], token_key:Union[str, int]):
        """
        Initialize a Messenger object with the platform, channel, and token key.

        Args:
            platform (str): Name of the messaging platform, e.g., 'slack', 'telegram', 'lark'.
            channel (str): Name of the target channel in Slack e.g., '#market_news' or Telegram group id e.g '-1001439492355'.
            token_key (str): 
                Slack: Bot token (start with 'xoxb-..') or user token (start with 'xoxp-..').
                Telegram: Token key for the Telegram bot.
                Lark: Webhook token for the Lark Botbuilder. For example, it's 1234hbhfdt56456ljkfftdre4587 in the webhook url https://botbuilder.larksuite.com/api/trigger-webhook/1234hbhfdt56456ljkfftdre4587 from Lark Botbuilder Flow.
        
        Returns:
            Messenger object.
        """
        self.platform = platform
        self.channel = channel
        self.token_key = token_key
        self._validation()

    def _validation(self):
        """
        Validate the Messenger object's attributes.

        Returns:
            raise ValueError if any of the attributes are invalid.
            return raw value if all attributes are valid.
        """
        if self.platform not in ['slack', 'telegram', 'lark']:
            raise ValueError('Invalid platform. Supported platforms are "slack", "telegram", and "lark".')
        if self.token_key is None:
            raise ValueError('Token key is required for messaging!')
        if self.platform == 'slack' and self.token_key[0:4] != 'xoxb' and self.token_key[0:4] != 'xoxp':
            raise ValueError('Invalid token key for Slack. Bot token must start with "xoxb-" and user token must start with "xoxp-".')
        
        if self.platform == 'slack':
            if self.channel is None:
                raise ValueError('Channel name is required for Slack messaging!')
            elif self.channel[0] != '#':
                raise ValueError('Channel name must start with "#" for Slack messaging!')
        elif self.platform == 'telegram':
            if self.channel is None:
                raise ValueError('Channel name is required for Telegram messaging!')
            elif self.channel[0] != '-':
                raise ValueError('Channel name must start with "-" for Telegram messaging!. For example, "-1001439492355".')
        elif self.platform == 'lark':
            if self.channel is not None:
                raise ValueError('Channel name is not required for Lark messaging!')


    def send_message(self, message:str, file_path:Union[str, None]=None, title:Union[str, None]=None):
        """
        Send a message to a channel or group using the specified platform.
        """
        if self.platform == 'slack':
            if file_path is not None:
                return self._slack_file(message, file_path, title)
            else:
                return self._slack_message(message)
        
        elif self.platform == 'telegram':
            if file_path is not None:
                return self._telegram_photo(message, file_path)
            else:
                return self._telegram_message(message)

    def _slack_file(self, text_comment, file_path, title=None):
        """
        Send a file to a Slack channel using either a bot or a user token.

        Args:
            text_comment (str): Text comment for the file.
            file_path (str): Path to the target file.
            title (str): Optional title for the file.

        Returns:
            dict: Response from the Slack API in JSON format.
        """      
        file_name = file_path.split(get_path_delimiter())[-1]
        file_type = file_name.split('.')[-1]
        file_bytes = open(file_path, 'rb').read()
        url = 'https://slack.com/api/files.upload'
        payload = {
            'token': self.token_key,
            'filename': file_name,
            'channels': self.channel,
            'filetype': file_type,
            'initial_comment': text_comment,
            'title': title
        }
        r = requests.post(url, payload, files={'file': file_bytes})
        return r.json()
    
    def _slack_message(self, message):
        """
        Send a message to a Slack channel using either a bot or a user token.

        Args:
            message (str): Text message for the file.

        Returns:
            dict: Response from the Slack API in JSON format.
        """

        header = {
            'Content-type': 'application/json; charset=utf-8',
            'Authorization': 'Bearer {}'.format(self.token_key)
        }
        payload = json.dumps({
            "channel": "{}".format(self.channel),
            "text": "{}".format(message)
        })
        response = requests.post('https://slack.com/api/chat.postMessage', data=payload, headers=header)

        return response.json()

    def _telegram_photo(self, message, file_path):
        """
        Send a photo to a Telegram group.

        Args:
            message (str): Your text message.
            file_path (str): Path of the file/photo to send via Telegram.

        Returns:
            object: Response object from the Telegram API.
        """
        file_type = file_path.split('.')[-1]
        if file_type not in ['jpg', 'jpeg', 'png', 'webp']:
            raise ValueError('Invalid file type. Telegram only supports JPG, JPEG, PNG, and WEBP formats.')
        file_name = file_path.split(get_path_delimiter())[-1][0]
        files = [('photo', (file_name, open(file_path, 'rb'), f'image/{file_type}'))]
        url = 'https://api.telegram.org/bot{}/sendPhoto'.format(self.token_key)
        payload = {'chat_id': self.channel, 'caption': message}
        response = requests.post(url, headers={}, data=payload, files=files)
        return response
         
    def _telegram_message(self, message):
        """
        Send a message to a Telegram group.

        Args:
            message (str): Your text message.

        Returns:
            object: Response object from the Telegram API.
        """
        url = 'https://api.telegram.org/bot{}/sendMessage?chat_id={}&text={}'.format(self.token_key, self.channel, message) # thêm chữ bot trước token so với code cũ
        response = requests.post(url)
        return response.json()

    def _lark_message(self, message:str, payload:Union[Dict, None]=None):
        """
        Send a message to a Lark Botbuilder Webhook.

        Args:
            message (str): Your text message.
            payload (dict): Optional payload for the message.
        Returns:
            object: Response object from the Lark API.
        """
        # validate payload shoule be None or dict
        url = f'https://botbuilder.larksuite.com/api/trigger-webhook/{self.token_key}'
        if payload is None:
            payload = {'content' : message}
        else:
            payload = message
        response = requests.post(url, json=payload)
        return response.json()


================================================
FILE: vnstock/common/__init__.py
================================================
from vnstock.core.utils.env import id_valid
from vnstock.core.utils.upgrade import update_notice
from vnstock.common.data.data_explorer import StockComponents, MSNComponents, Quote, Listing, Trading, Company, Finance, Screener, Fund
id_valid()
update_notice()


================================================
FILE: vnstock/common/cli.py
================================================
## WORKS
## sample command: stock quote history --symbol ACB --start 2024-01-02 --end 2024-07-10 --interval 1D

import click
from vnstock import Vnstock
import logging
import click_repl

# Configure logging to show only critical messages
logging.basicConfig(level=logging.CRITICAL)

@click.group(invoke_without_command=True)
@click.pass_context
def cli(ctx):
    """VNStock CLI"""
    ctx.ensure_object(dict)
    if ctx.invoked_subcommand is None:
        click_repl.repl(ctx, prompt_kwargs={'message': '> '})

@cli.command()
def quit():
    """Quit the REPL"""
    raise EOFError()

@cli.command()
def exit():
    """Exit the REPL"""
    raise EOFError()

@cli.group()
@click.pass_context
def stock(ctx):
    """Commands related to stock data"""
    pass

@stock.group()
@click.option('--source', default='VCI', help='Data source')
@click.pass_context
def quote(ctx, source):
    """Quote commands"""
    ctx.obj['source'] = source

@quote.command()
@click.option('--symbol', required=True, help='Stock symbol to retrieve data for.')
@click.option('--start', required=True, help='Start date for historical data')
@click.option('--end', required=True, help='End date for historical data')
@click.option('--interval', default='1D', help='Interval for historical data')
@click.pass_context
def history(ctx, symbol, start, end, interval):
    """Get historical data"""
    source = ctx.obj['source']
    quote = Vnstock(source=source).stock(symbol=symbol).quote
    data = quote.history(start=start, end=end, interval=interval)
    click.echo(data)

if __name__ == '__main__':
    cli()


================================================
FILE: vnstock/common/vnstock.py
================================================
import importlib
from typing import Optional
import logging
from vnstock.core.utils.logger import get_logger
from vnstock.common.data.data_explorer import StockComponents, MSNComponents, Fund
from vnstock.explorer.msn.const import _CURRENCY_ID_MAP, _GLOBAL_INDICES, _CRYPTO_ID_MAP

logger = get_logger(__name__)

class Vnstock:
    """
    Class (lớp) chính quản lý các chức năng của thư viện Vnstock.
    """
    
    SUPPORTED_SOURCES = ["VCI", "TCBS", "MSN"]
    msn_symbol_map = {**_CURRENCY_ID_MAP, **_GLOBAL_INDICES, **_CRYPTO_ID_MAP}

    def __init__(self, symbol:str=None, source:str="VCI", show_log:bool=True):
        """
        Hàm khởi tạo của lớp Vnstock.
        
        Tham số:
            - source (str): Nguồn dữ liệu chứng khoán. Mặc định là 'VCI' (Vietstock). Các giá trị hợp lệ là 'VCI', 'TCBS', 'MSN'.
            - show_log (bool): Hiển thị log hoạt động của chương trình. Mặc định là True.
        """
        self.symbol = symbol
        self.source = source.upper()
        self.show_log = show_log
        if self.source not in self.SUPPORTED_SOURCES:
            raise ValueError(F"Hiện tại chỉ có nguồn dữ liệu từ {', '.join(self.SUPPORTED_SOURCES)} được hỗ trợ.")
        self.source = source.upper()
        # if show_log is False, disable logging
        if not show_log:
            logger.setLevel(logging.CRITICAL)
        # self.utils = Utils(self)

    def stock(self, symbol: Optional[str]=None, source: Optional[str] = None):
        if symbol is None:
            self.symbol = 'VN30F1M'
            logger.info("Mã chứng khoán không được chỉ định, chương trình mặc định sử dụng VN30F1M")
        else:
             self.symbol = symbol
 
        if source is None:
            source = self.source
        else:
            self.symbol = symbol
             
        return StockComponents(self.symbol, source, show_log=self.show_log)
    
    def fx(self, symbol: Optional[str]='EURUSD', source: Optional[str] = "MSN"):
        if symbol:
            self.symbol = self.msn_symbol_map[symbol]
        return MSNComponents(self.symbol, source)
    
    def crypto(self, symbol: Optional[str]='BTC', source: Optional[str] = "MSN"):
        if symbol:
            self.symbol = self.msn_symbol_map[symbol]
        return MSNComponents(self.symbol, source)
    
    def world_index(self, symbol: Optional[str]='DJI', source: Optional[str] = "MSN"):
        if symbol:
            self.symbol = self.msn_symbol_map[symbol]
        return MSNComponents(self.symbol, source)
    
    def fund(self, source: Optional[str] = "FMARKET"):
        return Fund(source)



================================================
FILE: vnstock/common/data/__init__.py
================================================
from .data_explorer import *


================================================
FILE: vnstock/common/data/data_explorer.py
================================================
import logging
import importlib
import pandas as pd
from typing import Optional, Any, Dict
from functools import lru_cache
from tenacity import retry, stop_after_attempt, wait_exponential

from vnstock.core.utils.logger import get_logger
from vnstock.explorer.msn.const import _CURRENCY_ID_MAP, _GLOBAL_INDICES, _CRYPTO_ID_MAP
from vnstock.core.utils.parser import get_asset_type

logger = get_logger(__name__)

class Config:
    DEFAULT_SOURCE = "VCI"
    DEFAULT_TIMEOUT = 30  # seconds
    DEFAULT_RETRIES = 3
    CACHE_SIZE = 128
    LOG_LEVEL = logging.INFO
    
    @classmethod
    def setup(cls, **kwargs):
        for key, value in kwargs.items():
            if hasattr(cls, key):
                setattr(cls, key, value)
                logger.info(f"Updated config: {key}={value}")

class BaseComponent:
    SUPPORTED_SOURCES = []
    
    def __init__(self, symbol: Optional[str] = None, source: str = Config.DEFAULT_SOURCE):
        self.symbol = symbol.upper() if symbol else None
        self.source = source.upper()
        self._validate_source()
        self.source_module = f"vnstock.explorer.{self.source.lower()}"
        self.data_source = self._load_data_source()
    
    def _validate_source(self) -> None:
        if self.source not in self.SUPPORTED_SOURCES:
            raise ValueError(f"Chỉ có nguồn dữ liệu từ {', '.join(self.SUPPORTED_SOURCES)} được hỗ trợ.")
    
    def _load_data_source(self):
        raise NotImplementedError("Phương thức này phải được triển khai bởi các lớp con")

class StockComponents(BaseComponent):
    SUPPORTED_SOURCES = ["VCI", "TCBS", "MSN"]

    def __init__(self, symbol: str, source: str = Config.DEFAULT_SOURCE, show_log: bool = True):
        super().__init__(symbol, source)
        self.show_log = show_log
        self.asset_type = get_asset_type(self.symbol)
        if not show_log:
            logger.setLevel(logging.CRITICAL)
        self._initialize_components()

    def _initialize_components(self):
        if self.asset_type == "stock":
            self.company = Company(self.symbol, source=self.source)
            self.finance = Finance(self.symbol, source=self.source)
        else:
            self.company = None
            self.finance = None
            logger.info("Không phải là mã chứng khoán, thông tin công ty và tài chính không khả dụng.")
        
        if self.source in ['VCI', 'TCBS']:
            self.listing = Listing(source='VCI')
            self.screener = Screener(source='TCBS')
            self.quote = Quote(self.symbol, self.source)
            self.trading = Trading(self.symbol, source=self.source)
        
            if self.source == 'TCBS':
                logger.info("TCBS không cung cấp thông tin danh sách. Dữ liệu tự động trả về từ VCI.")
            # elif self.source == 'VCI':
            #     logger.info("Nguồn VCI không hỗ trợ dữ liệu bộ lọc cổ phiếu. Dữ liệu tự động trả về từ TCBS.")
        elif self.source == 'MSN':
            self.quote = Quote(self.symbol, 'MSN')
            self.listing = Listing(source='MSN')

    def _load_data_source(self):
        """
        StockComponents không trực tiếp tải một nguồn dữ liệu đơn lẻ 
        mà khởi tạo nhiều thành phần khác nhau.
        
        Returns:
            self: Trả về chính đối tượng này vì nó quản lý nhiều nguồn dữ liệu.
        """
        # This class doesn't need to load a specific data source like other components
        # Instead, it initializes multiple components in _initialize_components
        return self

    def update_symbol(self, symbol: str):
        self.symbol = symbol.upper()
        self._initialize_components()

class Quote(BaseComponent):
    SUPPORTED_SOURCES = ["VCI", "TCBS", "MSN"]

    def __init__(self, symbol: str, source: str = Config.DEFAULT_SOURCE):
        super().__init__(symbol, source)

    def _load_data_source(self):
        module = importlib.import_module(self.source_module)
        return module.Quote(self.symbol.lower() if self.source == "MSN" else self.symbol)
    
    def _update_data_source(self, symbol: Optional[str] = None):
        if symbol:
            self.symbol = symbol.upper()
            self.data_source = self._load_data_source()
    
    @retry(stop=stop_after_attempt(Config.DEFAULT_RETRIES), wait=wait_exponential(multiplier=1, min=2, max=10))
    def history(self, symbol: Optional[str] = None, **kwargs):
        if self.source == "MSN":
            symbol_map = {**_CURRENCY_ID_MAP, **_GLOBAL_INDICES, **_CRYPTO_ID_MAP}
            if symbol:
                self.symbol = symbol_map[symbol]
                logger.info(f"Chuyển đổi {symbol} thành tên mã MSN: {self.symbol}")
        self._update_data_source(symbol)
        return self.data_source.history(**kwargs)
    
    @retry(stop=stop_after_attempt(Config.DEFAULT_RETRIES), wait=wait_exponential(multiplier=1, min=2, max=10))
    def intraday(self, symbol: Optional[str] = None, **kwargs):
        self._update_data_source(symbol)
        return self.data_source.intraday(**kwargs)
    
    @retry(stop=stop_after_attempt(Config.DEFAULT_RETRIES), wait=wait_exponential(multiplier=1, min=2, max=10))
    def price_depth(self, symbol: Optional[str] = None, **kwargs):
        self._update_data_source(symbol)
        return self.data_source.price_depth(**kwargs)

class Listing(BaseComponent):
    SUPPORTED_SOURCES = ["VCI", "MSN"]

    def __init__(self, source: str = Config.DEFAULT_SOURCE):
        super().__init__(source=source)

    def _load_data_source(self):
        module = importlib.import_module(self.source_module)
        return module.Listing()

    @lru_cache(maxsize=Config.CACHE_SIZE)
    def all_symbols(self, **kwargs):
        return self.data_source.all_symbols(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def symbols_by_industries(self, **kwargs):
        return self.data_source.symbols_by_industries(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def symbols_by_exchange(self, **kwargs):
        return self.data_source.symbols_by_exchange(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def symbols_by_group(self, group='VN30', **kwargs):
        return self.data_source.symbols_by_group(group, **kwargs)

    @lru_cache(maxsize=Config.CACHE_SIZE)
    def industries_icb(self, **kwargs):
        return self.data_source.industries_icb(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def all_future_indices(self, **kwargs):
        return self.data_source.all_future_indices(**kwargs)

    @lru_cache(maxsize=Config.CACHE_SIZE)
    def all_covered_warrant(self, **kwargs):
        return self.data_source.all_covered_warrant(**kwargs)

    @lru_cache(maxsize=Config.CACHE_SIZE)
    def all_bonds(self, **kwargs):
        return self.data_source.all_bonds(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def all_government_bonds(self, **kwargs):
        return self.data_source.all_government_bonds(**kwargs)

class Trading(BaseComponent):
    SUPPORTED_SOURCES = ["VCI", "TCBS"]

    def __init__(self, symbol: Optional[str] = 'VN30F1M', source: str = Config.DEFAULT_SOURCE):
        super().__init__(symbol, source)

    def _load_data_source(self):
        module = importlib.import_module(self.source_module)
        return module.Trading(self.symbol)
    
    def _update_data_source(self, symbol: Optional[str] = None):
        if symbol:
            self.symbol = symbol.upper()
        self.data_source = self._load_data_source()
    
    @retry(stop=stop_after_attempt(Config.DEFAULT_RETRIES), wait=wait_exponential(multiplier=1, min=2, max=10))
    def price_board(self, symbols_list: list, **kwargs):
        return self.data_source.price_board(symbols_list, **kwargs)

class Company(BaseComponent):
    SUPPORTED_SOURCES = ["TCBS", "VCI"]

    def __init__(self, symbol: Optional[str] = 'ACB', source: str = "TCBS"):
        super().__init__(symbol, source)

    def _load_data_source(self):
        module = importlib.import_module(self.source_module)
        return module.Company(self.symbol)
    
    def _update_data_source(self, symbol: Optional[str] = None):
        if symbol:
            self.symbol = symbol.upper()
            self.data_source = self._load_data_source()

    @lru_cache(maxsize=Config.CACHE_SIZE)
    def overview(self, **kwargs):
        return self.data_source.overview(**kwargs)

    @lru_cache(maxsize=Config.CACHE_SIZE)
    def profile(self, **kwargs):
        return self.data_source.profile(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def shareholders(self, **kwargs):
        return self.data_source.shareholders(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def insider_deals(self, **kwargs):
        return self.data_source.insider_deals(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def subsidiaries(self, **kwargs):
        return self.data_source.subsidiaries(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def officers(self, **kwargs):
        return self.data_source.officers(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def events(self, **kwargs):
        return self.data_source.events(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def news(self, **kwargs):
        return self.data_source.news(**kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def dividends(self, **kwargs):
        return self.data_source.dividends(**kwargs)

class Finance(BaseComponent):
    SUPPORTED_SOURCES = ["TCBS", "VCI"]
    SUPPORTED_PERIODS = ["quarter", "annual"]

    def __init__(
        self, 
        symbol: str, 
        period: str = 'quarter', 
        source: str = 'TCBS', 
        get_all: bool = True
    ):
        super().__init__(symbol, source)
        self.period = period.lower()
        if self.period not in self.SUPPORTED_PERIODS:
            raise ValueError(f"Period must be one of {', '.join(self.SUPPORTED_PERIODS)}")
        self.get_all = get_all

    def _load_data_source(self):
        module = importlib.import_module(self.source_module)
        return module.Finance(self.symbol)
    
    def _update_data_source(self, symbol: Optional[str] = None):
        if symbol:
            self.symbol = symbol.upper()
            try:
                self.data_source = self._load_data_source()
            except (ImportError, AttributeError) as e:
                logger.error(f"Cannot update data source: {e}")
                raise

    def _process_kwargs(self, kwargs: Dict[str, Any]) -> Dict[str, Any]:
        allowed_kwargs = ['lang', 'dropna', 'period', 'show_log']
        processed_kwargs = {k: v for k, v in kwargs.items() if k in allowed_kwargs}
        
        if self.source == 'TCBS':
            if 'lang' in processed_kwargs:
                logger.info('TCBS only supports Vietnamese reports')
                processed_kwargs.pop('lang')
            if 'dropna' in processed_kwargs:
                logger.info('Tham số dropna không được hỗ trợ cho nguồn dữ liệu TCBS')
                processed_kwargs.pop('dropna')

        if 'period' not in processed_kwargs:
            processed_kwargs['period'] = self.period
            
        return processed_kwargs

    def _get_financial_data(self, data_type: str, symbol: Optional[str] = None, **kwargs) -> Any:
        self._update_data_source(symbol)
        processed_kwargs = self._process_kwargs(kwargs)
        
        try:
            method = getattr(self.data_source, data_type)
            return method(**processed_kwargs)
        except AttributeError:
            logger.error(f"Nguồn dữ liệu {self.source} không hỗ trợ dữ liệu {data_type}")
            raise
        except Exception as e:
            logger.error(f"Lỗi khi truy xuất dữ liệu {data_type}: {e}")
            raise

    @lru_cache(maxsize=Config.CACHE_SIZE)
    def balance_sheet(self, symbol: Optional[str] = None, **kwargs) -> Any:
        return self._get_financial_data('balance_sheet', symbol, **kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def income_statement(self, symbol: Optional[str] = None, **kwargs) -> Any:
        return self._get_financial_data('income_statement', symbol, **kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def cash_flow(self, symbol: Optional[str] = None, **kwargs) -> Any:
        return self._get_financial_data('cash_flow', symbol, **kwargs)
    
    @lru_cache(maxsize=Config.CACHE_SIZE)
    def ratio(self, symbol: Optional[str] = None, **kwargs) -> Any:
        return self._get_financial_data('ratio', symbol, **kwargs)

class Screener(BaseComponent): 
    SUPPORTED_SOURCES = ["TCBS"]

    def __init__(self, source: str = "TCBS"):
        super().__init__(source=source)

    def _load_data_source(self):
        module = importlib.import_module(self.source_module)
        return module.Screener()
    
    @retry(stop=stop_after_attempt(Config.DEFAULT_RETRIES), wait=wait_exponential(multiplier=1, min=2, max=10))
    def stock(self, **kwargs):
        allowed_kwargs = ['params', 'limit', 'lang']
        processed_kwargs = {k: v for k, v in kwargs.items() if k in allowed_kwargs}
        return self.data_source.stock(**processed_kwargs)

class Fund(BaseComponent):
    SUPPORTED_SOURCES = ["FMARKET"]

    def __init__(self, source: str = "FMARKET", random_agent: bool = False):
        super().__init__(source=source)
        self.random_agent = random_agent
        self.details = self.data_source.details

    def _load_data_source(self):
        module = importlib.import_module(self.source_module)
        return module.Fund(self.random_agent)

class MSNComponents:
    """
    Class (lớp) quản lý các chức năng của thư viện Vnstock liên quan đến thị trường ngoại hối.
    """
    def __init__(self, symbol: Optional[str]='EURUSD', source: str = "MSN"):
        self.symbol = symbol.upper()
        self.source = source.upper()
        if self.source not in ["MSN"]:
            raise ValueError("Hiện tại chỉ có nguồn dữ liệu từ MSN được hỗ trợ.")
        self._initialize_components()

    def _initialize_components(self):
        # Initialize each sub-component with the current symbol
        self.quote = Quote(self.symbol, self.source)
        self.listing = Listing(source=self.source)

        if self.source != "MSN":    
            logger.warning("Thông tin niêm yết sẽ được truy xuất từ MSN")

    def update_symbol(self, symbol: str):
        """
        Update the symbol for all sub-components.
        """
        self.symbol = symbol.upper()
        self._initialize_components()



================================================
FILE: vnstock/common/plot/__init__.py
================================================
from .chart_wrapper import Chart


================================================
FILE: vnstock/common/plot/chart_wrapper.py
================================================
# vnstock/common/chart_wrapper.py

import pandas as pd
from vnstock_ezchart.mplot import MPlot, Utils
from vnstock.core.utils.logger import get_logger

logger = get_logger(__name__)

class Chart:
    """
    A wrapper class for creating various types of charts using data from a pandas DataFrame or Series.

    This class integrates the MPlot library for plotting and Utils for additional utilities.
    """

    def __init__(self, data):
        """
        Initialize the Chart instance with the provided data.

        Args:
            data (pd.DataFrame or pd.Series): The data to be visualized.
        """
        self.data = data
        self.chart = MPlot()
        self.utils = Utils()
        self.validate_data()
        self._add_utils_methods()

    def validate_data(self):
        """
        Validate the input data to ensure it is a pandas DataFrame or Series.

        Raises:
            ValueError: If the data is not a pandas DataFrame or Series.
        """
        if not isinstance(self.data, (pd.DataFrame, pd.Series)):
            raise ValueError("Data must be a pandas DataFrame or Series")
        # Ensure datetime index
        if isinstance(self.data.index, pd.DatetimeIndex):
            self.data.index = pd.to_datetime(self.data.index)

    def _add_utils_methods(self):
        """
        Dynamically add methods from the Utils class to the Chart instance.
        """
        for method_name in dir(self.utils):
            if not method_name.startswith("__"):
                method = getattr(self.utils, method_name)
                if callable(method):
                    setattr(self, method_name, method)

    def help(self, func_name):
        """
        Display the docstring for a specified function.

        Args:
            func_name (str): The name of the function to display the docstring for.
        """
        return self.chart.help(func_name)

    def bar(self, **kwargs):
        """
        Plot a bar chart.

        Args:
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.bar(self.data, **kwargs)

    def hist(self, **kwargs):
        """
        Plot a histogram.

        Args:
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.hist(self.data, **kwargs)

    def pie(self, labels=None, values=None, **kwargs):
        """
        Plot a pie chart.

        Args:
            labels (str, list, pd.Series, optional): Labels for each slice.
                - If str, it should be a column name in the DataFrame.
                - If list or pd.Series, it will be used directly as labels.
            values (str, optional): A column name to use as values for each slice.
                If you are plotting on a Series, this argument is not required,
                instead the index is used.
            **kwargs: Additional arguments to pass to the plot function.

        Raises:
            ValueError: If the data is not a pandas DataFrame or Series.
        """
        if isinstance(self.data, pd.DataFrame):
            if values:
                data = self.data[values]
            else:
                data = self.data.index
        elif isinstance(self.data, pd.Series):
            data = self.data
        else:
            raise ValueError("Data must be a pandas DataFrame or Series")

        # Handle labels
        if labels is not None:
            if isinstance(labels, str) and isinstance(self.data, pd.DataFrame) and labels in self.data.columns:
                labels = self.data[labels]
            else:
                labels = pd.Series(labels, index=data.index)

        return self.chart.pie(data, labels, **kwargs)

    def timeseries(self, **kwargs):
        """
        Plot a time series chart.

        Args:
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.timeseries(self.data, **kwargs)

    def heatmap(self, **kwargs):
        """
        Plot a heatmap.

        Args:
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.heatmap(self.data, **kwargs)

    def scatter(self, x, y, **kwargs):
        """
        Plot a scatter chart.

        Args:
            x (str): The column name for the x-axis data.
            y (str): The column name for the y-axis data.
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.scatter(self.data, x, y, **kwargs)

    def treemap(self, values, labels, **kwargs):
        """
        Plot a treemap chart.

        Args:
            values (str or list): Values for the treemap slices.
            labels (str or list): Labels for the treemap slices.
            **kwargs: Additional arguments to pass to the plot function.
        """
        """
        Plot a pie chart.

        Args:
            labels (str, list, pd.Series, optional): Labels for each slice.
                - If str, it should be a column name in the DataFrame.
                - If list or pd.Series, it will be used directly as labels.
            values (str, optional): A column name to use as values for each slice.
                If you are plotting on a Series, this argument is not required,
                instead the index is used.
            **kwargs: Additional arguments to pass to the plot function.

        Raises:
            ValueError: If the data is not a pandas DataFrame or Series.
        """
        if isinstance(self.data, pd.DataFrame):
            if values:
                data = self.data[values]
            else:
                data = self.data.index
        elif isinstance(self.data, pd.Series):
            data = self.data
        else:
            raise ValueError("Data must be a pandas DataFrame or Series")

        # Handle labels
        if labels is not None:
            if isinstance(labels, str) and isinstance(self.data, pd.DataFrame) and labels in self.data.columns:
                labels = self.data[labels]
            else:
                labels = pd.Series(labels, index=data.index)

        return self.chart.treemap(data, labels, **kwargs)

    def boxplot(self, **kwargs):
        """
        Plot a boxplot.

        Args:
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.boxplot(self.data, **kwargs)

    def pairplot(self, **kwargs):
        """
        Plot a pairplot.

        Args:
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.pairplot(self.data, **kwargs)

    def wordcloud(self, show_log=False, **kwargs):
        """
        Plot a word cloud.

        Args:
            show_log (bool, optional): Whether to log the text data.
            **kwargs: Additional arguments to pass to the plot function.
        """
        # if data is a DataFrame, concatenate all columns into a single string
        if isinstance(self.data, pd.DataFrame):
            text = self.data.apply(lambda x: ' '.join(x.dropna().astype(str)), axis=1).str.cat(sep=' ')
        elif isinstance(self.data, pd.Series):
            text = self.data.str.cat(sep=' ')
        # if show_log in kwargs and it is True, log the text
        if show_log:
            logger.info(text)
        return self.chart.wordcloud(text, **kwargs)

    def table(self, **kwargs):
        """
        Plot a table.

        Args:
            **kwargs: Additional arguments to pass to the plot function.
        """
        return self.chart.table(self.data, **kwargs)

    def combo(self, bar_data, line_data, **kwargs):
        """
        Plot a combo chart with both bar and line data.

        Args:
            bar_data (str or list): The column(s) for the bar data.
            line_data (str or list): The column(s) for the line data.
            **kwargs: Additional arguments to pass to the plot function.

        Raises:
            ValueError: If the data is not a pandas DataFrame or Series.
        """
        if isinstance(self.data, pd.DataFrame):
            bar_df = self.data[bar_data]
            line_df = self.data[line_data]
        elif isinstance(self.data, pd.Series):
            bar_df = self.data
            line_df = self.data
        else:
            raise ValueError("Data must be a pandas DataFrame or Series")
        return self.chart.combo_chart(bar_df, line_df, **kwargs)

def _add_viz_property(cls):
    """
    Add the viz property to pandas DataFrame and Series classes.

    Args:
        cls (type): The class to add the viz property to.
    """
    @property
    def viz(self):
        return Chart(self)
    cls.viz = viz

_add_viz_property(pd.DataFrame)
_add_viz_property(pd.Series)



================================================
FILE: vnstock/connector/dnse/__init__.py
================================================
from .trade import Trade


================================================
FILE: vnstock/connector/dnse/trade.py
================================================
import requests
import json
import pandas as pd
from pandas import json_normalize
from typing import Optional

class Trade:
    def __init__(self):
        self.token: Optional[str] = None
        self.trading_token: Optional[str] = None

    def login(self, user_name: str, password: str) -> Optional[str]:
        """
        Authenticate the user and obtain a JWT token for further API requests.

        Args:
            user_name (str): DNSE username. Can be 064CXXXXX, your email, or your phone number.
            password (str): Your DNSE password.

        Returns:
            Optional[str]: JWT token if authentication is successful, None otherwise.
        """
        url = "https://services.entrade.com.vn/dnse-user-service/api/auth"
        payload = json.dumps({'username': user_name, 'password': password})
        headers = {'Content-Type': 'application/json'}
        response = requests.post(url, headers=headers, data=payload)
        if response.status_code == 200:
            print('Login successfully')
            self.token = response.json().get('token')
            return self.token
        else:
            print(f'Login failed: {response.text}')
            return None

    def account(self) -> Optional[pd.DataFrame]:
        """
        Get the full user profile from DNSE.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the user profile if successful, None otherwise.
        """
        url = "https://services.entrade.com.vn/dnse-user-service/api/me"
        headers = {
            'Content-Type': 'text/plain',
            'Authorization': f'Bearer {self.token}'
        }
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            print('Get profile successfully')
            return pd.DataFrame(response.json(), index=[0])
        else:
            print(f'Get profile failed: {response.text}')
            return None

    def sub_accounts(self) -> Optional[pd.DataFrame]:
        """
        Get sub-accounts information.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the sub-accounts information if successful, None otherwise.
        """
        url = "https://services.entrade.com.vn/dnse-order-service/accounts"
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            result = response.json()
            return json_normalize(result.get('accounts', []))
        else:
            print(f"Error: {response.text}")
            return None

    def account_balance(self, sub_account: str) -> Optional[pd.DataFrame]:
        """
        Get account balance for a specific sub-account.

        Args:
            sub_account (str): DNSE sub account number (mã tiểu khoản).

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the account balance if successful, None otherwise.
        """
        url = f"https://services.entrade.com.vn/dnse-order-service/account-balances/{sub_account}"
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            result = response.json()
            return json_normalize(result)
        else:
            print(f"Error: {response.text}")
            return None

    def email_otp(self) -> None:
        """
        Trigger an email OTP request to DNSE. The OTP will be sent to the email address associated with the DNSE account.
        """
        url = "https://services.entrade.com.vn/dnse-auth-service/api/email-otp"
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            print("OTP sent to email")
        else:
            print(f"Error: {response.text}")

    def get_trading_token(self, otp: str, smart_otp: bool = True) -> Optional[str]:
        """
        Authenticate using OTP and get the trading token.

        Args:
            otp (str): OTP code for authentication. Input as a string.
            smart_otp (bool): Indicates if smart OTP is used. Default is True.

        Returns:
            Optional[str]: Trading token if authentication is successful, None otherwise.
        """
        url = "https://services.entrade.com.vn/dnse-order-service/trading-token" if smart_otp else "https://services.entrade.com.vn/dnse-auth-service/api/email-otp"
        headers = {
            "Authorization": f"Bearer {self.token}",
            "smart-otp" if smart_otp else "otp": otp
        }
        response = requests.post(url, headers=headers)
        if response.status_code == 200:
            trading_token = response.json().get("tradingToken")
            print("Authenticated! Trading token returned.")
            self.trading_token = trading_token
            return trading_token
        else:
            print(f"Error authenticating: {response.text}")
            return None

    def loan_packages(self, sub_account: str, asset_type: str = 'stock') -> Optional[pd.DataFrame]:
        """
        Get the list of loan packages for a specific sub account.

        Args:
            sub_account (str): DNSE sub account number (mã tiểu khoản).
            asset_type (str): Asset type, either 'stock' or 'derivative'. Default is 'stock'.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the list of loan packages if successful, None otherwise.
        """
        url = f"https://services.entrade.com.vn/dnse-order-service/accounts/{sub_account}/{'loan-packages' if asset_type == 'stock' else 'derivative-loan-packages'}"
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            result = response.json()
            return json_normalize(result.get('loanPackages', []))
        else:
            print(f"Error: {response.text}")
            return None

    def trade_capacities(self, symbol: str, price: float, sub_account: str, asset_type: str = 'stock', loan_package_id: Optional[int] = None) -> Optional[pd.DataFrame]:
        """
        Get the list of trade capacities (sức mua/bán) for a specific sub account.

        Args:
            symbol (str): Symbol of the asset.
            price (float): Price of the asset, unit is VND.
            sub_account (str): DNSE sub account number (mã tiểu khoản).
            asset_type (str): Asset type, either 'stock' or 'derivative'. Default is 'stock'.
            loan_package_id (Optional[int]): Loan package ID (if applicable).

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the list of trade capacities if successful, None otherwise.
        """
        base_url = f'https://services.entrade.com.vn/dnse-order-service/accounts/{sub_account}/'
        endpoint = 'ppse' if asset_type == 'stock' else f'derivative-ppse?symbol={symbol}&price={price}&loanPackageId={loan_package_id}'
        url = base_url + endpoint

        query_params = {
            "symbol": symbol,
            "price": price,
            "loanPackageId": loan_package_id
        }
        query_params = {k: v for k, v in query_params.items() if v is not None}
        if query_params:
            url += "?" + "&".join([f"{key}={value}" for key, value in query_params.items()])

        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            return json_normalize(response.json())
        else:
            print(f"Error: {response.text}")
            return None

    def place_order(self, sub_account: str, symbol: str, side: str, quantity: int, price: float, order_type: str, loan_package_id: Optional[int], asset_type: str = 'stock') -> Optional[pd.DataFrame]:
        """
        Place an order for stocks or derivatives.

        Args:
            sub_account (str): Sub account number.
            symbol (str): Symbol of the asset.
            side (str): 'buy' or 'sell'.
            quantity (int): Order quantity.
            price (float): Order price.
            order_type (str): Order type.
            loan_package_id (Optional[int]): Loan package ID (if applicable).
            asset_type (str): Asset type, either 'stock' or 'derivative'. Default is 'stock'.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the order information if successful, None otherwise.
        """
        side_code = 'NB' if side == 'buy' else 'NS'

        url = "https://services.entrade.com.vn/dnse-order-service/v2/orders" if asset_type == 'stock' else "https://services.entrade.com.vn/dnse-order-service/derivative/orders"
        headers = {
            "Authorization": f"Bearer {self.token}",
            "Trading-Token": self.trading_token
        }
        payload = {
            "accountNo": sub_account,
            "symbol": symbol,
            "side": side_code,
            "quantity": quantity,
            "price": price,
            'orderType': order_type,
            "loanPackageId": loan_package_id
        }
        response = requests.post(url, headers=headers, json=payload)
        if response.status_code == 200:
            return json_normalize(response.json())
        else:
            print(f"Error: {response.text}")
            return None

    def order_list(self, sub_account: str, asset_type: str = 'stock') -> Optional[pd.DataFrame]:
        """
        Get the list of orders for a specific account.

        Args:
            sub_account (str): DNSE sub account number (mã tiểu khoản).
            asset_type (str): Asset type, either 'stock' or 'derivative'. Default is 'stock'.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the list of orders if successful, None otherwise.
        """
        url = f"https://services.entrade.com.vn/dnse-order-service/v2/orders?accountNo={sub_account}" if asset_type == 'stock' else f"https://services.entrade.com.vn/dnse-order-service/derivative/orders?accountNo={sub_account}"
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            print('Order list retrieved')
            return json_normalize(response.json().get('orders', []))
        else:
            print(f"Error: {response.text}")
            return None

    def order_detail(self, order_id: str, sub_account: str, asset_type: str = 'stock') -> Optional[pd.DataFrame]:
        """
        Get the details of a specific order for a specific sub account.

        Args:
            order_id (str): Order ID.
            sub_account (str): DNSE sub account number (mã tiểu khoản).
            asset_type (str): Asset type, either 'stock' or 'derivative'. Default is 'stock'.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the order details if successful, None otherwise.
        """
        url = f"https://services.entrade.com.vn/dnse-order-service/v2/orders/{order_id}?accountNo={sub_account}" if asset_type == 'stock' else f"https://services.entrade.com.vn/dnse-order-service/derivative/orders/{order_id}?accountNo={sub_account}"
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            return json_normalize(response.json())
        else:
            print(f"Error: {response.text}")
            return None

    def cancel_order(self, order_id: str, sub_account: str, asset_type: str = 'stock') -> Optional[pd.DataFrame]:
        """
        Cancel an order.

        Args:
            order_id (str): Order ID.
            sub_account (str): DNSE sub account number (mã tiểu khoản).
            asset_type (str): Asset type, either 'stock' or 'derivative'. Default is 'stock'.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the cancellation result if successful, None otherwise.
        """
        url = f"https://services.entrade.com.vn/dnse-order-service/v2/orders/{order_id}?accountNo={sub_account}" if asset_type == 'stock' else f"https://services.entrade.com.vn/dnse-order-service/derivative/orders/{order_id}?accountNo={sub_account}"
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.delete(url, headers=headers)
        if response.status_code == 200:
            print("Order cancelled")
            return json_normalize(response.json())
        else:
            print(f"Error: {response.text}")
            return None

    def deals_list(self, sub_account: str, asset_type: str = 'stock') -> Optional[pd.DataFrame]:
        """
        Get the list of deals for a specific sub account.

        Args:
            sub_account (str): DNSE sub account number (mã tiểu khoản).
            asset_type (str): Asset type, either 'stock' or 'derivative'. Default is 'stock'.

        Returns:
            Optional[pd.DataFrame]: A DataFrame containing the list of deals if successful, None otherwise.
        """
        url = f'https://services.entrade.com.vn/dnse-deal-service/deals?accountNo={sub_account}' if asset_type == 'stock' else f'https://services.entrade.com.vn/dnse-derivative-core/deals?accountNo={sub_account}'
        headers = {"Authorization": f"Bearer {self.token}"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            print('Deals list retrieved')
            return json_normalize(response.json().get('data', []))
        else:
            print(f"Error: {response.text}")
            return None



================================================
FILE: vnstock/core/__init__.py
================================================
from vnai import *
from .utils.parser import *
from .utils.logger import *
from .utils.env import *

vnai.setup()



================================================
FILE: vnstock/core/config/__init__.py
================================================



================================================
FILE: vnstock/core/config/const.py
================================================
import pathlib
HOME_DIR = pathlib.Path.home()
PROJECT_DIR = HOME_DIR / ".vnstock"
ID_DIR = PROJECT_DIR / 'id'

TC_VAR = "ACCEPT_TC"
TC_VAL = "tôi đồng ý"

UA = {'Chrome' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36',
               'Opera' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36 OPR/109.0.0.0',
               'Edge' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36 Edg/124.0.0.0',
               'Firefox' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0'
               }


================================================
FILE: vnstock/core/converter/__init__.py
================================================



================================================
FILE: vnstock/core/converter/export.py
================================================
import json
from typing import Dict

def save_json(data: Dict, path: str = 'data.json'):
    """
    Lưu dữ liệu dưới dạng JSON.
    """
    try:
        with open(path, 'w') as f:
            json.dump(data, f, indent=4)  # Indent for readability
        print(f"Information saved to JSON file: {path}")
    except Exception as e:
        print(f"Error saving data to JSON: {e}")


# Bổ sung hàm cho Sheets, AmiBroker, Numpy, JSON, Polars 


================================================
FILE: vnstock/core/utils/__init__.py
================================================



================================================
FILE: vnstock/core/utils/browser_profiles.py
================================================
# vnstock/core/utils/browser_profiles.py

# Note: User agent strings are constantly evolving. These are set based on the latest available
# information as of early May 2025. They may need periodic updates to remain current.

DESKTOP_BROWSERS = {
    "chrome": {
        "windows": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36"
        ),
        "macos": (
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) " # Using a common recent macOS version
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36"
        ),
    },
    "firefox": {
        "windows": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:137.0) "
            "Gecko/20100101 Firefox/137.0"
        ),
        "macos": (
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:138.0) " # Using a common recent macOS version and latest Firefox
            "Gecko/20100101 Firefox/138.0"
        ),
    },
    "edge": {
        "windows": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.3240.50"
        ),
    },
    "opera": {
        "windows": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 OPR/117.0.0.0" # Based on Chromium 132 and Opera 117
        ),
        "macos": (
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) " # Using a common recent macOS version
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 OPR/118.0.0.0" # Based on Chromium 136 and Opera 118
        ),
    },
    "brave": {
        "windows": (
             "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
             "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Brave/1.77.101" # Using Chromium 136 and Brave 1.77
        ),
        "macos": (
             "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) " # Using a common recent macOS version
             "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Brave/1.77.101" # Using Chromium 136 and Brave 1.77
        ),
    },
    "vivaldi": {
        "windows": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Vivaldi/7.2" # Using Chromium 136 and Vivaldi 7.2
        ),
    },
    "coccoc": {
        "windows": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 CocCoc/136.0.0.0" # Assuming Chromium 136 base for latest Coc Coc Windows
        ),
    },
    "safari": {
        "macos": (
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) " # Using a common recent macOS version
            "AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15" # Using Safari 17.6
        ),
    },
}

MOBILE_BROWSERS = {
    "chrome": {
        "android": (
            "Mozilla/5.0 (Linux; Android 13; Pixel 7) " # Keeping a common recent Android device
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.7103.60 Mobile Safari/537.36" # Using Chrome 136.0.7103.60
        ),
    },
    "safari": {
        "ios": (
            "Mozilla/5.0 (iPhone; CPU iPhone OS 17_5 like Mac OS X) " # Using a recent iOS version
            "AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.5 Mobile/15E148 Safari/604.1" # Assuming Safari version aligns with iOS or latest found
        ),
    },
    "samsung": {
        "android": (
            "Mozilla/5.0 (Linux; Android 13; SAMSUNG SM-G991B) " # Keeping a common recent Samsung device
            "AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/21.0 Chrome/110.0.5481.154 Mobile Safari/537.36" # Using Samsung Browser 21 and Chrome 110 (based on search result)
        ),
    },
    "opera": {
        "android": (
            "Mozilla/5.0 (Linux; Android 13; M2102J20SG) " # Keeping a common recent Android device
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Mobile Safari/537.36 OPR/76.2.4027.73374" # Using Chromium 136 and Opera 76
        ),
    },
    "coccoc": {
        "android": (
            "Mozilla/5.0 (Linux; Android 13; Redmi Note 12) " # Keeping a common recent Android device
            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Mobile Safari/537.36 CocCocBrowser/137.0.258" # Using Chrome 137 and CocCocBrowser 137.0.258
        ),
    },
    "firefox": {
        "android": "Mozilla/5.0 (Android 13; Mobile; rv:137.0) Gecko/137.0 Firefox/137.0", # Using Firefox 137
    },
}

# Combine all browser profiles
USER_AGENTS = {}

for browser_dict in [DESKTOP_BROWSERS, MOBILE_BROWSERS]:
    for browser, platforms in browser_dict.items():
        if browser not in USER_AGENTS:
            USER_AGENTS[browser] = {}
        USER_AGENTS[browser].update(platforms)

def list_all_profiles():
    print("Available browser/platform combinations:")
    for browser, platforms in USER_AGENTS.items():
        for platform in platforms:
            print(f"- {browser:10} | {platform:10}")



================================================
FILE: vnstock/core/utils/client.py
================================================
"""API client utilities for vnstock data sources."""

import requests
import json
from typing import Dict, Any, Optional, Union
from vnstock.core.utils.logger import get_logger

logger = get_logger(__name__)

def send_request(
    url: str,
    headers: Dict[str, str],
    method: str = "GET",
    params: Optional[Dict] = None,
    payload: Optional[Union[Dict, str]] = None,
    show_log: bool = False,
    timeout: int = 30
) -> Dict[str, Any]:
    """
    Centralized function for making API requests with consistent error handling.
    
    Supports sending payload as either a raw string or as a JSON object (provided as a dict). 
    For JSON payloads, the function will automatically serialize the dictionary.

    Args:
        url (str): The URL of the API endpoint.
        headers (Dict[str, str]): HTTP request headers.
        method (str, optional): HTTP method ("GET" or "POST"). Defaults to "GET".
        params (Optional[Dict], optional): Query parameters for GET requests. Defaults to None.
        payload (Optional[Union[Dict, str]], optional): 
            The request payload. Can be a dictionary (for JSON payload) or a raw string. Defaults to None.
        show_log (bool, optional): Flag to enable logging for the request details. Defaults to False.
        timeout (int, optional): Timeout in seconds for the HTTP request. Defaults to 30.
    
    Returns:
        Dict[str, Any]: The JSON-decoded response from the API.
    
    Raises:
        ConnectionError: If the API request fails or returns a non-200 status code.
        ValueError: If payload is provided in an unsupported type.
    """
    if show_log:
        logger.info(f"{method.upper()} request to {url}")
        if params:
            logger.info(f"Params: {params}")
        if payload:
            logger.info(f"Payload: {payload}")

    try:
        if method.upper() == "GET":
            response = requests.get(url, headers=headers, params=params, timeout=timeout)
        else:  # POST method
            # If payload is provided, determine if it's a dict (to be serialized as JSON) or a raw string.
            if payload is not None:
                if isinstance(payload, dict):
                    # Serialize dictionary to JSON formatted string.
                    data_arg = json.dumps(payload)
                elif isinstance(payload, str):
                    # Use the raw payload as is.
                    data_arg = payload
                else:
                    raise ValueError("Payload must be either a dictionary or a raw string.")
            else:
                data_arg = None

            response = requests.post(url, headers=headers, data=data_arg, timeout=timeout)

        # Check if the response status code is 200 (OK)
        if response.status_code != 200:
            raise ConnectionError(
                f"Failed to fetch data: {response.status_code} - {response.reason}"
            )

        data = response.json()

        if show_log:
            logger.info(f"Response data: {data}")
            logger.info(f"Response status: {response.status_code}")

        return data
    except requests.exceptions.RequestException as e:
        error_msg = f"API request failed: {str(e)}"
        logger.error(error_msg)
        raise ConnectionError(error_msg)



================================================
FILE: vnstock/core/utils/env.py
================================================
from vnstock.core.config.const import ID_DIR
import sys
import json
import os
import platform
import vnai

def get_platform():
    """
    Truy xuất tên hệ điều hành đang chạy
    """
    PLATFORM = platform.system()
    return PLATFORM

def get_hosting_service():
    """
    Xác định dịch vụ đám mây đang chạy hoặc môi trường phát triển
    """
    try:
        if 'google.colab' in sys.modules:
            hosting_service = "Google Colab"
        elif 'CODESPACE_NAME' in os.environ:
            hosting_service = "Github Codespace"
        elif 'GITPOD_WORKSPACE_CLUSTER_HOST' in os.environ:
            hosting_service = "Gitpod"
        elif 'REPLIT_USER' in os.environ:
            hosting_service = "Replit"
        elif 'KAGGLE_CONTAINER_NAME' in os.environ:
            hosting_service = "Kaggle"
        elif '.hf.space' in os.environ['SPACE_HOST']:
            hosting_service = "Hugging Face Spaces"
    except:
        hosting_service = "Local or Unknown"
    return hosting_service

def get_package_path(package='vnstock'):
    """
    Truy xuất đường dẫn của 1 gói Python bất kỳ
    """
    from importlib.util import find_spec
    spec = find_spec(package)
    if spec and spec.origin:
        package_path = spec.origin  # Path to the package's main file
    elif spec and spec.submodule_search_locations:
        package_path = spec.submodule_search_locations[0]  # Path to the package directory
    else:
        package_path = None
    return package_path

def id_valid():
    """
    Check if license terms have been accepted.
    """
    from vnai.scope.profile import inspector
    machine_id = inspector.fingerprint()
    
    pkg_init = ID_DIR / "environment.json"
    try:
        with open(pkg_init, 'r') as f:
            env = json.load(f)
        if not env['accepted_agreement']:
            # Use vnai to accept terms
            vnai.accept_license_terms()
    except:
        # Use vnai to accept terms
        vnai.accept_license_terms()
    
    return True
   
def get_username():
    """
    Get the current username of the system.
    """
    try:
        username = os.getlogin()
        return username
    except OSError as e:
        print(f"Error: {e}")
        return None

def get_cwd():
    """Return current working directory"""
    try:
        cwd = os.getcwd()
        return cwd
    except OSError as e:
        print(f"Error: {e}")
        return None

def get_path_delimiter():
    """
    Detect the running OS and return the appropriate file path delimiter.
    """
    return '\\' if os.name == 'nt' else '/'



================================================
FILE: vnstock/core/utils/ext.py
================================================
import importlib
from types import MethodType

def load_extensions(target_instance, module_name, function_names):
    """
    Dynamically import functions from a specified module and bind them to the target instance.

    Parameters:
        - target_instance: The instance of the class to bind these functions to.
        - module_name: The name of the module to import, relative to the package.
        - function_names: A list of function names as strings that should be imported and bound.
    Usage:
    ```
    from vnstock.core.utils.ext import load_extensions

    class Trading:
        def __init__(self, symbol):
            self.symbol = symbol
            load_extensions(self, '.core.utils', ['calculate_average_price'])
    ```
    """
    module = importlib.import_module(module_name, __package__)
    for func_name in function_names:
        if hasattr(module, func_name):
            func = getattr(module, func_name)
            setattr(target_instance, func_name, MethodType(func, target_instance))

def check_plugins_installed(plugins):
    """
    Check whether a list of vnstock plugins package are installed, return installed package names as a list.

    Parameters:
        - plugins: A list of package names to check for installation.
    """
    installed_plugins = []
    for plugin in plugins:
        try:
            importlib.import_module(plugin)
            installed_plugins.append(plugin)
        except ImportError:
            pass
    # if installed_plugins is empty, print a message to the user
    if not installed_plugins:
        print("No plugins in the list are installed.")
    return installed_plugins


================================================
FILE: vnstock/core/utils/help.py
================================================
def help(obj, method_path):
    """
    Hiển thị thông tin chi tiết về một phương thức trong đối tượng được chỉ định dựa trên tên của nó.

    Tham số:
    - obj: Đối tượng chứa phương thức cần tìm thông tin.
    - method_path: Đường dẫn đến phương thức dưới dạng chuỗi phân tách bằng dấu chấm, ví dụ: 'module.class.method'.
    """
    parts = method_path.split('.')
    current_obj = obj
    for part in parts[:-1]:
        try:
            current_obj = getattr(current_obj, part)
        except AttributeError:
            print(f"Thuộc tính '{part}' không được tìm thấy trong '{current_obj.__class__.__name__}'.")
            return
    
    method_name = parts[-1]
    try:
        method = getattr(current_obj, method_name)
        import inspect
        print(inspect.getdoc(method))
    except AttributeError:
        print(f"Phương thức hoặc thuộc tính '{method_name}' không được tìm thấy trong '{current_obj.__class__.__name__}'.")


================================================
FILE: vnstock/core/utils/launcher.py
================================================
import os
import platform
import subprocess
from typing import List, Optional

def change_dir(path: str) -> None:
    """
    Thay đổi thư mục làm việc hiện tại trong môi trường Python.

    Tham số:
        - path (str): Đường dẫn tới thư mục mới.
    
    Trả về:
        - None
    """
    os.chdir(path)
    print(f'Changed directory to {path}')

def execute_command(command: Optional[List[str]] = None) -> None:
    """
    Thực thi một lệnh trên hệ thống.

    Tham số:
        - command (Optional[List[str]]): Danh sách các phần tử của lệnh cần thực thi. Mặc định là None. Ví dụ: ['ls', 'l'] hoặc ['dir'] để hiển thị danh sách tệp tin trong thư mục hiện tại.
    """
    if command is None:
        command = ['echo', 'Hello, World!']
    
    # On Windows, prepend command with cmd.exe /c to handle internal commands like dir
    if platform.system() == 'Windows':
        command = ['cmd.exe', '/c'] + command
    
    try:
        result = subprocess.run(command, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        if result.stdout:
            print("Output:\n", result.stdout)
        if result.stderr:
            print("Error:\n", result.stderr)
    except subprocess.CalledProcessError as e:
        print(f'Error executing command: {e}\nError Output:\n{e.stderr}')
    except FileNotFoundError:
        print(f"Command not found: {' '.join(command)}")


================================================
FILE: vnstock/core/utils/logger.py
================================================
import logging
from logging.handlers import RotatingFileHandler
import os

def advanced_logger(name, 
                    level='DEBUG', 
                    handler_type='stream', 
                    filename=None, 
                    log_format=None, 
                    date_format=None, 
                    max_bytes=10485760, 
                    backup_count=5):
    """
    Configure and return a customizable logger with various options.

    Parameters:
    - name: str - the logger's name. Example: 'api_logger'.
    - level: str - logging level ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'). Example: 'INFO'.
    - handler_type: str - type of handler ('stream', 'file', 'rotating').
      'stream' will print to console, 'file' will write to a file, 'rotating' will write to a file with a max size and backup files. Example: 'rotating'.
    - filename: str - path to log file. Defaults to current directory if None provided. Example: '/var/logs/api.log'.
    - log_format: str - format of the log messages. Example: '%(asctime)s - %(levelname)s - %(message)s'.
    - date_format: str - format of the timestamp in log messages. Example: '%Y-%m-%d %H:%M:%S'.
    - max_bytes: int - maximum log file size in bytes (for 'rotating' handler). Example: 10485760 (10MB).
    - backup_count: int - number of backup files to keep (for 'rotating' handler). Example: 5.

    Returns:
    - logger: logging.Logger instance.
    """
    logger = logging.getLogger(name)
    if logger.hasHandlers():  # Prevent adding multiple handlers if already configured
        logger.handlers.clear()

    # Set default file name if none provided
    if filename is None:
        filename = os.path.join(os.getcwd(), f'{name}.log')

    # Set default log format if not provided
    log_format = log_format or '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    date_format = date_format or '%Y-%m-%d %H:%M:%S'

    # Create formatter
    formatter = logging.Formatter(log_format, date_format)

    # Determine the handler type
    if handler_type == 'file':
        handler = logging.FileHandler(filename)
    elif handler_type == 'rotating':
        handler = RotatingFileHandler(filename, maxBytes=max_bytes, backupCount=backup_count)
    else:  # Default to stream handler
        handler = logging.StreamHandler()

    # Set formatter and add handler to logger
    handler.setFormatter(formatter)
    logger.addHandler(handler)

    # Set the logging level
    logger.setLevel(getattr(logging, level.upper()))

    return logger

def get_logger(name, 
               level='DEBUG', 
               handler_type='stream', 
               filename=None, 
               log_format=None, 
               date_format=None, 
               max_bytes=10485760, 
               backup_count=5):
    """
    Wrapper for advanced_logger that allows custom logging configurations.
    Provides backward compatibility while allowing advanced customizations.

    Parameters:
    - All parameters are inherited from advanced_logger.

    Returns:
    - logger: logging.Logger instance.
    """
    return advanced_logger(name=name, 
                           level=level, 
                           handler_type=handler_type, 
                           filename=filename, 
                           log_format=log_format, 
                           date_format=date_format, 
                           max_bytes=max_bytes, 
                           backup_count=backup_count)



================================================
FILE: vnstock/core/utils/market.py
================================================
# @title utils/market_hours.py
# Simple utility to check market trading hours and data availability

import datetime
import pytz
import logging
from typing import Dict, Any, Optional

# Setup logging
logger = logging.getLogger(__name__)
def trading_hours(market: str = "HOSE", custom_time: Optional[datetime.datetime] = None, 
                 enable_log: bool = False, language: str = "en") -> Dict[str, Any]:
    """
    Check if current time is within trading hours with data availability context.
    
    Args:
        market (str): Market to check ('HOSE', 'HNX', 'UPCOM', 'Futures', or None)
                     If None, returns simplified data based on common market hours
        custom_time (datetime.datetime, optional): Custom time for testing
        enable_log (bool): Whether to enable funny log messages
        language (str): Language for messages ('en' for English, 'vi' for Vietnamese)
        
    Returns:
        dict: Trading status information with keys:
            - is_trading_hour (bool): Whether it's currently trading hours
            - trading_session (str): Current trading session type
            - data_status (str): Data availability status
            - time (str): Current time in HH:MM:SS format
            - market (str): Market being checked or "general" if market is None
    """
    # Validate market parameter
    valid_markets = ["HOSE", "HNX", "UPCOM", "Futures", None]
    if market is not None and market not in ["HOSE", "HNX", "UPCOM", "Futures"]:
        raise ValueError(f"Unknown market: {market}. Valid markets: HOSE, HNX, UPCOM, Futures, None")
    
    # Validate language parameter
    if language not in ["en", "vi"]:
        language = "en"  # Default to English if invalid language
    
    # Set up logging if enabled
    if enable_log and not logger.handlers:
        handler = logging.StreamHandler()
        formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)
        logger.addHandler(handler)
        logger.setLevel(logging.INFO)
    
    # Market schedules based on the provided image
    market_schedules = {
        "HOSE": {
            "trading_start": "09:00",
            "ato_end": "09:15",
            "lunch_start": "11:30",
            "lunch_end": "13:00",
            "atc_start": "14:30",
            "atc_end": "14:45",
            "trading_end": "15:00"
        },
        "HNX": {
            "trading_start": "09:00",
            "lunch_start": "11:30",
            "lunch_end": "13:00",
            "atc_start": "14:30",
            "atc_end": "14:45",
            "trading_end": "15:00"
        },
        "UPCOM": {
            "trading_start": "09:00",
            "lunch_start": "11:30",
            "lunch_end": "13:00",
            "trading_end": "14:30"
        },
        "Futures": {
            "trading_start": "08:45",
            "ato_end": "09:00",
            "lunch_start": "11:30",
            "lunch_end": "13:00",
            "atc_start": "14:30",
            "atc_end": "14:45",
            "trading_end": "14:45"
        }
    }
    
    # Vietnam timezone (Ho Chi Minh City)
    tz = pytz.timezone("Asia/Ho_Chi_Minh")
    
    # Get current time in Vietnam timezone
    if custom_time:
        now = custom_time.astimezone(tz)
    else:
        now = datetime.datetime.now(tz)
    
    # Log messages in English
    log_messages_en = {
        "pre_market": "🌅 Markets still snoozing! Your data might be wearing pajamas too.",
        "ato": "🔔 ATO in progress! Prices are playing musical chairs.",
        "continuous": "💸 Trading in full swing! Money printer go brrrr!",
        "lunch_break": "🍜 Lunch break! Even algorithms need to slurp some digital noodles.",
        "atc": "🏁 ATC time! Final sprint to determine closing prices.",
        "post_close": "🧹 Post-close cleanup. Last chance to sweep up some bargains!",
        "post_market": "🌙 Markets closed but data's still settling in... like your food after dinner.",
        "weekend": "🏖️ Weekend mode! Markets closed. Time to touch grass instead of charts.",
        "historical": "📚 Deep in after-hours territory. Only historical data here, like dinosaur fossils."
    }
    
    # Log messages in Vietnamese
    log_messages_vi = {
        "pre_market": "🌅 Thị trường vẫn đang ngủ! Dữ liệu của bạn cũng có thể đang nghỉ ngơi.",
        "ato": "🔔 ATO đang diễn ra! Giá cả đang định hình.",
        "continuous": "💸 Giao dịch đang diễn ra sôi động! Thị trường đang hoạt động mạnh.",
        "lunch_break": "🍜 Giờ nghỉ trưa! Ngay cả thuật toán cũng cần nghỉ ngơi.",
        "atc": "🏁 Giờ ATC! Nước rút cuối cùng để xác định giá đóng cửa.",
        "post_close": "🧹 Dọn dẹp sau giờ đóng cửa. Cơ hội cuối để giao dịch thỏa thuận!",
        "post_market": "🌙 Thị trường đã đóng cửa nhưng dữ liệu vẫn đang ổn định...",
        "weekend": "🏖️ Chế độ cuối tuần! Thị trường đóng cửa. Thời gian để nghỉ ngơi.",
        "historical": "📚 Ngoài giờ giao dịch. Chỉ có dữ liệu lịch sử ở đây."
    }
    
    # Select log messages based on language
    log_messages = log_messages_en if language == "en" else log_messages_vi
    
    # Check for weekend
    if now.weekday() >= 5:  # Saturday (5) or Sunday (6)
        if enable_log:
            logger.info(log_messages["weekend"])
            
        return {
            "is_trading_hour": False,
            "trading_session": "weekend",
            "data_status": "historical_only",
            "time": now.strftime("%H:%M:%S"),
            "market": "general" if market is None else market
        }
    
    # Handle market=None case - use HOSE as reference for general market hours
    if market is None:
        schedule = market_schedules["HOSE"]
        market_display = "general"
    else:
        schedule = market_schedules[market]
        market_display = market
    
    # Parse times from schedule
    trading_start = datetime.datetime.strptime(schedule["trading_start"], "%H:%M").time()
    lunch_start = datetime.datetime.strptime(schedule["lunch_start"], "%H:%M").time()
    lunch_end = datetime.datetime.strptime(schedule["lunch_end"], "%H:%M").time()
    trading_end = datetime.datetime.strptime(schedule["trading_end"], "%H:%M").time()
    
    # Define data availability windows
    prep_window_start = (datetime.datetime.combine(datetime.date.today(), trading_start) - 
                        datetime.timedelta(hours=2)).time()
    
    settling_window_end = (datetime.datetime.combine(datetime.date.today(), trading_end) + 
                          datetime.timedelta(hours=4)).time()
    
    # Current time as time object for comparison
    current_time = now.time()
    
    # Determine market phase and trading status
    is_trading = False
    trading_session = ""
    data_status = ""
    
    # Before market open
    if current_time < trading_start:
        trading_session = "pre_market"
        if current_time >= prep_window_start:
            data_status = "preparing"  # Within 2 hours before market open
        else:
            data_status = "historical_only"  # More than 2 hours before market open
        
        if enable_log:
            logger.info(log_messages["pre_market"])
    
    # After market close
    elif current_time >= trading_end:
        if current_time <= settling_window_end:
            trading_session = "post_market"
            data_status = "settling"  # Within 4 hours after market close
            
            if enable_log:
                logger.info(log_messages["post_market"])
        else:
            trading_session = "after_hours"
            data_status = "historical_only"  # More than 4 hours after market close
            
            if enable_log:
                logger.info(log_messages["historical"])
    
    # During market hours
    else:
        # Check if we're in ATO period
        if "ato_end" in schedule and trading_start <= current_time < datetime.datetime.strptime(schedule["ato_end"], "%H:%M").time():
            trading_session = "ato"
            is_trading = True
            data_status = "real_time"
            
            if enable_log:
                logger.info(log_messages["ato"])
        
        # Check if we're in lunch break
        elif lunch_start <= current_time < lunch_end:
            trading_session = "lunch_break"
            is_trading = False
            data_status = "real_time"  # Data should still be current during lunch
            
            if enable_log:
                logger.info(log_messages["lunch_break"])
        
        # Check if we're in ATC period
        elif "atc_start" in schedule and "atc_end" in schedule and \
             datetime.datetime.strptime(schedule["atc_start"], "%H:%M").time() <= current_time < \
             datetime.datetime.strptime(schedule["atc_end"], "%H:%M").time():
            trading_session = "atc"
            is_trading = True
            data_status = "real_time"
            
            if enable_log:
                logger.info(log_messages["atc"])
        
        # Check if we're in post-close period
        elif "atc_end" in schedule and datetime.datetime.strptime(schedule["atc_end"], "%H:%M").time() <= current_time < trading_end:
            trading_session = "post_close"
            is_trading = False  # Not active trading
            data_status = "real_time"
            
            if enable_log:
                logger.info(log_messages["post_close"])
        
        # Otherwise, we're in continuous trading
        else:
            trading_session = "continuous"
            is_trading = True
            data_status = "real_time"
            
            if enable_log:
                logger.info(log_messages["continuous"])
    
    # Return comprehensive result
    return {
        "is_trading_hour": is_trading,
        "trading_session": trading_session,
        "data_status": data_status,
        "time": now.strftime("%H:%M:%S"),
        "market": market_display
    }

# # Example usage
# if __name__ == "__main__":
#     print(check_market_hours(market="HOSE", custom_time=datetime.datetime(2025, 3, 17, 10, 0, 0), enable_log=True, language="en"))



================================================
FILE: vnstock/core/utils/parser.py
================================================
import re
import requests
import pandas as pd
import numpy as np
from pytz import timezone
from datetime import datetime, timedelta
from typing import Dict, Union, Literal, Any, Optional
from vnstock.core.config.const import UA
from vnstock.core.utils.logger import get_logger

logger = get_logger(__name__)

def parse_timestamp(time_value):
    """
    Convert a datetime object or a string representation of time to a Unix timestamp.
    Parameters:
        - time_value: A datetime object or a string representation of time. Supported formats are '%Y-%m-%d %H:%M:%S', '%Y-%m-%d %H:%M', and '%Y-%m-%d' or datetime object.
    """
    try:
        if isinstance(time_value, datetime):
            time_value = timezone('Asia/Ho_Chi_Minh').localize(time_value)
        elif isinstance(time_value, str):
            if ' ' in time_value and ':' in time_value.split(' ')[1]:
                try:
                    time_value = datetime.strptime(time_value, '%Y-%m-%d %H:%M:%S')
                except ValueError:
                    time_value = datetime.strptime(time_value, '%Y-%m-%d %H:%M')
            else:
                time_value = datetime.strptime(time_value, '%Y-%m-%d')
        else:
            print("Invalid input type. Supported types are datetime or string.")
            return None

        timestamp = int(time_value.timestamp())
        return timestamp
    except ValueError:
        print("Invalid timestamp format")
        return None

# Utility to convert timestamps to Vietnam timezone
def localize_timestamp (
    timestamp: Union[pd.Series, int, float, list, np.ndarray, pd.Timestamp, Any], 
    unit: Literal['s', 'ms', 'us', 'ns'] = 's',
    return_scalar: bool = False,
    return_string: bool = False,
    string_format: str = '%Y-%m-%d %H:%M:%S'
) -> Union[pd.Series, pd.Timestamp, str]:
    """
    Convert timestamp values to Vietnam timezone (UTC+7).
    
    Parameters:
        timestamp: Timestamp value(s) - can be Series, list, array, or scalar
        unit: Unit for timestamp conversion ('s' for seconds, 'ms' for milliseconds, etc.)
        return_scalar: If True and input can be treated as scalar, return a single value
        return_string: If True, return string representation(s) instead of datetime objects
        string_format: Format for datetime strings if return_string=True
        
    Returns:
        - Series of datetime objects (default)
        - Series of formatted strings (if return_string=True)
        - Single Timestamp (if return_scalar=True and input is scalar-like)
        - Formatted string (if return_scalar=True, return_string=True and input is scalar-like)
        
    Examples:
        # Convert a single timestamp (returns Series by default)
        convert_to_vietnam_time(1647851234)
        
        # Convert a single timestamp (return scalar Timestamp)
        convert_to_vietnam_time(1647851234, return_scalar=True)
        
        # Convert a single timestamp (return string)
        convert_to_vietnam_time(1647851234, return_string=True)
        
        # Convert multiple timestamps to string Series
        convert_to_vietnam_time([1647851234, 1647851235], return_string=True)
    """
    # Determine if input should be treated as a scalar value
    treat_as_scalar = False
    
    # Direct scalar types
    if np.isscalar(timestamp) or isinstance(timestamp, (pd.Timestamp, datetime)):
        treat_as_scalar = True
        timestamp_series = pd.Series([timestamp])
    # Series with one element
    elif isinstance(timestamp, pd.Series) and len(timestamp) == 1:
        treat_as_scalar = True
        timestamp_series = timestamp
    # List, array, etc. with one element
    elif hasattr(timestamp, '__len__') and len(timestamp) == 1:
        treat_as_scalar = True
        timestamp_series = pd.Series(timestamp)
    # Other cases - treat as non-scalar
    else:
        timestamp_series = pd.Series(timestamp) if not isinstance(timestamp, pd.Series) else timestamp
    
    # Convert to datetime with timezone
    dt_series = pd.to_datetime(timestamp_series, unit=unit)
    vietnam_series = dt_series.dt.tz_localize('UTC').dt.tz_convert('Asia/Ho_Chi_Minh')
    
    # Apply string formatting if requested
    if return_string:
        vietnam_series = vietnam_series.dt.strftime(string_format)
    
    # Return scalar if requested and input was scalar-like
    if return_scalar and treat_as_scalar:
        return vietnam_series.iloc[0]
    
    return vietnam_series

def get_asset_type(symbol: str) -> str:
    """
    Xác định loại tài sản dựa trên mã chứng khoán được cung cấp.

    Tham số: 
        - symbol (str): Mã chứng khoán hoặc mã chỉ số.
    
    Trả về:
        - 'index' nếu mã chứng khoán là mã chỉ số.
        - 'stock' nếu mã chứng khoán là mã cổ phiếu.
        - 'derivative' nếu mã chứng khoán là mã hợp đồng tương lai hoặc quyền chọn.
        - 'bond' nếu mã chứng khoán là mã trái phiếu (chính phủ hoặc doanh nghiệp).
        - 'coveredWarr' nếu mã chứng khoán là mã chứng quyền.
    """
    symbol = symbol.upper()
    
    # Index symbols
    if symbol in [
        'VNINDEX', 'HNXINDEX', 'UPCOMINDEX', 'VN30', 'VN100', 'HNX30',
        'VNSML', 'VNMID', 'VNALL', 'VNREAL', 'VNMAT', 'VNIT', 'VNHEAL',
        'VNFINSELECT', 'VNFIN', 'VNENE', 'VNDIAMOND', 'VNCONS', 'VNCOND'
    ]:
        return 'index'
    
    # Stock symbols (assumed to have 3 characters)
    elif len(symbol) == 3:
        return 'stock'
    
    # For symbols that could be derivative or bond (length 7 or 9)
    elif len(symbol) in [7, 9]:
        # VN30 derivative patterns:
        fm_pattern = re.compile(r'^VN30F\d{1,2}M$')
        ym_pattern = re.compile(r'^VN30F\d{4}$')
        
        # Bond patterns:
        # Government bond: e.g., GB05F2506 or GB10F2024
        gov_bond_pattern = re.compile(r'^GB\d{2}F\d{4}$')
        # Company bond: e.g., BAB122032; exclude those starting with VN30F.
        comp_bond_pattern = re.compile(r'^(?!VN30F)[A-Z]{3}\d{6}$')
        
        if gov_bond_pattern.match(symbol) or comp_bond_pattern.match(symbol):
            return 'bond'
        elif fm_pattern.match(symbol) or ym_pattern.match(symbol):
            return 'derivative'
        else:
            raise ValueError('Invalid derivative or bond symbol. Symbol must be in format of VN30F1M, VN30F2024, GB10F2024, or for company bonds, e.g., BAB122032')
    
    # Covered warrant symbols (assumed to have 8 characters)
    elif len(symbol) == 8:
        return 'coveredWarr'
    
    else:
        raise ValueError('Invalid symbol. Your symbol format is not recognized!')

def camel_to_snake(name):
    """
    Chuyển đổi tên biến từ dạng CamelCase sang snake_case.

    Tham số:
        - name (str): Tên biến dạng CamelCase.

    Trả về:
        - str: Tên biến dạng snake_case.
    """
    str1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', name)
    output = re.sub('([a-z0-9])([A-Z])', r'\1_\2', str1).lower()
    # replace . with _
    output = output.replace('.', '_')
    return output

def flatten_data(json_data, parent_key='', sep='_'):
    """
    Làm phẳng dữ liệu JSON thành dạng dict tiêu chuẩn.

    Tham số:
        - json_data: Dữ liệu JSON trả về từ API.
        - parent_key: Key cha của dữ liệu JSON.
        - sep: Ký tự phân cách giữa các key.
    """
    items = []
    for k, v in json_data.items():
        new_key = f"{parent_key}{sep}{k}" if parent_key else k
        if isinstance(v, dict):
            items.extend(flatten_data(v, new_key, sep=sep).items())
        else:
            items.append((new_key, v))
    return dict(items)

def last_n_days(n):
    """
    Return a date value in YYYY-MM-DD format for last n days. If n = 0, return today's date.
    """
    date_value = (datetime.today() - timedelta(days=n)).strftime('%Y-%m-%d')
    return date_value
    
def decd(byte_data):
    from cryptography.fernet import Fernet
    import base64
    kb = UA['Chrome'].replace(' ', '').ljust(32)[:32].encode('utf-8')
    kb64 = base64.urlsafe_b64encode(kb)
    cipher = Fernet(kb64)
    return cipher.decrypt(byte_data).decode('utf-8')


================================================
FILE: vnstock/core/utils/transform.py
================================================
"""Data transformation utilities for vnstock data sources."""

import re
import pytz
import numpy as np
import pandas as pd
from bs4 import BeautifulSoup
from typing import Dict, Any, List, Optional, Union
from datetime import datetime, timedelta, time
from vnstock.core.utils.parser import localize_timestamp
from vnstock.core.utils.logger import get_logger

logger = get_logger(__name__)

# Vietnam timezone
vietnam_tz = pytz.timezone('Asia/Ho_Chi_Minh')

# ==== Utils functions for data transformation ====

def clean_numeric_string(s: Any) -> Any:
    """
    Loại bỏ dấu phân nhóm (',' hoặc NBSP), chuẩn hoá dấu thập phân về '.'
    """
    if not isinstance(s, str):
        return s
    s = s.replace('\u00A0', '').replace(',', '')
    # Nếu chỉ có một dấu ',' (nghĩa decimal), chuyển thành '.'
    if s.count('.') == 0 and s.count(',') == 1:
        s = s.replace(',', '.')
    return s.strip()

def get_trading_date() -> datetime.date:
    """
    Determine the appropriate trading date based on current day and time in Vietnam timezone.
    
    Returns:
        - datetime.date: The appropriate trading date to use
    """
    # Get current time in Vietnam timezone
    now = datetime.now(vietnam_tz)
    weekday = now.weekday()  # Monday is 0, Sunday is 6
    current_time = now.time()
    
    if weekday >= 5:  # Weekend (Saturday or Sunday)
        # Calculate days to previous Friday
        days_to_subtract = weekday - 4
        return (now - timedelta(days=days_to_subtract)).date()
    elif weekday == 0 and current_time < time(8, 30):
        # Monday before 8:30 AM
        return (now - timedelta(days=3)).date()  # Previous Friday
    else:
        # Regular trading day
        return now.date()

def process_match_types(df, asset_type, source):
    """
    Process match_type labels with special handling for stock ATO/ATC transactions.
    """
    # Basic replacement - applies to all asset types
    if source == 'VCI':
        df['match_type'] = df['match_type'].replace({'b': 'Buy', 's': 'Sell'})
    elif source == 'TCBS':
        df['match_type'] = df['match_type'].replace({'BU': 'Buy', 'SD': 'Sell'})
    
    # Only process ATO/ATC for stock assets
    if asset_type == 'stock' and (
        ('unknown' in df['match_type'].values and source == 'VCI') or 
        ('' in df['match_type'].values and source == 'TCBS')
    ):
        # Sort by time to ensure correct order
        df = df.sort_values('time')
        
        # Create a date column for grouping by trading day
        df['date'] = df['time'].dt.date

        # Process each trading day separately
        for date in df['date'].unique():
            day_mask = df['date'] == date
            
            # Create unknown mask based on source
            if source == 'VCI':
                unknown_mask = (df['match_type'] == 'unknown') & day_mask
            else:  # TCBS
                unknown_mask = (df['match_type'] == '') & day_mask
            
            unknown_indices = df[unknown_mask].index
            
            if len(unknown_indices) > 0:
                # Morning session: Find transactions around 9:15 AM (9:13-9:17)
                morning_mask = unknown_mask & (df['time'].dt.hour == 9) & (df['time'].dt.minute >= 13) & (df['time'].dt.minute <= 17)
                morning_indices = df[morning_mask].index
                
                # Afternoon session: Find transactions around 2:45 PM (14:43-14:47)
                afternoon_mask = unknown_mask & (df['time'].dt.hour == 14) & (df['time'].dt.minute >= 43) & (df['time'].dt.minute <= 47)
                afternoon_indices = df[afternoon_mask].index
                
                # Label ATO for first morning session transaction
                if len(morning_indices) > 0:
                    ato_idx = df.loc[morning_indices, 'time'].idxmin()
                    df.loc[ato_idx, 'match_type'] = 'ATO'
                
                # Label ATC for last afternoon session transaction
                if len(afternoon_indices) > 0:
                    atc_idx = df.loc[afternoon_indices, 'time'].idxmax()
                    df.loc[atc_idx, 'match_type'] = 'ATC'
        
        # Remove the temporary date column
        df = df.drop(columns=['date'])
    
    return df

def ohlc_to_df(data: Dict[str, Any], column_map: Dict[str, str], dtype_map: Dict[str, str],
              asset_type: str, symbol: str, source: str, interval: str = "1D",
              floating: int = 2, resample_map: Optional[Dict[str, str]] = None) -> pd.DataFrame:
    """Convert OHLC data from any source to standardized DataFrame format."""
    if not data:
        raise ValueError("Input data is empty or not provided.")
        
    # Handle different data source formats
    if source == 'TCBS':
        # TCBS data is already a list of dictionaries
        df = pd.DataFrame(data)
        # Apply column mapping directly through rename
        df.rename(columns=column_map, inplace=True)
    else:
        # VCI and other sources
        # Select and rename columns using dictionary comprehension
        columns_of_interest = {key: column_map[key] for key in column_map.keys() if key in data}
        df = pd.DataFrame(data)[columns_of_interest.keys()].rename(columns=column_map)
    
    # Ensure all required columns exist
    required_columns = ['time', 'open', 'high', 'low', 'close', 'volume']
    missing_columns = [col for col in required_columns if col not in df.columns]
    if missing_columns:
        raise ValueError(f"Missing required columns: {missing_columns}. Available columns: {df.columns.tolist()}")
    
    # Standard column order
    df = df[['time', 'open', 'high', 'low', 'close', 'volume']]
    
    # Time conversion - handle different formats based on source
    if 'time' in df.columns:
        if source == 'VCI':
            # VCI uses integer timestamps
            df['time'] = pd.to_datetime(df['time'].astype(int), unit='s').dt.tz_localize('UTC')
            df['time'] = df['time'].dt.tz_convert('Asia/Ho_Chi_Minh')
        else:
            # TCBS and others might use string formats
            df['time'] = pd.to_datetime(df['time'], errors='coerce')
    
    # Price scaling for non-index/derivative assets
    if asset_type not in ["index", "derivative"]:
        df[["open", "high", "low", "close"]] = df[["open", "high", "low", "close"]].div(1000)
    
    # Round price columns
    df[["open", "high", "low", "close"]] = df[["open", "high", "low", "close"]].round(floating)
    
    # Resample if needed
    if resample_map and interval not in ["1m", "1H", "1D"]:
        df = df.set_index('time').resample(resample_map[interval]).agg({
            'open': 'first',
            'high': 'max',
            'low': 'min',
            'close': 'last',
            'volume': 'sum'
        }).reset_index()
    
    # Apply data types
    for col, dtype in dtype_map.items():
        if col in df.columns:
            if dtype == "datetime64[ns]" and hasattr(df[col], 'dt') and df[col].dt.tz is not None:
                df[col] = df[col].dt.tz_localize(None)  # Remove timezone info
                if interval == "1D":
                    df[col] = df[col].dt.date
            df[col] = df[col].astype(dtype)
    
    # Add metadata
    df.name = symbol
    df.category = asset_type
    df.source = source
    
    return df

def intraday_to_df(
    data: List[Dict[str, Any]],
    column_map: Dict[str, str],
    dtype_map: Dict[str, str],
    symbol: str,
    asset_type: str,
    source: str
) -> pd.DataFrame:
    """
    Convert intraday trading data to standardized DataFrame format,
    với:
      - Tiền xử lý chuỗi số cho price/volume
      - Map scale dựa trên source (không hardcode /1000)
      - Kiểm soát NaN, rounding volume an toàn
      - Xử lý time, match_type như trước
    """
    # --- Early exit ---
    if not data:
        empty_df = pd.DataFrame(columns=list(column_map.values()))
        empty_df.attrs['symbol'] = symbol
        empty_df.category = asset_type
        empty_df.source = source
        return empty_df

    df = pd.DataFrame(data)

    # --- Chọn & rename columns ---
    available = [c for c in column_map if c in df.columns]
    if not available:
        raise ValueError(f"Expected columns {list(column_map)} not found, got {df.columns.tolist()}")
    df = df[available].rename(columns={k: column_map[k] for k in available})

    # --- Làm sạch & chuyển numeric ---
    for col in ('price', 'volume'):
        if col in df.columns:
            # Tiền xử lý chuỗi
            df[col] = df[col].map(clean_numeric_string)
            # Chuyển sang float, lỗi thành NaN
            df[col] = pd.to_numeric(df[col], errors='coerce')
            n_bad = df[col].isna().sum()
            if n_bad:
                print(f"[Warning] {n_bad} giá trị ở '{col}' không parse được, chuyển thành NaN")

    # --- Scale price theo source ---
    scale_map = {'VCI': 1000, 'MAS': 1000}
    scale = scale_map.get(source, 1)
    if 'price' in df.columns:
        df['price'] = df['price'] / scale

    # --- Volume: round & cast int ---
    if 'volume' in df.columns:
        vol = df['volume'].fillna(0)
        # Kiểm tra nếu có decimal
        mask = (vol % 1 != 0)
        if mask.any():
            print(f"[Info] {int(mask.sum())} giá trị volume có decimal, sẽ làm tròn")
        df['volume'] = vol.round().astype(int)

    # --- Xử lý cột time như trước ---
    if 'time' in df.columns:
        trading_date = get_trading_date()

        if source == 'VCI':
            df['time'] = localize_timestamp(df['time'].astype(int), unit='s')
        elif source == 'MAS':
            df['time'] = localize_timestamp(df['time'].astype(int), unit='ms')
            df['time'] = df['time'].dt.floor('s')
        else:  # TCBS
            sample = str(df['time'].iloc[0]) if not df.empty else ''
            if ':' in sample and len(sample) <= 8:
                df['time'] = df['time'].apply(
                    lambda x: datetime.combine(
                        trading_date,
                        datetime.strptime(x, '%H:%M:%S').time()
                    ) if isinstance(x, str) and ':' in x else pd.NaT
                )
                df['time'] = localize_timestamp(df['time'], return_string=False)
            else:
                df['time'] = pd.to_datetime(df['time'], format='%Y-%m-%d %H:%M:%S', errors='coerce')
                if df['time'].dt.tz is None:
                    df['time'] = localize_timestamp(df['time'], return_string=False)

    # --- Process match types như bạn đã định nghĩa ---
    if 'match_type' in df.columns:
        df = process_match_types(df, asset_type, source)

    # --- Sort, reset index & apply dtype ---
    if 'time' in df.columns:
        df = df.sort_values('time')
    df = df.reset_index(drop=True)

    # Áp dtype_map (không tính time)
    type_map = {k: v for k, v in dtype_map.items() if k in df.columns and k != 'time'}
    if type_map:
        df = df.astype(type_map)

    # --- Metadata ---
    df.attrs['symbol'] = symbol
    df.category = asset_type
    df.source = source

    return df

def replace_in_column_names(df, old_text, new_text, regex=False):
    """
    Replace text in column names.
    
    Parameters:
        df (pd.DataFrame): DataFrame with column names to modify
        old_text (str): Text to be replaced
        new_text (str): New text to replace with
        regex (bool): Whether to treat old_text as a regular expression pattern
        
    Returns:
        pd.DataFrame: DataFrame with modified column names
    """
    df.columns = df.columns.str.replace(old_text, new_text, regex=regex)
    return df

def flatten_hierarchical_index(df, separator="_", text_replacements=None, handle_duplicates=True, 
                              drop_levels=None, keep_levels=None):
    """
    Flatten hierarchical (multi-level) column indexes into a single level for easier Excel export.
    
    Parameters:
        df (pd.DataFrame): DataFrame with hierarchical index to flatten
        separator (str): Character(s) to use when joining index levels
        text_replacements (dict): Dictionary of text replacements to apply to column names
                                 {old_text: new_text}
        handle_duplicates (bool): Whether to handle duplicate column names by adding '_' prefix
        drop_levels (list or int): Levels to drop (by position); can be a list of indices or a single index.
                                   To drop highest level, use drop_levels=0
        keep_levels (list or int): Levels to keep (by position); can be a list of indices or a single index.
                                   This takes precedence over drop_levels if both are specified.
    
    Returns:
        pd.DataFrame: DataFrame with flattened column index
    """
    # Make a copy to avoid modifying the original DataFrame
    result_df = df.copy()
    
    # If the DataFrame doesn't have a hierarchical index, just return it
    if not isinstance(result_df.columns, pd.MultiIndex):
        return result_df
    
    # Get the number of levels in the MultiIndex
    num_levels = result_df.columns.nlevels
    
    # Convert to flat index (list of tuples where each tuple contains all level values for a column)
    flat_cols = result_df.columns.to_flat_index()
    
    # Determine which levels to include based on parameters
    if keep_levels is not None:
        # Convert single value to list if necessary
        if isinstance(keep_levels, int):
            keep_levels = [keep_levels]
        # Create a list of level indices to keep
        level_indices = keep_levels
    elif drop_levels is not None:
        # Convert single value to list if necessary
        if isinstance(drop_levels, int):
            drop_levels = [drop_levels]
        # Create a list of all level indices except those to drop
        level_indices = [i for i in range(num_levels) if i not in drop_levels]
    else:
        # If no levels specified to keep or drop, include all levels
        level_indices = list(range(num_levels))
    
    # Apply text replacements if provided
    if text_replacements:
        # Process each column name tuple
        processed_cols = []
        for col in flat_cols:
            # Process each level in the column
            processed_col = []
            for i, level in enumerate(col):
                level_str = str(level)
                # Apply all text replacements to this level
                for old_text, new_text in text_replacements.items():
                    level_str = level_str.replace(old_text, new_text)
                processed_col.append(level_str)
            processed_cols.append(tuple(processed_col))
        flat_cols = processed_cols
    
    # Join selected levels with separator, ignoring empty strings
    flattened_cols = []
    for col in flat_cols:
        # Filter to only include the selected levels
        selected_levels = [str(col[i]) for i in level_indices if i < len(col) and col[i] != '']
        # Join the levels with the separator
        flattened_cols.append(separator.join(selected_levels))
    
    # Assign the flattened column names
    result_df.columns = flattened_cols
    
    # Handle duplicated column names
    if handle_duplicates:
        duplicated_cols = result_df.columns[result_df.columns.duplicated()].tolist()
        if duplicated_cols:
            for col in duplicated_cols:
                # Find all occurrences of the duplicated column
                col_indices = [i for i, x in enumerate(result_df.columns) if x == col]
                # Keep the first occurrence unchanged, prefix others with '_'
                for idx in col_indices[1:]:
                    # Create a new column name with '_' prefix
                    new_col_name = f"_{result_df.columns[idx]}"
                    # Rename the column in-place
                    result_df.rename(columns={result_df.columns[idx]: new_col_name}, inplace=True)
    
    return result_df

# ==== Process nested JSON data to DataFrame ====

def flatten_dict_to_df(data: Dict[str, Any], nested_key: str = 'financialRatio') -> pd.DataFrame:
    """
    Flatten nested dictionary data into a pandas DataFrame.
    
    Extracts all fields from input dictionary, including nested fields from a specified
    structure, preserving all underlying data while removing the top-level label.
    
    Parameters:
    -----------
    data : Dict[str, Any]
        Dictionary/JSON data containing nested structures
    nested_key : str, optional
        Key of the nested structure to flatten (default: 'financialRatio')
        
    Returns:
    --------
    pd.DataFrame
        DataFrame with a single row containing all flattened fields
    """
    # Copy top-level data excluding the nested structure
    result = {k: v for k, v in data.items() if k != nested_key}
    
    # Process nested structure if it exists
    if nested_key in data:
        nested_data = data[nested_key]
        
        # Handle key conflicts between top level and nested data
        for key, value in nested_data.items():
            if key in result:
                result[f"{nested_key}_{key}"] = value  # Add prefix to avoid conflicts
            else:
                result[key] = value  # Add directly if no conflict
    
    # Flatten any remaining nested structures
    flat_data = {}
    _flatten_nested(result, flat_data)
    
    # Return as DataFrame
    return pd.DataFrame([flat_data])

def flatten_list_to_df(data_list, nested_key='subOrListingInfo'):
    """
    Flatten a list of dictionaries with a nested key into a pandas DataFrame.
    
    Parameters:
    -----------
    data_list : list
        List of dictionaries where each dictionary contains a nested structure
    nested_key : str, optional
        Key in each dictionary containing the nested data (default: 'subOrListingInfo')
        
    Returns:
    --------
    pd.DataFrame
        DataFrame with all fields flattened (nested data combined with top-level data)
        
    Example:
    --------
    >>> data = [
    ...     {'id': '21592027', 'organCode': 'VNM', 
    ...      'subOrListingInfo': {'enOrganName': 'Apis Corporation'}},
    ...     {'id': '21592028', 'organCode': 'VNM',
    ...      'subOrListingInfo': {'enOrganName': 'Asia Coconut Processing JSC'}}
    ... ]
    >>> flatten_list_to_df(data)
    """
    import pandas as pd
    
    # Initialize an empty list to store flattened rows
    flattened_rows = []
    
    for item in data_list:
        # Create a copy of the item to avoid modifying the original
        item_copy = item.copy()
        
        # Extract and remove the nested data
        nested_data = item_copy.pop(nested_key, {})
        
        # Merge top-level data with nested data
        flattened_row = {**item_copy, **nested_data}
        flattened_rows.append(flattened_row)
    
    # Convert the list of flattened rows to a DataFrame
    return pd.DataFrame(flattened_rows)

def _flatten_nested(obj: Any, output: Dict[str, Any], prefix: str = '') -> None:
    """
    Recursively flatten nested structures into a single-level dictionary.
    
    Parameters:
    -----------
    obj : Any
        Object to flatten (dict, list, or primitive value)
    output : Dict[str, Any]
        Dictionary where flattened data will be stored
    prefix : str, optional
        Current key prefix for nested structures
    """
    if isinstance(obj, dict):
        for k, v in obj.items():
            new_key = f"{prefix}_{k}" if prefix else k
            if isinstance(v, (dict, list)) and v:
                _flatten_nested(v, output, new_key)
            else:
                output[new_key] = v
    elif isinstance(obj, list):
        for i, item in enumerate(obj):
            new_key = f"{prefix}_{i}" if prefix else str(i)
            if isinstance(item, (dict, list)) and item:
                _flatten_nested(item, output, new_key)
            else:
                output[new_key] = item
    else:
        output[prefix] = obj

def clean_html_dict(data: Dict[str, Any], html_keys: Optional[List[str]] = None) -> Dict[str, Any]:
    """
    Convert HTML to plain text in dictionary values.
    
    Processes string values containing HTML and converts them to readable plain text
    while preserving basic formatting like lists and line breaks.
    
    Parameters:
    -----------
    data : Dict[str, Any]
        Dictionary containing HTML content in values
    html_keys : List[str], optional
        Keys to process as HTML; if None, auto-detects HTML content
        
    Returns:
    --------
    Dict[str, Any]
        Dictionary with HTML content converted to plain text
    """
    if not isinstance(data, dict):
        return data
    
    result = data.copy()
    
    # Auto-detect HTML keys if not specified
    if html_keys is None:
        html_keys = [k for k, v in data.items() 
                    if isinstance(v, str) and '<' in v and '>' in v]
    
    # Process HTML in identified keys
    for key in html_keys:
        if key in result and isinstance(result[key], str):
            try:
                # Parse and clean HTML
                soup = BeautifulSoup(result[key], 'html.parser')
                
                # Preserve line breaks
                for br in soup.find_all('br'):
                    br.replace_with('\n')
                
                # Format list items
                for li in soup.find_all('li'):
                    li.insert_before('- ')
                
                # Clean and format text
                text = soup.get_text()
                text = ' '.join(text.split())
                text = text.replace('- ', '\n- ')  # Preserve list formatting
                
                result[key] = text
            except:
                pass  # Keep original if processing fails
    
    return result

# ==== Data presentation and readability ====

def reorder_cols(df, cols, position='first'):
    """
    Move specified columns to the first or last position in a DataFrame.
    
    Parameters:
    -----------
    df : pd.DataFrame
        DataFrame whose columns to reorder
    cols : str or list
        Column name(s) to move
    position : str, optional
        Target position: 'first' or 'last' (default: 'first')
        
    Returns:
    --------
    pd.DataFrame
        DataFrame with reordered columns
        
    Examples:
    ---------
    # Move 'symbol' to the first position
    df = reorder_cols(df, 'symbol')
    
    # Move multiple columns to the end
    df = reorder_cols(df, ['created_at', 'updated_at'], 'last')
    """
    # Convert single column to list
    if isinstance(cols, str):
        cols = [cols]
    
    # Filter to include only columns that exist
    move_cols = [col for col in cols if col in df.columns]
    
    if not move_cols:
        return df  # No valid columns to move
    
    # Get remaining columns
    other_cols = [col for col in df.columns if col not in move_cols]
    
    # Create new column order based on position
    if position.lower() == 'first':
        new_order = move_cols + other_cols
    elif position.lower() == 'last':
        new_order = other_cols + move_cols
    else:
        raise ValueError("Position must be 'first' or 'last'")
    
    # Return reordered DataFrame
    return df[new_order]

def drop_cols_by_pattern(df, patterns, regex=True, case_sensitive=False):
    """
    Drop columns from DataFrame where names match specified pattern(s).
    
    Parameters:
    -----------
    df : pd.DataFrame
        DataFrame to filter
    patterns : str or list
        Pattern(s) to match in column names
    regex : bool, optional
        Whether to treat patterns as regex (default: True)
    case_sensitive : bool, optional
        Whether matching should be case-sensitive (default: False)
        
    Returns:
    --------
    pd.DataFrame
        DataFrame with matching columns removed
        
    Examples:
    ---------
    # Drop columns containing 'date'
    df = drop_cols_by_pattern(df, 'date', regex=False)
    
    # Drop columns ending with '_id' or '_key'
    df = drop_cols_by_pattern(df, ['_id$', '_key$'])
    """
    import re
    
    # Convert single pattern to list
    if isinstance(patterns, str):
        patterns = [patterns]
    
    # Identify columns to drop
    cols_to_drop = []
    
    for col in df.columns:
        for pattern in patterns:
            if regex:
                flags = 0 if case_sensitive else re.IGNORECASE
                try:
                    if re.search(pattern, col, flags):
                        cols_to_drop.append(col)
                        break
                except re.error:
                    raise ValueError(f"Invalid regex pattern: {pattern}")
            else:
                if case_sensitive:
                    if pattern in col:
                        cols_to_drop.append(col)
                        break
                else:
                    if pattern.lower() in col.lower():
                        cols_to_drop.append(col)
                        break
    
    # Return DataFrame with matched columns removed
    return df.drop(columns=cols_to_drop)



================================================
FILE: vnstock/core/utils/upgrade.py
================================================
import warnings
import requests
from packaging import version
from importlib.metadata import version as get_version
import sys
import os
import uuid

# Try to import IPython for Jupyter notebook/Google Colab support
try:
    from IPython.display import display, Markdown, HTML
    ipython_available = True
except ImportError:
    ipython_available = False

def detect_environment():
    """
    Detects the running environment (Jupyter, Google Colab, etc.) and returns a string identifier.
    """
    if ipython_available:
        try:
            from IPython import get_ipython
            if 'IPKernelApp' not in get_ipython().config:
                if sys.stdout.isatty():
                    return "Terminal"
                else:
                    return "Other"  # Non-interactive environment (e.g., script executed from an IDE)
            else:
                if 'google.colab' in sys.modules:
                    return "Google Colab"
                return "Jupyter"
        except (ImportError, AttributeError):
            if sys.stdout.isatty():
                return "Terminal"
            else:
                return "Other"
    else:
        if sys.stdout.isatty():
            return "Terminal"
        else:
            return "Other"

def update_notice():
    """
    Checks for newer versions of vnstock and vnai packages and displays update notices.
    """
    packages = ["vnstock", "vnai"]
    
    try:
        environment = detect_environment()
        
        for package in packages:
            try:
                installed_version = get_version(package)
                response = requests.get(f"https://pypi.org/pypi/{package}/json", timeout=5)
                response.raise_for_status()
                latest_version = response.json().get("info", {}).get("version")

                if latest_version and version.parse(installed_version) < version.parse(latest_version):
                    package_name = package.capitalize()
                    # Customize URL based on package
                    history_url = "https://vnstocks.com/docs/tai-lieu/lich-su-phien-ban" if package == "vnstock" else "https://pypi.org/project/vnai/#history"
                    
                    message = (
                        f"Phiên bản {package_name} {latest_version} đã có mặt, vui lòng cập nhật với câu lệnh : `pip install {package} --upgrade`.\n"
                        f"Lịch sử phiên bản: {history_url}\n"
                        f"Phiên bản hiện tại {installed_version}"
                    )

                    if environment in ["Jupyter", "Google Colab"] and ipython_available:
                        display(Markdown(message))  # Display as markdown in Jupyter or Google Colab
                    else:
                        warnings.simplefilter("always", UserWarning)
                        warnings.warn(
                            message.replace("**", ""),  # Remove markdown styling for non-notebook environments
                            UserWarning,
                            stacklevel=2
                        )
            except (requests.exceptions.RequestException, ImportError, pkg_resources.DistributionNotFound):
                # Skip this package if it's not installed or can't be checked
                pass
    except Exception:
        # Ensure the entire update check doesn't break the user's code
        pass

# Customizing the warnings output format for non-notebook environments
def custom_formatwarning(message, category, filename, lineno, line=None):
    return f"{message}\n"

warnings.formatwarning = custom_formatwarning


================================================
FILE: vnstock/core/utils/user_agent.py
================================================
# vnstock/vnstock/core/utils/user_agent.py

import random
from vnstock.core.utils.browser_profiles import USER_AGENTS

DEFAULT_HEADERS = {
    'Accept': 'application/json, text/plain, */*',
    'Accept-Language': 'en-US,en;q=0.9,vi-VN;q=0.8,vi;q=0.7',
    'Connection': 'keep-alive',
    'Content-Type': 'application/json',
    'Cache-Control': 'no-cache',
    'Sec-Fetch-Dest': 'empty',
    'Sec-Fetch-Mode': 'cors',
    'Sec-Fetch-Site': 'same-site',
    'DNT': '1',
    'Pragma': 'no-cache',
    'sec-ch-ua-platform': '"Windows"',
    'sec-ch-ua-mobile': '?0',
}


BROWSER_PROFILES = {
    "chrome": {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/120.0.0.0 Safari/537.36",
    },
    "safari": {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 13_2_1) AppleWebKit/605.1.15 Version/16.3 Safari/605.1.15",
    },
    "coccoc": {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:110.0) Gecko/20100101 Firefox/110.0 CocCocBrowser/123.0",
    },
    "firefox": {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0",
    },
    "brave": {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/120.0.0.0 Brave/120.0.0.0 Safari/537.36",
    },
    "vivaldi": {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/120.0.0.0 Vivaldi/6.2.3105.58 Safari/537.36",
    },
}


HEADERS_MAPPING_SOURCE = {
    'SSI': {'Referer': 'https://iboard.ssi.com.vn', 'Origin': 'https://iboard.ssi.com.vn'},
    'VND': {'Referer': 'https://dchart.vndirect.com.vn', 'Origin': 'https://dchart.vndirect.com.vn'},
    'TCBS': {'Referer': 'https://tcinvest.tcbs.com.vn/', 'Origin': 'https://tcinvest.tcbs.com.vn/'},
    'VCI': {'Referer': 'https://trading.vietcap.com.vn/', 'Origin': 'https://trading.vietcap.com.vn/'},
    'MSN': {'Referer': 'https://www.msn.com/', 'Origin': 'https://www.msn.com/'},
    'FMARKET': {'Referer': 'https://fmarket.vn/', 'Origin': 'https://fmarket.vn/'},
    'SJC': {'Referer': 'https://sjc.com.vn/bieu-do-gia-vang', 'Origin': 'https://sjc.com.vn'},
}

def get_headers(
    data_source: str = 'SSI',
    random_agent: bool = True,
    browser: str = 'chrome',
    platform: str = 'windows'
) -> dict:
    """
    Generate browser-like headers with optional referer/origin and realistic User-Agent.

    Args:
        data_source (str): Predefined data source (e.g., 'SSI', 'VND').
        random_agent (bool): Whether to use a random browser/platform User-Agent.
        browser (str): Browser name to simulate if not random.
        platform (str): Platform name to simulate if not random.

    Returns:
        dict: HTTP headers with realistic settings.
    """
    ref_origin = HEADERS_MAPPING_SOURCE.get(data_source.upper(), {})
    referer = ref_origin.get("Referer", "")
    origin = ref_origin.get("Origin", "")

    # Determine browser/platform
    if random_agent:
        browser = random.choice(list(USER_AGENTS.keys()))
        platform = random.choice(list(USER_AGENTS[browser].keys()))

    ua = USER_AGENTS.get(browser.lower(), {}).get(platform.lower())

    if not ua:
        # Fallback to first available platform under chrome or first browser available
        ua = USER_AGENTS.get("chrome", {}).get("windows")
        if not ua:
            # As a last resort, pick any user agent
            for b in USER_AGENTS.values():
                if isinstance(b, dict):
                    ua = next(iter(b.values()))
                    break

    headers = DEFAULT_HEADERS.copy()
    headers["User-Agent"] = ua
    if referer:
        headers["Referer"] = referer
    if origin:
        headers["Origin"] = origin
    return headers


================================================
FILE: vnstock/core/utils/validation.py
================================================
"""Validation utilities for vnstock data sources."""

from typing import Dict, Optional, Tuple, Union, Any
from datetime import datetime, timedelta
import pandas as pd
from vnstock.core.utils.parser import parse_timestamp, get_asset_type
from vnstock.core.utils.logger import get_logger

logger = get_logger(__name__)

def validate_symbol(symbol: str, symbol_map: Optional[Dict[str, str]] = None) -> str:
    """
    Validate and normalize ticker symbol with optional mapping for special cases.
    
    Parameters:
        - symbol: Stock/index symbol
        - symbol_map: Optional mapping dictionary (e.g., for INDEX values)
        
    Returns:
        - Validated and normalized symbol
        
    Raises:
        - ValueError: If symbol is invalid or not found in the mapping
    """
    symbol = symbol.upper()
    
    # Apply mapping if provided (e.g., INDEX mapping)
    if symbol_map and symbol in symbol_map:
        return symbol_map[symbol]
    
    else:
        # Additional validation already handled by get_asset_type, so we can reuse it
        get_asset_type(symbol)  # This will raise ValueError if symbol is invalid
        
        return symbol

def validate_date_range(start: str, end: Optional[str] = None) -> Tuple[datetime, datetime]:
    """
    Validate date range and return normalized datetime objects.
    
    Parameters:
        - start: Start date in YYYY-MM-DD format
        - end: End date in YYYY-MM-DD format, defaults to current date
        
    Returns:
        - Tuple of (start_datetime, end_datetime)
        
    Raises:
        - ValueError: If dates are invalid or start is after end
    """
    try:
        start_time = datetime.strptime(start, "%Y-%m-%d")
        
        if end is None:
            end_time = datetime.now() + timedelta(days=1)
        else:
            end_time = datetime.strptime(end, "%Y-%m-%d") + timedelta(days=1)
            
        if start_time > end_time:
            raise ValueError("Thời gian bắt đầu không thể lớn hơn thời gian kết thúc.")
            
        return start_time, end_time
        
    except ValueError as e:
        if "does not match format" in str(e):
            raise ValueError(f"Định dạng ngày không hợp lệ. Vui lòng sử dụng định dạng YYYY-MM-DD.")
        raise

def convert_to_timestamps(dates: Tuple[datetime, datetime]) -> Tuple[int, int]:
    """
    Convert datetime objects to Unix timestamps.
    
    Parameters:
        - dates: Tuple of (start_datetime, end_datetime)
        
    Returns:
        - Tuple of (start_timestamp, end_timestamp)
    """
    # Reuse existing parse_timestamp function where appropriate
    start_stamp = int(dates[0].timestamp())
    end_stamp = int(dates[1].timestamp())
    
    return start_stamp, end_stamp

def validate_interval(interval: str, interval_map: Dict[str, str]) -> str:
    """
    Validate and map interval parameter to data source specific value.
    
    Parameters:
        - interval: Time interval (e.g., 1D, 1H)
        - interval_map: Dictionary mapping intervals to API-specific values
        
    Returns:
        - Validated interval value
        
    Raises:
        - ValueError: If interval is invalid
    """
    if interval not in interval_map:
        valid_options = ', '.join(interval_map.keys())
        raise ValueError(f"Giá trị interval không hợp lệ: {interval}. Vui lòng chọn: {valid_options}")
    
    return interval_map[interval]

def validate_pagination(page_size: int, page: int = 0, max_page_size: int = 100) -> Tuple[int, int]:
    """
    Validate pagination parameters for API requests.
    
    Parameters:
        - page_size: Number of items per page
        - page: Page number (0-based)
        - max_page_size: Maximum allowed page size
        
    Returns:
        - Tuple of (normalized_page_size, total_pages)
        
    Raises:
        - ValueError: If pagination parameters are invalid
    """
    if page_size <= 0:
        raise ValueError("Page size must be greater than 0.")
    
    if page < 0:
        raise ValueError("Page number must be non-negative.")
    
    # Calculate how many pages needed for the requested page_size
    total_pages = (page_size // max_page_size) + (1 if page_size % max_page_size != 0 else 0)
    
    return min(page_size, max_page_size), total_pages

def validate_model_input(model_data: Dict[str, Any], required_fields: list) -> None:
    """
    Validate data model inputs against required fields.
    
    Parameters:
        - model_data: Dictionary of input data 
        - required_fields: List of required field names
        
    Raises:
        - ValueError: If required fields are missing
    """
    missing_fields = [field for field in required_fields if field not in model_data]
    
    if missing_fields:
        raise ValueError(f"Thiếu các trường bắt buộc: {', '.join(missing_fields)}")



================================================
FILE: vnstock/explorer/__init__.py
================================================
from vnstock.core.utils.env import id_valid

id_valid()


================================================
FILE: vnstock/explorer/fmarket/__init__.py
================================================
from .fund import Fund


================================================
FILE: vnstock/explorer/fmarket/const.py
================================================
_BASE_URL = 'https://api.fmarket.vn/res/products'

_FUND_TYPE_MAPPING = {
    "": [],
    "BALANCED": ["BALANCED"],
    "BOND": ["BOND"],
    "STOCK": ["STOCK"],
}

_FUND_LIST_COLUMNS = [
                "shortName",
                "name",
                "dataFundAssetType.name",
                "owner.name",
                "managementFee",
                "firstIssueAt",
                "nav",
                "productNavChange.navToPrevious",
                "productNavChange.navToLastYear",
                "productNavChange.navToBeginning",
                "productNavChange.navTo1Months",
                "productNavChange.navTo3Months",
                "productNavChange.navTo6Months",
                "productNavChange.navTo12Months",
                "productNavChange.navTo24Months",
                "productNavChange.navTo36Months",
                "productNavChange.annualizedReturn36Months",
                "productNavChange.updateAt",
                "id",
                "code",
                "vsdFeeId",
            ]

_FUND_LIST_MAPPING = {
                "shortName": "short_name",
                "name": "name",
                "dataFundAssetType.name": "fund_type",
                "owner.name": "fund_owner_name",
                "managementFee": "management_fee",
                "firstIssueAt": "inception_date",
                "nav": "nav",
                "productNavChange.navToPrevious": "nav_change_previous",
                "productNavChange.navToLastYear": "nav_change_last_year",
                "productNavChange.navToBeginning": "nav_change_inception",
                "productNavChange.navTo1Months": "nav_change_1m",
                "productNavChange.navTo3Months": "nav_change_3m",
                "productNavChange.navTo6Months": "nav_change_6m",
                "productNavChange.navTo12Months": "nav_change_12m",
                "productNavChange.navTo24Months": "nav_change_24m",
                "productNavChange.navTo36Months": "nav_change_36m",
                "productNavChange.annualizedReturn36Months": "nav_change_36m_annualized",
                "productNavChange.updateAt": "nav_update_at",
                "id": "fund_id_fmarket",
                "code": "fund_code",
                "vsdFeeId": "vsd_fee_id",
            }


================================================
FILE: vnstock/explorer/fmarket/fund.py
================================================
# Refactor the original code from https://github.com/andrey-jef contributed to the Vnstock Legacy project.
# Reference: https://github.com/thinh-vu/vnstock/blob/legacy/vnstock/funds.py
# Shoutout to andrey_jef for the contribution.

import json
import pandas as pd
from pandas import json_normalize
from typing import Union, List
from datetime import datetime
from vnstock.explorer.fmarket.const import _BASE_URL, _FUND_TYPE_MAPPING, _FUND_LIST_COLUMNS, _FUND_LIST_MAPPING
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils import client
from vnai import optimize_execution

logger = get_logger(__name__)

def convert_unix_to_datetime(df_to_convert: pd.DataFrame, columns: List[str]) -> pd.DataFrame:
    """Converts all the specified columns of a dataframe to date format and fill NaN for negative values."""
    df = df_to_convert.copy()
    for col in columns:
        df[col] = pd.to_datetime(df[col], unit="ms", utc=True, errors="coerce").dt.strftime("%Y-%m-%d")
        df[col] = df[col].where(df[col].ge("1970-01-01"))
    return df

# MUTUAL FUNDS
class Fund:
    def __init__(self, random_agent:bool=False) -> None:
        """
        Khởi tạo đối tượng để truy cập dữ liệu từ Fmarket.
        """
        self.data_source = "fmarket"
        self.headers = get_headers(data_source=self.data_source, random_agent=random_agent)
        self.base_url = _BASE_URL
        self.fund_list = self.listing()['short_name'].to_list()
        self.details = self.FundDetails(self)

    @optimize_execution("fmarket")
    def listing(self, fund_type:str="") -> pd.DataFrame:
        """
        Truy xuất danh sách tất cả các quỹ mở hiện có trên Fmarket thông qua API. Xem trực tiếp tại https://fmarket.vn

        Tham số:
        ----------
            fund_type (str): Loại quỹ cần lọc. Mặc định là rỗng để lấy tất cả các quỹ. Các loại quỹ hợp lệ bao gồm: 'BALANCED', 'BOND', 'STOCK'
        
        Trả về:
        -------
            pd.DataFrame: DataFrame chứa thông tin của tất cả các quỹ mở hiện có trên Fmarket. 
        """
        fund_type = fund_type.upper()
        fundAssetTypes = _FUND_TYPE_MAPPING.get(fund_type, [])

        if fund_type not in {"", "BALANCED", "BOND", "STOCK"}:
            logger.warning(f"Unsupported fund type: '{fund_type}'. Please choose from: '' to get all funds or specify one of 'BALANCED', 'BOND', or 'STOCK'.")

        # API call
        payload = {
            "types": ["NEW_FUND", "TRADING_FUND"],
            "issuerIds": [],
            "sortOrder": "DESC",
            "sortField": "navTo6Months",
            "page": 1,
            "pageSize": 100,
            "isIpo": False,
            "fundAssetTypes": fundAssetTypes,
            "bondRemainPeriods": [],
            "searchField": "",
            "isBuyByReward": False,
            "thirdAppIds": [],
        }
        url = f"{_BASE_URL}/filter"
        
        try:
            response_data = client.send_request(
                url=url,
                method="POST",
                headers=self.headers,
                payload=payload,
                show_log=False
            )
            
            data = response_data
            logger.info(f"Total number of funds currently listed on Fmarket: {data['data']['total']}")
            df = json_normalize(data, record_path=["data", "rows"])

            # select columns to display
            df = df[_FUND_LIST_COLUMNS]

            # Convert Unix timestamp to date format
            df = convert_unix_to_datetime(df_to_convert=df, columns=["firstIssueAt", "productNavChange.updateAt"])

            # sort by '36-month NAV change'
            df = df.sort_values(by="productNavChange.navTo36Months", ascending=False)

            # rename column label to snake_case
            df.rename(columns=_FUND_LIST_MAPPING, inplace=True)

            # reset index column
            df = df.reset_index(drop=True)

            return df
        except Exception as e:
            logger.error(f"Error in API response: {str(e)}")
            raise

    class FundDetails:
        def __init__(self, parent):
            self.parent = parent

        @optimize_execution("fmarket")
        def top_holding(self, symbol="SSISCA") -> pd.DataFrame:
            return self._get_fund_details(symbol, 'top_holding')

        @optimize_execution("fmarket")
        def industry_holding(self, symbol="SSISCA") -> pd.DataFrame:
            return self._get_fund_details(symbol, 'industry_holding')

        @optimize_execution("fmarket")
        def nav_report(self, symbol="SSISCA") -> pd.DataFrame:
            return self._get_fund_details(symbol, 'nav_report')

        @optimize_execution("fmarket")
        def asset_holding(self, symbol="SSISCA") -> pd.DataFrame:
            return self._get_fund_details(symbol, 'asset_holding')

        def _get_fund_details(self, symbol, section) -> pd.DataFrame:
            """
            Internal method to retrieve fund details for a specific section.

            Parameters
            ----------
                symbol : str
                    ticker of a fund. A.k.a fund short name
                section : str
                    section of data to retrieve. Options: 'top_holding', 'industry_holding', 'nav_report', 'asset_holding'

            Returns
            -------
                df : pd.DataFrame
                    DataFrame of the current top holdings of the selected fund.
            """
            # validate "symbol" param input
            symbol = symbol.upper()
            if symbol not in self.parent.fund_list:
                logger.error(f"Error: {symbol} is not a valid input. Call the listing() method for the list of valid Fund short_name.")
                raise ValueError(f"Invalid symbol: {symbol}")
            try:
                # Lookup a valid "fundID" related to "symbol"
                fundID = int(self.parent.filter(symbol)["id"][0])
                logger.info(f"Retrieving data for {symbol}")
            except Exception as e:
                logger.error(f"An unexpected error occurred: {str(e)}")
                raise

            # validate "section" param input
            section_mapping = {
                "top_holding": self.parent.top_holding,
                "industry_holding": self.parent.industry_holding,
                "nav_report": self.parent.nav_report,
                "asset_holding": self.parent.asset_holding,
            }

            if section in section_mapping:
                # Match with appropriate function
                try:
                    df = section_mapping[section](fundId=fundID)
                except KeyError as e:
                    logger.error(f"Error: Missing expected columns in the response data - {str(e)}")
                    raise ValueError(f"Missing expected columns in the response data - {str(e)}")
                df["short_name"] = symbol
                return df
            else:
                logger.error(f"Error: {section} is not a valid input. 4 current options are: top_holding, industry_holding, nav_report, asset_holding")
                raise ValueError(f"Invalid section: {section}")

    @optimize_execution("fmarket")
    def filter(self, symbol:str="") -> pd.DataFrame:
        """
        Truy xuất danh sách quỹ theo tên viết tắt (short_name) và mã id của quỹ. Mặc định là rỗng để liệt kê tất cả các quỹ.

        Tham số:
        ----------
            symbol (str): Tên viết tắt của quỹ cần tìm kiếm. Mặc định là rỗng để lấy tất cả các quỹ.

        Trả về:
        -------
            pd.DataFrame: DataFrame chứa thông tin của quỹ cần tìm kiếm.
        """
        symbol = symbol.upper()

        payload = {
            "searchField": symbol,
            "types": ["NEW_FUND", "TRADING_FUND"],
            "pageSize": 100,
        }
        url = f"{_BASE_URL}/filter"
        
        try:
            response_data = client.send_request(
                url=url,
                method="POST",
                headers=self.headers,
                payload=payload,
                show_log=False
            )
            
            data = response_data
            df = json_normalize(data, record_path=["data", "rows"])
            
            if not df.empty:
                # retrieve only column_subset
                column_subset = ["id", "shortName"]
                df = df[column_subset]
                return df
            else:
                raise ValueError(f"No fund found with this symbol {symbol}. See funds_listing() for the list of valid Fund short names.")
        except Exception as e:
            logger.error(f"Error in API response: {str(e)}")
            raise

    @optimize_execution("fmarket")
    def top_holding(self, fundId:int=23) -> pd.DataFrame:
        """
        Retrieve list of top 10 holdings in the specified fund. Live data is retrieved from the Fmarket API.

        Parameters
        ----------
            fundId : int
                id of a fund in fmarket database
        Returns
        -------
            df : pd.DataFrame
                DataFrame of the current top 10 holdings of the selected fund.
        """
        # API call - Logic: there are funds which allocate to either equities or fixed income securities, or both
        url = f"{_BASE_URL}/{fundId}"
        
        try:
            response_data = client.send_request(
                url=url,
                method="GET",
                headers=self.headers,
                show_log=False
            )
            
            data = response_data
            df = pd.DataFrame()

            # Flatten top holding equities
            df_stock = json_normalize(data, record_path=["data", "productTopHoldingList"])
            if not df_stock.empty:
                # Convert unix timestamp into date format
                df_stock = convert_unix_to_datetime(df_to_convert=df_stock, columns=["updateAt"])
                # Merge to output
                df = pd.concat([df, df_stock])

            # Flatten top holding fixed income securities
            df_bond = json_normalize(data, record_path=["data", "productTopHoldingBondList"])
            if not df_bond.empty:
                df_bond = convert_unix_to_datetime(df_to_convert=df_bond, columns=["updateAt"])
                df = pd.concat([df, df_bond])

            # if df is not empty, then rearrange and return df as output
            if not df.empty:
                df["fundId"] = int(fundId)
                # rearrange columns to display
                column_subset = [
                    "stockCode",
                    "industry",
                    "netAssetPercent",
                    "type",
                    "updateAt",
                    "fundId",
                ]

                existing_columns = [col for col in column_subset if col in df.columns]
                df = df[existing_columns]

                # rename column label to snake_case
                column_mapping = {
                    "stockCode": "stock_code",
                    "industry": "industry",
                    "netAssetPercent": "net_asset_percent",
                    "type": "type_asset",
                    "updateAt": "update_at",
                }
                # Only rename columns that exist in the DataFrame
                existing_column_mapping = {k: v for k, v in column_mapping.items() if k in df.columns}
                df.rename(columns=existing_column_mapping, inplace=True)

                return df
            else:
                logger.warning(f"No data available for fundId {fundId}.")
                return pd.DataFrame()
        except Exception as e:
            logger.error(f"Error in API response: {str(e)}")
            raise

    @optimize_execution("fmarket")
    def industry_holding(self, fundId:int=23) -> pd.DataFrame:
        """Retrieve list of industries and fund distribution for specific fundID. Live data is retrieved from the Fmarket API.

        Parameters
        ----------
            fundId : int
                id of a fund in fmarket database

        Returns
        -------
            df : pd.DataFrame
                DataFrame of the current top industries in the selected fund.
        """
        url = f"{_BASE_URL}/{fundId}"
        
        try:
            response_data = client.send_request(
                url=url,
                method="GET",
                headers=self.headers,
                show_log=False
            )
            
            data = response_data
            df = json_normalize(data, record_path=["data", "productIndustriesHoldingList"])

            # rearrange columns to display
            column_subset = [
                "industry",
                "assetPercent",
            ]

            existing_columns = [col for col in column_subset if col in df.columns]
            df = df[existing_columns]

            # rename column label to snake_case
            column_mapping = {
                "industry": "industry",
                "assetPercent": "net_asset_percent",
            }

            # Only rename columns that exist in the DataFrame
            existing_column_mapping = {k: v for k, v in column_mapping.items() if k in df.columns}
            df.rename(columns=existing_column_mapping, inplace=True)

            return df
        except Exception as e:
            logger.error(f"Error in API response: {str(e)}")
            raise

    @optimize_execution("fmarket")
    def nav_report(self, fundId:int=23) -> pd.DataFrame:
        """Retrieve all available daily NAV data point of the specified fund. Live data is retrieved from the Fmarket API.

        Parameters
        ----------
            fundId : int
                id of a fund in fmarket database.

        Returns
        -------
            df : pd.DataFrame
                DataFrame of all avalaible daily NAV data points of the selected fund.
        """
        # Set the date range to the current date
        current_date = datetime.now().strftime("%Y%m%d")
        url = f"{_BASE_URL[:-1]}/get-nav-history"
        payload = {
            "isAllData": 1,
            "productId": fundId,
            "fromDate": None,
            "toDate": current_date,
        }
        
        try:
            response_data = client.send_request(
                url=url,
                method="POST",
                headers=self.headers,
                payload=payload,
                show_log=False
            )
            
            data = response_data
            df = json_normalize(data, record_path=["data"])

            if not df.empty:
                # rearrange columns to display
                column_subset = ["navDate", "nav"]

                existing_columns = [col for col in column_subset if col in df.columns]
                df = df[existing_columns]

                # rename column label to snake_case
                column_mapping = {
                    "navDate": "date",
                    "nav": "nav_per_unit",
                }

                # Only rename columns that exist in the DataFrame
                existing_column_mapping = {k: v for k, v in column_mapping.items() if k in df.columns}
                df.rename(columns=existing_column_mapping, inplace=True)

                return df
            else:
                raise ValueError(f"No data with this fund_id {fundId}")
        except Exception as e:
            logger.error(f"Error in API response: {str(e)}")
            raise

    @optimize_execution("fmarket")
    def asset_holding(self, fundId:int=23) -> pd.DataFrame:
        """Retrieve list of assets holding allocation for specific fundID. Live data is retrieved from the Fmarket API.

        Parameters
        ----------
            fundId : int
                id of a fund in fmarket database.

        Returns
        -------
            df : pd.DataFrame
                DataFrame of assets holding allocation of the selected fund.
        """
        url = f"{_BASE_URL}/{fundId}"
        
        try:
            response_data = client.send_request(
                url=url,
                method="GET",
                headers=self.headers,
                show_log=False
            )
            
            data = response_data
            df = json_normalize(data, record_path=["data", "productAssetHoldingList"])

            # rearrange columns to display
            column_subset = [
                "assetPercent",
                "assetType.name",
            ]

            existing_columns = [col for col in column_subset if col in df.columns]
            df = df[existing_columns]

            # rename column label to snake_case
            column_mapping = {
                "assetPercent": "asset_percent",
                "assetType.name": "asset_type",
            }

            # Only rename columns that exist in the DataFrame
            existing_column_mapping = {k: v for k, v in column_mapping.items() if k in df.columns}
            df.rename(columns=existing_column_mapping, inplace=True)

            return df
        except Exception as e:
            logger.error(f"Error in API response: {str(e)}")
            raise



================================================
FILE: vnstock/explorer/misc/__init__.py
================================================
from .exchange_rate import *
from .gold_price import *


================================================
FILE: vnstock/explorer/misc/exchange_rate.py
================================================
import requests
from io import BytesIO
import pandas as pd
import base64
import datetime
import warnings
from vnai import optimize_execution
warnings.filterwarnings("ignore", message="Workbook contains no default style, apply openpyxl's default")
from vnstock.core.utils.parser import camel_to_snake


@optimize_execution('MISC')
def vcb_exchange_rate(date='2023-12-26'):
    """
    Get exchange rate from Vietcombank for a specific date.
    
    Parameters:
        date (str): Date in format YYYY-MM-DD. If left blank, the current date will be used.
    """
    if date == '':
        date = datetime.datetime.now().strftime('%Y-%m-%d')
    else:
        try:
            datetime.datetime.strptime(date, '%Y-%m-%d')
        except ValueError:
            print("Error: Incorrect date format. Should be YYYY-MM-DD.")

    url = f"https://www.vietcombank.com.vn/api/exchangerates/exportexcel?date={date}"
    response = requests.get(url)
    if response.status_code == 200:
        json_data = response.json()
        excel_data = base64.b64decode(json_data["Data"])  # Decode base64 data
        columns = ['CurrencyCode', 'CurrencyName', 'Buy Cash', 'Buy Transfer', 'Sell' ]
        df = pd.read_excel(BytesIO(excel_data), sheet_name='ExchangeRate')
        df.columns = columns
        df = df.iloc[2:-4]
        df['date'] = date
        df.columns = [camel_to_snake(col) for col in df.columns]
        return df
    else:
        print(f"Error: Unable to fetch data. Details: {response.text}")


================================================
FILE: vnstock/explorer/misc/gold_price.py
================================================
import requests
import json
import pandas as pd
from datetime import datetime
from bs4 import BeautifulSoup
from vnstock.core.utils.user_agent import get_headers
from vnai import optimize_execution

@optimize_execution('MISC')
def sjc_gold_price(date=None):
    """
    Truy xuất giá vàng từ trang chủ SJC.

    Args:
        - date: Ngày tra cứu, mặc định là None để lấy ngày hiện tại. 
                Nhập giá trị tùy chọn, định dạng YYYY-mm-dd, ví dụ 2025-01-15.
                Dữ liệu có sẵn từ ngày 2/1/2016.

    Returns:
        - Pandas DataFrame chứa thông tin giá vàng nếu thành công, ngược lại trả về None.
    """
    # Set URL
    url = "https://sjc.com.vn/GoldPrice/Services/PriceService.ashx"

    # Define the minimum allowed date
    min_date = datetime(2016, 1, 2)

    # Convert date to required format DD/MM/YYYY
    if date is None:
        input_date = datetime.now().date()
    else:
        try:
            input_date = datetime.strptime(date, "%Y-%m-%d")
            if input_date < min_date:
                raise ValueError("Ngày tra cứu phải từ 2/1/2016 trở đi.")
        except ValueError:
            raise ValueError("Định dạng ngày không hợp lệ. Vui lòng nhập theo định dạng YYYY-mm-dd.")

    # Format date for the API request
    formatted_date = input_date.strftime("%d/%m/%Y")

    # Prepare request payload and headers
    payload = f"method=GetSJCGoldPriceByDate&toDate={formatted_date}"
    headers = get_headers(data_source='SJC', random_agent=False)

    # Send request
    response = requests.post(url, headers=headers, data=payload)

    # Handle response
    if response.status_code == 200:
        data = response.json()
        if not data.get("success"):
            print("Lỗi: Không thể truy xuất dữ liệu từ API.")
            return None

        gold_data = data.get("data", [])
        if not gold_data:
            print("Lỗi: Không có dữ liệu trả về từ API.")
            return None

        # Convert to DataFrame
        df = pd.DataFrame(gold_data)
        df = df[["TypeName", "BranchName", "BuyValue", "SellValue"]]
        df.columns = ["name", "branch", "buy_price", "sell_price"]

        # Add date column as datetime type
        df["date"] = input_date

        # Ensure numerical columns are correctly formatted
        df["buy_price"] = df["buy_price"].astype(float)
        df["sell_price"] = df["sell_price"].astype(float)

        return df
    else:
        print(f"Lỗi: Không thể kết nối đến API. Mã trạng thái: {response.status_code}")
        return None
    

@optimize_execution('MISC')
def btmc_goldprice(url='http://api.btmc.vn/api/BTMCAPI/getpricebtmc?key=3kd8ub1llcg9t45hnoh8hmn7t5kc2v'):
    """Parse dữ liệu giá vàng từ API JSON Bảo Tín Minh Châu.

    Args:
        url: Đường dẫn đến API JSON.

    Returns:
        DataFrame chứa dữ liệu giá vàng.
    """
    response = requests.get(url)
    json_data = response.json()
    data_list = json_data['DataList']['Data']

    data = []
    for item in data_list:
        row_number = item["@row"]
        n_key = f'@n_{row_number}'
        k_key = f'@k_{row_number}'
        h_key = f'@h_{row_number}'
        pb_key = f'@pb_{row_number}'
        ps_key = f'@ps_{row_number}'
        pt_key = f'@pt_{row_number}'
        d_key = f'@d_{row_number}'
        data.append({
            "name": item.get(n_key, ''),
            "karat": item.get(k_key, ''),
            "gold_content": item.get(h_key, ''),
            "buy_price": item.get(pb_key, ''),
            "sell_price": item.get(ps_key, ''),
            "world_price": item.get(pt_key, ''),
            "time": item.get(d_key, '')
        })
    df = pd.DataFrame(data)
    df = df.sort_values(by=['sell_price'], ascending=False)
    return df


================================================
FILE: vnstock/explorer/msn/__init__.py
================================================
from .listing import *
from .quote import *


================================================
FILE: vnstock/explorer/msn/const.py
================================================
_BASE_URL = 'https://assets.msn.com/service/Finance'

_SYMBOL_INDEX_COLS_MAP = {
                        'RT00S': 'symbol',
                        'SecId': 'symbol_id',
                        'AC040': 'exchange_name',
                        'LS01Z': 'exchange_code_mic',
                        'AC042': 'short_name',
                        'FriendlyName': 'friendly_name',
                        'RT0SN': 'eng_name',
                        'Description': 'description',
                        'OS0LN': 'local_name',
                        'locale': 'locale'
                        }

_INTERVAL_MAP = {
                '1D': '1D',
                '1M':'Max'
                }

_RESAMPLE_MAP = {
    '1D': '1D',
    '1W': '1W',
    '1M': 'ME'
}

_OHLC_MAP = {
    'timeStamps': 'time',
    'openPrices': 'open',
    'pricesHigh': 'high',
    'pricesLow': 'low',
    'prices': 'close',
    'volumes': 'volume',
}


# Pandas data type mapping for history price data
_OHLC_DTYPE = {
    "time": "datetime64[ns]",  # Convert timestamps to datetime
    "open": "float64",
    "high": "float64",
    "low": "float64",
    "close": "float64",
    "volume": "int64",
}

_CURRENCY_ID_MAP = {
                    'USDVND': 'avyufr',
                    'JPYVND': 'ave8sm',
                    'AUDVND': 'auxrkr',
                    'CNYVND': 'av55fr',
                    'KRWVND': 'avfg9c',
                    'USDJPY': 'avyomw',
                    'USDEUR': 'avyn9c',
                    'USDCAD': 'avylur',
                    'USDCHF': 'avyt7w',
                    'USDCNY': 'avym77',
                    'USDKRW': 'avyoyc',
                    'USDSGD': 'avyspr',
                    'USDHKD': 'avynz2',
                    'USDTRY': 'avytp2',
                    'USDINR': 'avyo8m',
                    'USDDKK': 'avymr7',
                    'USDSEK': 'avyt52',
                    'USDILS': 'avyoh7',
                    'USDRUB': 'avys2w',
                    'USDMXN': 'avyqcw',
                    'USDZAR': 'avysvh',
                    'EURUSD': 'av932w',
                    'EURVND': 'av93ec',
                    'EURJPY': 'av8wim',
                    'EURGBP': 'av92z2',
                    'EURCHF': 'av923m',
                    'EURCAD': 'av8ttc',
                    'EURAUD': 'av8sfr',
                    'EURNZD': 'av8ysm',
                    'GBPJPY': 'avye1h',
                    'GBPVND': 'avyjtc',
                    'GBPUSD': 'avyjhw',
                    'GBPAUD': 'avy9ur',
                    'GBPCHF': 'avyilh',
                    'GBPNZD': 'avygbh',
                    'GBPCAD': 'avyb9c',
                    'AUDUSD': 'auxr9c',
                    'NZDUSD': 'avmpm7',
                    }

_CRYPTO_ID_MAP = {
                    'BTC': 'c2111',
                    'ETH': 'c2112',
                    'USDT': 'c2115',
                    'USDC': 'c211a', 
                    'BNB': 'c2113',
                    'BUSD': 'c211i',
                    'XRP': 'c2117',
                    'ADA': 'c2114',
                    'SOL': 'c2116',
                    'DOGE': 'c2119'
                    }


_GLOBAL_INDICES = {
                    'INX': 'a33k6h', # S&P 500 Index
                    'DJI': 'a6qja2', # Dow Jones Industrial Average
                    'COMP': 'a3oxnm', # Nasdaq Composite Index
                    'RUT': 'b9v42w', # Russell 2000 Index
                    'NYA': 'a74pqh', # NYSE Composite Index
                    'RUI': 'a33fcw', # Russell 1000 Index
                    'RUA': 'bggnm7', # Russell 3000 Index
                    'UKX': 'aopnp2', # FTSE 100 Index
                    'DAX': 'afx2kr', # DAX Index
                    'PX1': 'aecfh7', # CAC 40 Index
                    'N225': 'a9j7bh', # Nikkei 225 Index
                    '000001': 'adfh77', # Shanghai SE Composite Index
                    'HSI': 'ah7etc', # Hang Seng Index
                    'SENSEX': 'ahkucw', # S&P BSE Sensex Index
                    'ME00000000': 'ale3jc', # S&P/BMV IPC
                    'VNI': 'aqk2nm' # VN Index
                    }


================================================
FILE: vnstock/explorer/msn/helper.py
================================================
import requests
from datetime import datetime, timedelta
from vnstock.core.utils.user_agent import get_headers
from vnstock.explorer.msn.const import _CURRENCY_ID_MAP, _CRYPTO_ID_MAP, _GLOBAL_INDICES
from vnstock.core.utils.logger import get_logger

logger = get_logger(__name__)

def msn_apikey (headers, version='20240430', show_log=False):
    """
    Lấy apikey của MSN để sử dụng cho các truy vấn dữ liệu

    Tham số:
        - headers (bắt buộc): Header của request.
        - version (tùy chọn): Phiên bản của apikey, thường là giá trị ngày tháng của hôm đó, ví dụ 20240527. Mặc định là None. Trong một số trường hợp ngoại lệ, số version hoạt động không theo quy tắc gây lỗi mới cần phải chỉ định mã version.
        - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
    """
    scope = """{"audienceMode":"adult",
                        "browser":{"browserType":"chrome","version":"0","ismobile":"false"},
                        "deviceFormFactor":"desktop","domain":"www.msn.com",
                        "locale":{"content":{"language":"vi","market":"vn"},"display":{"language":"vi","market":"vn"}},
                        "ocid":"hpmsn","os":"macos","platform":"web",
                        "pageType":"financestockdetails"}
                        """
    if version is None:
        today = (datetime.now()-timedelta(hours=7)).strftime("%Y%m%d")
        version = today
    
    url = f"https://assets.msn.com/resolver/api/resolve/v3/config/?expType=AppConfig&expInstance=default&apptype=finance&v={version}.130&targetScope={scope}"
    if show_log:
        logger.info(f"Requesting apikey from {url}")
    response = requests.request("GET", url, headers=headers)
    data = response.json()
    if show_log:
        logger.info(f"Response: {data}")
    apikey = data['configs']["shared/msn-ns/HoroscopeAnswerCardWC/default"]["properties"]["horoscopeAnswerServiceClientSettings"]["apikey"]
    return apikey

def get_asset_type(symbol_id):
    if symbol_id in _CURRENCY_ID_MAP.values():
        return "currency"
    elif symbol_id in _CRYPTO_ID_MAP.values():
        return "crypto"
    elif symbol_id in _GLOBAL_INDICES.values():
        return "index"
    else:
        return "Unknown"
    



================================================
FILE: vnstock/explorer/msn/listing.py
================================================
"""Listing module."""

from typing import Dict, Optional
from datetime import datetime
import pandas as pd
import requests
import json
# from vnstock.core.utils.parser import camel_to_snake
from vnai import optimize_execution
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.explorer.msn.helper import msn_apikey
from vnstock.explorer.msn.const import _SYMBOL_INDEX_COLS_MAP

logger = get_logger(__name__)

class Listing:
    """
    Cấu hình truy cập dữ liệu lịch sử giá chứng khoán từ VCI.
    """
    def __init__(self, api_version='20250317', random_agent=False):
        self.data_source = 'MSN'
        self.headers = get_headers(data_source=self.data_source, random_agent=random_agent)
        self.apikey = msn_apikey(self.headers, version=api_version)
    
    
    @optimize_execution('MSN')
    def search_symbol_id (self, query:str, locale:Optional[str]=None, limit:Optional[int]=10, show_log:Optional[bool]=False, to_df: bool =True) -> Dict:
        """
        Truy xuất danh sách toàn. bộ mã và tên các cổ phiếu trên thị trường Việt Nam.

        Tham số:
            - query (bắt buộc): Từ khóa tìm kiếm mã cổ phiếu.
            - locale (tùy chọn): Ngôn ngữ mục tiêu, đồng thời sử dụng để lọc kết quả, ví dụ 'vi-vn', 'en-us'. Mặc định là None.
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
            - to_df (tùy chọn): Chuyển đổi dữ liệu danh sách mã cổ phiếu trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dữ liệu dạng JSON.
        """
        url = f"https://services.bingapis.com/contentservices-finance.csautosuggest/api/v1/Query?query={query}&market={locale}&count={limit}"

        response = requests.request("GET", url, headers=self.headers)

        if response.status_code != 200:
            raise ConnectionError(f"Failed to fetch data: {response.status_code} - {response.reason}")

        json_data = response.json()['data']['stocks']

        if show_log:
            logger.info(f'Truy xuất thành công dữ liệu danh sách rút gọn các mã cổ phiếu cho {len(json_data["data"]["stocks"])} mã.')

        combine_ls = []
        for item in json_data:
            item_data = json.loads(item)
            combine_ls.append(item_data)

        combine_df = pd.DataFrame(combine_ls)
        select_col_names = list(_SYMBOL_INDEX_COLS_MAP.keys())
        combine_df = combine_df[select_col_names]
        combine_df.rename(columns=_SYMBOL_INDEX_COLS_MAP, inplace=True)
        
        if locale is not None:
            combine_df = combine_df[combine_df['locale'] == locale]

        if to_df:
            return combine_df
        else:
            return combine_df.to_dict(orient='records')





================================================
FILE: vnstock/explorer/msn/models.py
================================================
"""Mô hình xác thực dữ liệu đầu vào cho VCI"""
from pydantic import BaseModel
from datetime import datetime
from typing import Optional

class TickerModel(BaseModel):
    symbol: str
    start: str
    end: Optional[str] = None
    interval: Optional[str] = "1D"



================================================
FILE: vnstock/explorer/msn/quote.py
================================================
"""History module for MSN."""

# Đồ thị giá, đồ thị dư mua dư bán, đồ thị mức giá vs khối lượng, thống kê hành vi thị tường
import pandas as pd
import requests
from datetime import datetime
from typing import Optional, Dict
from vnai import optimize_execution
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.explorer.msn.listing import Listing
from vnstock.explorer.msn.helper import msn_apikey
from vnstock.explorer.msn.models import TickerModel 
from vnstock.explorer.msn.helper import get_asset_type
from .const import _BASE_URL, _RESAMPLE_MAP, _OHLC_MAP, _OHLC_DTYPE

logger = get_logger(__name__)

class Quote:
    """
    MSN data source for fetching stock market data, accommodating requests with large date ranges.
    """
    def __init__(self, symbol_id:str, api_version='20240430', random_agent:Optional[bool]=False):
        self.data_source = 'MSN'
        self.symbol_id = symbol_id.lower()
        self.asset_type = get_asset_type(symbol_id)
        self.base_url = _BASE_URL
        self.headers = get_headers(data_source=self.data_source, random_agent=random_agent)
        self.apikey = msn_apikey(headers=self.headers, version=api_version)

    def _input_validation(self, start: str, end: str, interval: str):
        """
        Validate input data
        """
        # Validate input data
        ticker = TickerModel(symbol=self.symbol_id, start=start, end=end, interval=interval)
        return ticker
    

    @optimize_execution('MSN')
    def history(self, start: str, end: Optional[str], interval: Optional[str] = "1D", to_df: bool =True, show_log: bool =False, count_back: Optional[int]=365, asset_type: Optional[str] = None) -> Dict:
        """
        Tham số:
            - start (bắt buộc): thời gian bắt đầu lấy dữ liệu, có thể là ngày dạng string kiểu "YYYY-MM-DD" hoặc "YYYY-MM-DD HH:MM:SS".
            - end (tùy chọn): thời gian kết thúc lấy dữ liệu. Mặc định là None, chương trình tự động lấy thời điểm hiện tại. Có thể nhập ngày dạng string kiểu "YYYY-MM-DD" hoặc "YYYY-MM-DD HH:MM:SS". 
            - interval (tùy chọn): Khung thời gian trích xuất dữ liệu giá lịch sử. Giá trị duy nhất được hỗ trợ là "1D".
            - to_df (tùy chọn): Chuyển đổi dữ liệu lịch sử trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dữ liệu dạng JSON.
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
            - count_back (tùy chọn): Số lượng dữ liệu trả về từ thời điểm cuối. Mặc định là 365.
        """

        # Validate inputs
        ticker = self._input_validation(start, end, interval)
        
        if count_back is None:
            count_back = 365

        # interval should be in 1D, 1W, 1M
        if interval not in _RESAMPLE_MAP.keys():
            raise ValueError("Giá trị interval được phép chỉ bao gồm 1D, 1W, 1M cho nguồn dữ liệu từ MSN.")

        if self.asset_type == "crypto":
            url = f"{_BASE_URL}/Cryptocurrency/chart"
        else:
            url = f"{_BASE_URL}/Charts/TimeRange"

        params = {"apikey": self.apikey,
                  'StartTime': f'{start}T17:00:00.000Z',
                    'EndTime': f'{end}T16:59:00.858Z',
                    'timeframe' : 1, 
                    "ocid": "finance-utils-peregrine",
                    "cm": "vi-vn",
                    "it": "web",
                    "scn": "ANON",
                    "ids": self.symbol_id,
                    "type": "All",
                    "wrapodata": "false",
                    "disableSymbol": "false"
                }

        if show_log:
            logger.info(f"Tải dữ liệu từ {url} cho {ticker.symbol} từ {ticker.start} đến {ticker.end}, khung thời gian {ticker.interval}.\nParams: {params}")

        # Send a GET request to fetch the data
        response = requests.request("GET", url, headers=self.headers, params=params)

        if response.status_code != 200:
            raise ConnectionError(f"Tải dữ liệu không thành công: {response.status_code} - {response.reason}")

        json_data = response.json()[0]['series']

        if show_log:
            logger.info(f'Truy xuất thành công dữ liệu {ticker.symbol} từ {ticker.start} đến {ticker.end}, khung thời gian {ticker.interval}.')

        df = self._as_df(json_data, interval)

        # index df's data by start and end date
        df = df[(df['time'] >= ticker.start) & (df['time'] <= ticker.end)]

        df.source = self.data_source

        if count_back is not None:
            df = df.tail(count_back)
        
        if to_df:
            return df
        else:
            # convert the time column to int value in seconds
            df['time'] = df['time'].astype("int64")
            # convert df to json format 
            json_data = df.to_dict(orient='records')
            return json_data
    
    def _as_df(self, history_data: Dict, interval:str, floating: Optional[int] = 2) -> pd.DataFrame:
        """
        Convert fetched historical stock data into a Pandas DataFrame.
        """
        df = pd.DataFrame(history_data)
        df.drop(columns=['priceHigh', 'priceLow', 'startTime', 'endTime'], inplace=True)
        
        # rename columns using OHLC_MAP
        df.rename(columns=_OHLC_MAP, inplace=True)

        # parse the df['time'] from string to datetime, it can be in format of "2023-01-01 00:00:00" or "2023-01-01"
        df["time"] = pd.to_datetime(df["time"], errors='coerce')

        # add 7 hours to time to convert from UTC to Asia/Ho_Chi_Minh
        df['time'] = df['time'] + pd.Timedelta(hours=7)
        # remove hours info from time
        df['time'] = df['time'].dt.floor('D')

        # round open, high, low, close to 2 decimal places
        df[["open", "high", "low", "close"]] = df[["open", "high", "low", "close"]].round(floating)

        # set datatype for each column using _OHLC_DTYPE
        for col, dtype in _OHLC_DTYPE.items():
            if df[col].dtype.name == 'datetime64[ns, UTC]':
                df[col] = df[col].dt.tz_localize(None)
            else:
                df[col] = df[col].astype(dtype)

        # Define column order for clarity and maintainability
        column_order = ['time', 'open', 'high', 'low', 'close', 'volume']
        # Reorder columns for the final DataFrame
        df = df[column_order]

        if interval not in ["1D"]:
            df = df.set_index('time').resample(_RESAMPLE_MAP[interval]).agg({
                'open': 'first',
                'high': 'max',
                'low': 'min',
                'close': 'last',
                'volume': 'sum'
            }).reset_index()
        
        if self.asset_type == "currency":
            df.drop(columns=['volume'], inplace=True)
        
        # replace value -99999901.0	by NaN
        df = df.replace(-99999901.0, None)
        # drop rows with NaN values in open, high, low
        df = df.dropna(subset=['open', 'high', 'low'])

        return df



================================================
FILE: vnstock/explorer/tcbs/__init__.py
================================================
from .listing import *
from .quote import *
from .analysis import *
from .company import *
from .trading import *
from .financial import *
from .screener import *


================================================
FILE: vnstock/explorer/tcbs/analysis.py
================================================
# Các chỉ số phân tích, định giá, so sánh


================================================
FILE: vnstock/explorer/tcbs/company.py
================================================
"""
Module quản lý các thông tin liên quan đến công ty từ nguồn dữ liệu TCBS.
"""

import pandas as pd
from pandas import json_normalize
from bs4 import BeautifulSoup
from typing import Dict, Optional, List, Union
from vnstock.core.utils import client
from vnstock.explorer.tcbs.const import _BASE_URL, _ANALYSIS_URL
from vnstock.core.utils.parser import get_asset_type, camel_to_snake
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnai import optimize_execution
from vnstock.explorer.tcbs.financial import Finance

logger = get_logger(__name__)

class Company:
    """
    Class (lớp) quản lý các thông tin liên quan đến công ty từ nguồn dữ liệu TCBS.

    Tham số:
        - symbol (str): Mã chứng khoán của công ty cần truy xuất thông tin.
        - random_agent (bool): Sử dụng user-agent ngẫu nhiên hoặc không. Mặc định là False.
        - to_df (bool): Chuyển đổi dữ liệu thành DataFrame hoặc không. Mặc định là True.
        - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
    """
    def __init__(self, symbol: str, random_agent: bool = False, 
                 to_df: Optional[bool] = True, show_log: Optional[bool] = False):
        """
        Khởi tạo đối tượng Company với các tham số cho việc truy xuất dữ liệu.
        """
        self.symbol = symbol.upper()
        self.asset_type = get_asset_type(self.symbol)
        
        # Validate if symbol is a stock
        if self.asset_type not in ['stock']:
            raise ValueError("Mã chứng khoán không hợp lệ. Chỉ cổ phiếu mới có thông tin.")
            
        self.base_url = _BASE_URL
        self.headers = get_headers(data_source='TCBS', random_agent=random_agent)
        self.show_log = show_log
        self.to_df = to_df
        self.finance = Finance(self.symbol)

        # Adjust logger level based on show_log parameter
        if not self.show_log:
            logger.setLevel('CRITICAL')

    def _process_response(self, df: pd.DataFrame, exclude_columns: Optional[List[str]] = None) -> Union[pd.DataFrame, Dict]:
        """
        Helper method to process response DataFrame and return in required format.
        
        Args:
            df: DataFrame to process
            exclude_columns: Columns to exclude from DataFrame
            
        Returns:
            DataFrame or dict based on to_df setting
        """
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Drop specified columns if they exist
        if exclude_columns:
            for col in exclude_columns:
                if col in df.columns:
                    df.drop(columns=[col], inplace=True)
        
        # Add metadata
        df.name = self.symbol
        df.source = 'TCBS'
        
        # Return DataFrame or dict based on to_df setting
        if self.to_df:
            return df
        else:
            return df.to_dict(orient='records')[0]

    @optimize_execution("TCBS")
    def overview(self) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin tổng quan của mã chứng khoán từ nguồn dữ liệu TCBS với các thông số cài đặt khi khởi tạo class.
        
        Returns:
            Thông tin tổng quan dưới dạng DataFrame hoặc dict.
        """
        url = f'{self.base_url}/{_ANALYSIS_URL}/v1/ticker/{self.symbol}/overview'
        
        # Use centralized request handler
        data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            show_log=self.show_log
        )
        
        # Process response data
        df = pd.DataFrame(data, index=[0])
        
        # Select relevant columns
        df = df[['ticker', 'exchange', 'industry', 'companyType',
                'noShareholders', 'foreignPercent', 'outstandingShare', 'issueShare',
                'establishedYear', 'noEmployees',  
                'stockRating', 'deltaInWeek', 'deltaInMonth', 'deltaInYear', 
                'shortName', 'website', 'industryID', 'industryIDv2']]
                
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Rename specific columns
        df.rename(columns={
            'industry_i_dv2': 'industry_id_v2', 
            'ticker': 'symbol'
        }, inplace=True)

        return self._process_response(df)
    
    @optimize_execution("TCBS")
    def profile(self) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin mô tả công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.
        
        Returns:
            Thông tin mô tả công ty dưới dạng DataFrame hoặc dict.
        """
        url = f"{self.base_url}/{_ANALYSIS_URL}/v1/company/{self.symbol}/overview"
        
        # Use centralized request handler
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            show_log=self.show_log
        )
        
        # Process response data
        df = json_normalize(response_data)
        
        # Clean HTML content in text fields
        for col in df.columns:
            try:
                df[col] = df[col].apply(lambda x: BeautifulSoup(x, 'html.parser').get_text())
                df[col] = df[col].str.replace('\n', ' ')
            except:
                pass
                    
        # Add symbol column
        df['symbol'] = self.symbol
        
        # Drop unnecessary columns
        try:
            df.drop(columns=['id', 'ticker'], inplace=True, errors='ignore')
        except:
            pass
        
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Reorder columns to put symbol first
        cols = df.columns.tolist()
        cols.remove('symbol')
        cols = ['symbol'] + cols
        df = df[cols]
        
        # Add metadata
        df.name = self.symbol
        df.source = 'TCBS'
        
        # Return in requested format
        if self.to_df:
            return df
        else:
            return df.to_dict(orient='records')[0]

    @optimize_execution("TCBS")
    def shareholders(self) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin cổ đông lớn của công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.
        
        Returns:
            Thông tin cổ đông lớn dưới dạng DataFrame hoặc dict.
        """
        url = f"{self.base_url}/{_ANALYSIS_URL}/v1/company/{self.symbol}/large-share-holders"
        
        # Use centralized request handler
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            show_log=self.show_log
        )
        
        # Process response data
        df = json_normalize(response_data['listShareHolder'])
        
        # Rename columns for clarity
        df.rename(columns={
            'name': 'shareHolder', 
            'ownPercent': 'shareOwnPercent'
        }, inplace=True)

        return self._process_response(df, exclude_columns=['no', 'ticker'])
        
    @optimize_execution("TCBS")
    def insider_deals(self, page_size: Optional[int] = 20, page: Optional[int] = 0) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin giao dịch nội bộ của công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - page_size (int): Số lượng giao dịch trên mỗi trang. Mặc định là 20.
            - page (int): Trang cần truy xuất thông tin. Mặc định là 0.
            
        Returns:
            Thông tin giao dịch nội bộ dưới dạng DataFrame hoặc dict.
        """
        url = f"{self.base_url}/{_ANALYSIS_URL}/v1/company/{self.symbol}/insider-dealing"
        
        # Use centralized request handler
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            params={"page": page, "size": page_size},
            show_log=self.show_log
        )
        
        # Process response data
        try:
            df = json_normalize(response_data['listInsiderDealing'])
        except KeyError:
            logger.error(f"No insider dealing data available for {self.symbol}")
            return pd.DataFrame() if self.to_df else {}
            
        # Drop unnecessary columns
        try:
            df.drop(columns=['no', 'ticker'], inplace=True, errors='ignore')
        except KeyError as e:
            logger.warning(f"Columns to drop not found: {e}")

        # Rename columns for clarity
        try:
            df.rename(columns={
                'anDate': 'dealAnnounceDate', 
                'dealingMethod': 'dealMethod', 
                'dealingAction': 'dealAction', 
                'quantity': 'dealQuantity', 
                'price': 'dealPrice', 
                'ratio': 'dealRatio'
            }, inplace=True)
        except KeyError as e:
            logger.error(f"Error renaming columns: {e}")

        # Format date and sort
        if 'dealAnnounceDate' in df.columns:
            df['dealAnnounceDate'] = pd.to_datetime(df['dealAnnounceDate'], format='%d/%m/%y')
            df.sort_values(by='dealAnnounceDate', ascending=False, inplace=True)
        else:
            logger.error(f"'dealAnnounceDate' column not found in DataFrame for {self.symbol}")
            return pd.DataFrame() if self.to_df else {}

        # Map numerical codes to descriptive values
        if 'dealMethod' in df.columns:
            df['dealMethod'] = df['dealMethod'].replace({
                1: 'Cổ đông lớn', 
                2: 'Cổ đông sáng lập', 
                0: 'Cổ đông nội bộ'
            })
            
        if 'dealAction' in df.columns:
            df['dealAction'] = df['dealAction'].replace({'1': 'Bán', '0': 'Mua'})

        return self._process_response(df)
        
    @optimize_execution("TCBS")
    def subsidiaries(self, page_size: Optional[int] = 100, page: Optional[int] = 0) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin các công ty con, công ty liên kết của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - page_size (int): Số lượng công ty con trên mỗi trang. Mặc định là 100.
            - page (int): Trang cần truy xuất thông tin. Mặc định là 0.
            
        Returns:
            Thông tin công ty con dưới dạng DataFrame hoặc dict.
        """
        url = f"{self.base_url}/{_ANALYSIS_URL}/v1/company/{self.symbol}/sub-companies"
        df_list = []
        
        # Handle pagination for large result sets
        if page_size > 100:
            max_pages = (page_size + 99) // 100  # Ceiling division
            effective_page_size = 100
            
            for current_page in range(page, page + max_pages):
                try:
                    # Use centralized request handler for each page
                    response_data = client.send_request(
                        url=url,
                        headers=self.headers,
                        method="GET",
                        params={"page": current_page, "size": effective_page_size},
                        show_log=self.show_log
                    )
                    
                    page_df = json_normalize(response_data['listSubCompany'])
                    df_list.append(page_df)
                except Exception as e:
                    logger.error(f"Error fetching subsidiaries data for {self.symbol} at page {current_page}: {str(e)}")
                    continue
        else:
            # Use centralized request handler for single page
            response_data = client.send_request(
                url=url,
                headers=self.headers,
                method="GET",
                params={"page": page, "size": page_size},
                show_log=self.show_log
            )
            
            df_list.append(json_normalize(response_data['listSubCompany']))
            
        # Combine results from all pages
        if not df_list:
            return pd.DataFrame() if self.to_df else {}
            
        df = pd.concat(df_list, ignore_index=True)
        
        # Rename columns for clarity
        df.rename(columns={
            'companyName': 'subCompanyName', 
            'ownPercent': 'subOwnPercent'
        }, inplace=True)

        return self._process_response(df, exclude_columns=['no', 'ticker'])
        
    @optimize_execution("TCBS")
    def officers(self, page_size: Optional[int] = 20, page: Optional[int] = 0) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất danh sách lãnh đạo của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - page_size (int): Số lượng lãnh đạo trên mỗi trang. Mặc định là 20.
            - page (int): Trang cần truy xuất thông tin. Mặc định là 0.
            
        Returns:
            Thông tin lãnh đạo dưới dạng DataFrame hoặc dict.
        """
        url = f"{self.base_url}/{_ANALYSIS_URL}/v1/company/{self.symbol}/key-officers"
        
        # Use centralized request handler
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            params={"page": page, "size": page_size},
            show_log=self.show_log
        )
        
        # Process response data
        df = json_normalize(response_data['listKeyOfficer'])
        
        # Rename columns for clarity
        df.rename(columns={
            'name': 'officerName', 
            'position': 'officerPosition', 
            'ownPercent': 'officerOwnPercent'
        }, inplace=True)
        
        # Sort by ownership percentage and position
        df.sort_values(by=['officerOwnPercent', 'officerPosition'], ascending=False, inplace=True)

        return self._process_response(df, exclude_columns=['no', 'ticker'])
        
    @optimize_execution("TCBS")
    def events(self, page_size: Optional[int] = 15, page: Optional[int] = 0) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin sự kiện của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - page_size (int): Số lượng sự kiện trên mỗi trang. Mặc định là 15.
            - page (int): Trang cần truy xuất thông tin. Mặc định là 0.
            
        Returns:
            Thông tin sự kiện dưới dạng DataFrame hoặc dict.
        """
        url = f"{self.base_url}/{_ANALYSIS_URL}/v1/ticker/{self.symbol}/events-news"
        
        # Use centralized request handler
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            params={"page": page, "size": page_size},
            show_log=self.show_log
        )
        
        # Process response data
        df = pd.DataFrame(response_data['listEventNews'])
        
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Rename specific columns and process HTML content
        try:
            df.rename(columns={
                'price_change_ratio1_m': 'price_change_ratio_1m', 
                'ex_rigth_date': 'exer_right_date'
            }, inplace=True)
            
            # Process HTML in event descriptions
            try:
                df['event_desc'] = df['event_desc'].apply(lambda x: BeautifulSoup(x, 'html.parser').get_text())
                df['event_desc'] = df['event_desc'].str.replace('\n', ' ')
            except Exception as e:
                logger.warning(f"Error parsing HTML for event_desc: {e}")
                
        except Exception as e:
            logger.warning(f"Error processing event data: {e}")

        df = self._process_response(df, exclude_columns=['ticker'])
        
        # convert date columns from object to standard datetime string YYYY-mm-dd if they exist
        date_columns = ['notify_date', 'exer_date', 'reg_final_date', 'exer_right_date']
        for col in date_columns:
            if col in df.columns:
                try:
                    df[col] = pd.to_datetime(df[col], format='%Y-%m-%d %H:%M:%S').dt.strftime('%Y-%m-%d')
                except Exception as e:
                    logger.warning(f"Không thể chuyển đổi cột {col}: {str(e)}")

        return df

    @optimize_execution("TCBS")
    def news (self, page_size: Optional[int] = 15, page: Optional[int] = 0) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin tin tức liên quan đến công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - page_size (int): Số lượng tin tức trên mỗi trang. Mặc định là 15.
            - page (int): Trang cần truy xuất thông tin. Mặc định là 0.
            
        Returns:
            Thông tin tin tức dưới dạng DataFrame hoặc dict.
        """
        url = f"{self.base_url}/{_ANALYSIS_URL}/v1/ticker/{self.symbol}/activity-news"
        
        # Use centralized request handler
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            params={"page": page, "size": page_size},
            show_log=self.show_log
        )
        
        # Process response data
        df = pd.DataFrame(response_data['listActivityNews'])
        
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Rename specific columns
        df.rename(columns={
            'price_change_ratio1_m': 'price_change_ratio_1m'
        }, inplace=True)

        return self._process_response(df, exclude_columns=['ticker'])
        
    @optimize_execution("TCBS")
    def dividends(self, page_size: Optional[int] = 15, page: Optional[int] = 0) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất lịch sử cổ tức của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.
        
        Tham số:
            - page_size (int): Số lượng kết quả trên mỗi trang. Mặc định là 15.
            - page (int): Trang cần truy xuất thông tin. Mặc định là 0.
            
        Returns:
            Lịch sử cổ tức dưới dạng DataFrame hoặc dict.
        """
        url = f'{self.base_url}/{_ANALYSIS_URL}/v1/company/{self.symbol}/dividend-payment-histories'
        
        # Use centralized request handler
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="GET",
            params={"page": page, "size": page_size},
            show_log=self.show_log
        )
        
        # Process response data
        df = json_normalize(response_data['listDividendPaymentHis'])

        df = self._process_response(df, exclude_columns=['no', 'ticker'])

        # convert df['exeexercise_date'] from object in dd/mm/YY to standard datetime string YYYY-mm-dd
        df['exercise_date'] = pd.to_datetime(df['exercise_date'], format='%d/%m/%y').dt.strftime('%Y-%m-%d')

        return df




================================================
FILE: vnstock/explorer/tcbs/const.py
================================================
_BASE_URL = 'https://apipubaws.tcbs.com.vn'
_STOCKS_URL = 'stock-insight'
_FUTURE_URL = 'futures-insight'
_ANALYSIS_URL = 'tcanalysis'

_INTERVAL_MAP = {'1m' : '1',
            '5m' : '5',
            '15m' : '15',
            '30m' : '30',
            '1H' : '60',
            '1D' : 'D',
            '1W' : 'W',
            '1M' : 'M'
            }
        

_OHLC_MAP = {
    'tradingDate': 'time',
    'open': 'open',
    'high': 'high',
    'low': 'low',
    'close': 'close',
    'volume': 'volume',
}


# Pandas data type mapping for history price data
_OHLC_DTYPE = {
    "time": "datetime64[ns]",  # Convert timestamps to datetime
    "open": "float64",
    "high": "float64",
    "low": "float64",
    "close": "float64",
    "volume": "int64",
}

_INTRADAY_MAP = {
            "t": "time",
            "p": 'price',
            "v": 'volume',
            "a": "match_type",
        }

_INTRADAY_DTYPE = {
                    "price": "float64",
                    "volume": "int64",
                    "time": "datetime64[ns]",
                    "match_type": "category"
                }

_PRICE_BOARD_EXT_COLS = ['t', 'cp', 'fv', 'mav', 'nstv', 'nstp', 'rsi', 'macdv', 'macdsignal',
        'tsignal', 'avgsignal', 'ma20', 'ma50', 'ma100', 'session', 'mw3d',
        'mw1m', 'mw3m', 'mw1y', 'rs3d', 'rs1m', 'rs3m', 'rs1y', 'rsavg', 'hp1m',
        'hp3m', 'hp1y', 'lp1m', 'lp3m', 'lp1y', 'hp1yp', 'lp1yp', 'pe', 'pb',
        'roe', 'oscore', 'av', 'bv', 'ev', 'hmp', 'mscore', 'delta1m',
        'delta1y', 'vnipe', 'vnipb', 'vnid3d', 'vnid1m', 'vnid3m', 'vnid1y']

_PRICE_BOARD_STD_COLS = ['t', 'cp', 'nstv', 'nstp', 'session', 'mw3d',
        'mw1m', 'mw3m', 'mw1y', 'hp1m',
        'hp3m', 'hp1y', 'lp1m', 'lp3m', 'lp1y', 'hp1yp', 'lp1yp', 'pe', 'pb',
        'roe', 'oscore', 'av', 'bv', 'ev', 'hmp', 'mscore', 'delta1m',
        'delta1y']

_PRICE_BOARD_COLS_MAP = {
                    't' : 'Mã CP', 'cp' : 'Giá', 
                    'fv' : 'KLBD/TB5D', 'mav' : 'T.độ GD', 
                    'nstv' : 'KLGD ròng(CM)', 'nstp' : '%KLGD ròng (CM)', 
                    'rsi' : 'RSI', 'macdv' : 'MACD Hist', 'macdsignal' : 'MACD Signal', 
                    'tsignal' : 'Tín hiệu KT', 'avgsignal' : 'Tín hiệu TB động', 
                    'ma20' : 'MA20', 'ma50' : 'MA50', 'ma100' : 'MA100', 
                    'session' : 'Phiên +/- ', 'mscore' : 'Đ.góp VNINDEX', 
                    'pe' : 'P/E', 'pb' : 'P/B', 'roe' : 'ROE', 'oscore' : 'TCRating', 
                    'ev' : 'TCBS định giá', 'mw3d' : '% thay đổi giá 3D', 'mw1m' : '% thay đổi giá 1M', 
                    'mw3m' : '% thay đổi giá 3M', 'mw1y' : '% thay đổi giá 1Y', 
                    'rs3d' : 'RS 3D', 'rs1m' : 'RS 1M', 'rs3m' : 'RS 3M', 
                    'rs1y' : 'RS 1Y', 'rsavg' : 'RS TB', 'hp1m' : 'Đỉnh 1M', 
                    'hp3m' : 'Đỉnh 3M', 'hp1y' : 'Đỉnh 1Y', 'lp1m' : 'Đáy 1M', 
                    'lp3m' : 'Đáy 3M', 'lp1y' : 'Đáy 1Y', 'hp1yp' : '%Đỉnh 1Y', 
                    'lp1yp' : '%Đáy 1Y', 'delta1m' : '%Giá - %VNI (1M)', 'delta1y' : '%Giá - %VNI (1Y)', 
                    'bv' : 'Khối lượng Dư mua', 'av' : 'Khối lượng Dư bán', 'hmp' : 'Khớp nhiều nhất', 'vnipe':'VNINDEX P/E', 'vnipb':'VNINDEX P/B'
                    }

_FINANCIAL_REPORT_MAP = {'balance_sheet': 'balancesheet', 
                            'income_statement': 'incomestatement', 
                            'cash_flow': 'cashflow'}

_FINANCIAL_REPORT_PERIOD_MAP = {'year': 1, 'quarter': 0}

_INDEX_MAPPING = {'VNINDEX': 'VNINDEX', 'HNXINDEX': 'HNXIndex', 'UPCOMINDEX': 'UPCOM'}

_SCREENER_MAPPING = {
    "exchange_name": "exchange",
    "industry_name": "industry",
    "company_name": "company_name",
    "roe": "roe",
    "active_buy_percentage": "active_buy_pct",
    "strong_buy_percentage": "strong_buy_pct",
    "suddenly_high_volume_matching": "high_vol_match",
    "forecast_volume_ratio": "forecast_vol_ratio",
    "ev_ebitda": "ev_ebitda",
    "revenue_growth1_year": "revenue_growth_1y",
    "revenue_growth5_year": "revenue_growth_5y",
    "eps_growth1_year": "eps_growth_1y",
    "eps_growth5_year": "eps_growth_5y",
    "avg_trading_value5_day": "avg_trading_value_5d",
    "avg_trading_value10_day": "avg_trading_value_10d",
    "avg_trading_value20_day": "avg_trading_value_20d",
    "relative_strength3_day": "relative_strength_3d",
    "relative_strength1_month": "rel_strength_1m",
    "relative_strength3_month": "rel_strength_3m",
    "relative_strength1_year": "rel_strength_1y",
    "foreign_volume_percent": "foreign_vol_pct",
    "foreign_buy_sell20_session": "foreign_buysell_20s",
    "volume_vs_v_sma5": "vol_vs_sma5",
    "volume_vs_v_sma10": "vol_vs_sma10",
    "volume_vs_v_sma20": "vol_vs_sma20",
    "volume_vs_v_sma50": "vol_vs_sma50",
    "price_growth1_week": "price_growth_1w",
    "price_growth1_month": "price_growth_1m",
    "prev1_day_growth_percent": "prev_1d_growth_pct",
    "prev1_month_growth_percent": "prev_1m_growth_pct",
    "prev1_year_growth_percent": "prev_1y_growth_pct",
    "prev5_year_growth_percent": "prev_5y_growth_pct",
    "profit_for_the_last4_quarters": "profit_last_4q",
    "percent1_year_from_peak": "pct_1y_from_peak",
    "percent_away_from_historical_peak": "pct_away_from_hist_peak",
    "percent1_year_from_bottom": "pct_1y_from_bottom",
    "percent_off_historical_bottom": "pct_off_hist_bottom",
}



================================================
FILE: vnstock/explorer/tcbs/financial.py
================================================
"""
Module quản lý thông tin báo cáo tài chính từ nguồn dữ liệu TCBS.
"""

import pandas as pd
from typing import Optional, Dict, Union
from vnstock.core.utils import client
from vnstock.core.utils.parser import get_asset_type, camel_to_snake
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnai import optimize_execution  # Import the decorator from vnai package
from .const import _BASE_URL, _ANALYSIS_URL, _FINANCIAL_REPORT_MAP, _FINANCIAL_REPORT_PERIOD_MAP

logger = get_logger(__name__)


class Finance:
    """
    Truy xuất thông tin báo cáo tài chính của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

    Tham số:
        - symbol (str): Mã chứng khoán của công ty cần truy xuất thông tin.
        - report_type (str): Loại báo cáo tài chính cần truy xuất. Mặc định là 'income_statement'.
        - period (str): Chu kỳ báo cáo tài chính cần truy xuất. Mặc định là 'quarterly'.
        - get_all (bool): Truy xuất toàn bộ thông tin báo cáo tài chính hoặc không. Mặc định là True.
        - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là True.
    """

    def __init__(self, symbol: str, report_type: Optional[str] = 'income_statement', 
                 period: Optional[str] = 'quarter', get_all: Optional[bool] = True, 
                 show_log: Optional[bool] = True):
        """
        Khởi tạo đối tượng Finance với các tham số cho việc truy xuất dữ liệu báo cáo tài chính.
        """
        self.symbol = symbol.upper()
        self.asset_type = get_asset_type(self.symbol)
        self.headers = get_headers(data_source='TCBS')
        self.show_log = show_log
        
        # Validate input for report_type
        if report_type not in ['balance_sheet', 'income_statement', 'cash_flow']:
            raise ValueError("Loại báo cáo tài chính không hợp lệ. Chỉ chấp nhận 'balance_sheet', 'income_statement', 'cash_flow'.")
        
        # Validate input for period
        if period not in ['year', 'quarter']:
            raise ValueError("Kỳ báo cáo tài chính không hợp lệ. Chỉ chấp nhận 'year' hoặc 'quarter'.")
        
        # If asset_type is not stock, raise error
        if self.asset_type not in ['stock']:
            raise ValueError("Mã chứng khoán không hợp lệ. Chỉ cổ phiếu mới có thông tin.")
            
        self.report_type = _FINANCIAL_REPORT_MAP.get(report_type)
        self.period = _FINANCIAL_REPORT_PERIOD_MAP.get(period)
        self.get_all = get_all

        if not show_log:
            logger.setLevel('CRITICAL')
    
    def _get_report(self, report_type: Optional[str] = 'balance_sheet', 
                   period: Optional[str] = 'quarter', dropna: Optional[bool] = True, 
                   get_all: Optional[bool] = True, show_log: Optional[bool] = False) -> pd.DataFrame:
        """
        Truy xuất thông tin báo cáo tài chính của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - report_type (str): Loại báo cáo tài chính cần truy xuất. Mặc định là 'balance_sheet'.
            - period (str): Chu kỳ báo cáo tài chính cần truy xuất. Mặc định là 'quarter'.
            - dropna (bool): Loại bỏ cột nào có giá trị NaN hoặc không. Mặc định là True.
            - get_all (bool): Truy xuất toàn bộ thông tin báo cáo tài chính hoặc không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            pd.DataFrame: DataFrame chứa dữ liệu báo cáo tài chính.
        """
        # Use instance attributes if parameters not provided
        effective_report_type = _FINANCIAL_REPORT_MAP.get(report_type, report_type) if report_type else self.report_type
        effective_period = _FINANCIAL_REPORT_PERIOD_MAP.get(period, period) if period else self.period
        effective_get_all = get_all if get_all is not None else self.get_all

        url = f'{_BASE_URL}/{_ANALYSIS_URL}/v1/finance/{self.symbol}/{effective_report_type}'
        params = {'yearly': effective_period, 'isAll': effective_get_all}
        
        try:
            # Use centralized API client instead of direct requests
            response_data = client.send_request(
                url=url,
                headers=self.headers,
                method="GET",
                params=params,
                show_log=show_log
            )
            
            df = pd.DataFrame(response_data)

            # Set year and quarter to string type
            df['year'] = df['year'].astype(str)
            df['quarter'] = df['quarter'].astype(str)

            if dropna:
                # Drop columns with all NaN values
                df.dropna(axis=1, how='all', inplace=True)

            if effective_report_type != 'cash_flow':
                if period == 'year':
                    df.drop(columns='quarter', inplace=True)
                    df.rename(columns={'year': 'period'}, inplace=True)
                elif period == 'quarter':
                    df['period'] = df['year'] + '-Q' + df['quarter']
                    # Rearrange columns to make period the first column
                    cols = df.columns.tolist()
                    cols = cols[-1:] + cols[:-1]
                    df = df[cols]

                df.set_index('period', inplace=True)

            df.name = self.symbol
            df.source = 'TCBS'
            return df
            
        except Exception as e:
            logger.error(f"Error retrieving {report_type} report for {self.symbol}: {e}")
            if show_log:
                logger.exception("Detailed traceback:")
            return pd.DataFrame()  # Return empty DataFrame on error
    
    @optimize_execution("TCBS")
    def balance_sheet(self, period: Optional[str] = 'year', 
                     to_df: Optional[bool] = True, show_log: Optional[bool] = False) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin bảng cân đối kế toán (rút gọn) của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - period (str): Chu kỳ báo cáo tài chính cần truy xuất. Mặc định là 'year'.
            - to_df (bool): Chuyển đổi kết quả thành DataFrame hoặc không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            Union[pd.DataFrame, Dict]: DataFrame chứa dữ liệu bảng cân đối kế toán hoặc Dict dạng JSON.
        """
        # Validate input for period
        if period not in ['year', 'quarter']:
            raise ValueError("Kỳ báo cáo tài chính không hợp lệ. Chỉ chấp nhận 'year' hoặc 'quarter'.")
        
        df = self._get_report('balance_sheet', period=period, show_log=show_log)
        
        # Process only if DataFrame is not empty
        if not df.empty:
            df.drop(columns=['ticker'], inplace=True, errors='ignore')
            df.columns = [camel_to_snake(col) for col in df.columns]
            
        if to_df:
            return df
        else:
            return df.to_dict(orient='records')[0] if not df.empty else {}
    
    @optimize_execution("TCBS")
    def income_statement(self, period: Optional[str] = 'year', 
                        to_df: Optional[bool] = True, show_log: Optional[bool] = False) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin báo cáo kết quả kinh doanh của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - period (str): Chu kỳ báo cáo tài chính cần truy xuất. Mặc định là 'year'.
            - to_df (bool): Chuyển đổi kết quả thành DataFrame hoặc không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            Union[pd.DataFrame, Dict]: DataFrame chứa dữ liệu báo cáo kết quả kinh doanh hoặc Dict dạng JSON.
        """
        df = self._get_report('income_statement', period=period, show_log=show_log)
        
        # Process only if DataFrame is not empty
        if not df.empty:
            df.drop(columns=['ticker'], inplace=True, errors='ignore')
            df.columns = [camel_to_snake(col) for col in df.columns]
            
        if to_df:
            return df
        else:
            return df.to_dict(orient='records')[0] if not df.empty else {}
    
    @optimize_execution("TCBS")
    def cash_flow(self, period: Optional[str] = 'year', 
                 to_df: Optional[bool] = True, show_log: Optional[bool] = False) -> Union[pd.DataFrame, Dict]:
        """
        Truy xuất thông tin báo cáo lưu chuyển tiền tệ của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - period (str): Chu kỳ báo cáo tài chính cần truy xuất. Mặc định là 'year'.
            - to_df (bool): Chuyển đổi kết quả thành DataFrame hoặc không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            Union[pd.DataFrame, Dict]: DataFrame chứa dữ liệu báo cáo lưu chuyển tiền tệ hoặc Dict dạng JSON.
        """
        df = self._get_report('cash_flow', period=period, show_log=show_log)
        
        # Process only if DataFrame is not empty
        if not df.empty:
            df.drop(columns=['ticker'], inplace=True, errors='ignore')
            df.columns = [camel_to_snake(col) for col in df.columns]
            
        if to_df:
            return df
        else:
            return df.to_dict(orient='records')[0] if not df.empty else {}
    
    @optimize_execution("TCBS")
    def ratio(self, period: Optional[str] = 'quarter', dropna: Optional[bool] = True, 
             get_all: Optional[bool] = True, show_log: Optional[bool] = False) -> pd.DataFrame:
        """
        Truy xuất thông tin chỉ số tài chính của một công ty theo mã chứng khoán từ nguồn dữ liệu TCBS.

        Tham số:
            - period (str): Chu kỳ báo cáo tài chính cần truy xuất. Mặc định là 'quarter'.
            - dropna (bool): Loại bỏ cột nào có giá trị NaN hoặc không. Mặc định là True.
            - get_all (bool): Truy xuất toàn bộ thông tin chỉ số tài chính hoặc không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            pd.DataFrame: DataFrame chứa dữ liệu chỉ số tài chính.
        """
        effective_period = _FINANCIAL_REPORT_PERIOD_MAP.get(period, period) if period else self.period
        effective_get_all = get_all if get_all is not None else self.get_all

        url = f'{_BASE_URL}/{_ANALYSIS_URL}/v1/finance/{self.symbol}/financialratio'
        params = {'yearly': effective_period, 'isAll': str(effective_get_all).lower()}
        
        try:
            # Use centralized API client instead of direct requests
            response_data = client.send_request(
                url=url,
                headers=self.headers,
                method="GET",
                params=params,
                show_log=show_log
            )
            
            df = pd.DataFrame(response_data)
            
            # Process only if DataFrame is not empty
            if not df.empty:
                df.drop(columns='ticker', inplace=True, errors='ignore')
                df['year'] = df['year'].astype(str)

                if dropna:
                    # Drop columns with all NaN values
                    df.dropna(axis=1, how='all', inplace=True)

                if period == 'year':
                    df.drop(columns='quarter', inplace=True)
                    df.rename(columns={'year': 'period'}, inplace=True)
                elif period == 'quarter':
                    df['period'] = df['year'].astype(str) + '-Q' + df['quarter'].astype(str)
                    # Rearrange columns to make period the first column
                    cols = df.columns.tolist()
                    cols = cols[-1:] + cols[:-1]
                    df = df[cols]

                df.set_index('period', inplace=True)
                df.columns = [camel_to_snake(col) for col in df.columns]
                
            df.name = self.symbol
            df.source = 'TCBS'
            return df
            
        except Exception as e:
            logger.error(f"Error retrieving financial ratios for {self.symbol}: {e}")
            if show_log:
                logger.exception("Detailed traceback:")
            return pd.DataFrame()  # Return empty DataFrame on error



================================================
FILE: vnstock/explorer/tcbs/listing.py
================================================



================================================
FILE: vnstock/explorer/tcbs/models.py
================================================
# Chứa mô hình validation cho nhập liệu
from pydantic import BaseModel
from datetime import datetime
from typing import Optional

class TickerModel(BaseModel):
    symbol: str
    start: str
    end: Optional[str] = None
    interval: Optional[str] = "1D"

# Pandas data type mapping for history price data
history_price_dtype = {
    "time": "datetime64[ns]",
    "open": "float64",
    "high": "float64",
    "low": "float64",
    "close": "float64",
    "volume": "int64",
}


class PaginationModel(BaseModel):
    page: int # Trang bắt đầu lấy dữ liệu
    size: int # Số kết quả trong 1 trang
    period: int # Số kỳ lấy báo cáo

class FinancialReportModel(BaseModel):
    type: str
    frequency: str


================================================
FILE: vnstock/explorer/tcbs/quote.py
================================================
"""History module for TCBS."""

import requests
import pandas as pd
from typing import Dict, Optional, Union, List
from datetime import datetime, timedelta
from .const import (_BASE_URL, _STOCKS_URL, _FUTURE_URL, _INTERVAL_MAP, _OHLC_MAP, 
                    _OHLC_DTYPE, _INTRADAY_MAP, _INTRADAY_DTYPE, _INDEX_MAPPING)
from .models import TickerModel
from vnai import optimize_execution
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.market import trading_hours
from vnstock.core.utils.parser import get_asset_type
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils import client, transform, validation

logger = get_logger(__name__)

class Quote:
    """
    TCBS data source for fetching stock market data, accommodating requests with large date ranges.
    """
    def __init__(self, symbol: str, random_agent: bool = False, show_log: bool = True):
        """Initialize the Quote object with the given symbol."""
        symbol = symbol.upper()
        self.data_source = 'TCBS'
        self._history = None  # Cache for backwards compatibility
        self.base_url = _BASE_URL
        self.headers = get_headers(data_source=self.data_source, random_agent=random_agent)
        self.interval_map = _INTERVAL_MAP
        self.show_log = show_log
        
        # Handle INDEX symbols using shared validation
        if 'INDEX' in symbol:
            self.symbol = validation.validate_symbol(symbol, _INDEX_MAPPING)
        else:
            self.symbol = symbol
            
        # Get asset type using existing utility
        self.asset_type = get_asset_type(symbol)
        
        if not show_log:
            logger.setLevel('CRITICAL')
    
    def _input_validation(self, start: str, end: str, interval: str) -> TickerModel:
        """Validate input data using shared validation utilities."""
        # Create ticker model
        ticker = TickerModel(symbol=self.symbol, start=start, end=end, interval=interval)
        
        # Validate interval
        validation.validate_interval(ticker.interval, self.interval_map)
        
        return ticker
    
    def _long_history(self, start: str, end: Optional[str], show_log: bool = False, 
                    asset_type: Optional[str] = None, _skip_long_check: bool = True) -> pd.DataFrame:
        """
        Truy xuất dữ liệu lịch sử dài hạn từ TCBS cho khung thời gian ngày
        """
        from datetime import timedelta
        
        start_date = datetime.strptime(start, "%Y-%m-%d")
        end_date = datetime.strptime(end, "%Y-%m-%d")
        
        combined_data = []
        current_start = start_date
        
        # Process each year chunk moving forward from start date
        while current_start <= end_date:
            try:
                # Calculate end date for this chunk (either next year or final end date)
                next_year_date = datetime(current_start.year + 1, current_start.month, 1)
                year_end = min(
                    next_year_date - timedelta(days=1),
                    end_date
                )
                
                # Format dates as strings
                year_start_str = current_start.strftime("%Y-%m-%d")
                year_end_str = year_end.strftime("%Y-%m-%d")
                
                if show_log:
                    logger.info(f"Fetching chunk from {year_start_str} to {year_end_str}")
                
                # Fetch data for this year chunk - pass the _skip_long_check parameter
                try:
                    data = self.history(
                        start=year_start_str, 
                        end=year_end_str, 
                        interval="1D", 
                        to_df=True, 
                        show_log=show_log, 
                        asset_type=asset_type,
                        _skip_long_check=True
                    )
                    combined_data.append(data)
                except Exception as e:
                    logger.error(f"Dữ liệu không tồn tại từ {year_start_str} đến {year_end_str}: {e}")
                
                # Move to next year's start (use the first day of the next month to avoid leap year issues)
                current_start = next_year_date
                
            except Exception as e:
                logger.error(f"Error processing year chunk: {str(e)}")
                # Move forward by a year even if an error occurs
                current_start = datetime(current_start.year + 1, current_start.month, 1)
        
        # If no data was found, raise an error
        if not combined_data:
            raise ValueError(f"Không tìm thấy dữ liệu cho {self.symbol} từ {start} đến {end}")
        
        # Combine all chunks
        df = pd.concat(combined_data, ignore_index=True)
        
        # Filter to ensure we only get data in the requested range
        df = df[(df['time'] >= start) & (df['time'] <= end)]
        
        return df

    @optimize_execution("TCBS")
    def history(self, start: str, end: Optional[str] = None, interval: Optional[str] = "1D", 
            to_df: bool = True, show_log: bool = False, count_back: Optional[int] = 365,
            asset_type: Optional[str] = None, _skip_long_check: bool = False) -> Dict:
        """
        Tham số:
            - start (bắt buộc): thời gian bắt đầu lấy dữ liệu, có thể là ngày dạng string kiểu "YYYY-MM-DD".
            - end (tùy chọn): thời gian kết thúc lấy dữ liệu. Mặc định là None (ngày hiện tại).
            - interval (tùy chọn): Khung thời gian trích xuất dữ liệu giá lịch sử (1m, 5m, 15m, 30m, 1H, 1D, 1W, 1M).
            - to_df (tùy chọn): Chuyển đổi dữ liệu trả về dưới dạng DataFrame (True) hoặc JSON (False).
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng.
            - count_back (tùy chọn): Số lượng dữ liệu trả về từ thời điểm cuối. Mặc định là 365.
            - asset_type (tùy chọn): Loại tài sản (stock, index, derivative). Mặc định là None (tự xác định).
            - _skip_long_check (tùy chọn): Bỏ qua kiểm tra thời gian dài để tránh đệ quy vô hạn. Mặc định là False.
        """
        # Validate inputs
        ticker = self._input_validation(start, end, interval)
        
        if count_back is None:
            count_back = 365

        if asset_type is None:
            asset_type = self.asset_type

        # calculate days between start and end
        start_time = datetime.strptime(ticker.start, "%Y-%m-%d")
        end_time = datetime.strptime(ticker.end, "%Y-%m-%d")

        # validate if the end date is not earlier than the start date
        if end_time < start_time:
            raise ValueError("Thời gian kết thúc không thể sớm hơn thời gian bắt đầu.")

        days = (end_time - start_time).days

        # Only check for long date ranges if not explicitly skipped
        if not _skip_long_check and days > 365:
            return self._long_history(start, end, show_log, asset_type)
        else:
            if end is None:
                end_stamp = int(datetime.now().timestamp())
            else:
                end_stamp = int(end_time.timestamp())

            if interval in ["1D", "1W", "1M"]:
                end_point = "bars-long-term"
            elif interval in ["1m", "5m", "15m", "30m", "1H"]:
                end_point = "bars"

            # translate the interval to TCBS format
            interval_value = self.interval_map[ticker.interval]

            # Construct the URL for fetching data
            if asset_type == "derivative":
                url = f"{self.base_url}/{_FUTURE_URL}/v2/stock/{end_point}?resolution={interval_value}&ticker={self.symbol}&type={asset_type}&to={end_stamp}&countBack={count_back}"
            else:
                url = f"{self.base_url}/{_STOCKS_URL}/v2/stock/{end_point}?resolution={interval_value}&ticker={self.symbol}&type={asset_type}&to={end_stamp}&countBack={count_back}"

            if interval_value in ["1", "5", "15", "30", "60"]:
                # replace 'bars-long-term' with 'bars' in the url
                url = url.replace("bars-long-term", "bars")

            if show_log:
                logger.info(f"Tải dữ liệu từ {url}")

            # Send a GET request to fetch the data
            response = requests.get(url, headers=self.headers)

            if response.status_code != 200:
                raise ConnectionError(f"Tải dữ liệu không thành công: {response.status_code} - {response.reason}")

            json_data = response.json()['data']

            if show_log:
                logger.info(f'Truy xuất thành công dữ liệu {ticker.symbol} từ {ticker.start} đến {ticker.end}, khung thời gian {ticker.interval}.')

            df = self._as_df(json_data, asset_type)

        df.attrs['symbol'] = self.symbol
        df.category = self.asset_type
        df.source = self.data_source
        
        if to_df:
            return df
        else:
            # convert df to json format 
            json_data = df.to_json(orient='records')
            return json_data
        
    def _as_df(self, history_data: Dict, asset_type: str, floating: Optional[int] = 2) -> pd.DataFrame:
        """
        Backward compatibility method that delegates to shared data_transform utility
        """
        from vnstock.core.utils import transform
        
        # Use the shared transformation utility
        return transform.ohlc_to_df(
            data=history_data,
            column_map=_OHLC_MAP,
            dtype_map=_OHLC_DTYPE,
            asset_type=asset_type,
            symbol=self.symbol,
            source=self.data_source,
            interval="1D"  # Default for long history
        )
    
    @optimize_execution("TCBS")
    def intraday(self, page_size: Optional[int]=100, page: Optional[int]=0, 
            to_df: Optional[bool]=True, show_log: bool=False) -> Dict:
        """
        Truy xuất dữ liệu khớp lệnh của mã chứng khoán bất kỳ từ nguồn dữ liệu TCBS
        """
        market_status = trading_hours(None)
        if market_status['is_trading_hour'] is False and market_status['data_status'] == 'preparing':
            raise ValueError(f"{market_status['time']}: Dữ liệu khớp lệnh không thể truy cập trong thời gian chuẩn bị phiên mới. Vui lòng quay lại sau.")

        # Validate input
        if self.symbol is None:
            raise ValueError("Vui lòng nhập mã chứng khoán cần truy xuất khi khởi tạo Trading Class.")
        
        # warning if page_size is greater than 30_000
        if page_size > 30_000:
            logger.warning("Bạn đang yêu cầu truy xuất quá nhiều dữ liệu, điều này có thể gây lỗi quá tải.")
        
        # Fetch data
        combined_data = []
        total_pages = (page_size // 100) + (1 if page_size % 100 != 0 else 0)

        for i in range(total_pages):
            current_size = min(100, page_size - 100 * i)
            url = f'{self.base_url}/{_STOCKS_URL}/v1/intraday/{self.symbol}/his/paging'
            params = {
                'page': page + i,
                'size': current_size,
                'headIndex': -1
            }
            
            # Make request
            response = client.send_request(
                url=url,
                headers=self.headers,
                method="GET",
                params=params,
                show_log=show_log
            )
            
            data = response.get('data', [])
            combined_data.extend(data)
        
        # Transform data using shared utility
        df = transform.intraday_to_df(
            data=combined_data,
            column_map=_INTRADAY_MAP,
            dtype_map=_INTRADAY_DTYPE,
            symbol=self.symbol,
            asset_type=self.asset_type,
            source=self.data_source
        )

        # Reduce the time index by 7 hours to match the GMT+7 timezone
        df['time'] = df['time'] - pd.Timedelta(hours=7)
        
        return df if to_df else df.to_json(orient='records')





================================================
FILE: vnstock/explorer/tcbs/screener.py
================================================
"""
Stock Screener Module for Vietnamese markets.

This module provides functionality to screen stocks based on various parameters
using TCBS data source.
"""

import json
from typing import Dict, Any, Optional

import pandas as pd

from .const import _BASE_URL, _SCREENER_MAPPING
from vnai import optimize_execution
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils.parser import camel_to_snake
from vnstock.core.utils import client

logger = get_logger(__name__)


class Screener:
    """Class for screening stocks based on various parameters."""

    def __init__(self, random_agent: bool = False, show_log: bool = False):
        """
        Initialize the Screener with configuration parameters.

        Parameters:
            random_agent (bool): Whether to use a random user agent for requests.
            show_log (bool): Whether to display logs during operations.
        """
        self.base_url = _BASE_URL  # Ensure _BASE_URL contains the correct endpoint
        self.data_source = 'TCBS'
        self.headers = get_headers(data_source=self.data_source, random_agent=random_agent)
        self.show_log = show_log

    @optimize_execution("TCBS")
    def stock(self, 
              params: Dict[str, Any] = {"exchangeName": "HOSE,HNX,UPCOM"}, 
              limit: int = 50, 
              id: Optional[str] = None, 
              lang: str = "vi") -> pd.DataFrame:
        """
        Get stock screening insights from TCBS Stock Screener.

        Parameters:
            params (dict): Dictionary of parameters for stock screening. Keys should be filter names,
                           and values can be single values or (min, max) tuples.
            limit (int): Number of data points per page. Default is 50.
            id (str): Optional ID of the stock screener.
            lang (str): Directive language for multi-language fields (e.g., "vi" or "en"). Default is "vi".

        Returns:
            pd.DataFrame: DataFrame containing the screened stock data with standardized column names,
                          and cells processed to show the value for the directive language.
        
        Raises:
            ValueError: If API request fails or response format is unexpected.
        """
        url = f"{self.base_url}/ligo/v1/watchlist/preview"
        
        # Create a list of filters based on the params dictionary
        filters = []
        for key, value in params.items():
            # If value is a tuple (min, max), create two filters
            if isinstance(value, tuple) and len(value) == 2:
                min_value, max_value = value
                filters.append({
                    "key": key,
                    "operator": ">=",
                    "value": min_value
                })
                filters.append({
                    "key": key,
                    "operator": "<=",
                    "value": max_value
                })
            # Exclude "size" from filters as it is handled separately
            elif key != "size":
                filters.append({
                    "key": key,
                    "value": value,
                    "operator": "="
                })
        
        # Use size from params if provided; otherwise, use the limit parameter
        requested_size = params.get("size", limit)
        
        # Prepare payload as a dictionary (it will be serialized within the API client)
        payload = {
            "tcbsID": id,
            "filters": filters,
            "size": requested_size
        }

        if self.show_log:
            logger.info(f"base_url: {url}")
            logger.info(f"Fetching stock data with params: {params}")
            logger.info(f"Headers: {self.headers}")
            logger.info(f"Payload: {payload}")
        
        try:
            # Send request to get response using the API client
            response = client.send_request(
                url=url,
                headers=self.headers,
                method="POST",
                payload=payload,
                show_log=self.show_log
            )
            
            # Validate response structure
            if not response or 'searchData' not in response or 'pageContent' not in response['searchData']:
                raise ValueError("Invalid response format from API")
            
            # Create DataFrame from response data
            df = pd.DataFrame(response['searchData']['pageContent'])
            
            # Skip further processing if DataFrame is empty
            if df.empty:
                logger.warning("No data returned from stock screener API")
                return df
                
            # Drop columns that are entirely NA
            df = df.dropna(axis=1, how="all")

            # Convert column names from camelCase to snake_case
            df.columns = [camel_to_snake(col) for col in df.columns]

            # Rename columns based on _SCREENER_MAPPING if available
            df.rename(columns={col: _SCREENER_MAPPING.get(col, col) for col in df.columns}, inplace=True)

            # List of columns to process for multi-language dictionary extraction
            cols_to_process = [
                "price_vs_sma100",
                "has_financial_report",
                "breakout",
                "rsi14_status",
                "dmi_signal",
                "bolling_band_signal",
                "price_vs_sma10",
                "price_vs_sma50",
                "sar_vs_macd_hist",
                "macd_histogram",
                "tcbs_buy_sell_signal",
                "tcbs_recommend",
                "foreign_transaction",
                "price_vs_sma20",
                "price_vs_sma5",
                "company_name",    
                "industry",   
                "exchange",
                "uptrend",
                "price_break_out52_week",
                "price_wash_out52_week",
                "heating_up"
            ]
            
            # Process the specified columns:
            # If a cell is a dictionary with language keys, extract the value for the directive language.
            for col in cols_to_process:
                if col in df.columns:
                    df[col] = df[col].apply(lambda cell: cell.get(lang) if isinstance(cell, dict) and lang in cell else cell)

            # replace value HOSE to HSX for the column exchange
            try:
                df['exchange'] = df['exchange'].replace('HOSE', 'HSX')
                df = df.drop(columns=['company_name'])
            except Exception as e:
                logger.error(f"Lỗi khi thực hiện chuẩn hoá cột: {str(e)}")
                pass
            
            return df
            
        except Exception as e:
            logger.error(f"Error fetching stock data: {str(e)}")
            raise



================================================
FILE: vnstock/explorer/tcbs/trading.py
================================================
"""
Module quản lý các thông tin về giao dịch chứng khoán từ nguồn dữ liệu TCBS.
"""

import pandas as pd
from typing import List, Dict, Optional, Union
from vnstock.core.utils import client
from vnstock.core.utils.parser import get_asset_type
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnai import optimize_execution
from .const import _BASE_URL, _STOCKS_URL, _PRICE_BOARD_COLS_MAP, _PRICE_BOARD_STD_COLS, _PRICE_BOARD_EXT_COLS

logger = get_logger(__name__)


class Trading:
    """
    Truy xuất dữ liệu giao dịch của mã chứng khoán từ nguồn dữ liệu TCBS.
    
    Tham số:
        - symbol (str): Mã chứng khoán mặc định.
        - random_agent (bool): Sử dụng user-agent ngẫu nhiên hoặc không. Mặc định là False.
        - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là True.
    """
    def __init__(self, symbol: Optional[str], random_agent: bool = False, 
                 show_log: Optional[bool] = True):
        """
        Khởi tạo đối tượng Trading với các tham số cho việc truy xuất dữ liệu.
        """
        self.symbol = symbol.upper()
        self.asset_type = get_asset_type(self.symbol)
        self.show_log = show_log
        self.base_url = _BASE_URL
        self.headers = get_headers(data_source='TCBS', random_agent=random_agent)

        if not show_log:
            logger.setLevel('CRITICAL')
        
    @optimize_execution("TCBS")
    def price_board(self, symbol_ls: List[str], std_columns: Optional[bool] = True, 
                    to_df: Optional[bool] = True, show_log: bool = False) -> Union[pd.DataFrame, str]:
        """
        Truy xuất thông tin bảng giá của các mã chứng khoán tuỳ chọn từ nguồn dữ liệu TCBS.
        
        Tham số:
            - symbol_ls (List[str]): Danh sách các mã chứng khoán cần truy xuất thông tin.
            - std_columns (bool): Sử dụng danh sách cột tiêu chuẩn hoặc mở rộng. Mặc định là True.
            - to_df (bool): Chuyển đổi kết quả thành DataFrame hoặc không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            Thông tin bảng giá dưới dạng DataFrame hoặc chuỗi JSON tùy theo tham số to_df.
        """
        symbols = ",".join(symbol_ls)
        url = f'{self.base_url}/{_STOCKS_URL}/v1/stock/second-tc-price'
        
        # Use centralized API client instead of direct requests
        try:
            response_data = client.send_request(
                url=url,
                headers=self.headers,
                method="GET",
                params={"tickers": symbols},
                show_log=show_log
            )
            
            # Process response data
            data = response_data['data']
            df = pd.DataFrame(data)
            
            # Drop columns named seq
            df.drop(columns=['seq'], inplace=True, errors='ignore')
            
            # Select columns based on the std_columns parameter
            if std_columns:
                df = df[_PRICE_BOARD_STD_COLS]
            else:
                df = df[_PRICE_BOARD_EXT_COLS]

            # Rename columns according to the mapping
            df = df.rename(columns=_PRICE_BOARD_COLS_MAP)
            
            # Add source metadata
            df.source = 'TCBS'

            # Return in requested format
            if to_df:
                return df
            else:
                return df.to_json(orient='records')
                
        except Exception as e:
            # Better error handling with logging
            logger.error(f"Error processing price board data: {e}")
            return pd.DataFrame() if to_df else "[]"



================================================
FILE: vnstock/explorer/vci/__init__.py
================================================
from .listing import *
from .analysis import *
from .company import *
from .quote import *
from .trading import *
from .financial import *


================================================
FILE: vnstock/explorer/vci/analysis.py
================================================
"""Analysis module."""



================================================
FILE: vnstock/explorer/vci/company.py
================================================
"""
Module quản lý thông tin công ty từ nguồn dữ liệu VCI.
"""

import json
import pandas as pd
from typing import Dict, Optional, Union, List
from vnstock.core.utils import client
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils.transform import clean_html_dict, flatten_dict_to_df, flatten_list_to_df, reorder_cols, drop_cols_by_pattern
from vnstock.core.utils.parser import get_asset_type, camel_to_snake
from vnai import optimize_execution  # Import the decorator from vnai package
from .const import _GRAPHQL_URL, _PRICE_INFO_MAP
import copy

logger = get_logger(__name__)

class Company:
    """
    Class (lớp) quản lý các thông tin liên quan đến công ty từ nguồn dữ liệu VCI.

    Tham số:
        - symbol (str): Mã chứng khoán của công ty cần truy xuất thông tin.
        - random_agent (bool): Sử dụng user-agent ngẫu nhiên hoặc không. Mặc định là False.
        - to_df (bool): Chuyển đổi dữ liệu thành DataFrame hoặc không. Mặc định là True.
        - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
    """
    def __init__(self, symbol: str, random_agent: bool = False, 
                 to_df: Optional[bool] = True, show_log: Optional[bool] = False):
        """
        Khởi tạo đối tượng Company với các tham số cho việc truy xuất dữ liệu.
        """
        self.symbol = symbol.upper()
        self.asset_type = get_asset_type(self.symbol)
        
        # Validate if symbol is a stock
        if self.asset_type not in ['stock']:
            raise ValueError("Mã chứng khoán không hợp lệ. Chỉ cổ phiếu mới có thông tin.")
            
        self.headers = get_headers(data_source='VCI', random_agent=random_agent)
        self.show_log = show_log
        self.to_df = to_df
        self.raw_data = self._fetch_data()
        
        if not show_log:
            logger.setLevel('CRITICAL')

    def _fetch_data(self) -> Dict:
        """
        Phương thức riêng để lấy dữ liệu công ty từ nguồn VCI.
        
        Returns:
            Dict: Dữ liệu thô về công ty từ API.
        """
        url = _GRAPHQL_URL

        # GraphQL query for company data
        payload = "{\"query\":\"query Query($ticker: String!, $lang: String!) {\\n  AnalysisReportFiles(ticker: $ticker, langCode: $lang) {\\n    date\\n    description\\n    link\\n    name\\n    __typename\\n  }\\n  News(ticker: $ticker, langCode: $lang) {\\n    id\\n    organCode\\n    ticker\\n    newsTitle\\n    newsSubTitle\\n    friendlySubTitle\\n    newsImageUrl\\n    newsSourceLink\\n    createdAt\\n    publicDate\\n    updatedAt\\n    langCode\\n    newsId\\n    newsShortContent\\n    newsFullContent\\n    closePrice\\n    referencePrice\\n    floorPrice\\n    ceilingPrice\\n    percentPriceChange\\n    __typename\\n  }\\n  TickerPriceInfo(ticker: $ticker) {\\n    financialRatio {\\n      yearReport\\n      lengthReport\\n      updateDate\\n      revenue\\n      revenueGrowth\\n      netProfit\\n      netProfitGrowth\\n      ebitMargin\\n      roe\\n      roic\\n      roa\\n      pe\\n      pb\\n      eps\\n      currentRatio\\n      cashRatio\\n      quickRatio\\n      interestCoverage\\n      ae\\n      fae\\n      netProfitMargin\\n      grossMargin\\n      ev\\n      issueShare\\n      ps\\n      pcf\\n      bvps\\n      evPerEbitda\\n      at\\n      fat\\n      acp\\n      dso\\n      dpo\\n      epsTTM\\n      charterCapital\\n      RTQ4\\n      charterCapitalRatio\\n      RTQ10\\n      dividend\\n      ebitda\\n      ebit\\n      le\\n      de\\n      ccc\\n      RTQ17\\n      __typename\\n    }\\n    ticker\\n    exchange\\n    ev\\n    ceilingPrice\\n    floorPrice\\n    referencePrice\\n    openPrice\\n    matchPrice\\n    closePrice\\n    priceChange\\n    percentPriceChange\\n    highestPrice\\n    lowestPrice\\n    totalVolume\\n    highestPrice1Year\\n    lowestPrice1Year\\n    percentLowestPriceChange1Year\\n    percentHighestPriceChange1Year\\n    foreignTotalVolume\\n    foreignTotalRoom\\n    averageMatchVolume2Week\\n    foreignHoldingRoom\\n    currentHoldingRatio\\n    maxHoldingRatio\\n    __typename\\n  }\\n  Subsidiary(ticker: $ticker) {\\n    id\\n    organCode\\n    subOrganCode\\n    percentage\\n    subOrListingInfo {\\n      enOrganName\\n      organName\\n      __typename\\n    }\\n    __typename\\n  }\\n  Affiliate(ticker: $ticker) {\\n    id\\n    organCode\\n    subOrganCode\\n    percentage\\n    subOrListingInfo {\\n      enOrganName\\n      organName\\n      __typename\\n    }\\n    __typename\\n  }\\n  CompanyListingInfo(ticker: $ticker) {\\n    id\\n    issueShare\\n    en_History\\n    history\\n    en_CompanyProfile\\n    companyProfile\\n    icbName3\\n    enIcbName3\\n    icbName2\\n    enIcbName2\\n    icbName4\\n    enIcbName4\\n    financialRatio {\\n      id\\n      ticker\\n      issueShare\\n      charterCapital\\n      __typename\\n    }\\n    __typename\\n  }\\n  OrganizationManagers(ticker: $ticker) {\\n    id\\n    ticker\\n    fullName\\n    positionName\\n    positionShortName\\n    en_PositionName\\n    en_PositionShortName\\n    updateDate\\n    percentage\\n    quantity\\n    __typename\\n  }\\n  OrganizationShareHolders(ticker: $ticker) {\\n    id\\n    ticker\\n    ownerFullName\\n    en_OwnerFullName\\n    quantity\\n    percentage\\n    updateDate\\n    __typename\\n  }\\n  OrganizationResignedManagers(ticker: $ticker) {\\n    id\\n    ticker\\n    fullName\\n    positionName\\n    positionShortName\\n    en_PositionName\\n    en_PositionShortName\\n    updateDate\\n    percentage\\n    quantity\\n    __typename\\n  }\\n  OrganizationEvents(ticker: $ticker) {\\n    id\\n    organCode\\n    ticker\\n    eventTitle\\n    en_EventTitle\\n    publicDate\\n    issueDate\\n    sourceUrl\\n    eventListCode\\n    ratio\\n    value\\n    recordDate\\n    exrightDate\\n    eventListName\\n    en_EventListName\\n    __typename\\n  }\\n}\\n\",\"variables\":{\"ticker\":\"VCI\",\"lang\":\"vi\"}}"
        
        payload = json.loads(payload)
        payload['variables']['ticker'] = self.symbol
        
        if self.show_log:
            logger.debug(f"Requesting data for {self.symbol} from {url}. payload: {payload}")

        # Use centralized API client instead of direct requests
        response_data = client.send_request(
            url=url,
            headers=self.headers,
            method="POST",
            payload=payload,
            show_log=self.show_log
        )
        
        return response_data['data']

    def _process_data(self, data: Dict, data_key: str, 
                      columns_dict: Optional[Dict] = None) -> pd.DataFrame:
        """
        Xử lý dữ liệu công ty từ API của VCI và chuyển đổi thành DataFrame.

        Tham số:
            - data (Dict): Dữ liệu từ API của VCI.
            - data_key (str): Khóa của dữ liệu cần xử lý.
            - columns_dict (Dict, optional): Từ điển các cột cần đổi tên.

        Returns:
            pd.DataFrame: DataFrame đã xử lý.
        """
        segment_data = data[data_key]

        # Convert to DataFrame
        df = pd.DataFrame(segment_data)

        # Rename columns to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]

        # Rename columns if specified
        if columns_dict:
            df = df.rename(columns=columns_dict)

        return df
    
    def _parse_price_info(self) -> tuple:
        """
        Phân tách dữ liệu giá và tỷ lệ tài chính từ thông tin giá.
        
        Returns:
            tuple: (price_data, ratio_data) - Bộ dữ liệu giá và tỷ lệ tài chính.
        """
        # Process raw_data['TickerPriceInfo]['financialRatio'] separately from raw_data['TickerPriceInfo]
        price_data = copy.deepcopy(self.raw_data['TickerPriceInfo'])
        ratio_data = pd.DataFrame(price_data['financialRatio'], index=[0])
        
        # Remove key 'financialRatio' from price_data dict
        price_data.pop('financialRatio')
        price_data = pd.DataFrame(price_data, index=[0])
        
        return price_data, ratio_data
    
    @optimize_execution("VCI")
    def overview(self) -> pd.DataFrame:
        """
        Truy xuất thông tin tổng quan của công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa thông tin tổng quan của công ty.
        """
        data = self.raw_data['CompanyListingInfo']
        clean_data = clean_html_dict(data)
        df = flatten_dict_to_df(clean_data, 'financialRatio')
        
        # Replace '\n' with ' ' in all string columns
        # df = df.map(lambda x: x.replace('\n', ' ') if isinstance(x, str) else x) # This is for pandas 2.x
        df = df.applymap(lambda x: x.replace('\n', ' ') if isinstance(x, str) else x) # This can be used for pandas 1.x and 2.x
        
        # Convert to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Drop columns with prefixes 'en_', '__' and these specific columns
        df = drop_cols_by_pattern(df, ['en_', '__', '_ratio_id'])
        
        # Rename ticker column to symbol
        df = df.rename(columns={'ticker': 'symbol'})
        
        # Reorder columns to have symbol first
        df = reorder_cols(df, ['symbol'], position='first')
        
        return df

    @optimize_execution("VCI")
    def shareholders(self) -> pd.DataFrame:
        """
        Truy xuất thông tin cổ đông của công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa thông tin cổ đông của công ty.
        """
        df = self._process_data(self.raw_data, 'OrganizationShareHolders')
        
        # Drop unnecessary columns
        df = drop_cols_by_pattern(df, ['__typename', 'ticker', 'en_'])
        
        # Convert update_date from timestamp to date string %Y-%m-%d
        df['update_date'] = pd.to_datetime(df['update_date'], unit='ms').dt.strftime('%Y-%m-%d')
        
        # Rename columns for clarity
        df = df.rename(columns={
            'owner_full_name': 'share_holder', 
            'percentage': 'share_own_percent'
        })
        
        return df
    
    @optimize_execution("VCI")
    def officers(self, filter_by: str = 'working') -> pd.DataFrame:
        """
        Truy xuất thông tin lãnh đạo công ty.

        Tham số:
            - filter_by (str): Lọc lãnh đạo đang làm việc hoặc đã từ nhiệm hoặc tất cả.
                - 'working': Lọc lãnh đạo đang làm việc.
                - 'resigned': Lọc lãnh đạo đã từ nhiệm.
                - 'all': Lọc tất cả lãnh đạo.

        Returns:
            pd.DataFrame: DataFrame chứa thông tin lãnh đạo của công ty.
        """
        if filter_by not in ['working', 'resigned', 'all']:
            raise ValueError("filter_by chỉ nhận giá trị 'working' hoặc 'resigned' hoặc 'all'")
        
        if filter_by == 'working':
            df = self._process_data(self.raw_data, 'OrganizationManagers')
        elif filter_by == 'resigned':
            df = self._process_data(self.raw_data, 'OrganizationResignedManagers')
        else:
            # Combine both working and resigned officers
            working_df = self._process_data(self.raw_data, 'OrganizationManagers')
            working_df['type'] = 'đang làm việc'
            resigned_df = self._process_data(self.raw_data, 'OrganizationResignedManagers')
            resigned_df['type'] = 'đã từ nhiệm'
            df = pd.concat([working_df, resigned_df])
        
        # Drop unnecessary columns
        df = drop_cols_by_pattern(df, ['en_', '__', 'ticker'])
        
        # Reorder columns
        df = reorder_cols(df, ['symbol'], position='first')
        
        # Rename columns for clarity
        df = df.rename(columns={
            'full_name': 'officer_name', 
            'position_name': 'officer_position', 
            'percentage': 'officer_own_percent'
        })
        
        # Convert update_date from timestamp to date string
        df['update_date'] = pd.to_datetime(df['update_date'], unit='ms').dt.strftime('%Y-%m-%d')
        
        return df
    
    @optimize_execution("VCI")
    def subsidiaries(self, filter_by: str = 'all') -> pd.DataFrame:
        """
        Truy xuất thông tin công ty con của công ty.

        Tham số:
            - filter_by (str): Lọc công ty con hoặc công ty liên kết.
                - 'all': Lọc tất cả.
                - 'subsidiary': Lọc công ty con.
                - 'affiliate': Lọc công ty liên kết.

        Returns:
            pd.DataFrame: DataFrame chứa thông tin công ty con.
        """
        if filter_by not in ['all', 'subsidiary']:
            raise ValueError("filter_by chỉ nhận giá trị 'all' hoặc 'subsidiary'")
        
        df = self.raw_data['Subsidiary']
        df = flatten_list_to_df(df, 'subOrListingInfo')
        
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Drop unnecessary columns
        df = drop_cols_by_pattern(df, ['__typename', 'en_'])
        df = df.drop(columns=['organ_code'])
        
        # Rename percentage to ownership_percent for clarity
        df = df.rename(columns={'percentage': 'ownership_percent'})
        df['type'] = 'công ty con'

        if filter_by == 'subsidiary':
            return df
        elif filter_by == 'all':
            affiliate_df = self.affiliate()
            affiliate_df['type'] = 'công ty liên kết'
            combine_df = pd.concat([df, affiliate_df])
            return combine_df
        
    @optimize_execution("VCI")
    def affiliate(self) -> pd.DataFrame:
        """
        Truy xuất thông tin công ty liên kết của công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa thông tin công ty liên kết.
        """
        data = self.raw_data['Affiliate']
        df = flatten_list_to_df(data, 'subOrListingInfo')
        
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Drop unnecessary columns
        df = drop_cols_by_pattern(df, ['en_', '__typename'])
        df = df.drop(columns=['organ_code'])
        
        # Reorder columns
        df = reorder_cols(df, ['id', 'sub_organ_code', 'organ_name'], position='first')
        
        # Rename percentage to ownership_percent for clarity
        df = df.rename(columns={'percentage': 'ownership_percent'})
        
        return df
      
    @optimize_execution("VCI")
    def news(self) -> pd.DataFrame:
        """
        Truy xuất tin tức liên quan đến công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa tin tức liên quan đến công ty.
        """
        df = self._process_data(self.raw_data, 'News')
        
        # Rename columns according to the price info mapping
        for col, new_col in _PRICE_INFO_MAP.items():
            if col in df.columns:
                df = df.rename(columns={col: new_col})
        
        # Drop unnecessary columns
        df = df.drop(columns=['organ_code', 'symbol', '__typename'])
        
        return df
    
    @optimize_execution("VCI")
    def events(self) -> pd.DataFrame:
        """
        Truy xuất các sự kiện của công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa các sự kiện của công ty.
        """
        df = self._process_data(self.raw_data, 'OrganizationEvents')
        
        # Rename columns according to the price info mapping
        for col, new_col in _PRICE_INFO_MAP.items():
            if col in df.columns:
                df = df.rename(columns={col: new_col})
        
        # Drop unnecessary columns
        df = df.drop(columns=['organ_code', 'symbol', '__typename'])
        
        # Convert date columns from timestamp to date string
        date_columns = ['public_date', 'issue_date', 'record_date', 'exright_date']
        for col in date_columns:
            if col in df.columns:
                df[col] = pd.to_datetime(df[col], unit='ms').dt.strftime('%Y-%m-%d')
        
        return df
    
    @optimize_execution("VCI")
    def reports(self) -> pd.DataFrame:
        """
        Truy xuất báo cáo phân tích về công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa các báo cáo phân tích về công ty.
        """
        df = self._process_data(self.raw_data, 'AnalysisReportFiles')
        
        # Drop __typename column if it exists
        if '__typename' in df.columns:
            df = df.drop(columns=['__typename'])
        
        # Convert date from timestamp to date string if it's in timestamp format
        if 'date' in df.columns and df['date'].dtype in [int, float]:
            df['date'] = pd.to_datetime(df['date'], unit='ms').dt.strftime('%Y-%m-%d')
        
        return df

    @optimize_execution("VCI")
    def trading_stats(self) -> pd.DataFrame:
        """
        Truy xuất thống kê giao dịch của công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa thống kê giao dịch của công ty.
        """
        price_data, _ = self._parse_price_info()
        df = pd.DataFrame(price_data)
        
        # Convert column names to snake_case
        df.columns = [camel_to_snake(col) for col in df.columns]
        
        # Drop __typename column
        df = drop_cols_by_pattern(df, ['__typename'])
        
        # Rename columns according to the price info mapping
        for col, new_col in _PRICE_INFO_MAP.items():
            if col in df.columns:
                df = df.rename(columns={col: new_col})
        
        # Add symbol column
        df['symbol'] = self.symbol
        
        # Reorder to have symbol first
        df = reorder_cols(df, ['symbol'], position='first')
        
        return df
    
    @optimize_execution("VCI")
    def ratio_summary(self) -> pd.DataFrame:
        """
        Truy xuất tóm tắt các tỷ lệ tài chính của công ty.
        
        Returns:
            pd.DataFrame: DataFrame chứa tóm tắt các tỷ lệ tài chính của công ty.
        """
        _, financial_ratio_data = self._parse_price_info()
        
        # Convert column names to snake_case
        financial_ratio_data.columns = [camel_to_snake(col) for col in financial_ratio_data.columns]
        
        # Drop __typename column
        df = drop_cols_by_pattern(financial_ratio_data, ['__typename'])
        
        # Add symbol column
        df['symbol'] = self.symbol
        
        # Reorder to have symbol first
        df = reorder_cols(df, cols=['symbol'], position='first')
        
        return df



================================================
FILE: vnstock/explorer/vci/const.py
================================================
# _BASE_URL = 'https://mt.vietcap.com.vn/api/'
_TRADING_URL = 'https://trading.vietcap.com.vn/api/'
_CHART_URL = 'chart/OHLCChart/gap'
_INTRADAY_URL = 'market-watch'
_GRAPHQL_URL = 'https://trading.vietcap.com.vn/data-mt/graphql'

_INTERVAL_MAP = {'1m' : 'ONE_MINUTE',
            '5m' : 'ONE_MINUTE',
            '15m' : 'ONE_MINUTE',
            '30m' : 'ONE_MINUTE',
            '1H' : 'ONE_HOUR',
            '1D' : 'ONE_DAY',
            '1W' : 'ONE_DAY',
            '1M' : 'ONE_DAY'
            }

_RESAMPLE_MAP = {
            '5m' : '5min',
            '15m' : '15min',
            '30m' : '30min',
            '1W' : '1W',
            '1M' : 'M'
            }

_OHLC_MAP = {
    't': 'time',
    'o': 'open',
    'h': 'high',
    'l': 'low',
    'c': 'close',
    'v': 'volume',
}

# Pandas data type mapping for history price data
_OHLC_DTYPE = {
    "time": "datetime64[ns]",  # Convert timestamps to datetime
    "open": "float64",
    "high": "float64",
    "low": "float64",
    "close": "float64",
    "volume": "int64",
}

_GROUP_CODE = ['HOSE', 'VN30', 'VNMidCap', 'VNSmallCap', 'VNAllShare', 'VN100', 'ETF', 'HNX', 'HNX30', 'HNXCon', 'HNXFin', 'HNXLCap', 'HNXMSCap', 'HNXMan', 'UPCOM', 'FU_INDEX', 'FU_BOND', 'BOND', 'CW']

_INTRADAY_MAP = {
                'truncTime':'time',
                'matchPrice':'price',
                'matchVol':'volume',
                'matchType':'match_type',
                'id':'id'
                }

_INTRADAY_DTYPE = {
                    "time": "datetime64[ns]",
                    "price": "float64",
                    "volume": "int64",
                    "match_type": "str",
                    "id": "str"
                }

_PRICE_DEPTH_MAP = {
                    'priceStep':'price',
                    'accumulatedVolume': 'acc_volume',
                    'accumulatedBuyVolume' : 'acc_buy_volume',
                    'accumulatedSellVolume' : 'acc_sell_volume',
                    'accumulatedUndefinedVolume': 'acc_undefined_volume',
                    }

_FINANCIAL_REPORT_MAP = {'balance_sheet': 'balancesheet',
                            'income_statement': 'incomestatement',
                            'cash_flow': 'cashflow'}

_FINANCIAL_REPORT_PERIOD_MAP = {'year': 'Y', 'quarter': 'Q'}

_UNIT_MAP = {'BILLION':'tỷ', 'PERCENT':'%', 'INDEX':'index', 'MILLION':'triệu'}

SUPPORTED_LANGUAGES = ['vi', 'en']

_INDEX_MAPPING = {'VNINDEX': 'VNINDEX', 'HNXINDEX': 'HNXIndex', 'UPCOMINDEX': 'HNXUpcomIndex'}

_PRICE_INFO_MAP = {
    'ev': 'ev', # Enterprise Value
    'ticker': 'symbol',
    # Price-related columns
    'open_price': 'open',
    'ceiling_price': 'ceiling',
    'floor_price': 'floor',
    'reference_price': 'ref_price',
    'highest_price': 'high',
    'lowest_price': 'low',
    'price_change': 'price_change',
    'percent_price_change': 'price_change_pct',
    
    # Year-based metrics
    'highest_price1_year': 'high_price_1y',
    'lowest_price1_year': 'low_price_1y',
    'percent_lowest_price_change1_year': 'pct_low_change_1y',
    'percent_highest_price_change1_year': 'pct_high_change_1y',
    
    # Foreign ownership related
    'foreign_total_volume': 'foreign_volume',
    'foreign_total_room': 'foreign_room',
    'foreign_holding_room': 'foreign_holding_room',
    
    # Other metrics
    'average_match_volume2_week': 'avg_match_volume_2w',
}


_ICB4_COMTYPE_CODE_MAP = {'Bán lẻ phức hợp': 'CT',
 'Bảo hiểm nhân thọ': 'BH',
 'Bảo hiểm phi nhân thọ': 'BH',
 'Bất động sản': 'CT',
 'Chuyển phát nhanh': 'CT',
 'Chăm sóc y tế': 'CT',
 'Chất thải & Môi trường': 'CT',
 'Containers & Đóng gói': 'CT',
 'Công nghiệp phức hợp': 'CT',
 'Công nghệ sinh học': 'CT',
 'Dược phẩm': 'CT',
 'Dịch vụ Máy tính': 'CT',
 'Dịch vụ giải trí': 'CT',
 'Dịch vụ tiêu dùng chuyên ngành': 'CT',
 'Dịch vụ truyền thông': 'CT',
 'Dịch vụ vận tải': 'CT',
 'Dụng cụ y tế': 'CT',
 'Giải trí & Truyền thông': 'CT',
 'Giầy dép': 'CT',
 'Hàng May mặc': 'CT',
 'Hàng cá nhân': 'CT',
 'Hàng không': 'CT',
 'Hàng điện & điện tử': 'CT',
 'Internet': 'CT',
 'Khai khoáng': 'CT',
 'Khai thác Than': 'CT',
 'Khai thác vàng': 'CT',
 'Kho bãi, hậu cần và bảo dưỡng': 'CT',
 'Khách sạn': 'CT',
 'Kim Loại màu': 'CT',
 'Lâm sản và Chế biến gỗ': 'CT',
 'Lốp xe': 'CT',
 'Máy công nghiệp': 'CT',
 'Môi giới chứng khoán': 'CK',
 'Ngân hàng': 'NH',
 'Nhà cung cấp thiết bị': 'CT',
 'Nhà hàng và quán bar': 'CT',
 'Nhôm': 'CT',
 'Nhựa, cao su & sợi': 'CT',
 'Nuôi trồng nông & hải sản': 'CT',
 'Nước': 'CT',
 'Phân phối dược phẩm': 'CT',
 'Phân phối hàng chuyên dụng': 'CT',
 'Phân phối thực phẩm': 'CT',
 'Phân phối xăng dầu & khí đốt': 'CT',
 'Phần cứng': 'CT',
 'Phần mềm': 'CT',
 'Phụ tùng ô tô': 'CT',
 'Quản lý tài sản': 'NH',
 'Sách, ấn bản & sản phẩm văn hóa': 'CT',
 'Sản phẩm hóa dầu, Nông dược & Hóa chất khác': 'CT',
 'Sản xuất & Phân phối Điện': 'CT',
 'Sản xuất bia': 'CT',
 'Sản xuất giấy': 'CT',
 'Sản xuất và Khai thác dầu khí': 'CT',
 'Sản xuất ô tô': 'CT',
 'Thiết bị gia dụng': 'CT',
 'Thiết bị viễn thông': 'CT',
 'Thiết bị và Dịch vụ Dầu khí': 'CT',
 'Thiết bị văn phòng': 'CT',
 'Thiết bị y tế': 'CT',
 'Thiết bị điện': 'CT',
 'Thuốc lá': 'CT',
 'Thép và sản phẩm thép': 'CT',
 'Thực phẩm': 'CT',
 'Tiện ích khác': 'CT',
 'Tài chính cá nhân': 'NH',
 'Tài chính đặc biệt': 'CT',
 'Tái bảo hiểm': 'BH',
 'Tư Vấn, Định giá, Môi giới Bất động sản': 'CT',
 'Tư vấn & Hỗ trợ KD': 'CT',
 'Vang & Rượu mạnh': 'CT',
 'Viễn thông cố định': 'CT',
 'Viễn thông di động': 'CT',
 'Vận tải Thủy': 'CT',
 'Vận tải hành khách & Du lịch': 'CT',
 'Vật liệu xây dựng & Nội thất': 'CT',
 'Xe tải & Đóng tàu': 'CT',
 'Xây dựng': 'CT',
 'Điện tử tiêu dùng': 'CT',
 'Đào tạo & Việc làm': 'CT',
 'Đường sắt': 'CT',
 'Đồ chơi': 'CT',
 'Đồ gia dụng lâu bền': 'CT',
 'Đồ gia dụng một lần': 'CT',
 'Đồ uống & giải khát': 'CT'}



================================================
FILE: vnstock/explorer/vci/financial.py
================================================
"""
Module quản lý thông tin báo cáo tài chính từ nguồn dữ liệu VCI.
"""

import json
import pandas as pd
from typing import Optional, List, Dict, Tuple, Union
from .const import _GRAPHQL_URL, _FINANCIAL_REPORT_PERIOD_MAP, _UNIT_MAP, _ICB4_COMTYPE_CODE_MAP, SUPPORTED_LANGUAGES
from vnstock.explorer.vci import Company
from vnstock.core.utils import client
from vnstock.core.utils.parser import get_asset_type, camel_to_snake
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils.transform import replace_in_column_names, flatten_hierarchical_index
from vnai import optimize_execution

logger = get_logger(__name__)

class Finance:
    """
    Truy xuất thông tin báo cáo tài chính của một công ty theo mã chứng khoán từ nguồn dữ liệu VCI.

    Tham số:
        - symbol (str): Mã chứng khoán của công ty cần truy xuất thông tin.
        - period (str): Chu kỳ báo cáo tài chính cần truy xuất. Mặc định là 'quarter'.
        - get_all (bool): Trả về tất cả các trường dữ liệu hoặc chỉ các trường chọn lọc. Mặc định là True.
        - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là True.
    """

    def __init__(self, symbol: str, period: Optional[str] = 'quarter', 
                 get_all: Optional[bool] = True, show_log: Optional[bool] = True):
        """
        Khởi tạo đối tượng Finance với các tham số cho việc truy xuất dữ liệu báo cáo tài chính.
        """
        self.symbol = symbol.upper()
        self.asset_type = get_asset_type(self.symbol)
        self.headers = get_headers(data_source='VCI')
        self.show_log = show_log

        if not show_log:
            logger.setLevel('CRITICAL')

        # Validate input for period
        if period not in ['year', 'quarter']:
            raise ValueError("Kỳ báo cáo tài chính không hợp lệ. Chỉ chấp nhận 'year' hoặc 'quarter'.")
        
        # If asset_type is not stock, raise error
        if self.asset_type not in ['stock']:
            raise ValueError("Mã chứng khoán không hợp lệ. Chỉ cổ phiếu mới có thông tin.")
            
        self.period = _FINANCIAL_REPORT_PERIOD_MAP.get(period)
        self.get_all = get_all
        self.com_type_code = self._get_company_type()
    
    def _get_company_type(self) -> str:
        """
        Lấy mã loại công ty từ ICB4_COMTYPE_CODE_MAP dựa trên phân loại ngành ICB4 của công ty để ánh xạ báo cáo.

        Returns:
            str: Mã loại công ty. Các giá trị có thể là:
                'CT': Công ty (Company)
                'CK': Chứng khoán (Securities)
                'NH': Ngân hàng (Bank)
                'BH': Bảo hiểm (Insurance)
        """
        # Get the company's ICB4 industry classification
        listing_info = Company(symbol=self.symbol)._fetch_data()['CompanyListingInfo']
        com_type_code = _ICB4_COMTYPE_CODE_MAP[listing_info['icbName4']]
        return com_type_code

    @staticmethod
    def duplicated_columns_handling(df_or_mapping, target_col_name=None):
        """
        Handle duplicated column names in a DataFrame or column mapping DataFrame.
        
        Parameters:
            - df_or_mapping (pd.DataFrame): Either a DataFrame with potentially duplicated columns
            or a mapping DataFrame with columns that may have duplicated values.
            - target_col_name (str, optional): When handling a mapping DataFrame, this is the column
            to check for duplicates. When None, assumes we're handling DataFrame columns directly.
        
        Returns:
            pd.DataFrame: DataFrame with resolved column duplications.
        """
        if target_col_name is not None:
            # Original behavior for handling mapping DataFrames
            # Duplicated subset
            duplicated_subset = df_or_mapping[df_or_mapping[target_col_name].duplicated()].copy()
            # Non-duplicated subset
            non_duplicated_subset = df_or_mapping[~df_or_mapping[target_col_name].duplicated()].copy()
            # Replace values in the duplicated columns by appending the field_name
            duplicated_subset[target_col_name] = df_or_mapping['name'] + ' - ' + df_or_mapping['field_name']
            # Combine the two subsets
            return pd.concat([non_duplicated_subset, duplicated_subset])
        else:
            # New behavior for handling DataFrame columns directly
            df = df_or_mapping.copy()
            # Find columns that have any duplicates at all
            duplicate_mask = df.columns.duplicated(keep=False)
            duplicated_col_names = df.columns[duplicate_mask].unique()
            
            if len(duplicated_col_names) > 0:
                # Create a new column mapping for rename operation
                new_columns = df.columns.tolist()
                
                for col_name in duplicated_col_names:
                    # Find all indices where this column name appears
                    indices = [i for i, name in enumerate(new_columns) if name == col_name]
                    
                    # Skip the first occurrence, only rename subsequent occurrences
                    for idx in indices[1:]:
                        new_col_name = f"_{col_name}"
                        # Check if the new name already exists or will be created
                        suffix_count = 1
                        while new_col_name in new_columns:
                            new_col_name = f"{'_' * (suffix_count + 1)}{col_name}"
                            suffix_count += 1
                        
                        # Update the name in our new_columns list
                        new_columns[idx] = new_col_name
                
                # Apply the renaming
                df.columns = new_columns
            
            return df
    
    def _get_ratio_dict(self, show_log: Optional[bool] = False, 
                       get_all: Optional[bool] = False) -> pd.DataFrame:
        """
        Lấy từ điển ánh xạ cho tất cả các chỉ số tài chính từ nguồn VCI.

        Tham số:
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            - get_all (bool): Lấy tất cả cột hoặc không. Mặc định là False.
            
        Returns:
            pd.DataFrame: DataFrame chứa ánh xạ giữa 'field_name', 'name', 'en_name', 'type', 'order', 'unit'.
        """
        
        payload = "{\"query\":\"query Query {\\n  ListFinancialRatio {\\n    id\\n    type\\n    name\\n    unit\\n    isDefault\\n    fieldName\\n    en_Type\\n    en_Name\\n    tagName\\n    comTypeCode\\n    order\\n    __typename\\n  }\\n}\\n\",\"variables\":{}}"
        
        payload_json = json.loads(payload)
        
        if show_log:
            logger.debug(f"Requesting financial ratio data from {_GRAPHQL_URL}. payload: {payload}")
        
        # Use api_client.send_request instead of direct requests
        response_data = client.send_request(
            url=_GRAPHQL_URL,
            headers=self.headers,
            method="POST",
            payload=payload_json,
            show_log=show_log
        )
        
        data = response_data['data']['ListFinancialRatio']
        df = pd.DataFrame(data)
        df.columns = [camel_to_snake(col).replace('__', '_') for col in df.columns]
        
        effective_get_all = get_all if get_all is not None else self.get_all
        selected_columns = ['field_name', 'name', 'en_name', 'type', 'order', 'unit', 'com_type_code']
        df['unit'] = df['unit'].map(_UNIT_MAP)
        
        if effective_get_all is False:
            df = df[selected_columns]
            
        df.columns = [col.replace('__', '_') for col in df.columns]
        return df
    
    def _get_report(self, period: Optional[str] = None, lang: Optional[str] = 'en', 
                   show_log: Optional[bool] = False, mode: Optional[str] = 'final') -> Union[
                       Tuple[Dict[str, pd.DataFrame], pd.DataFrame], pd.DataFrame]:
        """
        Lấy dữ liệu báo cáo tài chính cho một công ty từ nguồn VCI.
        
        Tham số:
            - period (str): Kỳ báo cáo tài chính. Mặc định là None.
            - lang (str): Ngôn ngữ của báo cáo. Mặc định là 'en'.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            - mode (str): Chế độ báo cáo. Mặc định là 'final' trả về dữ liệu đã xử lý sau quá trình ánh xạ. 
              Chế độ khác là 'raw' trả về dữ liệu thô chứa tên mã cho tất cả các trường.
              
        Returns:
            Union[Tuple[Dict[str, pd.DataFrame], pd.DataFrame], pd.DataFrame]: 
                Nếu mode='final': Trả về tuple gồm dictionary các báo cáo chính và DataFrame cho các báo cáo khác
                Nếu mode='raw': Trả về DataFrame dữ liệu thô
        """
        # Validate language
        if lang not in SUPPORTED_LANGUAGES:
            supported_languages_str = ", ".join(SUPPORTED_LANGUAGES)
            raise ValueError(f"Ngôn ngữ không hợp lệ: '{lang}'. Các ngôn ngữ được hỗ trợ: {supported_languages_str}.")
            
        effective_period = _FINANCIAL_REPORT_PERIOD_MAP.get(period, period) if period else self.period
        
        # GraphQL query fragment for financial ratios - using only a part of the fragment for brevity
        payload = "{\"query\":\"fragment Ratios on CompanyFinancialRatio {\\n  ticker\\n  yearReport\\n  lengthReport\\n  updateDate\\n  revenue\\n  revenueGrowth\\n  netProfit\\n  netProfitGrowth\\n  ebitMargin\\n  roe\\n  roic\\n  roa\\n  pe\\n  pb\\n  eps\\n  currentRatio\\n  cashRatio\\n  quickRatio\\n  interestCoverage\\n  ae\\n  netProfitMargin\\n  grossMargin\\n  ev\\n  issueShare\\n  ps\\n  pcf\\n  bvps\\n  evPerEbitda\\n  BSA1\\n  BSA2\\n  BSA5\\n  BSA8\\n  BSA10\\n  BSA159\\n  BSA16\\n  BSA22\\n  BSA23\\n  BSA24\\n  BSA162\\n  BSA27\\n  BSA29\\n  BSA43\\n  BSA46\\n  BSA50\\n  BSA209\\n  BSA53\\n  BSA54\\n  BSA55\\n  BSA56\\n  BSA58\\n  BSA67\\n  BSA71\\n  BSA173\\n  BSA78\\n  BSA79\\n  BSA80\\n  BSA175\\n  BSA86\\n  BSA90\\n  BSA96\\n  CFA21\\n  CFA22\\n  at\\n  fat\\n  acp\\n  dso\\n  dpo\\n  ccc\\n  de\\n  le\\n  ebitda\\n  ebit\\n  dividend\\n  RTQ10\\n  charterCapitalRatio\\n  RTQ4\\n  epsTTM\\n  charterCapital\\n  fae\\n  RTQ17\\n  CFA26\\n  CFA6\\n  CFA9\\n  BSA85\\n  CFA36\\n  BSB98\\n  BSB101\\n  BSA89\\n  CFA34\\n  CFA14\\n  ISB34\\n  ISB27\\n  ISA23\\n  ISS152\\n  ISA102\\n  CFA27\\n  CFA12\\n  CFA28\\n  BSA18\\n  BSB102\\n  BSB110\\n  BSB108\\n  CFA23\\n  ISB41\\n  BSB103\\n  BSA40\\n  BSB99\\n  CFA16\\n  CFA18\\n  CFA3\\n  ISB30\\n  BSA33\\n  ISB29\\n  CFS200\\n  ISA2\\n  CFA24\\n  BSB105\\n  CFA37\\n  ISS141\\n  BSA95\\n  CFA10\\n  ISA4\\n  BSA82\\n  CFA25\\n  BSB111\\n  ISI64\\n  BSB117\\n  ISA20\\n  CFA19\\n  ISA6\\n  ISA3\\n  BSB100\\n  ISB31\\n  ISB38\\n  ISB26\\n  BSA210\\n  CFA20\\n  CFA35\\n  ISA17\\n  ISS148\\n  BSB115\\n  ISA9\\n  CFA4\\n  ISA7\\n  CFA5\\n  ISA22\\n  CFA8\\n  CFA33\\n  CFA29\\n  BSA30\\n  BSA84\\n  BSA44\\n  BSB107\\n  ISB37\\n  ISA8\\n  BSB109\\n  ISA19\\n  ISB36\\n  ISA13\\n  ISA1\\n  BSB121\\n  ISA14\\n  BSB112\\n  ISA21\\n  ISA10\\n  CFA11\\n  ISA12\\n  BSA15\\n  BSB104\\n  BSA92\\n  BSB106\\n  BSA94\\n  ISA18\\n  CFA17\\n  ISI87\\n  BSB114\\n  ISA15\\n  BSB116\\n  ISB28\\n  BSB97\\n  CFA15\\n  ISA11\\n  ISB33\\n  BSA47\\n  ISB40\\n  ISB39\\n  CFA7\\n  CFA13\\n  ISS146\\n  ISB25\\n  BSA45\\n  BSB118\\n  CFA1\\n  CFS191\\n  ISB35\\n  CFB65\\n  CFA31\\n  BSB113\\n  ISB32\\n  ISA16\\n  CFS210\\n  BSA48\\n  BSA36\\n  ISI97\\n  CFA30\\n  CFA2\\n  CFB80\\n  CFA38\\n  CFA32\\n  ISA5\\n  BSA49\\n  CFB64\\n  __typename\\n}\\n\\nquery Query($ticker: String!, $period: String!) {\\n  CompanyFinancialRatio(ticker: $ticker, period: $period) {\\n    ratio {\\n      ...Ratios\\n      __typename\\n    }\\n    period\\n    __typename\\n  }\\n}\\n\",\"variables\":{\"ticker\":\"VCI\",\"period\":\"Q\"}}"
        payload_json = json.loads(payload)
        payload_json['variables']['ticker'] = self.symbol
        payload_json['variables']['period'] = effective_period
        
        if show_log:
            logger.debug(f"Requesting financial report data from {_GRAPHQL_URL}. payload: {payload}")
        
        # Use api_client.send_request instead of direct requests
        response_data = client.send_request(
            url=_GRAPHQL_URL,
            headers=self.headers,
            method="POST",
            payload=payload_json,
            show_log=show_log
        )
        
        # Extract relevant data
        try:
            selected_data = response_data['data']['CompanyFinancialRatio']['ratio']
            ratio_df = pd.DataFrame(selected_data)
            
            if mode == 'final':
                primary_dfs, other_reports = self._ratio_mapping(ratio_df, lang=lang, show_log=show_log)
                return primary_dfs, other_reports
            elif mode == 'raw':
                return ratio_df
            else:
                raise ValueError(f"Invalid mode: {mode}. Must be 'final' or 'raw'.")
        except Exception as e:
            logger.error(f"Error processing financial report data: {e}")
            raise

    @optimize_execution("VCI")
    def _ratio_mapping(self, ratio_df: pd.DataFrame, lang: Optional[str] = 'en', mode: str = 'final', show_log: Optional[bool] = False):
        """
        A dedicated method to map the financial ratio DataFrame to different reports based on the company type code.

        Parameters:
            - ratio_df (pd.DataFrame): The DataFrame containing the financial ratio from the function _get_report().
            - lang (str): The language of the report. Default is 'en'.
            - mode (str): The mode of the report. Default is 'final' which return polish data after the mapping process & translation. Other mode is 'raw' which return the raw data which contains code names for all fields.
            - show_log (bool): Whether to show log messages. Default is False.

        Returns:
            - pd.DataFrame: A DataFrame containing the financial ratio data.

        Attributes: (only available when show_log is True)
            - type_field_dict (dict): A dictionary mapping the report type to the list of field names.
            - raw_ratio_df (pd.DataFrame): The raw DataFrame containing the financial ratio data with code name columns such as isa, isb, etc.
        """
        if lang == 'vi':
            ratio_df = ratio_df.rename(columns={'ticker': 'CP', 'yearReport': 'Năm', 'lengthReport': 'Kỳ'})
            index_cols = ['CP', 'Năm', 'Kỳ']
            index_part = ratio_df[index_cols]
            target_col_name = 'name'
        elif lang == 'en':
            index_cols = ['ticker', 'yearReport', 'lengthReport']
            index_part = ratio_df[index_cols]
            target_col_name = 'en_name'

        # Create a dictionary to map field_name to report type
        mapping_df = self._get_ratio_dict(get_all=False)
        # Filter the mapping DataFrame based on company type code. Split mapping into two parts: 'CT' and company-specific mapping
        if self.com_type_code != 'CT':
            mapping_specific = mapping_df[mapping_df['com_type_code'] == self.com_type_code]
        else:
            mapping_specific = pd.DataFrame()
        mapping_ct = mapping_df[mapping_df['com_type_code'] == 'CT']
        all_columns_mapping = pd.concat([mapping_specific, mapping_ct]).drop_duplicates(subset='field_name', keep='first')

        # remove all values that com_type_code is not 'CT' or self.com_type_code
        all_columns_mapping = all_columns_mapping[all_columns_mapping['com_type_code'].isin(['CT', self.com_type_code])].copy()

        original_columns = ratio_df.columns
        # There are many columns in ratio_df that are not in mapping_df, they are not tied to the company specific mapping or the 'CT' mapping
        orphan_columns = [col for col in original_columns if col not in mapping_df['field_name'].values and col not in index_part.columns]
        if show_log:
            logger.debug(f"Orphan columns will be dropped: {orphan_columns}")

        columns_translation = all_columns_mapping.set_index('field_name')[target_col_name].to_dict()
        # Create a dictionary to map field_name to order
        column_order = all_columns_mapping.set_index(target_col_name)['order'].to_dict()
        
        # Drop the orphan columns which are not in the mapping DataFrame
        ratio_df = ratio_df.drop(columns=orphan_columns)
        # apply sorting to the columns of ratio_df by the order in the column_order dictionary
        ratio_df = ratio_df[sorted(ratio_df.columns, key=lambda x: column_order.get(x, 0))]    
        type_field_dict = all_columns_mapping.groupby('type')['field_name'].apply(list).to_dict()

        # Assign attributes to the class in the case of debugging
        self.raw_ratio_df = ratio_df.copy()
        self.columns_mapping = columns_translation

        # Create DataFrames for each report type, using columns name as code names without translation
        report_dfs = {}
        for report_type, fields in type_field_dict.items():
            report_dfs[report_type] = ratio_df[fields]

        # Define the primary report types
        primary_reports = [
            'Chỉ tiêu cân đối kế toán',
            'Chỉ tiêu lưu chuyển tiền tệ',
            'Chỉ tiêu kết quả kinh doanh'
        ]

        # Splitting the reports
        primary_dfs = {key: report_dfs[key] for key in primary_reports}
        other_reports = {key: report_dfs[key] for key in report_dfs if key not in primary_reports}

        # Create a dictionary to map field_name to report type
        name_mapping = dict(zip(mapping_df['field_name'], mapping_df[target_col_name]))

        # Translate the column names
        for key in primary_dfs:
            primary_dfs[key].columns = [name_mapping.get(col, col) for col in primary_dfs[key].columns]

        for key in other_reports:
            other_reports[key].columns = [name_mapping.get(col, col) for col in other_reports[key].columns]

        # Merge all other reports into a single DataFrame with MultiIndex columns
        merged_other_reports = pd.concat(other_reports.values(), axis=1, keys=other_reports.keys())

        primary_dfs = {key: pd.concat([index_part, value], axis=1) for key, value in primary_dfs.items()}

        # Convert 'index_part' to MultiIndex with blank top level
        index_part.columns = pd.MultiIndex.from_tuples([('Meta', col) for col in index_part.columns])
        merged_other_reports = pd.concat([index_part, merged_other_reports], axis=1)

        def multi_level_columns_translate(col, translation_dict):
            # Modify the lowest level while keeping the upper level(s) the same
            upper_levels = col[:-1]
            lowest_level = col[-1]
            new_lowest_level = translation_dict.get(lowest_level, lowest_level)  # Apply translation or use the original
            return upper_levels + (new_lowest_level,)

        if lang == 'en':
            # Apply the columns_translate function to all columns
            merged_other_reports.columns = pd.MultiIndex.from_tuples(
                [multi_level_columns_translate(col, columns_translation) for col in merged_other_reports.columns]
            )

        return primary_dfs, merged_other_reports

    def _process_report(self, report_key: str, period: Optional[str] = None, 
                    lang: Optional[str] = 'en', dropna: Optional[bool] = False, 
                    show_log: Optional[bool] = False) -> pd.DataFrame:
        """
        Xử lý dữ liệu báo cáo tài chính cho một công ty từ nguồn VCI từ một dữ liệu được tải xuống duy nhất trong phương thức _get_report.

        Tham số:
            - report_key (str): Khóa của báo cáo cần xử lý. Phải là một trong 'Chỉ tiêu kết quả kinh doanh', 'Chỉ tiêu cân đối kế toán', 'Chỉ tiêu lưu chuyển tiền tệ'.
            - period (str): Kỳ báo cáo tài chính. Mặc định là None.
            - lang (str): Ngôn ngữ của báo cáo. Mặc định là 'en'.
            - dropna (bool): Có loại bỏ các cột với tất cả giá trị 0 hay không. Mặc định là False.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            pd.DataFrame: DataFrame chứa dữ liệu báo cáo đã xử lý.
        """
        # Validate report_key
        valid_report_keys = ['Chỉ tiêu kết quả kinh doanh', 'Chỉ tiêu cân đối kế toán', 'Chỉ tiêu lưu chuyển tiền tệ']
        if report_key not in valid_report_keys:
            raise ValueError(f"Báo cáo không hợp lệ. Chỉ chấp nhận {', '.join(valid_report_keys)}.")
        
        effective_period = _FINANCIAL_REPORT_PERIOD_MAP.get(period, period) if period else self.period
        
        try:
            primary_reports = self._get_report(period=effective_period, lang=lang, show_log=show_log)[0]
            
            # Check if the report key exists in primary_reports
            if report_key not in primary_reports:
                available_reports = ', '.join(primary_reports.keys())
                raise KeyError(f"Báo cáo '{report_key}' không có sẵn. Các báo cáo có sẵn: {available_reports}")
                
            target_report_df = primary_reports[report_key]
            
            if dropna:
                # Fill NaN values with 0
                target_report_df = target_report_df.fillna(0)
                # Drop columns with all 0 values
                target_report_df = target_report_df.loc[:, (target_report_df != 0).any(axis=0)]

            # For yearly reports, drop the period column
            if effective_period == 'Y':
                if lang == 'en':
                    target_report_df = target_report_df.drop(columns='lengthReport', errors='ignore')
                elif lang == 'vi':
                    target_report_df = target_report_df.drop(columns='Kỳ', errors='ignore')
            
            # Replace "(Tỷ đồng)" with "(đồng)" in column names
            target_report_df = replace_in_column_names(target_report_df, "(Tỷ đồng)", "(đồng)")
            
            # Handle duplicated column names - use the enhanced duplicated_columns_handling method
            target_report_df = self.duplicated_columns_handling(target_report_df)
                    
            return target_report_df
            
        except Exception as e:
            logger.error(f"Error processing report '{report_key}': {e}")
            raise

    @optimize_execution("VCI")
    def balance_sheet(self, period: Optional[str] = None, lang: Optional[str] = 'en', 
                    dropna: Optional[bool] = True, show_log: Optional[bool] = False) -> pd.DataFrame:
        """
        Trích xuất dữ liệu bảng cân đối kế toán cho một công ty từ nguồn VCI.

        Tham số:
            - period (str): Kỳ báo cáo tài chính. Mặc định là None.
            - lang (str): Ngôn ngữ của báo cáo. Mặc định là 'en'.
            - dropna (bool): Có loại bỏ các cột với tất cả giá trị 0 hay không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            pd.DataFrame: DataFrame chứa dữ liệu bảng cân đối kế toán.
        """
        # validate supported lang values
        if lang not in SUPPORTED_LANGUAGES:
            raise ValueError(f"Ngôn ngữ không hợp lệ: '{lang}'. Các ngôn ngữ được hỗ trợ: {', '.join(SUPPORTED_LANGUAGES)}.")

        try:
            return self._process_report('Chỉ tiêu cân đối kế toán', period=period, lang=lang, dropna=dropna, show_log=show_log)
        except Exception as e:
            logger.error(f"Error retrieving balance sheet: {e}")
            raise


    @optimize_execution("VCI")
    def income_statement(self, period: Optional[str] = None, lang: Optional[str] = 'en', 
                        dropna: Optional[bool] = True, show_log: Optional[bool] = False) -> pd.DataFrame:
        """
        Trích xuất dữ liệu báo cáo kết quả kinh doanh cho một công ty từ nguồn VCI.
        
        Tham số:
            - period (str): Kỳ báo cáo tài chính. Mặc định là None.
            - lang (str): Ngôn ngữ của báo cáo. Mặc định là 'en'.
            - dropna (bool): Có loại bỏ các cột với tất cả giá trị 0 hay không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            pd.DataFrame: DataFrame chứa dữ liệu báo cáo kết quả kinh doanh.
        """
        return self._process_report('Chỉ tiêu kết quả kinh doanh', period=period, lang=lang, dropna=dropna, show_log=show_log)

    @optimize_execution("VCI")
    def cash_flow(self, period: Optional[str] = None, lang: Optional[str] = 'en', 
                 dropna: Optional[bool] = True, show_log: Optional[bool] = False) -> pd.DataFrame:
        """
        Trích xuất dữ liệu báo cáo lưu chuyển tiền tệ cho một công ty từ nguồn VCI.
        
        Tham số:
            - period (str): Kỳ báo cáo tài chính. Mặc định là None.
            - lang (str): Ngôn ngữ của báo cáo. Mặc định là 'en'.
            - dropna (bool): Có loại bỏ các cột với tất cả giá trị 0 hay không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            
        Returns:
            pd.DataFrame: DataFrame chứa dữ liệu báo cáo lưu chuyển tiền tệ.
        """
        return self._process_report('Chỉ tiêu lưu chuyển tiền tệ', period=period, lang=lang, dropna=dropna, show_log=show_log)


    @optimize_execution("VCI")
    def ratio(self, period: Optional[str] = None, lang: Optional[str] = 'en', 
            dropna: Optional[bool] = True, show_log: Optional[bool] = False,
            flatten_columns: Optional[bool] = False, separator: Optional[str] = "_",
            drop_levels: Optional[Union[int, List[int]]] = None) -> pd.DataFrame:
        """
        Trích xuất dữ liệu tỷ lệ tài chính cho một công ty từ nguồn VCI.

        Tham số:
            - period (str): Kỳ báo cáo tài chính. Mặc định là None.
            - lang (str): Ngôn ngữ của báo cáo. Mặc định là 'en'.
            - dropna (bool): Có loại bỏ các cột với tất cả giá trị 0 hay không. Mặc định là True.
            - show_log (bool): Hiển thị thông tin log hoặc không. Mặc định là False.
            - flatten_columns (bool): Làm phẳng cấu trúc cột phân cấp để dễ dàng xuất sang Excel. Mặc định là False.
            - separator (str): Ký tự phân cách được sử dụng khi làm phẳng cột phân cấp. Mặc định là "_".
            - drop_levels (int or list): Các cấp phân cấp cần loại bỏ khi làm phẳng. Để loại bỏ cấp cao nhất, sử dụng drop_levels=0.
            
        Returns:
            pd.DataFrame: DataFrame chứa dữ liệu tỷ lệ tài chính.
        """
        
        effective_period = _FINANCIAL_REPORT_PERIOD_MAP.get(period, period) if period else self.period
        
        try:
            financial_report = self._get_report(period=effective_period, lang=lang, show_log=show_log)[1]
            
            if dropna:
                # Fill NaN values with 0
                financial_report = financial_report.fillna(0)
                # Drop columns with all 0 values
                financial_report = financial_report.loc[:, (financial_report != 0).any(axis=0)]

            # Use the enhanced utility function to flatten columns if requested
            if flatten_columns:
                text_replacements = {"(Tỷ đồng)": "(đồng)"}
                financial_report = flatten_hierarchical_index(
                    financial_report, 
                    separator=separator,
                    text_replacements=text_replacements,
                    handle_duplicates=True,
                    drop_levels=drop_levels
                )

            return financial_report
            
        except Exception as e:
            logger.error(f"Error retrieving financial ratios: {e}")
            raise



================================================
FILE: vnstock/explorer/vci/listing.py
================================================
"""Listing module."""

# Đồ thị giá, đồ thị dư mua dư bán, đồ thị mức giá vs khối lượng, thống kê hành vi thị tường
from typing import Dict, Optional
from datetime import datetime
from .const import _GROUP_CODE, _TRADING_URL, _GRAPHQL_URL
import json
import requests
import pandas as pd
from vnstock.core.utils.parser import camel_to_snake
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils.client import send_request
from vnstock.core.utils.transform import drop_cols_by_pattern, reorder_cols
from vnai import optimize_execution
logger = get_logger(__name__)

class Listing:
    """
    Cấu hình truy cập dữ liệu lịch sử giá chứng khoán từ VCI.
    """
    def __init__(self, random_agent:Optional[bool]=False, show_log:Optional[bool]=False):
        self.data_source = 'VCI'
        self.base_url = _TRADING_URL
        self.headers = get_headers(data_source=self.data_source, random_agent=random_agent)
        self.show_log = show_log
        if not show_log:
            logger.setLevel('CRITICAL')

    @optimize_execution("VCI")
    def all_symbols (self, show_log:Optional[bool]=False, to_df:Optional[bool]=True) -> Dict:
        """
        Truy xuất danh sách toàn. bộ mã và tên các cổ phiếu trên thị trường Việt Nam.

        Tham số:
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
            - to_df (tùy chọn): Chuyển đổi dữ liệu danh sách mã cổ phiếu trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dữ liệu dạng JSON.
        """
        df = self.symbols_by_exchange(show_log=show_log, to_df=True)
        df = df.query('type == "STOCK"').reset_index(drop=True)
        df = df[['symbol', 'organ_name']]

        if to_df:
            return df
        else:
            json_data = df.to_json(orient='records')
            return json_data
        
    @optimize_execution("VCI")
    def symbols_by_industries (self, lang:str='vi', show_log: Optional[bool]=False, to_df:Optional[bool]=True):
        """
        Truy xuất thông tin phân ngành icb của các mã cổ phiếu trên thị trường Việt Nam.

        Tham số:
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
            - to_df (tùy chọn): Chuyển đổi dữ liệu danh sách mã cổ phiếu trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dữ liệu dạng JSON.
        """
        if lang not in ['vi', 'en']:
            raise ValueError("Tham số lang phải là 'vi' hoặc 'en'.")

        payload = "{\"query\":\"{\\n  CompaniesListingInfo {\\n    ticker\\n    organName\\n    enOrganName\\n    icbName3\\n    enIcbName3\\n    icbName2\\n    enIcbName2\\n    icbName4\\n    enIcbName4\\n    comTypeCode\\n    icbCode1\\n    icbCode2\\n    icbCode3\\n    icbCode4\\n    __typename\\n  }\\n}\\n\",\"variables\":{}}"
        payload = json.loads(payload)

        # Use the send_request utility from api_client
        json_data = send_request(
            url=_GRAPHQL_URL, 
            headers=self.headers, 
            method="POST", 
            payload=payload,
            show_log=show_log
        )

        if not json_data:
            raise ValueError("Không tìm thấy dữ liệu. Vui lòng kiểm tra lại.")

        if show_log:
            logger.info(f'Truy xuất thành công dữ liệu danh sách phân ngành icb.')

        df = pd.DataFrame(json_data['data']['CompaniesListingInfo'])
        df.columns = [camel_to_snake(col) for col in df.columns]
        df = df.drop(columns=['__typename'])
        df = df.rename(columns={'ticker': 'symbol'})
        df.source = "VCI"

        if lang == 'vi':
            df = drop_cols_by_pattern(df, ['en_'])
        else:
            df = df.drop(columns=['organ_name', 'icb_name2', 'icb_name3', 'icb_name4'])
            # rename columns for those contain 'en_' with 'en_' removed
            df.columns = [col.replace('en_', '') for col in df.columns]

        if to_df:
            return df
        else:
            json_data = df.to_json(orient='records')
            return json_data

    @optimize_execution("VCI")
    def symbols_by_exchange(self, lang:str='vi', show_log:Optional[bool]=False, to_df:Optional[bool]=True):
        """
        Truy xuất thông tin niêm yết theo sàn của các mã cổ phiếu trên thị trường Việt Nam.

        Tham số:
                - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
                - to_df (tùy chọn): Chuyển đổi dữ liệu danh sách mã cổ phiếu trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dữ liệu dạng JSON.
        """
        if lang not in ['vi', 'en']:
            raise ValueError("Tham số lang phải là 'vi' hoặc 'en'.")

        url = self.base_url + '/price/symbols/getAll'
        
        # Use the send_request utility from api_client
        json_data = send_request(
            url=url, 
            headers=self.headers, 
            method="GET", 
            payload=None,
            show_log=show_log
        )

        if not json_data:
            raise ValueError("Không tìm thấy dữ liệu. Vui lòng kiểm tra lại.")

        if show_log:
            logger.info(f'Truy xuất dữ liệu thành công cho {len(json_data)} mã.')

        df = pd.DataFrame(json_data)

        df.columns = [camel_to_snake(col) for col in df.columns]
        df = df.rename(columns={'board': 'exchange'})
        df = reorder_cols(df, ['symbol', 'exchange', 'type'], position='first')
        df = df.drop(columns=['id'])

        if lang == 'vi':
            df = drop_cols_by_pattern(df, ['en_'])
        else:
            df = df.drop(columns=['organ_name', 'organ_short_name'])
            # rename columns for those contain 'en_' with 'en_' removed
            df.columns = [col.replace('en_', '') for col in df.columns]

        if to_df:
            # Set metadata attributes
            df.source = "VCI"
            return df
        else:
            json_data = df.to_json(orient='records')
            return json_data

    @optimize_execution("VCI")
    def industries_icb (self, show_log: Optional[bool]=False, to_df:Optional[bool]=True):
        """
        Truy xuất thông tin phân ngành icb của các mã cổ phiếu trên thị trường Việt Nam.

        Tham số:
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
            - to_df (tùy chọn): Chuyển đổi dữ liệu danh sách mã cổ phiếu trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dữ liệu dạng JSON.
        """
        payload = "{\"query\":\"query Query {\\n  ListIcbCode {\\n    icbCode\\n    level\\n    icbName\\n    enIcbName\\n    __typename\\n  }\\n  CompaniesListingInfo {\\n    ticker\\n    icbCode1\\n    icbCode2\\n    icbCode3\\n    icbCode4\\n    __typename\\n  }\\n}\",\"variables\":{}}"
        payload = json.loads(payload)

        # Use the send_request utility from api_client
        json_data = send_request(
            url=_GRAPHQL_URL, 
            headers=self.headers, 
            method="POST", 
            payload=payload,
            show_log=show_log
        )

        if not json_data:
            raise ValueError("Không tìm thấy dữ liệu. Vui lòng kiểm tra lại.")

        if show_log:
            logger.info(f'Truy xuất thành công dữ liệu danh sách phân ngành icb.')

        df = pd.DataFrame(json_data['data']['ListIcbCode'])
        df.columns = [camel_to_snake(col) for col in df.columns]
        df = df.drop(columns=['__typename'])
        df =  df[['icb_name', 'en_icb_name', 'icb_code', 'level']]
        df.source = "VCI"

        if to_df:
            return df
        else:
            json_data = df.to_json(orient='records')
            return json_data

    @optimize_execution("VCI")
    def symbols_by_group (self, group: str ='VN30', show_log:Optional[bool]=False, to_df:Optional[bool]=True):
        """
        Truy xuất danh sách các mã cổ phiếu theo tên nhóm trên thị trường Việt Nam.

        Tham số:
            - group (tùy chọn): Tên nhóm cổ phiếu. Mặc định là 'VN30'. Các mã có thể là: HOSE, VN30, VNMidCap, VNSmallCap, VNAllShare, VN100, ETF, HNX, HNX30, HNXCon, HNXFin, HNXLCap, HNXMSCap, HNXMan, UPCOM, FU_INDEX (mã chỉ số hợp đồng tương lai), CW (chứng quyền).
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
            - to_df (tùy chọn): Chuyển đổi dữ liệu danh sách mã cổ phiếu trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dữ liệu dạng JSON.
        """
        if group not in _GROUP_CODE:
            raise ValueError(f"Invalid group. Group must be in {_GROUP_CODE}")
        
        url = self.base_url + f'/price/symbols/getByGroup?group={group}'

        # Use the send_request utility from api_client
        json_data = send_request(
            url=url, 
            headers=self.headers, 
            method="GET", 
            payload=None,
            show_log=show_log
        )

        if show_log:
            logger.info(f'Truy xuất thành công dữ liệu danh sách mã CP theo nhóm.')

        df = pd.DataFrame(json_data)

        if to_df:
            if not json_data:
                raise ValueError("JSON data is empty or not provided.")
            # Set metadata attributes
            df.source = "VCI"
            return df['symbol']
        else:
            json_data = df.to_json(orient='records')
            return json_data

    @optimize_execution("VCI")
    def all_future_indices (self, show_log:Optional[bool]=False, to_df:Optional[bool]=True):
        return self.symbols_by_group(group='FU_INDEX', show_log=show_log, to_df=to_df)

    @optimize_execution("VCI")
    def all_government_bonds (self, show_log:Optional[bool]=False, to_df:Optional[bool]=True):
        return self.symbols_by_group(group='FU_BOND', show_log=show_log, to_df=to_df)

    @optimize_execution("VCI")
    def all_covered_warrant (self, show_log:Optional[bool]=False, to_df:Optional[bool]=True):
        return self.symbols_by_group(group='CW', show_log=show_log, to_df=to_df)

    @optimize_execution("VCI")
    def all_bonds (self, show_log:Optional[bool]=False, to_df:Optional[bool]=True):
        return self.symbols_by_group(group='BOND', show_log=show_log, to_df=to_df)





================================================
FILE: vnstock/explorer/vci/models.py
================================================
"""Mô hình xác thực dữ liệu đầu vào cho VCI"""
from pydantic import BaseModel
from datetime import datetime
from typing import Optional

class TickerModel(BaseModel):
    symbol: str
    start: str
    end: Optional[str] = None
    interval: Optional[str] = "1D"



================================================
FILE: vnstock/explorer/vci/quote.py
================================================
"""History module for VCI."""

from typing import Dict, Optional, Union
from datetime import datetime
import pandas as pd
from vnai import optimize_execution
from .const import (
    _TRADING_URL, _CHART_URL, _INTERVAL_MAP, 
    _OHLC_MAP, _RESAMPLE_MAP, _OHLC_DTYPE, _INTRADAY_URL, 
    _INTRADAY_MAP, _INTRADAY_DTYPE, _PRICE_DEPTH_MAP, _INDEX_MAPPING
)
from .models import TickerModel
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.market import trading_hours
from vnstock.core.utils.parser import get_asset_type
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils.client import send_request
from vnstock.core.utils.transform import ohlc_to_df, intraday_to_df

logger = get_logger(__name__)

class Quote:
    """
    Cấu hình truy cập dữ liệu lịch sử giá chứng khoán từ VCI.
    """
    def __init__(self, symbol, random_agent=False, show_log=True):
        self.symbol = symbol.upper()
        self.data_source = 'VCI'
        self._history = None  # Cache for historical data
        self.asset_type = get_asset_type(self.symbol)
        self.base_url = _TRADING_URL
        self.headers = get_headers(data_source=self.data_source, random_agent=random_agent)
        self.interval_map = _INTERVAL_MAP
        self.show_log = show_log

        if not show_log:
            logger.setLevel('CRITICAL')

        if 'INDEX' in self.symbol:
            self.symbol = self._index_validation()

    def _index_validation(self) -> str:
        """
        If symbol contains 'INDEX' substring, validate it with _INDEX_MAPPING.
        """
        if self.symbol not in _INDEX_MAPPING.keys():
            raise ValueError(f"Không tìm thấy mã chứng khoán {self.symbol}. Các giá trị hợp lệ: {', '.join(_INDEX_MAPPING.keys())}")
        return _INDEX_MAPPING[self.symbol]

    def _input_validation(self, start: str, end: str, interval: str):
        """
        Validate input data
        """
        ticker = TickerModel(symbol=self.symbol, start=start, end=end, interval=interval)

        if ticker.interval not in self.interval_map:
            raise ValueError(f"Giá trị interval không hợp lệ: {ticker.interval}. Vui lòng chọn: 1m, 5m, 15m, 30m, 1H, 1D, 1W, 1M")

        return ticker

    @optimize_execution("VCI")
    def history(self, start: str, end: Optional[str]=None, interval: Optional[str]="1D", 
                to_df: Optional[bool]=True, show_log: Optional[bool]=False, 
                count_back: Optional[int]=None, floating: Optional[int]=2) -> Union[pd.DataFrame, str]:
        """
        Tải lịch sử giá của mã chứng khoán từ nguồn dữ liệu VCI.

        Tham số:
            - start (bắt buộc): thời gian bắt đầu lấy dữ liệu, có thể là ngày dạng string kiểu "YYYY-MM-DD" hoặc "YYYY-MM-DD HH:MM:SS".
            - end (tùy chọn): thời gian kết thúc lấy dữ liệu. Mặc định là None, chương trình tự động lấy thời điểm hiện tại.
            - interval (tùy chọn): Khung thời gian trích xuất dữ liệu giá lịch sử. Giá trị nhận: 1m, 5m, 15m, 30m, 1H, 1D, 1W, 1M. Mặc định là "1D".
            - to_df (tùy chọn): Chuyển đổi dữ liệu lịch sử trả về dưới dạng DataFrame. Mặc định là True. Đặt là False để trả về dạng JSON.
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
            - count_back (tùy chọn): Số lượng dữ liệu trả về từ thời điểm cuối.
            - floating (tùy chọn): Số chữ số thập phân cho giá. Mặc định là 2.
        """
        # Validate inputs
        ticker = self._input_validation(start, end, interval)

        start_time = datetime.strptime(ticker.start, "%Y-%m-%d")
        
        # Calculate end timestamp
        if end is not None:
            end_time = datetime.strptime(ticker.end, "%Y-%m-%d") + pd.Timedelta(days=1)
            if start_time > end_time:
                raise ValueError("Thời gian bắt đầu không thể lớn hơn thời gian kết thúc.")
            end_stamp = int(end_time.timestamp())
        else:
            end_stamp = int((datetime.now() + pd.Timedelta(days=1)).timestamp())

        start_stamp = int(start_time.timestamp())
        interval_value = self.interval_map[ticker.interval]

        # Prepare request
        url = self.base_url + _CHART_URL
        payload = {
            "timeFrame": interval_value,
            "symbols": [self.symbol],
            "from": start_stamp,
            "to": end_stamp
        }

        # Use the send_request utility from api_client
        json_data = send_request(
            url=url, 
            headers=self.headers, 
            method="POST", 
            payload=payload, 
            show_log=show_log
        )

        if not json_data:
            raise ValueError("Không tìm thấy dữ liệu. Vui lòng kiểm tra lại mã chứng khoán hoặc thời gian truy xuất.")
        
        # Use the ohlc_to_df utility from data_transform
        df = ohlc_to_df(
            data=json_data[0], 
            column_map=_OHLC_MAP, 
            dtype_map=_OHLC_DTYPE, 
            asset_type=self.asset_type, 
            symbol=self.symbol, 
            source=self.data_source, 
            interval=ticker.interval, 
            floating=floating,
            resample_map=_RESAMPLE_MAP
        )

        if count_back is not None:
            df = df.tail(count_back)

        if to_df:
            return df
        else:
            return df.to_json(orient='records')

    @optimize_execution("VCI")
    def intraday(self, page_size: Optional[int]=100, last_time: Optional[str]=None, 
                to_df: Optional[bool]=True, show_log: bool=False) -> Union[pd.DataFrame, str]:
        """
        Truy xuất dữ liệu khớp lệnh của mã chứng khoán bất kỳ từ nguồn dữ liệu VCI

        Tham số:
            - page_size (tùy chọn): Số lượng dữ liệu trả về trong một lần request. Mặc định là 100. 
            - last_time (tùy chọn): Thời gian cắt dữ liệu, dùng để lấy dữ liệu sau thời gian cắt. Mặc định là None.
            - to_df (tùy chọn): Chuyển đổi dữ liệu lịch sử trả về dưới dạng DataFrame. Mặc định là True.
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
        """
        market_status = trading_hours(None)
        if market_status['is_trading_hour'] is False and market_status['data_status'] == 'preparing':
            raise ValueError(f"{market_status['time']}: Dữ liệu khớp lệnh không thể truy cập trong thời gian chuẩn bị phiên mới. Vui lòng quay lại sau.")

        if self.symbol is None:
            raise ValueError("Vui lòng nhập mã chứng khoán cần truy xuất khi khởi tạo Trading Class.")

        if page_size > 30_000:
            logger.warning("Bạn đang yêu cầu truy xuất quá nhiều dữ liệu, điều này có thể gây lỗi quá tải.")

        url = f'{self.base_url}{_INTRADAY_URL}/LEData/getAll'
        payload = {
            "symbol": self.symbol,
            "limit": page_size,
            "truncTime": last_time
        }

        # Fetch data using the send_request utility
        data = send_request(
            url=url, 
            headers=self.headers, 
            method="POST", 
            payload=payload, 
            show_log=show_log
        )

        # Transform data using intraday_to_df utility
        df = intraday_to_df(
            data=data, 
            column_map=_INTRADAY_MAP, 
            dtype_map=_INTRADAY_DTYPE, 
            symbol=self.symbol, 
            asset_type=self.asset_type, 
            source=self.data_source
        )

        if to_df:
            return df
        else:
            return df.to_json(orient='records')

    @optimize_execution("VCI")
    def price_depth(self, to_df: Optional[bool]=True, show_log: Optional[bool]=False) -> Union[pd.DataFrame, str]:
        """
        Truy xuất thống kê độ bước giá & khối lượng khớp lệnh của mã chứng khoán bất kỳ từ nguồn dữ liệu VCI.

        Tham số:
            - to_df (tùy chọn): Chuyển đổi dữ liệu lịch sử trả về dưới dạng DataFrame. Mặc định là True.
            - show_log (tùy chọn): Hiển thị thông tin log giúp debug dễ dàng. Mặc định là False.
        """
        market_status = trading_hours(None)
        if market_status['is_trading_hour'] is False and market_status['data_status'] == 'preparing':
            raise ValueError(f"{market_status['time']}: Dữ liệu khớp lệnh không thể truy cập trong thời gian chuẩn bị phiên mới. Vui lòng quay lại sau.")

        if self.symbol is None:
            raise ValueError("Vui lòng nhập mã chứng khoán cần truy xuất khi khởi tạo Trading Class.")

        url = f'{self.base_url}{_INTRADAY_URL}/AccumulatedPriceStepVol/getSymbolData'
        payload = {
            "symbol": self.symbol
        }

        # Fetch data using the send_request utility
        data = send_request(
            url=url, 
            headers=self.headers, 
            method="POST", 
            payload=payload, 
            show_log=show_log
        )

        # Process the data to DataFrame
        df = pd.DataFrame(data)
        
        # Select columns in _PRICE_DEPTH_MAP values and rename them
        df = df[_PRICE_DEPTH_MAP.keys()]
        df.rename(columns=_PRICE_DEPTH_MAP, inplace=True)
        
        df.source = self.data_source

        if to_df:
            return df
        else:
            return df.to_json(orient='records')



================================================
FILE: vnstock/explorer/vci/trading.py
================================================
# Các thông tin về giao dịch, sở hữu của các bên (đối tượng tham gia thị trường)

from typing import List, Dict, Optional, Union
from datetime import datetime
from .const import _TRADING_URL
import json
import requests
import pandas as pd
from vnai import optimize_execution
from vnstock.core.utils.parser import get_asset_type, camel_to_snake, flatten_data
from vnstock.core.utils.logger import get_logger
from vnstock.core.utils.user_agent import get_headers
from vnstock.core.utils.transform import flatten_hierarchical_index
logger = get_logger(__name__)


class Trading:
    """
    Truy xuất dữ liệu giao dịch của mã chứng khoán từ nguồn dữ liệu VCI.
    """
    def __init__(self, symbol:Optional[str]='VCI', random_agent=False, show_log:Optional[bool]=True):
        self.symbol = symbol.upper()
        self.asset_type = get_asset_type(self.symbol)
        self.base_url = _TRADING_URL
        self.headers = get_headers(data_source='VCI', random_agent=random_agent)
        self.show_log = show_log

        if not show_log:
            logger.setLevel('CRITICAL')

    @optimize_execution("VCI")
    def price_board (self, symbols_list: List[str], 
                     to_df:Optional[bool]=True, 
                     show_log:Optional[bool]=False,
                     flatten_columns:Optional[bool]=False,
                     separator:Optional[str]='_',
                     drop_levels:Optional[Union[int, List[int]]]=None):
        """
        Truy xuất thông tin bảng giá của các mã chứng khoán tuỳ chọn từ nguồn dữ liệu VCI.
        """
        url = f'{self.base_url}price/symbols/getList'
        payload = json.dumps({"symbols": symbols_list})

        if show_log:
            logger.info(f'Requested URL: {url} with query payload: {payload}')
        response = requests.post(url, headers=self.headers, data=payload)

        if response.status_code != 200:
            raise ConnectionError(f"Tải dữ liệu không thành công: {response.status_code} - {response.reason}")

        data = response.json()

        # Initialize an empty list to hold all row dictionaries
        rows = []

        # Process each item in the JSON data
        for item in data:
            # Prepare nested dictionaries with higher indices: 'listing', 'bidAsk', 'match'
            item_data = {
                'listing': item['listingInfo'],
                'bidAsk': item['bidAsk'],
                'match': item['matchPrice']
            }

            # Flatten the nested dictionary while preserving the hierarchy in the keys
            row = flatten_data(item_data)

            try:
                # Add bid and ask prices and volumes dynamically with hierarchical keys
                for i, bid in enumerate(item['bidAsk']['bidPrices'], start=1):
                    row[f'bidAsk_bid_{i}_price'] = bid['price']
                    row[f'bidAsk_bid_{i}_volume'] = bid['volume']

                for i, ask in enumerate(item['bidAsk']['askPrices'], start=1):
                    row[f'bidAsk_ask_{i}_price'] = ask['price']
                    row[f'bidAsk_ask_{i}_volume'] = ask['volume']
            except:
                pass
            
            # Append the row dictionary to the list
            rows.append(row)

        # Convert the list of dictionaries to a DataFrame
        combine_df = pd.DataFrame(rows)

        # Transform column names using camel_to_snake and create a MultiIndex
        combine_df.columns = pd.MultiIndex.from_tuples([
            tuple(camel_to_snake(part) for part in c.split('_', 1)) for c in combine_df.columns
        ])

        drop_columns = [('bid_ask', 'code'), ('bid_ask', 'symbol'), ('bid_ask', 'session'), ('bid_ask', 'received_time'), ('bid_ask', 'message_type'), ('bid_ask', 'time'), ('bid_ask', 'bid_prices'), ('bid_ask', 'ask_prices'),
                ('listing', 'code'), ('listing', 'exercise_price'), ('listing', 'exercise_ratio'), ('listing', 'maturity_date'), ('listing', 'underlying_symbol'), ('listing', 'issuer_name'), ('listing', 'received_time'), ('listing', 'message_type'), ('listing', 'en_organ_name'), ('listing', 'en_organ_short_name'), ('listing', 'organ_short_name'), ('listing', 'ticker'),
                ('match', 'code'), ('match', 'symbol'), ('match', 'received_time'), ('match', 'message_type'), ('match', 'time'), ('match', 'session')]
        
        # Drop columns only if they exist in the DataFrame
        combine_df = combine_df.drop(columns=[col for col in drop_columns if col in combine_df.columns])

        # rename column for board inside listing to exchange
        combine_df = combine_df.rename(columns={'board': 'exchange'}, level=1)

        if flatten_columns:
            combine_df = flatten_hierarchical_index(
                combine_df, 
                separator=separator,
                drop_levels=drop_levels,
                handle_duplicates=True
            )

        combine_df.attrs['source'] = 'VCI'

        if to_df:
            return combine_df
        else:
            return data



================================================
FILE: .github/FUNDING.yml
================================================
github: [thinh-vu]
custom: ["https://paypal.me/thinhvuphoto"]


================================================
FILE: .github/ISSUE_TEMPLATE/bug.yaml
================================================
name: Báo lỗi
description: Tạo báo lỗi giúp tác giả phát hiện và sửa lỗi nhanh chóng
title: "[Bug]: "
labels: ["bug"]
projects: ["thinh-vu/4"]
assignees:
  - thinh-vu
body:
  - type: markdown
    attributes:
      value: |
        Cảm ơn bạn đã dành thời gian báo cáo lỗi này!
  - type: textarea
    id: bug-description
    attributes:
      label: Mô tả lỗi
      description: Mô tả một cách rõ ràng và ngắn gọn về lỗi.
      placeholder: Vui lòng mô tả chi tiết lỗi bạn gặp phải...
    validations:
      required: true
  - type: textarea
    id: reproduction-steps
    attributes:
      label: Cách tái hiện lại lỗi để xử lý
      description: Các bước để tái hiện sự cố
      placeholder: |
        Thông tin Lỗi xuất hiện khi sử dụng đoạn code sau '....'
    validations:
      required: true
  - type: textarea
    id: logs
    attributes:
      label: Thông báo lỗi hoặc logs
      description: Sao chép và dán bất kỳ thông báo lỗi hoặc logs nào liên quan.
      render: shell
    validations:
      required: false
  - type: textarea
    id: expected-behavior
    attributes:
      label: Mong muốn đạt được
      description: Mô tả một cách rõ ràng và ngắn gọn về kỳ vọng của bạn.
      placeholder: Mô tả kết quả bạn mong muốn đạt được...
    validations:
      required: false
  - type: textarea
    id: screenshots
    attributes:
      label: Ảnh chụp màn hình
      description: Nếu có, hãy thêm ảnh chụp màn hình để giúp giải thích vấn đề của bạn.
      placeholder: Kéo và thả ảnh chụp màn hình vào đây...
    validations:
      required: false
  - type: dropdown
    id: environment
    attributes:
      label: Môi trường
      description: Bạn đang sử dụng trong môi trường nào?
      options:
        - Google Colab
        - VSCode
        - Jupyter Notebook
        - PyCharm
        - Khác
    validations:
      required: true
  - type: dropdown
    id: operating-system
    attributes:
      label: Hệ điều hành
      description: Bạn đang sử dụng hệ điều hành nào?
      options:
        - Linux
        - Windows
        - macOS
        - Khác
    validations:
      required: true
  - type: input
    id: version
    attributes:
      label: Phiên bản
      description: Phiên bản phần mềm bạn đang sử dụng
      placeholder: ví dụ 1.0.9
    validations:
      required: true
  - type: input
    id: python-version
    attributes:
      label: Phiên bản Python
      description: Phiên bản Python bạn đang sử dụng
      placeholder: ví dụ 3.11.3
    validations:
      required: true
  - type: dropdown
    id: virtual-env
    attributes:
      label: Môi trường ảo
      description: Bạn có sử dụng môi trường ảo không?
      options:
        - Không
        - Có
    validations:
      required: true
  - type: checkboxes
    id: terms
    attributes:
      label: Xác nhận
      options:
        - label: Tôi đã kiểm tra thông tin và xác nhận lỗi này chưa được báo cáo trước đây
          required: true


================================================
FILE: .github/ISSUE_TEMPLATE/feature_request.yaml
================================================
name: "Đề xuất tính năng"
description: "Đề xuất ý tưởng và cải tiến cho Vnstock"
title: "[Feature]: "
labels:
  - enhancement
projects: ["thinh-vu/4"]      # ID của project Vnstock Ecosystem Roadmap
assignees:
  - thinh-vu

body:
  - type: markdown
    attributes:
      value: |
        Cảm ơn bạn đã dành thời gian đề xuất tính năng cho Vnstock!

  - type: textarea
    id: feature-description
    attributes:
      label: "Mô tả tính năng"
      description: "Mô tả chi tiết ý tưởng hoặc cải tiến bạn muốn."
      placeholder: "Vui lòng mô tả chi tiết tính năng..."
    validations:
      required: true

  - type: textarea
    id: related-issue
    attributes:
      label: "Vấn đề liên quan (nếu có)"
      description: "Link đến issue liên quan nếu có ảnh hưởng đến đề xuất này."
      placeholder: "https://github.com/thinh-vu/vnstock/issues/..."
    validations:
      required: false

  - type: textarea
    id: alternative-solutions
    attributes:
      label: "Giải pháp thay thế đã xem xét"
      description: "Bạn đã cân nhắc hoặc thử nghiệm phương án nào khác?"
      placeholder: "Ví dụ: sử dụng hàm X, thư viện Y..."
    validations:
      required: false

  - type: textarea
    id: additional-info
    attributes:
      label: "Thông tin bổ sung / Ảnh minh họa"
      description: "Thêm bất kỳ ảnh chụp màn hình hoặc chi tiết hỗ trợ nào."
      placeholder: "Kéo và thả hình ảnh hoặc ghi chú thêm..."
    validations:
      required: false

  - type: dropdown
    id: priority
    attributes:
      label: "Mức ưu tiên"
      description: "Chọn mức ưu tiên cho đề xuất."
      options:
        - Low
        - Medium
        - High
    validations:
      required: false


